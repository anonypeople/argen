<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\jhotdraw\src\main\java\org\jhotdraw\draw\action\VerticalGridLayout.java">
    <comment type="block">/*
        * @(#)VerticalGridLayout.java 1.0 27. November 2003
        *
        * Copyright (c) 1996-2006 by the original authors of JHotDraw
        * and all its contributors.
        * All rights reserved.
        *
        * The copyright of this software is owned by the authors and
        * contributors of the JHotDraw project ("the copyright holders").
        * You may not use, copy or modify this software, except in
        * accordance with the license agreement you entered into with
        * the copyright holders. For details see accompanying license terms.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>jhotdraw</name>.<name>draw</name>.
            <name>action</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.
            <name>awt</name>
        </name>
        .*;
    </import>
    <comment type="javadoc">/**
        * VerticalGridLayout.
        * &lt;p&gt;
        * A grid layout which lays out columns first.
        *
        * @author Werner Randelshofer
        * @version 1.0 27. November 2003 Created.
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>VerticalGridLayout</name>
        <super>
            <implements>implements <name>LayoutManager</name>, <name>java</name>.<name>io</name>.
                <name>Serializable</name>
            </implements>
        </super>
        <block>{

            <decl_stmt>
                <decl>
                    <type>
                        <name>int</name>
                    </type>
                    <name>hgap</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <name>int</name>
                    </type>
                    <name>vgap</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <name>int</name>
                    </type>
                    <name>rows</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <name>int</name>
                    </type>
                    <name>cols</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <name>boolean</name>
                    </type>
                    <name>isVertical</name> =
                    <init>
                        <expr>true</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Creates a grid layout with a default of one column per component,
                * in a single row.
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>VerticalGridLayout</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>this</name>
                                <argument_list>(
                                    <argument>
                                        <expr>1</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Creates a grid layout with the specified number of rows and
                * columns. All components in the layout are given equal size.
                * &lt;p&gt;
                * One, but not both, of &lt;code&gt;rows&lt;/code&gt; and &lt;code&gt;cols&lt;/code&gt; can
                * be zero, which means that any number of objects can be placed in a
                * row or in a column.
                * @param rows the rows, with the value zero meaning
                * any number of rows.
                * @param cols the columns, with the value zero meaning
                * any number of columns.
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>VerticalGridLayout</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>rows</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>cols</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>this</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>rows</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>cols</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>
            <constructor>
                <specifier>public</specifier>
                <name>VerticalGridLayout</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>rows</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>cols</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>isVertical</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>this</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>rows</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>cols</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>isVertical</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <constructor>
                <specifier>public</specifier>
                <name>VerticalGridLayout</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>rows</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>cols</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>hgap</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>vgap</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>this</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>rows</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>cols</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>hgap</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>vgap</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>
            <comment type="javadoc">/**
                * Creates a grid layout with the specified number of rows and
                * columns. All components in the layout are given equal size.
                * &lt;p&gt;
                * In addition, the horizontal and vertical gaps are set to the
                * specified values. Horizontal gaps are placed at the left and
                * right edges, and between each of the columns. Vertical gaps are
                * placed at the top and bottom edges, and between each of the rows.
                * &lt;p&gt;
                * One, but not both, of &lt;code&gt;rows&lt;/code&gt; and &lt;code&gt;cols&lt;/code&gt; can
                * be zero, which means that any number of objects can be placed in a
                * row or in a column.
                * &lt;p&gt;
                * All &lt;code&gt;VerticalGridLayout&lt;/code&gt; constructors defer to this one.
                * @param rows the rows, with the value zero meaning
                * any number of rows
                * @param cols the columns, with the value zero meaning
                * any number of columns
                * @param hgap the horizontal gap
                * @param vgap the vertical gap
                * @exception IllegalArgumentException if the value of both
                * &lt;code&gt;rows&lt;/code&gt; and &lt;code&gt;cols&lt;/code&gt; is
                * set to zero
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>VerticalGridLayout</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>rows</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>cols</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>hgap</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>vgap</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>isVertical</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>(<name>rows</name> == 0) &amp;&amp; (<name>cols</name> == 0)
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"rows and cols cannot both be zero"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>rows</name>
                            </name>
                            =
                            <name>rows</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>cols</name>
                            </name>
                            =
                            <name>cols</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>hgap</name>
                            </name>
                            =
                            <name>hgap</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>vgap</name>
                            </name>
                            =
                            <name>vgap</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>isVertical</name>
                            </name>
                            =
                            <name>isVertical</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Gets the number of rows in this layout.
                * @return the number of rows in this layout
                * @since JDK1.1
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getRows</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>rows</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the number of rows in this layout to the specified value.
                * @param rows the number of rows in this layout
                * @exception IllegalArgumentException if the value of both
                * &lt;code&gt;rows&lt;/code&gt; and &lt;code&gt;cols&lt;/code&gt; is set to zero
                * @since JDK1.1
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setRows</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>rows</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>(<name>rows</name> == 0) &amp;&amp; (
                                <name><name>this</name>.
                                    <name>cols</name>
                                </name>
                                == 0)
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"rows and cols cannot both be zero"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>rows</name>
                            </name>
                            =
                            <name>rows</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setVertical</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>b</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>isVertical</name>
                            =
                            <name>b</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isVertical</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>isVertical</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Gets the number of columns in this layout.
                * @return the number of columns in this layout
                * @since JDK1.1
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getColumns</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>cols</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the number of columns in this layout to the specified value.
                * Setting the number of columns has no affect on the layout
                * if the number of rows specified by a constructor or by
                * the &lt;tt&gt;setRows&lt;/tt&gt; method is non-zero. In that case, the number
                * of columns displayed in the layout is determined by the total
                * number of components and the number of rows specified.
                * @param cols the number of columns in this layout
                * @exception IllegalArgumentException if the value of both
                * &lt;code&gt;rows&lt;/code&gt; and &lt;code&gt;cols&lt;/code&gt; is set to zero
                * @since JDK1.1
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setColumns</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>cols</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>(<name>cols</name> == 0) &amp;&amp; (
                                <name><name>this</name>.
                                    <name>rows</name>
                                </name>
                                == 0)
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"rows and cols cannot both be zero"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>cols</name>
                            </name>
                            =
                            <name>cols</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Gets the horizontal gap between components.
                * @return the horizontal gap between components
                * @since JDK1.1
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getHgap</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>hgap</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the horizontal gap between components to the specified value.
                * @param hgap the horizontal gap between components
                * @since JDK1.1
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setHgap</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>hgap</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>hgap</name>
                            </name>
                            =
                            <name>hgap</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Gets the vertical gap between components.
                * @return the vertical gap between components
                * @since JDK1.1
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getVgap</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>vgap</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the vertical gap between components to the specified value.
                * @param vgap the vertical gap between components
                * @since JDK1.1
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setVgap</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>vgap</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>vgap</name>
                            </name>
                            =
                            <name>vgap</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Adds the specified component with the specified name to the layout.
                * @param name the name of the component
                * @param comp the component to be added
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>addLayoutComponent</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Component</name>
                            </type>
                            <name>comp</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Removes the specified component from the layout.
                * @param comp the component to be removed
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>removeLayoutComponent</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Component</name>
                            </type>
                            <name>comp</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Determines the preferred size of the container argument using
                * this grid layout.
                * &lt;p&gt;
                * The preferred width of a grid layout is the largest preferred
                * width of any of the components in the container times the number of
                * columns, plus the horizontal padding times the number of columns
                * plus one, plus the left and right insets of the target container.
                * &lt;p&gt;
                * The preferred height of a grid layout is the largest preferred
                * height of any of the components in the container times the number of
                * rows, plus the vertical padding times the number of rows plus one,
                * plus the top and bottom insets of the target container.
                *
                * @param parent the container in which to do the layout
                * @return the preferred dimensions to lay out the
                * subcomponents of the specified container
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Dimension</name>
                </type>
                <name>preferredLayoutSize</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Container</name>
                            </type>
                            <name>parent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <synchronized>synchronized (
                        <expr>
                            <call>
                                <name><name>parent</name>.
                                    <name>getTreeLock</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        )
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Insets</name>
                                    </type>
                                    <name>insets</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>parent</name>.
                                                    <name>getInsets</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>ncomponents</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>parent</name>.
                                                    <name>getComponentCount</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>nrows</name> =
                                    <init>
                                        <expr>
                                            <name>rows</name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>ncols</name> =
                                    <init>
                                        <expr>
                                            <name>cols</name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>

                            <if>if
                                <condition>(
                                    <expr>
                                        <name>nrows</name>
                                        &gt; 0
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>ncols</name>
                                                = (<name>ncomponents</name> + <name>nrows</name> - 1) /
                                                <name>nrows</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>nrows</name>
                                                = (<name>ncomponents</name> + <name>ncols</name> - 1) /
                                                <name>ncols</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </else>
                            </if>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>w</name> =
                                    <init>
                                        <expr>0</expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>h</name> =
                                    <init>
                                        <expr>0</expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <for>for (
                                <init>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>i</name> =
                                        <init>
                                            <expr>0</expr>
                                        </init>
                                    </decl>
                                    ;
                                </init>
                                <condition>
                                    <expr>
                                        <name>i</name>
                                        &lt;
                                        <name>ncomponents</name>
                                    </expr>
                                    ;
                                </condition>
                                <incr>
                                    <expr><name>i</name>++
                                    </expr>
                                </incr>
                                )
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>Component</name>
                                            </type>
                                            <name>comp</name> =
                                            <init>
                                                <expr>
                                                    <call>
                                                        <name><name>parent</name>.
                                                            <name>getComponent</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>i</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>Dimension</name>
                                            </type>
                                            <name>d</name> =
                                            <init>
                                                <expr>
                                                    <call>
                                                        <name><name>comp</name>.
                                                            <name>getPreferredSize</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>w</name>
                                                &lt;
                                                <name><name>d</name>.
                                                    <name>width</name>
                                                </name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>w</name>
                                                        =
                                                        <name><name>d</name>.
                                                            <name>width</name>
                                                        </name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>h</name>
                                                &lt;
                                                <name><name>d</name>.
                                                    <name>height</name>
                                                </name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>h</name>
                                                        =
                                                        <name><name>d</name>.
                                                            <name>height</name>
                                                        </name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    }
                                </block>
                            </for>
                            <return>return
                                <expr>new
                                    <call>
                                        <name>Dimension</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>insets</name>.
                                                        <name>left</name>
                                                    </name>
                                                    +
                                                    <name><name>insets</name>.
                                                        <name>right</name>
                                                    </name>
                                                    + <name>ncols</name>*<name>w</name> + (<name>ncols</name>-1)*
                                                    <name>hgap</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>insets</name>.
                                                        <name>top</name>
                                                    </name>
                                                    +
                                                    <name><name>insets</name>.
                                                        <name>bottom</name>
                                                    </name>
                                                    + <name>nrows</name>*<name>h</name> + (<name>nrows</name>-1)*
                                                    <name>vgap</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </synchronized>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Determines the minimum size of the container argument using this
                * grid layout.
                * &lt;p&gt;
                * The minimum width of a grid layout is the largest minimum width
                * of any of the components in the container times the number of columns,
                * plus the horizontal padding times the number of columns plus one,
                * plus the left and right insets of the target container.
                * &lt;p&gt;
                * The minimum height of a grid layout is the largest minimum height
                * of any of the components in the container times the number of rows,
                * plus the vertical padding times the number of rows plus one, plus
                * the top and bottom insets of the target container.
                *
                * @param parent the container in which to do the layout
                * @return the minimum dimensions needed to lay out the
                * subcomponents of the specified container
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Dimension</name>
                </type>
                <name>minimumLayoutSize</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Container</name>
                            </type>
                            <name>parent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <synchronized>synchronized (
                        <expr>
                            <call>
                                <name><name>parent</name>.
                                    <name>getTreeLock</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        )
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Insets</name>
                                    </type>
                                    <name>insets</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>parent</name>.
                                                    <name>getInsets</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>ncomponents</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>parent</name>.
                                                    <name>getComponentCount</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>nrows</name> =
                                    <init>
                                        <expr>
                                            <name>rows</name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>ncols</name> =
                                    <init>
                                        <expr>
                                            <name>cols</name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>

                            <if>if
                                <condition>(
                                    <expr>
                                        <name>nrows</name>
                                        &gt; 0
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>ncols</name>
                                                = (<name>ncomponents</name> + <name>nrows</name> - 1) /
                                                <name>nrows</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>nrows</name>
                                                = (<name>ncomponents</name> + <name>ncols</name> - 1) /
                                                <name>ncols</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </else>
                            </if>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>w</name> =
                                    <init>
                                        <expr>0</expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>h</name> =
                                    <init>
                                        <expr>0</expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <for>for (
                                <init>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>i</name> =
                                        <init>
                                            <expr>0</expr>
                                        </init>
                                    </decl>
                                    ;
                                </init>
                                <condition>
                                    <expr>
                                        <name>i</name>
                                        &lt;
                                        <name>ncomponents</name>
                                    </expr>
                                    ;
                                </condition>
                                <incr>
                                    <expr><name>i</name>++
                                    </expr>
                                </incr>
                                )
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>Component</name>
                                            </type>
                                            <name>comp</name> =
                                            <init>
                                                <expr>
                                                    <call>
                                                        <name><name>parent</name>.
                                                            <name>getComponent</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>i</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>Dimension</name>
                                            </type>
                                            <name>d</name> =
                                            <init>
                                                <expr>
                                                    <call>
                                                        <name><name>comp</name>.
                                                            <name>getMinimumSize</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>w</name>
                                                &lt;
                                                <name><name>d</name>.
                                                    <name>width</name>
                                                </name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>w</name>
                                                        =
                                                        <name><name>d</name>.
                                                            <name>width</name>
                                                        </name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>h</name>
                                                &lt;
                                                <name><name>d</name>.
                                                    <name>height</name>
                                                </name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>h</name>
                                                        =
                                                        <name><name>d</name>.
                                                            <name>height</name>
                                                        </name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    }
                                </block>
                            </for>
                            <return>return
                                <expr>new
                                    <call>
                                        <name>Dimension</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>insets</name>.
                                                        <name>left</name>
                                                    </name>
                                                    +
                                                    <name><name>insets</name>.
                                                        <name>right</name>
                                                    </name>
                                                    + <name>ncols</name>*<name>w</name> + (<name>ncols</name>-1)*
                                                    <name>hgap</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>insets</name>.
                                                        <name>top</name>
                                                    </name>
                                                    +
                                                    <name><name>insets</name>.
                                                        <name>bottom</name>
                                                    </name>
                                                    + <name>nrows</name>*<name>h</name> + (<name>nrows</name>-1)*
                                                    <name>vgap</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </synchronized>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Lays out the specified container using this layout.
                * &lt;p&gt;
                * This method reshapes the components in the specified target
                * container in order to satisfy the constraints of the
                * &lt;code&gt;VerticalGridLayout&lt;/code&gt; object.
                * &lt;p&gt;
                * The grid layout manager determines the size of individual
                * components by dividing the free space in the container into
                * equal-sized portions according to the number of rows and columns
                * in the layout. The container's free space equals the container's
                * size minus any insets and any specified horizontal or vertical
                * gap. All components in a grid layout are given the same size.
                *
                * @param parent the container in which to do the layout
                * @see java.awt.Container
                * @see java.awt.Container#doLayout
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>layoutContainer</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Container</name>
                            </type>
                            <name>parent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <synchronized>synchronized (
                        <expr>
                            <call>
                                <name><name>parent</name>.
                                    <name>getTreeLock</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        )
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Insets</name>
                                    </type>
                                    <name>insets</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>parent</name>.
                                                    <name>getInsets</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>ncomponents</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>parent</name>.
                                                    <name>getComponentCount</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>nrows</name> =
                                    <init>
                                        <expr>
                                            <name>rows</name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>ncols</name> =
                                    <init>
                                        <expr>
                                            <name>cols</name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>boolean</name>
                                    </type>
                                    <name>ltr</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>parent</name>.
                                                    <name>getComponentOrientation</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>isLeftToRight</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>

                            <if>if
                                <condition>(
                                    <expr>
                                        <name>ncomponents</name>
                                        == 0
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return;</return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>nrows</name>
                                        &gt; 0
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>ncols</name>
                                                = (<name>ncomponents</name> + <name>nrows</name> - 1) /
                                                <name>nrows</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>nrows</name>
                                                = (<name>ncomponents</name> + <name>ncols</name> - 1) /
                                                <name>ncols</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </else>
                            </if>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>w</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>parent</name>.
                                                    <name>getWidth</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            - (
                                            <name><name>insets</name>.
                                                <name>left</name>
                                            </name>
                                            +
                                            <name><name>insets</name>.
                                                <name>right</name>
                                            </name>
                                            )
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>h</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>parent</name>.
                                                    <name>getHeight</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            - (
                                            <name><name>insets</name>.
                                                <name>top</name>
                                            </name>
                                            +
                                            <name><name>insets</name>.
                                                <name>bottom</name>
                                            </name>
                                            )
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>w</name>
                                    = (<name>w</name> - (<name>ncols</name> - 1) * <name>hgap</name>) /
                                    <name>ncols</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>h</name>
                                    = (<name>h</name> - (<name>nrows</name> - 1) * <name>vgap</name>) /
                                    <name>nrows</name>
                                </expr>
                                ;
                            </expr_stmt>

                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>i</name>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>ltr</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <for>for (
                                            <init>
                                                <decl>
                                                    <type>
                                                        <name>int</name>
                                                    </type>
                                                    <name>c</name> =
                                                    <init>
                                                        <expr>0</expr>
                                                    </init>
                                                    , <name>x</name> =
                                                    <init>
                                                        <expr>
                                                            <name><name>insets</name>.
                                                                <name>left</name>
                                                            </name>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </init>
                                            <condition>
                                                <expr>
                                                    <name>c</name>
                                                    &lt;
                                                    <name>ncols</name>
                                                </expr>
                                                ;
                                            </condition>
                                            <incr>
                                                <expr><name>c</name>++
                                                </expr>
                                                ,
                                                <expr>
                                                    <name>x</name>
                                                    += <name>w</name> +
                                                    <name>hgap</name>
                                                </expr>
                                            </incr>
                                            )
                                            <block>{
                                                <for>for (
                                                    <init>
                                                        <decl>
                                                            <type>
                                                                <name>int</name>
                                                            </type>
                                                            <name>r</name> =
                                                            <init>
                                                                <expr>0</expr>
                                                            </init>
                                                            , <name>y</name> =
                                                            <init>
                                                                <expr>
                                                                    <name><name>insets</name>.
                                                                        <name>top</name>
                                                                    </name>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </init>
                                                    <condition>
                                                        <expr>
                                                            <name>r</name>
                                                            &lt;
                                                            <name>nrows</name>
                                                        </expr>
                                                        ;
                                                    </condition>
                                                    <incr>
                                                        <expr><name>r</name>++
                                                        </expr>
                                                        ,
                                                        <expr>
                                                            <name>y</name>
                                                            += <name>h</name> +
                                                            <name>vgap</name>
                                                        </expr>
                                                    </incr>
                                                    )
                                                    <block>{
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>isVertical</name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>i</name>
                                                                            = <name>r</name> + <name>c</name> *
                                                                            <name>nrows</name>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                            <else>else
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>i</name>
                                                                            = <name>r</name> * <name>ncols</name> +
                                                                            <name>c</name>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </else>
                                                        </if>
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>i</name>
                                                                    &lt;
                                                                    <name>ncomponents</name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>parent</name>.
                                                                                    <name>getComponent</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>i</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                            .
                                                                            <call>
                                                                                <name>setBounds</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>x</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>y</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>w</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>h</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        }
                                                    </block>
                                                </for>
                                                }
                                            </block>
                                        </for>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <for>for (
                                            <init>
                                                <decl>
                                                    <type>
                                                        <name>int</name>
                                                    </type>
                                                    <name>c</name> =
                                                    <init>
                                                        <expr>0</expr>
                                                    </init>
                                                    , <name>x</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name><name>parent</name>.
                                                                    <name>getWidth</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                            -
                                                            <name><name>insets</name>.
                                                                <name>right</name>
                                                            </name>
                                                            -
                                                            <name>w</name>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </init>
                                            <condition>
                                                <expr>
                                                    <name>c</name>
                                                    &lt;
                                                    <name>ncols</name>
                                                </expr>
                                                ;
                                            </condition>
                                            <incr>
                                                <expr><name>c</name>++
                                                </expr>
                                                ,
                                                <expr>
                                                    <name>x</name>
                                                    -= <name>w</name> +
                                                    <name>hgap</name>
                                                </expr>
                                            </incr>
                                            )
                                            <block>{
                                                <for>for (
                                                    <init>
                                                        <decl>
                                                            <type>
                                                                <name>int</name>
                                                            </type>
                                                            <name>r</name> =
                                                            <init>
                                                                <expr>0</expr>
                                                            </init>
                                                            , <name>y</name> =
                                                            <init>
                                                                <expr>
                                                                    <name><name>insets</name>.
                                                                        <name>top</name>
                                                                    </name>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </init>
                                                    <condition>
                                                        <expr>
                                                            <name>r</name>
                                                            &lt;
                                                            <name>nrows</name>
                                                        </expr>
                                                        ;
                                                    </condition>
                                                    <incr>
                                                        <expr><name>r</name>++
                                                        </expr>
                                                        ,
                                                        <expr>
                                                            <name>y</name>
                                                            += <name>h</name> +
                                                            <name>vgap</name>
                                                        </expr>
                                                    </incr>
                                                    )
                                                    <block>{
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>isVertical</name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>i</name>
                                                                            = <name>r</name> + <name>c</name> *
                                                                            <name>nrows</name>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                            <else>else
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>i</name>
                                                                            = <name>r</name> * <name>ncols</name> +
                                                                            <name>c</name>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </else>
                                                        </if>
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>i</name>
                                                                    &lt;
                                                                    <name>ncomponents</name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>parent</name>.
                                                                                    <name>getComponent</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>i</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                            .
                                                                            <call>
                                                                                <name>setBounds</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>x</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>y</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>w</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>h</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        }
                                                    </block>
                                                </for>
                                                }
                                            </block>
                                        </for>
                                        }
                                    </block>
                                </else>
                            </if>
                            }
                        </block>
                    </synchronized>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the string representation of this grid layout's values.
                * @return a string representation of this grid layout
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>toString</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getClass</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>getName</name>
                                <argument_list>()</argument_list>
                            </call>
                            + "[hgap=" + <name>hgap</name> + ",vgap=" + <name>vgap</name> +
                            ",rows=" + <name>rows</name> + ",cols=" + <name>cols</name> + "]"
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            }
        </block>
    </class>
</unit>
