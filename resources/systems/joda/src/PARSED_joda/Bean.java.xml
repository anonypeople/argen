<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\joda\src\main\java\org\joda\beans\Bean.java">
    <comment type="block">/*
        * Copyright 2001-2014 Stephen Colebourne
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>joda</name>.
            <name>beans</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>NoSuchElementException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Set</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * A bean consisting of a set of properties.
        * &lt;p&gt;
        * The implementation may be any class, but is typically a standard JavaBean
        * with get/set methods. Alternate implementations might store the properties
        * in another data structure such as a map.
        *
        * @author Stephen Colebourne
        */
    </comment>
    <class type="interface">
        <specifier>public</specifier>
        interface <name>Bean</name>
        <block>{

            <comment type="javadoc">/**
                * Gets the meta-bean representing the parts of the bean that are
                * common across all instances, such as the set of meta-properties.
                * &lt;p&gt;
                * The meta-bean can be thought of as the equivalent of {@link Class} but for beans.
                *
                * @return the meta-bean, not null
                */
            </comment>
            <function_decl>
                <type>
                    <name>MetaBean</name>
                </type>
                <name>metaBean</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Gets a property by name.
                * &lt;p&gt;
                * Each bean consists of a known set of properties.
                * This method checks whether there is a property with the specified name.
                * &lt;p&gt;
                * The base interface throws an exception if the name is not recognised.
                * By contrast, the {@code DynamicBean} subinterface creates the property on demand.
                *
                * @param &lt;R&gt; the property type, optional, enabling auto-casting
                * @param propertyName the property name to retrieve, not null
                * @return the property, not null
                * @throws NoSuchElementException if the property name is invalid
                */
            </comment>
            <function_decl>
                <type>
                    <argument_list>&lt;
                        <argument>
                            <name>R</name>
                        </argument>
                        &gt;
                    </argument_list>
                    <name>
                        <name>Property</name>
                        <argument_list>&lt;
                            <argument>
                                <name>R</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>property</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>propertyName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Gets the set of property names.
                * &lt;p&gt;
                * Each bean consists of a known set of properties.
                * This method returns the known property names.
                *
                * @return the unmodifiable set of property names, not null
                */
            </comment>
            <function_decl>
                <type>
                    <name>
                        <name>Set</name>
                        <argument_list>&lt;
                            <argument>
                                <name>String</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>propertyNames</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            }
        </block>
    </class>
</unit>
