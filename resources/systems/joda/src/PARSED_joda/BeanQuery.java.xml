<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\joda\src\main\java\org\joda\beans\BeanQuery.java">
    <comment type="block">/*
        * Copyright 2001-2014 Stephen Colebourne
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>joda</name>.
            <name>beans</name>
        </name>
        ;
    </package>

    <comment type="javadoc">/**
        * A query based on beans.
        * &lt;p&gt;
        * The query interface provides the simplest way to query beans.
        *
        * @param &lt;P&gt; the type of the property content
        * @author Stephen Colebourne
        */
    </comment>
    <class type="interface">
        <specifier>public</specifier>
        interface
        <name>
            <name>BeanQuery</name>
            <argument_list>&lt;
                <argument>
                    <name>P</name>
                </argument>
                &gt;
            </argument_list>
        </name>
        <block>{

            <comment type="javadoc">/**
                * Queries a value from the specified bean.
                * &lt;p&gt;
                * This returns a value of some kind derived from the specified bean.
                * This might be a property value or some other derived value.
                *
                * @param bean the bean to query, not null
                * @return the value derived from the specified bean, may be null
                * @throws ClassCastException if the bean is of an incorrect type
                * @throws UnsupportedOperationException if unable to query
                */
            </comment>
            <function_decl>
                <type>
                    <name>P</name>
                </type>
                <name>get</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Bean</name>
                            </type>
                            <name>bean</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            }
        </block>
    </class>
</unit>
