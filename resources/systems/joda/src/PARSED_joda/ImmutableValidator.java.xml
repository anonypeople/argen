<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\joda\src\main\java\org\joda\beans\ImmutableValidator.java">
    <comment type="block">/*
        * Copyright 2001-2014 Stephen Colebourne
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>joda</name>.
            <name>beans</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>lang</name>.<name>annotation</name>.
            <name>ElementType</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>lang</name>.<name>annotation</name>.
            <name>Retention</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>lang</name>.<name>annotation</name>.
            <name>RetentionPolicy</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>lang</name>.<name>annotation</name>.
            <name>Target</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * Annotation defining which method is to be used to validate the bean
        * when code generating immutable beans.
        * &lt;p&gt;
        * Each property in a bean can be independently validated.
        * This annotation allows properties to be cross-checked at the end of the constructor.
        * &lt;p&gt;
        * The method must be a private void instance method and take no arguments.
        * Private is necessary as it is called from the constructor.
        * For example:
        * &lt;pre&gt;
        * {@literal @}ImmutableValidator
        * private void validate() {
        * if (age != null &amp;&amp; age {@literal &lt;} 0) {
        * throw new IllegalArgumentException("Age must not be negative if specified")
        * }
        * }
        * &lt;/pre&gt;
        *
        * @author Stephen Colebourne
        */
    </comment>
    @
    <expr_stmt>
        <expr>
            <call>
                <name>Retention</name>
                <argument_list>(
                    <argument>
                        <expr>
                            <name><name>RetentionPolicy</name>.
                                <name>SOURCE</name>
                            </name>
                        </expr>
                    </argument>
                    )
                </argument_list>
            </call>
            @
            <call>
                <name>Target</name>
                <argument_list>(
                    <argument>
                        <expr>
                            <name><name>ElementType</name>.
                                <name>METHOD</name>
                            </name>
                        </expr>
                    </argument>
                    )
                </argument_list>
            </call>
            public @interface <name>ImmutableValidator</name>
            <block>{

                }
            </block>
        </expr>
    </expr_stmt>
</unit>
