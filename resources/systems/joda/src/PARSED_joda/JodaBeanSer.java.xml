<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\joda\src\main\java\org\joda\beans\ser\JodaBeanSer.java">
    <comment type="block">/*
        * Copyright 2001-2014 Stephen Colebourne
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>joda</name>.<name>beans</name>.
            <name>ser</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>org</name>.<name>joda</name>.<name>beans</name>.
            <name>JodaBeanUtils</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>joda</name>.<name>beans</name>.<name>ser</name>.<name>bin</name>.
            <name>JodaBeanBinReader</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>joda</name>.<name>beans</name>.<name>ser</name>.<name>bin</name>.
            <name>JodaBeanBinWriter</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>joda</name>.<name>beans</name>.<name>ser</name>.<name>json</name>.
            <name>JodaBeanJsonReader</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>joda</name>.<name>beans</name>.<name>ser</name>.<name>json</name>.
            <name>JodaBeanJsonWriter</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>joda</name>.<name>beans</name>.<name>ser</name>.<name>xml</name>.
            <name>JodaBeanXmlReader</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>joda</name>.<name>beans</name>.<name>ser</name>.<name>xml</name>.
            <name>JodaBeanXmlWriter</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>joda</name>.<name>convert</name>.
            <name>StringConvert</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * Provides the ability for a Joda-Bean to be serialized.
        * &lt;p&gt;
        * Serialization of Joda-Beans uses the information in the beans to optimize
        * the size of the data output.
        *
        * @author Stephen Colebourne
        */
    </comment>
    <class>
        <specifier>public</specifier>
        <specifier>final</specifier> class <name>JodaBeanSer</name>
        <block>{

            <comment type="javadoc">/**
                * Obtains the singleton compact instance.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>JodaBeanSer</name>
                    </type>
                    <name>COMPACT</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>JodaBeanSer</name>
                                <argument_list>(
                                    <argument>
                                        <expr>""</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>""</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>StringConvert</name>.
                                                    <name>create</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>SerIteratorFactory</name>.
                                                <name>INSTANCE</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>SerDeserializers</name>.
                                                <name>INSTANCE</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * Obtains the singleton pretty-printing instance.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>JodaBeanSer</name>
                    </type>
                    <name>PRETTY</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>JodaBeanSer</name>
                                <argument_list>(
                                    <argument>
                                        <expr>" "</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"\n"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>StringConvert</name>.
                                                    <name>create</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>SerIteratorFactory</name>.
                                                <name>INSTANCE</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>SerDeserializers</name>.
                                                <name>INSTANCE</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * The indent to use.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>indent</name>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * The new line to use.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>newLine</name>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * The string converter to use.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>StringConvert</name>
                    </type>
                    <name>converter</name>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * The iterator factory to use.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>SerIteratorFactory</name>
                    </type>
                    <name>iteratorFactory</name>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * Whether to use short types.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>boolean</name>
                    </type>
                    <name>shortTypes</name>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * The deserializers.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>SerDeserializers</name>
                    </type>
                    <name>deserializers</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Creates an instance.
                *
                * @param indent the indent, not null
                * @param newLine the new line, not null
                * @param converter the converter, not null
                * @param iteratorFactory the iterator factory, not null
                * @param shortTypes whether to use short types
                * @param deserializers the deserializers to use, not null
                */
            </comment>
            <constructor>
                <specifier>private</specifier>
                <name>JodaBeanSer</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>indent</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>newLine</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>StringConvert</name>
                            </type>
                            <name>converter</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>SerIteratorFactory</name>
                            </type>
                            <name>iteratorFactory</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>shortTypes</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>SerDeserializers</name>
                            </type>
                            <name>deserializers</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>indent</name>
                            </name>
                            =
                            <name>indent</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>newLine</name>
                            </name>
                            =
                            <name>newLine</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>converter</name>
                            </name>
                            =
                            <name>converter</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>iteratorFactory</name>
                            </name>
                            =
                            <name>iteratorFactory</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>shortTypes</name>
                            </name>
                            =
                            <name>shortTypes</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>deserializers</name>
                            </name>
                            =
                            <name>deserializers</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="line">//-----------------------------------------------------------------------</comment>
            <comment type="javadoc">/**
                * Gets the pretty print indent.
                *
                * @return the indent, not null
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getIndent</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>indent</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns a copy of this serializer with the specified pretty print indent.
                *
                * @param indent the indent, not null
                * @return a copy of this object with the indent changed, not null
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>JodaBeanSer</name>
                </type>
                <name>withIndent</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>indent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>JodaBeanUtils</name>.
                                    <name>notNull</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>indent</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"indent"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>new
                            <call>
                                <name>JodaBeanSer</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>indent</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>newLine</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>converter</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>iteratorFactory</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>shortTypes</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>deserializers</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Gets the new line string.
                *
                * @return the newLine, not null
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getNewLine</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>newLine</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns a copy of this serializer with the specified pretty print new line.
                *
                * @param newLine the new line, not null
                * @return a copy of this object with the new line changed, not null
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>JodaBeanSer</name>
                </type>
                <name>withNewLine</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>newLine</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>JodaBeanUtils</name>.
                                    <name>notNull</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>newLine</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"newLine"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>new
                            <call>
                                <name>JodaBeanSer</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>indent</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>newLine</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>converter</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>iteratorFactory</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>shortTypes</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>deserializers</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Gets the string converter.
                * &lt;p&gt;
                * The default converter can be modified.
                *
                * @return the converter, not null
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>StringConvert</name>
                </type>
                <name>getConverter</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>converter</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns a copy of this serializer with the specified string converter.
                * &lt;p&gt;
                * The default converter can be modified.
                *
                * @param converter the converter, not null
                * @return a copy of this object with the converter changed, not null
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>JodaBeanSer</name>
                </type>
                <name>withConverter</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>StringConvert</name>
                            </type>
                            <name>converter</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>JodaBeanUtils</name>.
                                    <name>notNull</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>converter</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"converter"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>new
                            <call>
                                <name>JodaBeanSer</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>indent</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>newLine</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>converter</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>iteratorFactory</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>shortTypes</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>deserializers</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Gets the iterator factory.
                *
                * @return the iterator factory, not null
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>SerIteratorFactory</name>
                </type>
                <name>getIteratorFactory</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>iteratorFactory</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns a copy of this serializer with the specified iterator factory.
                *
                * @param iteratorFactory the iterator factory, not null
                * @return a copy of this object with the iterator factory changed, not null
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>JodaBeanSer</name>
                </type>
                <name>withIteratorFactory</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>SerIteratorFactory</name>
                            </type>
                            <name>iteratorFactory</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>JodaBeanUtils</name>.
                                    <name>notNull</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>converter</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"converter"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>new
                            <call>
                                <name>JodaBeanSer</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>indent</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>newLine</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>converter</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>iteratorFactory</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>shortTypes</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>deserializers</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Gets whether to use short types.
                *
                * @return the short types flag, not null
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isShortTypes</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>shortTypes</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns a copy of this serializer with the short types flag set.
                *
                * @param shortTypes whether to use short types, not null
                * @return a copy of this object with the short types flag changed, not null
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>JodaBeanSer</name>
                </type>
                <name>withShortTypes</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>shortTypes</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>JodaBeanSer</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>indent</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>newLine</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>converter</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>iteratorFactory</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>shortTypes</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>deserializers</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Gets the deserializers.
                * &lt;p&gt;
                * The default deserializers can be modified.
                *
                * @return the converter, not null
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>SerDeserializers</name>
                </type>
                <name>getDeserializers</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>deserializers</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns a copy of this serializer with the specified deserializers.
                * &lt;p&gt;
                * The default deserializers can be modified.
                *
                * @param deserializers the deserializers, not null
                * @return a copy of this object with the converter changed, not null
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>JodaBeanSer</name>
                </type>
                <name>withDeserializers</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>SerDeserializers</name>
                            </type>
                            <name>deserializers</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>JodaBeanUtils</name>.
                                    <name>notNull</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>deserializers</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"deserializers"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>new
                            <call>
                                <name>JodaBeanSer</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>indent</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>newLine</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>converter</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>iteratorFactory</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>shortTypes</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>deserializers</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">//-----------------------------------------------------------------------</comment>
            <comment type="javadoc">/**
                * Creates a binary writer.
                *
                * @return the binary writer, not null
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>JodaBeanBinWriter</name>
                </type>
                <name>binWriter</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>JodaBeanBinWriter</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>this</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Creates a binary reader.
                *
                * @return the binary reader, not null
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>JodaBeanBinReader</name>
                </type>
                <name>binReader</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>JodaBeanBinReader</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>this</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">//-----------------------------------------------------------------------</comment>
            <comment type="javadoc">/**
                * Creates an XML writer.
                *
                * @return the XML writer, not null
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>JodaBeanXmlWriter</name>
                </type>
                <name>xmlWriter</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>JodaBeanXmlWriter</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>this</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Creates an XML reader.
                *
                * @return the XML reader, not null
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>JodaBeanXmlReader</name>
                </type>
                <name>xmlReader</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>JodaBeanXmlReader</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>this</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">//-----------------------------------------------------------------------</comment>
            <comment type="javadoc">/**
                * Creates a JSON writer.
                *
                * @return the JSON writer, not null
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>JodaBeanJsonWriter</name>
                </type>
                <name>jsonWriter</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>JodaBeanJsonWriter</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>this</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Creates a JSON reader.
                *
                * @return the JSON reader, not null
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>JodaBeanJsonReader</name>
                </type>
                <name>jsonReader</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>JodaBeanJsonReader</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>this</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">//-----------------------------------------------------------------------</comment>
            <function>
                <type>
                    <annotation>@
                        <name>Override</name>
                    </annotation>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>toString</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getClass</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>getSimpleName</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            }
        </block>
    </class>
</unit>
