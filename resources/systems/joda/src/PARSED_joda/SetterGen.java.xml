<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\joda\src\main\java\org\joda\beans\gen\SetterGen.java">
    <comment type="block">/*
        * Copyright 2001-2014 Stephen Colebourne
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>joda</name>.<name>beans</name>.
            <name>gen</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>ArrayList</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Collections</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>List</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * A generator of set methods.
        *
        * @author Stephen Colebourne
        */
    </comment>
    <class>
        <specifier>abstract</specifier>
        class <name>SetterGen</name>
        <block>{

            <comment type="javadoc">/**
                * Checks if a setter method is possible.
                *
                * @param prop the property data, not null
                * @return true if a setter is possible
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>abstract</specifier>
                    <name>boolean</name>
                </type>
                <name>isSetterGenerated</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>GeneratableProperty</name>
                            </type>
                            <name>prop</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Generates the setter method.
                *
                * @param indent the indent to use, not null
                * @param prop the property data, not null
                * @return the generated code, not null
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>abstract</specifier>
                    <name>
                        <name>List</name>
                        <argument_list>&lt;
                            <argument>
                                <name>String</name>
                            </argument>
                            &gt;
                        </argument_list>
                    </name>
                </type>
                <name>generateSetter</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>indent</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>GeneratableProperty</name>
                            </type>
                            <name>prop</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Generates the setter method invocation.
                * This is just the method name.
                *
                * @param prop the property data, not null
                * @param newValue the new value, not null
                * @return the generated code, null if no setter
                */
            </comment>
            <function>
                <type>
                    <name>String</name>
                </type>
                <name>generateSetInvoke</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>GeneratableProperty</name>
                            </type>
                            <name>prop</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>newValue</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>"set" +
                            <call>
                                <name><name>prop</name>.
                                    <name>getUpperName</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            + "(" + <name>newValue</name> + ")"
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">//-----------------------------------------------------------------------</comment>
            <class>
                <specifier>static</specifier>
                <specifier>final</specifier> class <name>SetSetterGen</name>
                <super>
                    <extends>extends
                        <name>SetterGen</name>
                    </extends>
                </super>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>SetSetterGen</name>
                            </type>
                            <name>PUBLIC</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>SetSetterGen</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"public"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>SetSetterGen</name>
                            </type>
                            <name>PROTECTED</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>SetSetterGen</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"protected"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>SetSetterGen</name>
                            </type>
                            <name>PRIVATE</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>SetSetterGen</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"private"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>final</specifier>
                                <name>String</name>
                            </type>
                            <name>access</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <function>
                        <type>
                            <specifier>static</specifier>
                            <name>SetSetterGen</name>
                        </type>
                        <name>of</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>access</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>(
                                    <call>
                                        <name><name>access</name>.
                                            <name>equals</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"private"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    ? <name>PRIVATE</name> :
                                    <call>
                                        <name><name>access</name>.
                                            <name>equals</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"protected"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    ? <name>PROTECTED</name> : <name>PUBLIC</name>)
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    <constructor>
                        <specifier>private</specifier>
                        <name>SetSetterGen</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>access</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>access</name>
                                    </name>
                                    =
                                    <name>access</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>
                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <name>boolean</name>
                        </type>
                        <name>isSetterGenerated</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>GeneratableProperty</name>
                                    </type>
                                    <name>prop</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return <expr>true</expr>;
                            </return>
                            }
                        </block>
                    </function>
                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <name>
                                <name>List</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>String</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>generateSetter</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>indent</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>GeneratableProperty</name>
                                    </type>
                                    <name>prop</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>
                                            <name>List</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>String</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>list</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>
                                                    <name>ArrayList</name>
                                                    <argument_list>&lt;
                                                        <argument>
                                                            <name>String</name>
                                                        </argument>
                                                        &gt;
                                                    </argument_list>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>list</name>.
                                            <name>add</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"\t/**"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>list</name>.
                                            <name>add</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"\t * Sets " +
                                                    <call>
                                                        <name><name>prop</name>.
                                                            <name>getFirstComment</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <for>for (
                                <init>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                        </type>
                                        <name>comment</name> :
                                        <range>
                                            <expr>
                                                <call>
                                                    <name><name>prop</name>.
                                                        <name>getComments</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </range>
                                    </decl>
                                </init>
                                )
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>list</name>.
                                                    <name>add</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>"\t * " +
                                                            <name>comment</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                            </for>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>list</name>.
                                            <name>add</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"\t * @param " +
                                                    <call>
                                                        <name><name>prop</name>.
                                                            <name>getPropertyName</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    + " the new value of the property" +
                                                    <call>
                                                        <name><name>prop</name>.
                                                            <name>getNotNullJavadoc</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>list</name>.
                                            <name>add</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"\t */"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>prop</name>.
                                                <name>isOverrideSet</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>list</name>.
                                                        <name>add</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"\t@Override"</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>prop</name>.
                                                <name>isDeprecated</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>list</name>.
                                                        <name>add</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"\t@Deprecated"</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>list</name>.
                                            <name>add</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"\t" + <name>access</name> + " void set" +
                                                    <call>
                                                        <name><name>prop</name>.
                                                            <name>getUpperName</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    + "(" +
                                                    <call>
                                                        <name><name>prop</name>.
                                                            <name>getType</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    + " " +
                                                    <call>
                                                        <name><name>prop</name>.
                                                            <name>getPropertyName</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    + ") {"
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>prop</name>.
                                                <name>isValidated</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>list</name>.
                                                        <name>add</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"\t\t" +
                                                                <call>
                                                                    <name><name>prop</name>.
                                                                        <name>getValidationMethodName</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                                + "(" +
                                                                <call>
                                                                    <name><name>prop</name>.
                                                                        <name>getPropertyName</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                                + ", \"" +
                                                                <call>
                                                                    <name><name>prop</name>.
                                                                        <name>getPropertyName</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                                + "\");"
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>list</name>.
                                            <name>add</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"\t\tthis." +
                                                    <call>
                                                        <name><name>prop</name>.
                                                            <name>getFieldName</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    + " = " +
                                                    <call>
                                                        <name><name>prop</name>.
                                                            <name>getPropertyName</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    + ";"
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>list</name>.
                                            <name>add</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"\t}"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>list</name>.
                                            <name>add</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>""</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <return>return
                                <expr>
                                    <name>list</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>

            <class>
                <specifier>static</specifier>
                class <name>PatternSetterGen</name>
                <super>
                    <extends>extends
                        <name>SetterGen</name>
                    </extends>
                </super>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>final</specifier>
                                <name>String</name>
                            </type>
                            <name>setPattern</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>final</specifier>
                                <name>String</name>
                            </type>
                            <name>access</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <constructor>
                        <name>PatternSetterGen</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>setPattern</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>this</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>setPattern</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"public"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>
                    <constructor>
                        <name>PatternSetterGen</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>setPattern</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>access</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>setPattern</name>
                                    </name>
                                    =
                                    <name>setPattern</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>access</name>
                                    </name>
                                    =
                                    <name>access</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>
                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <name>boolean</name>
                        </type>
                        <name>isSetterGenerated</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>GeneratableProperty</name>
                                    </type>
                                    <name>prop</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return <expr>true</expr>;
                            </return>
                            }
                        </block>
                    </function>
                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <name>
                                <name>List</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>String</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>generateSetter</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>indent</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>GeneratableProperty</name>
                                    </type>
                                    <name>prop</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>
                                            <name>List</name>
                                            <argument_list>&lt;
                                                <argument>
                                                    <name>String</name>
                                                </argument>
                                                &gt;
                                            </argument_list>
                                        </name>
                                    </type>
                                    <name>list</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>
                                                    <name>ArrayList</name>
                                                    <argument_list>&lt;
                                                        <argument>
                                                            <name>String</name>
                                                        </argument>
                                                        &gt;
                                                    </argument_list>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>list</name>.
                                            <name>add</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>indent</name>
                                                    + "/**"
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>list</name>.
                                            <name>add</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>indent</name>
                                                    + " * Sets " +
                                                    <call>
                                                        <name><name>prop</name>.
                                                            <name>getFirstComment</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <for>for (
                                <init>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                        </type>
                                        <name>comment</name> :
                                        <range>
                                            <expr>
                                                <call>
                                                    <name><name>prop</name>.
                                                        <name>getComments</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </range>
                                    </decl>
                                </init>
                                )
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>list</name>.
                                                    <name>add</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>indent</name>
                                                            + " * " +
                                                            <name>comment</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                            </for>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>list</name>.
                                            <name>add</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>indent</name>
                                                    + " * @param " +
                                                    <call>
                                                        <name><name>prop</name>.
                                                            <name>getPropertyName</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    + " the new value of the property" +
                                                    <call>
                                                        <name><name>prop</name>.
                                                            <name>getNotNullJavadoc</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>list</name>.
                                            <name>add</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>indent</name>
                                                    + " */"
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>prop</name>.
                                                <name>isOverrideSet</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>list</name>.
                                                        <name>add</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"\t@Override"</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>prop</name>.
                                                <name>isDeprecated</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>list</name>.
                                                        <name>add</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>indent</name>
                                                                + "@Deprecated"
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>list</name>.
                                            <name>add</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>indent</name>
                                                    + <name>access</name> + " void set" +
                                                    <call>
                                                        <name><name>prop</name>.
                                                            <name>getUpperName</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    + "(" +
                                                    <call>
                                                        <name><name>prop</name>.
                                                            <name>getType</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    + " " +
                                                    <call>
                                                        <name><name>prop</name>.
                                                            <name>getPropertyName</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    + ") {"
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>prop</name>.
                                                <name>isValidated</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>list</name>.
                                                        <name>add</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"\t\t" +
                                                                <call>
                                                                    <name><name>prop</name>.
                                                                        <name>getValidationMethodName</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                                + "(" +
                                                                <call>
                                                                    <name><name>prop</name>.
                                                                        <name>getPropertyName</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                                + ", \"" +
                                                                <call>
                                                                    <name><name>prop</name>.
                                                                        <name>getPropertyName</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                                + "\");"
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <specifier>final</specifier>
                                        <name>String</name>
                                        <index>[]</index>
                                    </type>
                                    <name>split</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>setPattern</name>.
                                                    <name>split</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>"\n"</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <for>for (
                                <init>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                        </type>
                                        <name>line</name> :
                                        <range>
                                            <expr>
                                                <name>split</name>
                                            </expr>
                                        </range>
                                    </decl>
                                </init>
                                )
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <name>line</name>
                                            =
                                            <call>
                                                <name><name>line</name>.
                                                    <name>replace</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>"$field"</expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>"this." +
                                                            <call>
                                                                <name><name>prop</name>.
                                                                    <name>getFieldName</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <name>line</name>
                                            =
                                            <call>
                                                <name><name>line</name>.
                                                    <name>replace</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>"$value"</expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>prop</name>.
                                                                    <name>getPropertyName</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <name>line</name>
                                            =
                                            <call>
                                                <name><name>line</name>.
                                                    <name>replace</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>"&lt;&gt;"</expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>prop</name>.
                                                                    <name>getTypeGenerics</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name><name>split</name>.
                                                    <name>length</name>
                                                </name>
                                                == 1 &amp;&amp;
                                                <call>
                                                    <name><name>line</name>.
                                                        <name>endsWith</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>";"</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                == false
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>line</name>
                                                        += ";"
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>list</name>.
                                                    <name>add</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>indent</name>
                                                            + "\t" +
                                                            <name>line</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                            </for>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>list</name>.
                                            <name>add</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>indent</name>
                                                    + "}"
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>list</name>.
                                            <name>add</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>""</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <return>return
                                <expr>
                                    <name>list</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>

            <class>
                <specifier>static</specifier>
                class <name>NoSetterGen</name>
                <super>
                    <extends>extends
                        <name>SetterGen</name>
                    </extends>
                </super>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>SetterGen</name>
                            </type>
                            <name>INSTANCE</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>NoSetterGen</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <name>boolean</name>
                        </type>
                        <name>isSetterGenerated</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>GeneratableProperty</name>
                                    </type>
                                    <name>prop</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return <expr>false</expr>;
                            </return>
                            }
                        </block>
                    </function>
                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <name>
                                <name>List</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>String</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>generateSetter</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>indent</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>GeneratableProperty</name>
                                    </type>
                                    <name>prop</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>Collections</name>.
                                            <name>emptyList</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>

            <class>
                <specifier>static</specifier>
                class <name>FieldSetterGen</name>
                <super>
                    <extends>extends
                        <name>SetterGen</name>
                    </extends>
                </super>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>SetterGen</name>
                            </type>
                            <name>INSTANCE</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>FieldSetterGen</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <name>boolean</name>
                        </type>
                        <name>isSetterGenerated</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>GeneratableProperty</name>
                                    </type>
                                    <name>prop</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return <expr>true</expr>;
                            </return>
                            }
                        </block>
                    </function>
                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <name>
                                <name>List</name>
                                <argument_list>&lt;
                                    <argument>
                                        <name>String</name>
                                    </argument>
                                    &gt;
                                </argument_list>
                            </name>
                        </type>
                        <name>generateSetter</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>indent</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>GeneratableProperty</name>
                                    </type>
                                    <name>prop</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>Collections</name>.
                                            <name>emptyList</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    <function>
                        <type>
                            <annotation>@
                                <name>Override</name>
                            </annotation>
                            <name>String</name>
                        </type>
                        <name>generateSetInvoke</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>GeneratableProperty</name>
                                    </type>
                                    <name>prop</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>newValue</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>prop</name>.
                                            <name>getFieldName</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    + " = " +
                                    <name>newValue</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>

            }
        </block>
    </class>
</unit>
