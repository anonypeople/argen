<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\joda\src\test\java\org\joda\beans\ser\json\TestSerializeJson.java">
    <comment type="block">/*
        * Copyright 2001-2014 Stephen Colebourne
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>joda</name>.<name>beans</name>.<name>ser</name>.
            <name>json</name>
        </name>
        ;
    </package>

    <import>import static
        <name><name>org</name>.<name>testng</name>.<name>Assert</name>.
            <name>assertEquals</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>IOException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>Reader</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>StringReader</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>joda</name>.<name>beans</name>.
            <name>Bean</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>joda</name>.<name>beans</name>.<name>gen</name>.
            <name>Address</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>joda</name>.<name>beans</name>.<name>gen</name>.
            <name>ImmAddress</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>joda</name>.<name>beans</name>.<name>gen</name>.
            <name>ImmEmpty</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>joda</name>.<name>beans</name>.<name>gen</name>.
            <name>ImmOptional</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>joda</name>.<name>beans</name>.<name>gen</name>.
            <name>JodaConvertBean</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>joda</name>.<name>beans</name>.<name>gen</name>.
            <name>JodaConvertWrapper</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>joda</name>.<name>beans</name>.<name>gen</name>.
            <name>Person</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>joda</name>.<name>beans</name>.<name>gen</name>.
            <name>PrimitiveBean</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>joda</name>.<name>beans</name>.<name>gen</name>.
            <name>SimplePerson</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>joda</name>.<name>beans</name>.<name>impl</name>.<name>flexi</name>.
            <name>FlexiBean</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>joda</name>.<name>beans</name>.<name>ser</name>.
            <name>JodaBeanSer</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>joda</name>.<name>beans</name>.<name>ser</name>.
            <name>SerTestHelper</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>joda</name>.<name>beans</name>.<name>test</name>.
            <name>BeanAssert</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>testng</name>.<name>annotations</name>.
            <name>DataProvider</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>testng</name>.<name>annotations</name>.
            <name>Test</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * Test property roundtrip using JSON.
        */
    </comment>
    <class>
        <annotation>@
            <name>Test</name>
        </annotation>
        <specifier>public</specifier>
        class <name>TestSerializeJson</name>
        <block>{

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_writeAddress</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Address</name>
                            </type>
                            <name>address</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>SerTestHelper</name>.
                                            <name>testAddress</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>json</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>PRETTY</name>.
                                            <name>jsonWriter</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>write</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>address</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// System.out.println(json);</comment>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Address</name>
                            </type>
                            <name>bean</name> =
                            <init>
                                <expr>(<name>Address</name>)
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>PRETTY</name>.
                                            <name>jsonReader</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>read</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>json</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// System.out.println(bean);</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>BeanAssert</name>.
                                    <name>assertBeanEquals</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>bean</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>address</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_writeImmAddress</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ImmAddress</name>
                            </type>
                            <name>address</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>SerTestHelper</name>.
                                            <name>testImmAddress</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>json</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>PRETTY</name>.
                                            <name>jsonWriter</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>write</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>address</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// System.out.println(json);</comment>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ImmAddress</name>
                            </type>
                            <name>bean</name> =
                            <init>
                                <expr>(<name>ImmAddress</name>)
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>PRETTY</name>.
                                            <name>jsonReader</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>read</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>json</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// System.out.println(bean);</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>BeanAssert</name>.
                                    <name>assertBeanEquals</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>bean</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>address</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_writeImmOptional</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ImmOptional</name>
                            </type>
                            <name>optional</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>SerTestHelper</name>.
                                            <name>testImmOptional</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>json</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>PRETTY</name>.
                                            <name>jsonWriter</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>write</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>optional</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// System.out.println(json);</comment>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ImmOptional</name>
                            </type>
                            <name>bean</name> =
                            <init>
                                <expr>(<name>ImmOptional</name>)
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>PRETTY</name>.
                                            <name>jsonReader</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>read</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>json</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// System.out.println(bean);</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>BeanAssert</name>.
                                    <name>assertBeanEquals</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>bean</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>optional</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="line">//-----------------------------------------------------------------------</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_readWriteBeanEmptyChild_pretty</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>FlexiBean</name>
                            </type>
                            <name>bean</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>FlexiBean</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>bean</name>.
                                    <name>set</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"element"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"Test"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>bean</name>.
                                    <name>set</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"child"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>ImmEmpty</name>.
                                                    <name>builder</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>build</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>json</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>PRETTY</name>.
                                            <name>jsonWriter</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>write</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>bean</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>json</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"{\n \"@bean\": \"org.joda.beans.impl.flexi.FlexiBean\",\n \"element\":
                                            \"Test\",\n \"child\": {\n \"@bean\": \"org.joda.beans.gen.ImmEmpty\"\n
                                            }\n}\n"
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>FlexiBean</name>
                            </type>
                            <name>parsed</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>PRETTY</name>.
                                            <name>jsonReader</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>read</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>json</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>FlexiBean</name>.
                                                        <name>
                                                            <name/>
                                                        </name>
                                                    </name>
                                                    class
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>BeanAssert</name>.
                                    <name>assertBeanEquals</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>bean</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>parsed</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_readWriteBeanEmptyChild_compact</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>FlexiBean</name>
                            </type>
                            <name>bean</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>FlexiBean</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>bean</name>.
                                    <name>set</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"element"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"Test"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>bean</name>.
                                    <name>set</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"child"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>ImmEmpty</name>.
                                                    <name>builder</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>build</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>json</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                            <name>jsonWriter</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>write</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>bean</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>json</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            "{\"@bean\":\"org.joda.beans.impl.flexi.FlexiBean\",\"element\":\"Test\",\"child\":{\"@bean\":\"org.joda.beans.gen.ImmEmpty\"}}"
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>FlexiBean</name>
                            </type>
                            <name>parsed</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                            <name>jsonReader</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>read</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>json</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>FlexiBean</name>.
                                                        <name>
                                                            <name/>
                                                        </name>
                                                    </name>
                                                    class
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>BeanAssert</name>.
                                    <name>assertBeanEquals</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>bean</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>parsed</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_readWriteJodaConvertWrapper</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>JodaConvertWrapper</name>
                            </type>
                            <name>wrapper</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>JodaConvertWrapper</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>JodaConvertBean</name>
                            </type>
                            <name>bean</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>JodaConvertBean</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"Hello:9"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>wrapper</name>.
                                    <name>setBean</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>bean</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>wrapper</name>.
                                    <name>setDescription</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Weird"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>json</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                            <name>jsonWriter</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>write</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>wrapper</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>json</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            "{\"@bean\":\"org.joda.beans.gen.JodaConvertWrapper\",\"bean\":\"Hello:9\",\"description\":\"Weird\"}"
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Bean</name>
                            </type>
                            <name>parsed</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                            <name>jsonReader</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>read</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>json</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>BeanAssert</name>.
                                    <name>assertBeanEquals</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>wrapper</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>parsed</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_readWriteJodaConvertBean</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>JodaConvertBean</name>
                            </type>
                            <name>bean</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>JodaConvertBean</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"Hello:9"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>json</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                            <name>jsonWriter</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>write</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>bean</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>json</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            "{\"@bean\":\"org.joda.beans.gen.JodaConvertBean\",\"base\":\"Hello\",\"extra\":9}"
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Bean</name>
                            </type>
                            <name>parsed</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                            <name>jsonReader</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>read</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>json</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>BeanAssert</name>.
                                    <name>assertBeanEquals</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>bean</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>parsed</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_readWrite_boolean_true</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>FlexiBean</name>
                            </type>
                            <name>bean</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>FlexiBean</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>bean</name>.
                                    <name>set</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"data"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Boolean</name>.
                                                <name>TRUE</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>json</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                            <name>jsonWriter</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>write</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>bean</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>json</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"{\"@bean\":\"org.joda.beans.impl.flexi.FlexiBean\",\"data\":true}"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Bean</name>
                            </type>
                            <name>parsed</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                            <name>jsonReader</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>read</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>StringReader</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>json</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>BeanAssert</name>.
                                    <name>assertBeanEquals</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>bean</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>parsed</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_readWrite_boolean_false</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>FlexiBean</name>
                            </type>
                            <name>bean</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>FlexiBean</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>bean</name>.
                                    <name>set</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"data"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Boolean</name>.
                                                <name>FALSE</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>json</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                            <name>jsonWriter</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>write</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>bean</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>json</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"{\"@bean\":\"org.joda.beans.impl.flexi.FlexiBean\",\"data\":false}"
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Bean</name>
                            </type>
                            <name>parsed</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                            <name>jsonReader</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>read</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>StringReader</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>json</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>BeanAssert</name>.
                                    <name>assertBeanEquals</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>bean</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>parsed</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_readWrite_long</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>FlexiBean</name>
                            </type>
                            <name>bean</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>FlexiBean</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>bean</name>.
                                    <name>set</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"data"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>(<name>long</name>) 6
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>json</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                            <name>jsonWriter</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>write</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>bean</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>json</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            "{\"@bean\":\"org.joda.beans.impl.flexi.FlexiBean\",\"data\":{\"@type\":\"Long\",\"value\":6}}"
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Bean</name>
                            </type>
                            <name>parsed</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                            <name>jsonReader</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>read</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>json</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>BeanAssert</name>.
                                    <name>assertBeanEquals</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>bean</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>parsed</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_readWrite_short</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>FlexiBean</name>
                            </type>
                            <name>bean</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>FlexiBean</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>bean</name>.
                                    <name>set</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"data"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>(<name>short</name>) 6
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>json</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                            <name>jsonWriter</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>write</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>bean</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>json</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            "{\"@bean\":\"org.joda.beans.impl.flexi.FlexiBean\",\"data\":{\"@type\":\"Short\",\"value\":6}}"
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Bean</name>
                            </type>
                            <name>parsed</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                            <name>jsonReader</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>read</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>json</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>BeanAssert</name>.
                                    <name>assertBeanEquals</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>bean</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>parsed</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_readWrite_byte</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>FlexiBean</name>
                            </type>
                            <name>bean</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>FlexiBean</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>bean</name>.
                                    <name>set</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"data"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>(<name>byte</name>) 6
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>json</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                            <name>jsonWriter</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>write</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>bean</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>json</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            "{\"@bean\":\"org.joda.beans.impl.flexi.FlexiBean\",\"data\":{\"@type\":\"Byte\",\"value\":6}}"
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Bean</name>
                            </type>
                            <name>parsed</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                            <name>jsonReader</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>read</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>json</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>BeanAssert</name>.
                                    <name>assertBeanEquals</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>bean</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>parsed</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_readWrite_float</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>FlexiBean</name>
                            </type>
                            <name>bean</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>FlexiBean</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>bean</name>.
                                    <name>set</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"data"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>(<name>float</name>) 6
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>json</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                            <name>jsonWriter</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>write</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>bean</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>json</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            "{\"@bean\":\"org.joda.beans.impl.flexi.FlexiBean\",\"data\":{\"@type\":\"Float\",\"value\":6.0}}"
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Bean</name>
                            </type>
                            <name>parsed</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                            <name>jsonReader</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>read</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>json</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>BeanAssert</name>.
                                    <name>assertBeanEquals</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>bean</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>parsed</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_readWrite_float_NaN</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>FlexiBean</name>
                            </type>
                            <name>bean</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>FlexiBean</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>bean</name>.
                                    <name>set</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"data"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Float</name>.
                                                <name>NaN</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>json</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                            <name>jsonWriter</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>write</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>bean</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>json</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            "{\"@bean\":\"org.joda.beans.impl.flexi.FlexiBean\",\"data\":{\"@type\":\"Float\",\"value\":\"NaN\"}}"
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Bean</name>
                            </type>
                            <name>parsed</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                            <name>jsonReader</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>read</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>json</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>BeanAssert</name>.
                                    <name>assertBeanEquals</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>bean</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>parsed</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_readWrite_float_NaN_asNull</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>PrimitiveBean</name>
                            </type>
                            <name>bean</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>PrimitiveBean</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>bean</name>.
                                    <name>setValueFloat</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>Float</name>.
                                                <name>NaN</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>json</name> =
                            <init>
                                <expr>"{\"@bean\":\"org.joda.beans.gen.PrimitiveBean\",\"valueFloat\":null}"</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Bean</name>
                            </type>
                            <name>parsed</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                            <name>jsonReader</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>read</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>json</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>BeanAssert</name>.
                                    <name>assertBeanEquals</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>bean</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>parsed</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_readWrite_double</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>FlexiBean</name>
                            </type>
                            <name>bean</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>FlexiBean</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>bean</name>.
                                    <name>set</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"data"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>(<name>double</name>) 6
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>json</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                            <name>jsonWriter</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>write</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>bean</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>json</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"{\"@bean\":\"org.joda.beans.impl.flexi.FlexiBean\",\"data\":6.0}"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Bean</name>
                            </type>
                            <name>parsed</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                            <name>jsonReader</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>read</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>json</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>BeanAssert</name>.
                                    <name>assertBeanEquals</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>bean</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>parsed</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_readWrite_double_alternateFormat</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>FlexiBean</name>
                            </type>
                            <name>bean</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>FlexiBean</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>bean</name>.
                                    <name>set</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"data"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>(<name>double</name>) 6
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>json</name> =
                            <init>
                                <expr>
                                    "{\"@bean\":\"org.joda.beans.impl.flexi.FlexiBean\",\"data\":{\"@type\":\"Double\",\"value\":6.0}}"
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Bean</name>
                            </type>
                            <name>parsed</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                            <name>jsonReader</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>read</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>json</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>BeanAssert</name>.
                                    <name>assertBeanEquals</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>bean</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>parsed</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_readWrite_double_NaN</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>FlexiBean</name>
                            </type>
                            <name>bean</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>FlexiBean</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>bean</name>.
                                    <name>set</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"data"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Double</name>.
                                                <name>NaN</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>json</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                            <name>jsonWriter</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>write</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>bean</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>json</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            "{\"@bean\":\"org.joda.beans.impl.flexi.FlexiBean\",\"data\":{\"@type\":\"Double\",\"value\":\"NaN\"}}"
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Bean</name>
                            </type>
                            <name>parsed</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                            <name>jsonReader</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>read</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>json</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>BeanAssert</name>.
                                    <name>assertBeanEquals</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>bean</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>parsed</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_readWrite_double_NaN_asNull</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>PrimitiveBean</name>
                            </type>
                            <name>bean</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>PrimitiveBean</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>bean</name>.
                                    <name>setValueDouble</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>Double</name>.
                                                <name>NaN</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>json</name> =
                            <init>
                                <expr>"{\"@bean\":\"org.joda.beans.gen.PrimitiveBean\",\"valueDouble\":null}"</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Bean</name>
                            </type>
                            <name>parsed</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                            <name>jsonReader</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>read</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>json</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>BeanAssert</name>.
                                    <name>assertBeanEquals</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>bean</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>parsed</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_readWrite_double_Infinity</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>FlexiBean</name>
                            </type>
                            <name>bean</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>FlexiBean</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>bean</name>.
                                    <name>set</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"data"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Double</name>.
                                                <name>POSITIVE_INFINITY</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>json</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                            <name>jsonWriter</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>write</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>bean</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>json</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            "{\"@bean\":\"org.joda.beans.impl.flexi.FlexiBean\",\"data\":{\"@type\":\"Double\",\"value\":\"Infinity\"}}"
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Bean</name>
                            </type>
                            <name>parsed</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                            <name>jsonReader</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>read</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>json</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>BeanAssert</name>.
                                    <name>assertBeanEquals</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>bean</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>parsed</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="line">//-----------------------------------------------------------------------</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_read_nonStandard_JodaConvertWrapper_expanded</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>json</name> =
                            <init>
                                <expr>
                                    "{\"@bean\":\"org.joda.beans.gen.JodaConvertWrapper\",\"bean\":{\"base\":\"Hello\",\"extra\":9},\"description\":\"Weird\"}"
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Bean</name>
                            </type>
                            <name>parsed</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                            <name>jsonReader</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>read</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>json</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>JodaConvertWrapper</name>
                            </type>
                            <name>wrapper</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>JodaConvertWrapper</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>JodaConvertBean</name>
                            </type>
                            <name>bean</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>JodaConvertBean</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"Hello:9"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>wrapper</name>.
                                    <name>setBean</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>bean</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>wrapper</name>.
                                    <name>setDescription</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Weird"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>BeanAssert</name>.
                                    <name>assertBeanEquals</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>wrapper</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>parsed</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_read_nonStandard_JodaConvertBean_flattened</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>json</name> =
                            <init>
                                <expr>"{\"@type\":\"org.joda.beans.gen.JodaConvertBean\",\"value\":\"Hello:9\"}"</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Bean</name>
                            </type>
                            <name>parsed</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                            <name>jsonReader</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>read</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>json</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>JodaConvertBean</name>
                            </type>
                            <name>bean</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>JodaConvertBean</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"Hello:9"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>BeanAssert</name>.
                                    <name>assertBeanEquals</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>bean</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>parsed</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="line">//-----------------------------------------------------------------------</comment>
            <function>
                <type>
                    <annotation>@
                        <name>Test</name>
                        <argument_list>(expectedExceptions = IllegalArgumentException.class)</argument_list>
                    </annotation>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_read_noTypeAttributeAtRoot</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                    <name>jsonReader</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>read</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"{}"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_read_noTypeAttributeAtRootButTypeSpecified</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>FlexiBean</name>
                            </type>
                            <name>parsed</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                            <name>jsonReader</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>read</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"{}"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>FlexiBean</name>.
                                                        <name>
                                                            <name/>
                                                        </name>
                                                    </name>
                                                    class
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>BeanAssert</name>.
                                    <name>assertBeanEquals</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>new
                                            <call>
                                                <name>FlexiBean</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>parsed</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Test</name>
                        <argument_list>(expectedExceptions = IllegalArgumentException.class)</argument_list>
                    </annotation>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_read_rootTypeAttributeNotBean</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                    <name>jsonReader</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>read</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"{\"@bean\":\"java.lang.Integer\"}"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Bean</name>.
                                                <name>
                                                    <name/>
                                                </name>
                                            </name>
                                            class
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Test</name>
                        <argument_list>(expectedExceptions = IllegalArgumentException.class)</argument_list>
                    </annotation>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_read_rootTypeInvalid</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                    <name>jsonReader</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>read</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"{\"@bean\":\"org.joda.beans.impl.flexi.FlexiBean\"}"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>SimplePerson</name>.
                                                <name>
                                                    <name/>
                                                </name>
                                            </name>
                                            class
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Test</name>
                        <argument_list>(expectedExceptions = IllegalArgumentException.class)</argument_list>
                    </annotation>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_read_rootTypeArgumentInvalid</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                    <name>jsonReader</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>read</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"{}"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Integer</name>.
                                                <name>
                                                    <name/>
                                                </name>
                                            </name>
                                            class
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Test</name>
                        <argument_list>(expectedExceptions = IllegalArgumentException.class)</argument_list>
                    </annotation>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_write_nullKeyInMap</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Address</name>
                            </type>
                            <name>address</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>Address</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Person</name>
                            </type>
                            <name>bean</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>Person</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>bean</name>.
                                    <name>getOtherAddressMap</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>put</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>address</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                    <name>jsonWriter</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>write</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>bean</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="line">//-----------------------------------------------------------------------</comment>
            <function>
                <type>
                    <annotation>@
                        <name>DataProvider</name>
                        <argument_list>(name = "badFormat")</argument_list>
                    </annotation>
                    <name>Object</name>
                    <index>[]</index>
                    <index>[]</index>
                </type>
                <name>data_badFormat</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>new
                            <name>
                                <name>Object</name>
                                <index>[]</index>
                                <index>[]</index>
                            </name>
                            <block>{
                                <expr>
                                    <block>{<expr>"{,}"</expr>}
                                    </block>
                                </expr>
                                ,
                                <expr>
                                    <block>{<expr>"{1,2}"</expr>}
                                    </block>
                                </expr>
                                ,
                                <expr>
                                    <block>{<expr>"{\"a\",6}"</expr>}
                                    </block>
                                </expr>
                                ,
                                <expr>
                                    <block>{<expr>"{\"a\":[}}"</expr>}
                                    </block>
                                </expr>
                                ,
                                <expr>
                                    <block>{<expr>"{\"a\":{\"@type\":\"Integer\",\"notvalue\":6}}"</expr>}
                                    </block>
                                </expr>
                                ,
                                <expr>
                                    <block>{<expr>"{\"a\":{\"@type\":\"Integer\",\"value\":[]}}"</expr>}
                                    </block>
                                </expr>
                                ,
                                <expr>
                                    <block>{
                                        <expr>"{\"a\":{\"@type\":\"Integer\",\"value\":" + (((<name>long</name>)
                                            <name><name>Integer</name>.
                                                <name>MAX_VALUE</name>
                                            </name>
                                            ) + 1) + "}}"
                                        </expr>
                                        }
                                    </block>
                                </expr>
                                ,
                                <expr>
                                    <block>{
                                        <expr>"{\"a\":{\"@type\":\"Integer\",\"value\":" + (((<name>long</name>)
                                            <name><name>Integer</name>.
                                                <name>MIN_VALUE</name>
                                            </name>
                                            ) - 1) + "}}"
                                        </expr>
                                        }
                                    </block>
                                </expr>
                                ,
                                <expr>
                                    <block>{
                                        <expr>"{\"a\":{\"@type\":\"Short\",\"value\":" + (((<name>int</name>)
                                            <name><name>Short</name>.
                                                <name>MAX_VALUE</name>
                                            </name>
                                            ) + 1) + "}}"
                                        </expr>
                                        }
                                    </block>
                                </expr>
                                ,
                                <expr>
                                    <block>{
                                        <expr>"{\"a\":{\"@type\":\"Short\",\"value\":" + (((<name>int</name>)
                                            <name><name>Short</name>.
                                                <name>MIN_VALUE</name>
                                            </name>
                                            ) - 1) + "}}"
                                        </expr>
                                        }
                                    </block>
                                </expr>
                                ,
                                <expr>
                                    <block>{<expr>"{\"a\":{\"@type\":\"Byte\",\"value\":128}}"</expr>}
                                    </block>
                                </expr>
                                ,
                                <expr>
                                    <block>{<expr>"{\"a\":{\"@type\":\"Byte\",\"value\":-129}}"</expr>}
                                    </block>
                                </expr>
                                ,
                                <expr>
                                    <block>{<expr>"{\"a\":{\"@meta\":\"List\",\"notvalue\":[]}}"</expr>}
                                    </block>
                                </expr>
                                ,
                                <expr>
                                    <block>{<expr>"{\"a\":{\"@meta\":\"List\",\"value\":{}}}"</expr>}
                                    </block>
                                </expr>
                                ,
                                <expr>
                                    <block>{<expr>"{\"a\":{\"@meta\":\"Map\",\"value\":6}}"</expr>}
                                    </block>
                                </expr>
                                ,
                                }
                            </block>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Test</name>
                        <argument_list>(dataProvider = "badFormat", expectedExceptions =
                            IllegalArgumentException.class)
                        </argument_list>
                    </annotation>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_badFormat</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>text</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                    <name>jsonReader</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>read</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>text</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>FlexiBean</name>.
                                                <name>
                                                    <name/>
                                                </name>
                                            </name>
                                            class
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="line">//-----------------------------------------------------------------------</comment>
            <function>
                <type>
                    <annotation>@
                        <name>Test</name>
                        <argument_list>(expectedExceptions = IllegalArgumentException.class)</argument_list>
                    </annotation>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_writer_nullSettings</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>new
                            <call>
                                <name>JodaBeanJsonWriter</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Test</name>
                        <argument_list>(expectedExceptions = IllegalArgumentException.class)</argument_list>
                    </annotation>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_writer_write1_nullBean</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>new
                            <call>
                                <name>JodaBeanJsonWriter</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>JodaBeanSer</name>.
                                                <name>PRETTY</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            .
                            <call>
                                <name>write</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Test</name>
                        <argument_list>(expectedExceptions = IllegalArgumentException.class)</argument_list>
                    </annotation>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_writer_write2_nullBean</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>new
                            <call>
                                <name>JodaBeanJsonWriter</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>JodaBeanSer</name>.
                                                <name>PRETTY</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            .
                            <call>
                                <name>write</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>new
                                            <call>
                                                <name>StringBuilder</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Test</name>
                        <argument_list>(expectedExceptions = IllegalArgumentException.class)</argument_list>
                    </annotation>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_writer_write2_nullAppendable</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>new
                            <call>
                                <name>JodaBeanJsonWriter</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>JodaBeanSer</name>.
                                                <name>PRETTY</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            .
                            <call>
                                <name>write</name>
                                <argument_list>(
                                    <argument>
                                        <expr>new
                                            <call>
                                                <name>FlexiBean</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="line">//-----------------------------------------------------------------------</comment>
            <function>
                <type>
                    <annotation>@
                        <name>Test</name>
                        <argument_list>(expectedExceptions = IllegalArgumentException.class)</argument_list>
                    </annotation>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_reader_nullSettings</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>new
                            <call>
                                <name>JodaBeanJsonReader</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Test</name>
                        <argument_list>(expectedExceptions = IllegalArgumentException.class)</argument_list>
                    </annotation>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_reader_readReader_null</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>new
                            <call>
                                <name>JodaBeanJsonReader</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>JodaBeanSer</name>.
                                                <name>PRETTY</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            .
                            <call>
                                <name>read</name>
                                <argument_list>(
                                    <argument>
                                        <expr>(<name>Reader</name>)
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Test</name>
                        <argument_list>(expectedExceptions = IllegalArgumentException.class)</argument_list>
                    </annotation>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_reader_readString_null</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>new
                            <call>
                                <name>JodaBeanJsonReader</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>JodaBeanSer</name>.
                                                <name>PRETTY</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            .
                            <call>
                                <name>read</name>
                                <argument_list>(
                                    <argument>
                                        <expr>(<name>String</name>)
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Test</name>
                        <argument_list>(expectedExceptions = IllegalArgumentException.class)</argument_list>
                    </annotation>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_reader_readReaderType_nullReader</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>new
                            <call>
                                <name>JodaBeanJsonReader</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>JodaBeanSer</name>.
                                                <name>PRETTY</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            .
                            <call>
                                <name>read</name>
                                <argument_list>(
                                    <argument>
                                        <expr>(<name>Reader</name>)
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Bean</name>.
                                                <name>
                                                    <name/>
                                                </name>
                                            </name>
                                            class
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Test</name>
                        <argument_list>(expectedExceptions = IllegalArgumentException.class)</argument_list>
                    </annotation>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_reader_readReaderType_nullType</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>new
                            <call>
                                <name>JodaBeanJsonReader</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>JodaBeanSer</name>.
                                                <name>PRETTY</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            .
                            <call>
                                <name>read</name>
                                <argument_list>(
                                    <argument>
                                        <expr>new
                                            <call>
                                                <name>StringReader</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>""</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Test</name>
                        <argument_list>(expectedExceptions = IllegalArgumentException.class)</argument_list>
                    </annotation>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_reader_readStringType_nullString</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>new
                            <call>
                                <name>JodaBeanJsonReader</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>JodaBeanSer</name>.
                                                <name>PRETTY</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            .
                            <call>
                                <name>read</name>
                                <argument_list>(
                                    <argument>
                                        <expr>(<name>String</name>)
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Bean</name>.
                                                <name>
                                                    <name/>
                                                </name>
                                            </name>
                                            class
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Test</name>
                        <argument_list>(expectedExceptions = IllegalArgumentException.class)</argument_list>
                    </annotation>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_reader_readStringType_nullType</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>new
                            <call>
                                <name>JodaBeanJsonReader</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>JodaBeanSer</name>.
                                                <name>PRETTY</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            .
                            <call>
                                <name>read</name>
                                <argument_list>(
                                    <argument>
                                        <expr>""</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            }
        </block>
    </class>
</unit>
