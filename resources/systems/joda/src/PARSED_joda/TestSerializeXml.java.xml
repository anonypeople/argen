<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\joda\src\test\java\org\joda\beans\ser\xml\TestSerializeXml.java">
    <comment type="block">/*
        * Copyright 2001-2014 Stephen Colebourne
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>joda</name>.<name>beans</name>.<name>ser</name>.
            <name>xml</name>
        </name>
        ;
    </package>

    <import>import static
        <name><name>org</name>.<name>testng</name>.<name>Assert</name>.
            <name>assertEquals</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>joda</name>.<name>beans</name>.
            <name>Bean</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>joda</name>.<name>beans</name>.<name>gen</name>.
            <name>Address</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>joda</name>.<name>beans</name>.<name>gen</name>.
            <name>ImmAddress</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>joda</name>.<name>beans</name>.<name>gen</name>.
            <name>ImmEmpty</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>joda</name>.<name>beans</name>.<name>gen</name>.
            <name>ImmOptional</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>joda</name>.<name>beans</name>.<name>gen</name>.
            <name>JodaConvertBean</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>joda</name>.<name>beans</name>.<name>gen</name>.
            <name>JodaConvertWrapper</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>joda</name>.<name>beans</name>.<name>gen</name>.
            <name>Person</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>joda</name>.<name>beans</name>.<name>gen</name>.
            <name>SimpleName</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>joda</name>.<name>beans</name>.<name>gen</name>.
            <name>SimplePerson</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>joda</name>.<name>beans</name>.<name>impl</name>.<name>flexi</name>.
            <name>FlexiBean</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>joda</name>.<name>beans</name>.<name>ser</name>.
            <name>JodaBeanSer</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>joda</name>.<name>beans</name>.<name>ser</name>.
            <name>SerTestHelper</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>joda</name>.<name>beans</name>.<name>test</name>.
            <name>BeanAssert</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>testng</name>.<name>annotations</name>.
            <name>Test</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * Test property roundtrip using XML.
        */
    </comment>
    <class>
        <annotation>@
            <name>Test</name>
        </annotation>
        <specifier>public</specifier>
        class <name>TestSerializeXml</name>
        <block>{

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_writeAddress</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Address</name>
                            </type>
                            <name>address</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>SerTestHelper</name>.
                                            <name>testAddress</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>xml</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>PRETTY</name>.
                                            <name>xmlWriter</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>write</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>address</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// System.out.println(xml);</comment>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Address</name>
                            </type>
                            <name>bean</name> =
                            <init>
                                <expr>(<name>Address</name>)
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>PRETTY</name>.
                                            <name>xmlReader</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>read</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>xml</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// System.out.println(bean);</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>BeanAssert</name>.
                                    <name>assertBeanEquals</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>bean</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>address</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_writeImmAddress</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ImmAddress</name>
                            </type>
                            <name>address</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>SerTestHelper</name>.
                                            <name>testImmAddress</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>xml</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>PRETTY</name>.
                                            <name>xmlWriter</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>write</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>address</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <name>xml</name>
                            =
                            <call>
                                <name><name>xml</name>.
                                    <name>replace</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"185"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"18&lt;!-- comment --&gt;5"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// System.out.println(xml);</comment>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ImmAddress</name>
                            </type>
                            <name>bean</name> =
                            <init>
                                <expr>(<name>ImmAddress</name>)
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>PRETTY</name>.
                                            <name>xmlReader</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>read</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>xml</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// System.out.println(bean);</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>BeanAssert</name>.
                                    <name>assertBeanEquals</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>bean</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>address</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_writeImmOptional</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ImmOptional</name>
                            </type>
                            <name>optional</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>SerTestHelper</name>.
                                            <name>testImmOptional</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>xml</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>PRETTY</name>.
                                            <name>xmlWriter</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>write</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>optional</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// System.out.println(xml);</comment>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ImmOptional</name>
                            </type>
                            <name>bean</name> =
                            <init>
                                <expr>(<name>ImmOptional</name>)
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>PRETTY</name>.
                                            <name>xmlReader</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>read</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>xml</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// System.out.println(bean);</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>BeanAssert</name>.
                                    <name>assertBeanEquals</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>bean</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>optional</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="line">//-----------------------------------------------------------------------</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_readWriteBeanEmptyChild_pretty</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>FlexiBean</name>
                            </type>
                            <name>bean</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>FlexiBean</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>bean</name>.
                                    <name>set</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"element"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"Test"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>bean</name>.
                                    <name>set</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"child"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>ImmEmpty</name>.
                                                    <name>builder</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>build</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>xml</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>PRETTY</name>.
                                            <name>xmlWriter</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>write</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>bean</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>xml</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;bean
                                            type=\"org.joda.beans.impl.flexi.FlexiBean\"&gt;\n &lt;element&gt;Test&lt;/element&gt;\n
                                            &lt;child type=\"org.joda.beans.gen.ImmEmpty\"/&gt;\n&lt;/bean&gt;\n"
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>FlexiBean</name>
                            </type>
                            <name>parsed</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>PRETTY</name>.
                                            <name>xmlReader</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>read</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>xml</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>FlexiBean</name>.
                                                        <name>
                                                            <name/>
                                                        </name>
                                                    </name>
                                                    class
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>BeanAssert</name>.
                                    <name>assertBeanEquals</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>bean</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>parsed</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_readWriteBeanEmptyChild_compact</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>FlexiBean</name>
                            </type>
                            <name>bean</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>FlexiBean</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>bean</name>.
                                    <name>set</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"element"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"Test"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>bean</name>.
                                    <name>set</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"child"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>ImmEmpty</name>.
                                                    <name>builder</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>build</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>xml</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                            <name>xmlWriter</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>write</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>bean</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>xml</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;bean
                                            type=\"org.joda.beans.impl.flexi.FlexiBean\"&gt;&lt;element&gt;Test&lt;/element&gt;&lt;child
                                            type=\"org.joda.beans.gen.ImmEmpty\"/&gt;&lt;/bean&gt;"
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>FlexiBean</name>
                            </type>
                            <name>parsed</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                            <name>xmlReader</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>read</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>xml</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>FlexiBean</name>.
                                                        <name>
                                                            <name/>
                                                        </name>
                                                    </name>
                                                    class
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>BeanAssert</name>.
                                    <name>assertBeanEquals</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>bean</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>parsed</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_readWriteJodaConvertWrapper</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>JodaConvertWrapper</name>
                            </type>
                            <name>wrapper</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>JodaConvertWrapper</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>JodaConvertBean</name>
                            </type>
                            <name>bean</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>JodaConvertBean</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"Hello:9"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>wrapper</name>.
                                    <name>setBean</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>bean</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>wrapper</name>.
                                    <name>setDescription</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Weird"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>xml</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                            <name>xmlWriter</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>write</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>wrapper</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>xml</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;bean
                                            type=\"org.joda.beans.gen.JodaConvertWrapper\"&gt;&lt;bean&gt;Hello:9&lt;/bean&gt;&lt;description&gt;Weird&lt;/description&gt;&lt;/bean&gt;"
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Bean</name>
                            </type>
                            <name>parsed</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                            <name>xmlReader</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>read</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>xml</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>BeanAssert</name>.
                                    <name>assertBeanEquals</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>wrapper</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>parsed</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_readWriteJodaConvertBean</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>JodaConvertBean</name>
                            </type>
                            <name>bean</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>JodaConvertBean</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"Hello:9"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>xml</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                            <name>xmlWriter</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>write</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>bean</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>assertEquals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>xml</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;bean
                                            type=\"org.joda.beans.gen.JodaConvertBean\"&gt;&lt;base&gt;Hello&lt;/base&gt;&lt;extra&gt;9&lt;/extra&gt;&lt;/bean&gt;"
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Bean</name>
                            </type>
                            <name>parsed</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                            <name>xmlReader</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>read</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>xml</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>BeanAssert</name>.
                                    <name>assertBeanEquals</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>bean</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>parsed</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="line">//-----------------------------------------------------------------------</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_read_nonStandard_JodaConvertWrapper_expanded</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>xml</name> =
                            <init>
                                <expr>"&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;bean
                                    type=\"org.joda.beans.gen.JodaConvertWrapper\"&gt;&lt;bean&gt;&lt;base&gt;Hello&lt;/base&gt;&lt;extra&gt;9&lt;/extra&gt;&lt;/bean&gt;&lt;description&gt;Weird&lt;/description&gt;&lt;/bean&gt;"
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Bean</name>
                            </type>
                            <name>parsed</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                            <name>xmlReader</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>read</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>xml</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>JodaConvertWrapper</name>
                            </type>
                            <name>wrapper</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>JodaConvertWrapper</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>JodaConvertBean</name>
                            </type>
                            <name>bean</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>JodaConvertBean</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"Hello:9"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>wrapper</name>.
                                    <name>setBean</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>bean</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>wrapper</name>.
                                    <name>setDescription</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Weird"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>BeanAssert</name>.
                                    <name>assertBeanEquals</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>wrapper</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>parsed</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_read_nonStandard_JodaConvertBean_flattened</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>xml</name> =
                            <init>
                                <expr>"&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;bean
                                    type=\"org.joda.beans.gen.JodaConvertBean\"&gt;Hello:9&lt;/bean&gt;"
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Bean</name>
                            </type>
                            <name>parsed</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                            <name>xmlReader</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>read</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>xml</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>JodaConvertBean</name>
                            </type>
                            <name>bean</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>JodaConvertBean</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"Hello:9"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>BeanAssert</name>.
                                    <name>assertBeanEquals</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>bean</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>parsed</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_read_nonStandard_withCommentBeanRoot</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>xml</name> =
                            <init>
                                <expr>"&lt;bean&gt;&lt;!-- comment --&gt;&lt;element&gt;Test&lt;/element&gt;&lt;/bean&gt;"</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>FlexiBean</name>
                            </type>
                            <name>parsed</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                            <name>xmlReader</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>read</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>xml</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>FlexiBean</name>.
                                                        <name>
                                                            <name/>
                                                        </name>
                                                    </name>
                                                    class
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>FlexiBean</name>
                            </type>
                            <name>bean</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>FlexiBean</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>bean</name>.
                                    <name>set</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"element"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"Test"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>BeanAssert</name>.
                                    <name>assertBeanEquals</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>bean</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>parsed</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_read_nonStandard_withCommentInProperty</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>xml</name> =
                            <init>
                                <expr>"&lt;bean&gt;&lt;element&gt;&lt;!-- comment --&gt;Test&lt;/element&gt;&lt;/bean&gt;"</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>FlexiBean</name>
                            </type>
                            <name>parsed</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                            <name>xmlReader</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>read</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>xml</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>FlexiBean</name>.
                                                        <name>
                                                            <name/>
                                                        </name>
                                                    </name>
                                                    class
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>FlexiBean</name>
                            </type>
                            <name>bean</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>FlexiBean</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>bean</name>.
                                    <name>set</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"element"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"Test"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>BeanAssert</name>.
                                    <name>assertBeanEquals</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>bean</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>parsed</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="line">//-----------------------------------------------------------------------</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_read_aliased</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>xml</name> =
                            <init>
                                <expr>"&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;bean
                                    type=\"org.joda.beans.gen.SimpleName\"&gt;" +
                                    "&lt;firstName&gt;A&lt;/firstName&gt;&lt;givenName&gt;B&lt;/givenName&gt;&lt;/bean&gt;"
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Bean</name>
                            </type>
                            <name>parsed</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                            <name>xmlReader</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>read</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>xml</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>SimpleName</name>
                            </type>
                            <name>bean</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>SimpleName</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>bean</name>.
                                    <name>setForename</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"A"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>bean</name>.
                                    <name>setSurname</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"B"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>BeanAssert</name>.
                                    <name>assertBeanEquals</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>bean</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>parsed</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="line">//-----------------------------------------------------------------------</comment>
            <function>
                <type>
                    <annotation>@
                        <name>Test</name>
                        <argument_list>(expectedExceptions = IllegalArgumentException.class)</argument_list>
                    </annotation>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_read_noBeanElementAtRoot</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                    <name>xmlReader</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>read</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"&lt;foo&gt;&lt;/foo&gt;"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Bean</name>.
                                                <name>
                                                    <name/>
                                                </name>
                                            </name>
                                            class
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Test</name>
                        <argument_list>(expectedExceptions = IllegalArgumentException.class)</argument_list>
                    </annotation>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_read_noTypeAttributeAtRoot</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                    <name>xmlReader</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>read</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"&lt;bean&gt;&lt;/bean&gt;"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Bean</name>.
                                                <name>
                                                    <name/>
                                                </name>
                                            </name>
                                            class
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_read_noTypeAttributeAtRootButTypeSpecified</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>FlexiBean</name>
                            </type>
                            <name>parsed</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                            <name>xmlReader</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>read</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"&lt;bean&gt;&lt;/bean&gt;"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>FlexiBean</name>.
                                                        <name>
                                                            <name/>
                                                        </name>
                                                    </name>
                                                    class
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>BeanAssert</name>.
                                    <name>assertBeanEquals</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>new
                                            <call>
                                                <name>FlexiBean</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>parsed</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Test</name>
                        <argument_list>(expectedExceptions = IllegalArgumentException.class)</argument_list>
                    </annotation>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_read_rootTypeAttributeNotBean</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                    <name>xmlReader</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>read</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"&lt;bean type=\"java.lang.Integer\"&gt;&lt;/bean&gt;"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Bean</name>.
                                                <name>
                                                    <name/>
                                                </name>
                                            </name>
                                            class
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Test</name>
                        <argument_list>(expectedExceptions = IllegalArgumentException.class)</argument_list>
                    </annotation>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_read_rootTypeInvalid</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                    <name>xmlReader</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>read</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"&lt;bean type=\"org.joda.beans.impl.flexi.FlexiBean\"&gt;&lt;/bean&gt;"
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>SimplePerson</name>.
                                                <name>
                                                    <name/>
                                                </name>
                                            </name>
                                            class
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Test</name>
                        <argument_list>(expectedExceptions = IllegalArgumentException.class)</argument_list>
                    </annotation>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_read_rootTypeArgumentInvalid</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                    <name>xmlReader</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>read</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"&lt;bean&gt;&lt;/bean&gt;"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Integer</name>.
                                                <name>
                                                    <name/>
                                                </name>
                                            </name>
                                            class
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <annotation>@
                        <name>Test</name>
                        <argument_list>(expectedExceptions = IllegalArgumentException.class)</argument_list>
                    </annotation>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>test_write_nullKeyInMap</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Address</name>
                            </type>
                            <name>address</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>Address</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Person</name>
                            </type>
                            <name>bean</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>Person</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>bean</name>.
                                    <name>getOtherAddressMap</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>put</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>address</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>JodaBeanSer</name>.<name>COMPACT</name>.
                                    <name>xmlWriter</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>write</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>bean</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            }
        </block>
    </class>
</unit>
