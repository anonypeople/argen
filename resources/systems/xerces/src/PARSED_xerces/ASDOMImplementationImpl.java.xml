<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\dom\ASDOMImplementationImpl.java">
    <comment type="block">/*
        * Copyright 1999-2002,2004 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.
            <name>dom</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>DOMException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>DOMImplementation</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>dom3</name>.<name>as</name>.
            <name>DOMImplementationAS</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>dom3</name>.<name>as</name>.
            <name>ASModel</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>dom3</name>.<name>as</name>.
            <name>DOMASBuilder</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>dom3</name>.<name>as</name>.
            <name>DOMASWriter</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>parsers</name>.
            <name>DOMASBuilderImpl</name>
        </name>
        ;
    </import>


    <comment type="javadoc">/**
        * The DOMImplementation class is description of a particular
        * implementation of the Document Object Model. As such its data is
        * static, shared by all instances of this implementation.
        * &lt;P&gt;
        * The DOM API requires that it be a real object rather than static
        * methods. However, there's nothing that says it can't be a singleton,
        * so that's how I've implemented it.
        * &lt;P&gt;
        * This particular class, along with DocumentImpl, supports the DOM
        * Core, DOM Level 2 optional mofules, and Abstract Schemas (Experimental).
        * @deprecated
        * @version $Id: ASDOMImplementationImpl.java,v 1.6 2004/02/24 23:23:17 mrglavas Exp $
        * @since PR-DOM-Level-1-19980818.
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>ASDOMImplementationImpl</name>
        <super>
            <extends>extends
                <name>DOMImplementationImpl</name>
            </extends>
            <implements>implements
                <name>DOMImplementationAS</name>
            </implements>
        </super>
        <block>{


            <comment type="line">// static</comment>

            <comment type="javadoc">/** Dom implementation singleton. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <name>ASDOMImplementationImpl</name>
                    </type>
                    <name>singleton</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>ASDOMImplementationImpl</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>


            <comment type="line">//</comment>
            <comment type="line">// Public methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/** NON-DOM: Obtain and return the single shared object */</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>DOMImplementation</name>
                </type>
                <name>getDOMImplementation</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>singleton</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">//</comment>
            <comment type="line">// DOM L3 Abstract Schemas:</comment>
            <comment type="line">// REVISIT: implement hasFeature()</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * DOM Level 3 WD - Experimental.
                * Creates an ASModel.
                * @param isNamespaceAware Allow creation of &lt;code&gt;ASModel&lt;/code&gt; with
                * this attribute set to a specific value.
                * @return A &lt;code&gt;null&lt;/code&gt; return indicates failure.what is a
                * failure? Could be a system error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>ASModel</name>
                </type>
                <name>createAS</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>isNamespaceAware</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>ASModelImpl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>isNamespaceAware</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * DOM Level 3 WD - Experimental.
                * Creates an &lt;code&gt;DOMASBuilder&lt;/code&gt;.Do we need the method since we
                * already have &lt;code&gt;DOMImplementationLS.createDOMParser&lt;/code&gt;?
                * @return DOMASBuilder
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>DOMASBuilder</name>
                </type>
                <name>createDOMASBuilder</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>DOMASBuilderImpl</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * DOM Level 3 WD - Experimental.
                * Creates an &lt;code&gt;DOMASWriter&lt;/code&gt;.
                * @return a DOMASWriter
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>DOMASWriter</name>
                </type>
                <name>createDOMASWriter</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>msg</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>DOMMessageFormatter</name>.
                                            <name>formatMessage</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>DOM_DOMAIN</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"NOT_SUPPORTED_ERR"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <throw>throw
                        <expr>new
                            <call>
                                <name>DOMException</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>DOMException</name>.
                                                <name>NOT_SUPPORTED_ERR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>msg</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>


            }
        </block>
    </class>
    <comment type="line">// class DOMImplementationImpl</comment>
</unit>
