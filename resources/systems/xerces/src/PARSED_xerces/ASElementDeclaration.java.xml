<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\dom3\as\ASElementDeclaration.java">
    <comment type="block">/*
        * Copyright (c) 2001 World Wide Web Consortium,
        * (Massachusetts Institute of Technology, Institut National de
        * Recherche en Informatique et en Automatique, Keio University). All
        * Rights Reserved. This program is distributed under the W3C's Software
        * Intellectual Property License. This program is distributed in the
        * hope that it will be useful, but WITHOUT ANY WARRANTY; without even
        * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
        * PURPOSE.
        * See W3C License http://www.w3.org/Consortium/Legal/ for more details.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>dom3</name>.
            <name>as</name>
        </name>
        ;
    </package>

    <comment type="javadoc">/**
        * @deprecated
        * The element name along with the content specification in the context of an
        * &lt;code&gt;ASObject&lt;/code&gt;.
        * &lt;p&gt;See also the &lt;a href='http://www.w3.org/TR/2001/WD-DOM-Level-3-ASLS-20011025'&gt;Document Object
        Model (DOM) Level 3 Abstract Schemas and Load
        and Save Specification&lt;/a&gt;.
        */
    </comment>
    <class type="interface">
        <specifier>public</specifier>
        interface <name>ASElementDeclaration</name>
        <super>
            <extends>extends
                <name>ASObject</name>
            </extends>
        </super>
        <block>{
            <comment type="line">// CONTENT_MODEL_TYPES</comment>
            <comment type="javadoc">/**
                * Represents an EMPTY content type for an Element declaration.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>EMPTY_CONTENTTYPE</name>         =
                    <init>
                        <expr>1</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * Represents an ANY content type for an Element declaration.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>ANY_CONTENTTYPE</name>           =
                    <init>
                        <expr>2</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * Represents a MIXED content type for an Element declaration. Note that
                * &lt;code&gt;isPCDataOnly&lt;/code&gt; would also need to checked, in addition to
                * this, if an element's content model was simply text, as an example.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>MIXED_CONTENTTYPE</name>         =
                    <init>
                        <expr>3</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * Represents an ELEMENTS only content type for an Element declaration.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>ELEMENTS_CONTENTTYPE</name>      =
                    <init>
                        <expr>4</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * A boolean defining whether the element order and number of the child
                * elements for mixed content type has to be respected or not. For
                * example XML Schema defined mixed content types the order is important
                * and needs to be respected whether for DTD based AS the order and
                * number of child elements are not important.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>getStrictMixedContent</name>
                <parameter_list>()</parameter_list>;
            </function_decl>
            <comment type="javadoc">/**
                * A boolean defining whether the element order and number of the child
                * elements for mixed content type has to be respected or not. For
                * example XML Schema defined mixed content types the order is important
                * and needs to be respected whether for DTD based AS the order and
                * number of child elements are not important.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setStrictMixedContent</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>strictMixedContent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Datatype of the element.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>ASDataType</name>
                </type>
                <name>getElementType</name>
                <parameter_list>()</parameter_list>;
            </function_decl>
            <comment type="javadoc">/**
                * Datatype of the element.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setElementType</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ASDataType</name>
                            </type>
                            <name>elementType</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Boolean defining whether the element type contains child elements and
                * PCDATA or PCDATA only for mixed element types. &lt;code&gt;true&lt;/code&gt; if
                * the element is of type PCDATA only. Relevant only for mixed content
                * type elements.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>getIsPCDataOnly</name>
                <parameter_list>()</parameter_list>;
            </function_decl>
            <comment type="javadoc">/**
                * Boolean defining whether the element type contains child elements and
                * PCDATA or PCDATA only for mixed element types. &lt;code&gt;true&lt;/code&gt; if
                * the element is of type PCDATA only. Relevant only for mixed content
                * type elements.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setIsPCDataOnly</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>isPCDataOnly</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * The content type of the element. One of &lt;code&gt;EMPTY_CONTENTTYPE&lt;/code&gt;,
                * &lt;code&gt;ANY_CONTENTTYPE&lt;/code&gt;, &lt;code&gt;MIXED_CONTENTTYPE&lt;/code&gt;,
                * &lt;code&gt;ELEMENTS_CONTENTTYPE&lt;/code&gt;.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>short</name>
                </type>
                <name>getContentType</name>
                <parameter_list>()</parameter_list>;
            </function_decl>
            <comment type="javadoc">/**
                * The content type of the element. One of &lt;code&gt;EMPTY_CONTENTTYPE&lt;/code&gt;,
                * &lt;code&gt;ANY_CONTENTTYPE&lt;/code&gt;, &lt;code&gt;MIXED_CONTENTTYPE&lt;/code&gt;,
                * &lt;code&gt;ELEMENTS_CONTENTTYPE&lt;/code&gt;.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setContentType</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>contentType</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * the URI reference representing the system identifier for the notation
                * declaration, if present, &lt;code&gt;null&lt;/code&gt; otherwise.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getSystemId</name>
                <parameter_list>()</parameter_list>;
            </function_decl>
            <comment type="javadoc">/**
                * the URI reference representing the system identifier for the notation
                * declaration, if present, &lt;code&gt;null&lt;/code&gt; otherwise.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSystemId</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>systemId</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * The content model of element.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>ASContentModel</name>
                </type>
                <name>getAsCM</name>
                <parameter_list>()</parameter_list>;
            </function_decl>
            <comment type="javadoc">/**
                * The content model of element.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setAsCM</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ASContentModel</name>
                            </type>
                            <name>asCM</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * The&lt;code&gt;ASNamedObjectMap&lt;/code&gt; containing
                * &lt;code&gt;ASAttributeDeclarations&lt;/code&gt; for all the attributes that can
                * appear on this type of element.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>ASNamedObjectMap</name>
                </type>
                <name>getASAttributeDecls</name>
                <parameter_list>()</parameter_list>;
            </function_decl>
            <comment type="javadoc">/**
                * The&lt;code&gt;ASNamedObjectMap&lt;/code&gt; containing
                * &lt;code&gt;ASAttributeDeclarations&lt;/code&gt; for all the attributes that can
                * appear on this type of element.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setASAttributeDecls</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ASNamedObjectMap</name>
                            </type>
                            <name>ASAttributeDecls</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Adds an &lt;code&gt;ASAttributeDeclaration&lt;/code&gt; for the element being
                * declared.
                * @param attributeDecl The new attribute to add. If the attribute
                * declaration already exists for the element, the call does not have
                * any effect.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>addASAttributeDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ASAttributeDeclaration</name>
                            </type>
                            <name>attributeDecl</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Removes an &lt;code&gt;ASAttributeDeclaration&lt;/code&gt; from the element being
                * declared.
                * @param attributeDecl The attribute declaraition to be removed. If the
                * attribute declaration does not exist for the element, the call does
                * not have any effect.
                * @return &lt;code&gt;null&lt;/code&gt; if the attribute does not exist. Otherwise
                * returns the attribute being removed.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>ASAttributeDeclaration</name>
                </type>
                <name>removeASAttributeDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ASAttributeDeclaration</name>
                            </type>
                            <name>attributeDecl</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            }
        </block>
    </class>
</unit>
