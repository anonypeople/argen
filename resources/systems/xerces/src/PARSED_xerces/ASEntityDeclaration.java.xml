<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\dom3\as\ASEntityDeclaration.java">
    <comment type="block">/*
        * Copyright (c) 2001 World Wide Web Consortium,
        * (Massachusetts Institute of Technology, Institut National de
        * Recherche en Informatique et en Automatique, Keio University). All
        * Rights Reserved. This program is distributed under the W3C's Software
        * Intellectual Property License. This program is distributed in the
        * hope that it will be useful, but WITHOUT ANY WARRANTY; without even
        * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
        * PURPOSE.
        * See W3C License http://www.w3.org/Consortium/Legal/ for more details.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>dom3</name>.
            <name>as</name>
        </name>
        ;
    </package>

    <comment type="javadoc">/**
        * @deprecated
        * Models a general entity declaration in an abstract schema. The abstract
        * schema does not handle any parameter entity. It is assumed that the
        * parameter entities are expanded by the implementation as the abstract
        * schema is built.
        * &lt;p&gt;See also the &lt;a href='http://www.w3.org/TR/2001/WD-DOM-Level-3-ASLS-20011025'&gt;Document Object
        Model (DOM) Level 3 Abstract Schemas and Load
        and Save Specification&lt;/a&gt;.
        */
    </comment>
    <class type="interface">
        <specifier>public</specifier>
        interface <name>ASEntityDeclaration</name>
        <super>
            <extends>extends
                <name>ASObject</name>
            </extends>
        </super>
        <block>{
            <comment type="line">// EntityType</comment>
            <comment type="javadoc">/**
                * constant defining an internal entity.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>INTERNAL_ENTITY</name>           =
                    <init>
                        <expr>1</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * constant defining an external entity.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>EXTERNAL_ENTITY</name>           =
                    <init>
                        <expr>2</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * The type of the entity as defined above.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>short</name>
                </type>
                <name>getEntityType</name>
                <parameter_list>()</parameter_list>;
            </function_decl>
            <comment type="javadoc">/**
                * The type of the entity as defined above.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setEntityType</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>entityType</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * The replacement text for the internal entity. The entity references
                * within the replacement text are kept intact. For an entity of type
                * &lt;code&gt;EXTERNAL_ENTITY&lt;/code&gt;, this is &lt;code&gt;null&lt;/code&gt;.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getEntityValue</name>
                <parameter_list>()</parameter_list>;
            </function_decl>
            <comment type="javadoc">/**
                * The replacement text for the internal entity. The entity references
                * within the replacement text are kept intact. For an entity of type
                * &lt;code&gt;EXTERNAL_ENTITY&lt;/code&gt;, this is &lt;code&gt;null&lt;/code&gt;.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setEntityValue</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>entityValue</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * the URI reference representing the system identifier for the notation
                * declaration, if present, &lt;code&gt;null&lt;/code&gt; otherwise.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getSystemId</name>
                <parameter_list>()</parameter_list>;
            </function_decl>
            <comment type="javadoc">/**
                * the URI reference representing the system identifier for the notation
                * declaration, if present, &lt;code&gt;null&lt;/code&gt; otherwise.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSystemId</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>systemId</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * The string representing the public identifier for this notation
                * declaration, if present; &lt;code&gt;null&lt;/code&gt; otherwise.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getPublicId</name>
                <parameter_list>()</parameter_list>;
            </function_decl>
            <comment type="javadoc">/**
                * The string representing the public identifier for this notation
                * declaration, if present; &lt;code&gt;null&lt;/code&gt; otherwise.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setPublicId</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>publicId</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            }
        </block>
    </class>
</unit>
