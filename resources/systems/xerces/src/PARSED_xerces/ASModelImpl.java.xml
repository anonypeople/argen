<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\dom\ASModelImpl.java">
    <comment type="block">/*
        * Copyright 2001, 2002,2004 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.
            <name>dom</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Vector</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>DOMException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>dom3</name>.
            <name>as</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xs</name>.
            <name>SchemaGrammar</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * To begin with, an abstract schema is a generic structure that could
        * contain both internal and external subsets. An &lt;code&gt;ASModel&lt;/code&gt; is an
        * abstract object that could map to a DTD , an XML Schema , a database
        * schema, etc. An &lt;code&gt;ASModel&lt;/code&gt; could represent either an internal
        * or an external subset; hence an abstract schema could be composed of an
        * &lt;code&gt;ASModel&lt;/code&gt; representing the internal subset and an
        * &lt;code&gt;ASModel&lt;/code&gt; representing the external subset. Note that the
        * &lt;code&gt;ASModel&lt;/code&gt; representing the external subset could consult the
        * &lt;code&gt;ASModel&lt;/code&gt; representing the internal subset. Furthermore, the
        * &lt;code&gt;ASModel&lt;/code&gt; representing the internal subset could be set to
        * null by the &lt;code&gt;setInternalAS&lt;/code&gt; method as a mechanism for
        * "removal". In addition, only one &lt;code&gt;ASModel&lt;/code&gt; representing the
        * external subset can be specified as "active" and it is possible that none
        * are "active". Finally, the &lt;code&gt;ASModel&lt;/code&gt; contains the factory
        * methods needed to create a various types of ASObjects like
        * &lt;code&gt;ASElementDeclaration&lt;/code&gt;, &lt;code&gt;ASAttributeDeclaration&lt;/code&gt;,
        * etc.
        * &lt;p&gt;See also the &lt;a href='http://www.w3.org/TR/2001/WD-DOM-Level-3-ASLS-20011025'&gt;
        * Document Object Model (DOM) Level 3 Abstract Schemas and Load and Save Specification&lt;/a&gt;.
        * @deprecated
        * @author Pavani Mukthipudi
        * @author Neil Graham
        * @version $Id: ASModelImpl.java,v 1.6 2004/02/24 23:23:18 mrglavas Exp $
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>ASModelImpl</name>
        <super>
            <implements>implements
                <name>ASModel</name>
            </implements>
        </super>
        <block>{

            <comment type="line">//</comment>
            <comment type="line">// Data</comment>
            <comment type="line">//</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <name>boolean</name>
                    </type>
                    <name>fNamespaceAware</name> =
                    <init>
                        <expr>true</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// conceptually, an ASModel may contain grammar information and/or</comment>
            <comment type="line">// other ASModels. These two fields divide that function.</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>Vector</name>
                    </type>
                    <name>fASModels</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>SchemaGrammar</name>
                    </type>
                    <name>fGrammar</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">//</comment>
            <comment type="line">// Constructors</comment>
            <comment type="line">//</comment>

            <constructor>
                <specifier>public</specifier>
                <name>ASModelImpl</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fASModels</name>
                            = new
                            <call>
                                <name>Vector</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <constructor>
                <specifier>public</specifier>
                <name>ASModelImpl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>isNamespaceAware</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fASModels</name>
                            = new
                            <call>
                                <name>Vector</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fNamespaceAware</name>
                            =
                            <name>isNamespaceAware</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="line">//</comment>
            <comment type="line">// ASObject methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * A code representing the underlying object as defined above.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>short</name>
                </type>
                <name>getAsNodeType</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>msg</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>DOMMessageFormatter</name>.
                                            <name>formatMessage</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>DOM_DOMAIN</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"NOT_SUPPORTED_ERR"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <throw>throw
                        <expr>new
                            <call>
                                <name>DOMException</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>DOMException</name>.
                                                <name>NOT_SUPPORTED_ERR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>msg</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * The &lt;code&gt;ASModel&lt;/code&gt; object associated with this
                * &lt;code&gt;ASObject&lt;/code&gt;. For a node of type &lt;code&gt;AS_MODEL&lt;/code&gt;, this
                * is &lt;code&gt;null&lt;/code&gt;.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>ASModel</name>
                </type>
                <name>getOwnerASModel</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>msg</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>DOMMessageFormatter</name>.
                                            <name>formatMessage</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>DOM_DOMAIN</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"NOT_SUPPORTED_ERR"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <throw>throw
                        <expr>new
                            <call>
                                <name>DOMException</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>DOMException</name>.
                                                <name>NOT_SUPPORTED_ERR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>msg</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * The &lt;code&gt;ASModel&lt;/code&gt; object associated with this
                * &lt;code&gt;ASObject&lt;/code&gt;. For a node of type &lt;code&gt;AS_MODEL&lt;/code&gt;, this
                * is &lt;code&gt;null&lt;/code&gt;.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setOwnerASModel</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ASModel</name>
                            </type>
                            <name>ownerASModel</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>msg</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>DOMMessageFormatter</name>.
                                            <name>formatMessage</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>DOM_DOMAIN</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"NOT_SUPPORTED_ERR"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <throw>throw
                        <expr>new
                            <call>
                                <name>DOMException</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>DOMException</name>.
                                                <name>NOT_SUPPORTED_ERR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>msg</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * The &lt;code&gt;name&lt;/code&gt; of this &lt;code&gt;ASObject&lt;/code&gt; depending on the
                * &lt;code&gt;ASObject&lt;/code&gt; type.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getNodeName</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>msg</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>DOMMessageFormatter</name>.
                                            <name>formatMessage</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>DOM_DOMAIN</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"NOT_SUPPORTED_ERR"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <throw>throw
                        <expr>new
                            <call>
                                <name>DOMException</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>DOMException</name>.
                                                <name>NOT_SUPPORTED_ERR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>msg</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * The &lt;code&gt;name&lt;/code&gt; of this &lt;code&gt;ASObject&lt;/code&gt; depending on the
                * &lt;code&gt;ASObject&lt;/code&gt; type.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setNodeName</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>nodeName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>msg</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>DOMMessageFormatter</name>.
                                            <name>formatMessage</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>DOM_DOMAIN</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"NOT_SUPPORTED_ERR"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <throw>throw
                        <expr>new
                            <call>
                                <name>DOMException</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>DOMException</name>.
                                                <name>NOT_SUPPORTED_ERR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>msg</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * The namespace prefix of this node, or &lt;code&gt;null&lt;/code&gt; if it is
                * unspecified.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getPrefix</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>msg</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>DOMMessageFormatter</name>.
                                            <name>formatMessage</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>DOM_DOMAIN</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"NOT_SUPPORTED_ERR"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <throw>throw
                        <expr>new
                            <call>
                                <name>DOMException</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>DOMException</name>.
                                                <name>NOT_SUPPORTED_ERR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>msg</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * The namespace prefix of this node, or &lt;code&gt;null&lt;/code&gt; if it is
                * unspecified.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setPrefix</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>prefix</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>msg</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>DOMMessageFormatter</name>.
                                            <name>formatMessage</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>DOM_DOMAIN</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"NOT_SUPPORTED_ERR"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <throw>throw
                        <expr>new
                            <call>
                                <name>DOMException</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>DOMException</name>.
                                                <name>NOT_SUPPORTED_ERR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>msg</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the local part of the qualified name of this
                * &lt;code&gt;ASObject&lt;/code&gt;.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getLocalName</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>msg</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>DOMMessageFormatter</name>.
                                            <name>formatMessage</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>DOM_DOMAIN</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"NOT_SUPPORTED_ERR"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <throw>throw
                        <expr>new
                            <call>
                                <name>DOMException</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>DOMException</name>.
                                                <name>NOT_SUPPORTED_ERR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>msg</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the local part of the qualified name of this
                * &lt;code&gt;ASObject&lt;/code&gt;.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setLocalName</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>localName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>msg</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>DOMMessageFormatter</name>.
                                            <name>formatMessage</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>DOM_DOMAIN</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"NOT_SUPPORTED_ERR"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <throw>throw
                        <expr>new
                            <call>
                                <name>DOMException</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>DOMException</name>.
                                                <name>NOT_SUPPORTED_ERR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>msg</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * The namespace URI of this node, or &lt;code&gt;null&lt;/code&gt; if it is
                * unspecified. defines how a namespace URI is attached to schema
                * components.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getNamespaceURI</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>msg</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>DOMMessageFormatter</name>.
                                            <name>formatMessage</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>DOM_DOMAIN</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"NOT_SUPPORTED_ERR"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <throw>throw
                        <expr>new
                            <call>
                                <name>DOMException</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>DOMException</name>.
                                                <name>NOT_SUPPORTED_ERR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>msg</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * The namespace URI of this node, or &lt;code&gt;null&lt;/code&gt; if it is
                * unspecified. defines how a namespace URI is attached to schema
                * components.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setNamespaceURI</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>namespaceURI</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>msg</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>DOMMessageFormatter</name>.
                                            <name>formatMessage</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>DOM_DOMAIN</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"NOT_SUPPORTED_ERR"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <throw>throw
                        <expr>new
                            <call>
                                <name>DOMException</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>DOMException</name>.
                                                <name>NOT_SUPPORTED_ERR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>msg</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Creates a copy of this &lt;code&gt;ASObject&lt;/code&gt;. See text for
                * &lt;code&gt;cloneNode&lt;/code&gt; off of &lt;code&gt;Node&lt;/code&gt; but substitute AS
                * functionality.
                * @param deep Setting the &lt;code&gt;deep&lt;/code&gt; flag on, causes the whole
                * subtree to be duplicated. Setting it to &lt;code&gt;false&lt;/code&gt; only
                * duplicates its immediate child nodes.
                * @return Cloned &lt;code&gt;ASObject&lt;/code&gt;.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>ASObject</name>
                </type>
                <name>cloneASObject</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>deep</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>msg</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>DOMMessageFormatter</name>.
                                            <name>formatMessage</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>DOM_DOMAIN</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"NOT_SUPPORTED_ERR"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <throw>throw
                        <expr>new
                            <call>
                                <name>DOMException</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>DOMException</name>.
                                                <name>NOT_SUPPORTED_ERR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>msg</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>

            <comment type="line">//</comment>
            <comment type="line">// ASModel methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * &lt;code&gt;true&lt;/code&gt; if this &lt;code&gt;ASModel&lt;/code&gt; defines the document
                * structure in terms of namespaces and local names ; &lt;code&gt;false&lt;/code&gt;
                * if the document structure is defined only in terms of
                * &lt;code&gt;QNames&lt;/code&gt;.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>getIsNamespaceAware</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fNamespaceAware</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * 0 if used internally, 1 if used externally, 2 if not all. An exception
                * will be raised if it is incompatibly shared or in use as an internal
                * subset.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>short</name>
                </type>
                <name>getUsageLocation</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>msg</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>DOMMessageFormatter</name>.
                                            <name>formatMessage</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>DOM_DOMAIN</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"NOT_SUPPORTED_ERR"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <throw>throw
                        <expr>new
                            <call>
                                <name>DOMException</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>DOMException</name>.
                                                <name>NOT_SUPPORTED_ERR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>msg</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * The URI reference.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getAsLocation</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>msg</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>DOMMessageFormatter</name>.
                                            <name>formatMessage</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>DOM_DOMAIN</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"NOT_SUPPORTED_ERR"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <throw>throw
                        <expr>new
                            <call>
                                <name>DOMException</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>DOMException</name>.
                                                <name>NOT_SUPPORTED_ERR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>msg</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * The URI reference.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setAsLocation</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>asLocation</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>msg</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>DOMMessageFormatter</name>.
                                            <name>formatMessage</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>DOM_DOMAIN</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"NOT_SUPPORTED_ERR"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <throw>throw
                        <expr>new
                            <call>
                                <name>DOMException</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>DOMException</name>.
                                                <name>NOT_SUPPORTED_ERR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>msg</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * The hint to locating an ASModel.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getAsHint</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>msg</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>DOMMessageFormatter</name>.
                                            <name>formatMessage</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>DOM_DOMAIN</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"NOT_SUPPORTED_ERR"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <throw>throw
                        <expr>new
                            <call>
                                <name>DOMException</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>DOMException</name>.
                                                <name>NOT_SUPPORTED_ERR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>msg</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * The hint to locating an ASModel.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setAsHint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>asHint</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>msg</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>DOMMessageFormatter</name>.
                                            <name>formatMessage</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>DOM_DOMAIN</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"NOT_SUPPORTED_ERR"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <throw>throw
                        <expr>new
                            <call>
                                <name>DOMException</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>DOMException</name>.
                                                <name>NOT_SUPPORTED_ERR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>msg</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * If &lt;code&gt;usage&lt;/code&gt; is EXTERNAL_SUBSET or NOT_USED, and the
                * &lt;code&gt;ASModel&lt;/code&gt; is simply a container of other ASModels.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>getContainer</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>(<name>fGrammar</name> != <name>null</name>)
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Instead of returning an all-in-one &lt;code&gt;ASObject&lt;/code&gt; with
                * &lt;code&gt;ASModel&lt;/code&gt; methods, have discernible top-level/"global"
                * element declarations. If one attempts to add, set, or remove a node
                * type other than the intended one, a hierarchy exception (or
                * equivalent is thrown).
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>ASNamedObjectMap</name>
                </type>
                <name>getElementDeclarations</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>msg</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>DOMMessageFormatter</name>.
                                            <name>formatMessage</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>DOM_DOMAIN</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"NOT_SUPPORTED_ERR"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <throw>throw
                        <expr>new
                            <call>
                                <name>DOMException</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>DOMException</name>.
                                                <name>NOT_SUPPORTED_ERR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>msg</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Instead of returning an all-in-one &lt;code&gt;ASObject&lt;/code&gt; with
                * &lt;code&gt;ASModel&lt;/code&gt; methods, have discernible top-level/"global"
                * attribute declarations. If one attempts to add, set, or remove a node
                * type other than the intended one, a hierarchy exception (or
                * equivalent is thrown).
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>ASNamedObjectMap</name>
                </type>
                <name>getAttributeDeclarations</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>msg</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>DOMMessageFormatter</name>.
                                            <name>formatMessage</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>DOM_DOMAIN</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"NOT_SUPPORTED_ERR"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <throw>throw
                        <expr>new
                            <call>
                                <name>DOMException</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>DOMException</name>.
                                                <name>NOT_SUPPORTED_ERR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>msg</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Instead of returning an all-in-one &lt;code&gt;ASObject&lt;/code&gt; with
                * &lt;code&gt;ASModel&lt;/code&gt; methods, have discernible top-level/"global"
                * notation declarations. If one attempts to add, set, or remove a node
                * type other than the intended one, a hierarchy exception (or
                * equivalent is thrown).
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>ASNamedObjectMap</name>
                </type>
                <name>getNotationDeclarations</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>msg</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>DOMMessageFormatter</name>.
                                            <name>formatMessage</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>DOM_DOMAIN</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"NOT_SUPPORTED_ERR"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <throw>throw
                        <expr>new
                            <call>
                                <name>DOMException</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>DOMException</name>.
                                                <name>NOT_SUPPORTED_ERR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>msg</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Instead of returning an all-in-one &lt;code&gt;ASObject&lt;/code&gt; with
                * &lt;code&gt;ASModel&lt;/code&gt; methods, have discernible top-level/"global"
                * entity declarations. If one attempts to add, set, or remove a node
                * type other than the intended one, a hierarchy exception (or
                * equivalent is thrown).
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>ASNamedObjectMap</name>
                </type>
                <name>getEntityDeclarations</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>msg</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>DOMMessageFormatter</name>.
                                            <name>formatMessage</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>DOM_DOMAIN</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"NOT_SUPPORTED_ERR"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <throw>throw
                        <expr>new
                            <call>
                                <name>DOMException</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>DOMException</name>.
                                                <name>NOT_SUPPORTED_ERR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>msg</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Instead of returning an all-in-one &lt;code&gt;ASObject&lt;/code&gt; with
                * &lt;code&gt;ASModel&lt;/code&gt; methods, have discernible top-level/"global
                * content model declarations. If one attempts to add, set, or remove a
                * node type other than the intended one, a hierarchy exception (or
                * equivalent is thrown).
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>ASNamedObjectMap</name>
                </type>
                <name>getContentModelDeclarations</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>msg</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>DOMMessageFormatter</name>.
                                            <name>formatMessage</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>DOM_DOMAIN</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"NOT_SUPPORTED_ERR"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <throw>throw
                        <expr>new
                            <call>
                                <name>DOMException</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>DOMException</name>.
                                                <name>NOT_SUPPORTED_ERR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>msg</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * This method will allow the nesting or "importation" of ASModels.
                * @param abstractSchema ASModel to be set. Subsequent calls will nest
                * the ASModels within the specified &lt;code&gt;ownerASModel&lt;/code&gt;.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>addASModel</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ASModel</name>
                            </type>
                            <name>abstractSchema</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fASModels</name>.
                                    <name>addElement</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>abstractSchema</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * To retrieve a list of nested ASModels without reference to names.
                * @return A list of ASModels.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>ASObjectList</name>
                </type>
                <name>getASModels</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>msg</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>DOMMessageFormatter</name>.
                                            <name>formatMessage</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>DOM_DOMAIN</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"NOT_SUPPORTED_ERR"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <throw>throw
                        <expr>new
                            <call>
                                <name>DOMException</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>DOMException</name>.
                                                <name>NOT_SUPPORTED_ERR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>msg</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Removes only the specified &lt;code&gt;ASModel&lt;/code&gt; from the list of
                * &lt;code&gt;ASModel&lt;/code&gt;s.
                * @param as AS to be removed.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>removeAS</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ASModel</name>
                            </type>
                            <name>as</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fASModels</name>.
                                    <name>removeElement</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>as</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Determines if an &lt;code&gt;ASModel&lt;/code&gt; itself is valid, i.e., confirming
                * that it's well-formed and valid per its own formal grammar.
                * @return &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;ASModel&lt;/code&gt; is valid,
                * &lt;code&gt;false&lt;/code&gt; otherwise.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>validate</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>msg</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>DOMMessageFormatter</name>.
                                            <name>formatMessage</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>DOM_DOMAIN</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"NOT_SUPPORTED_ERR"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <throw>throw
                        <expr>new
                            <call>
                                <name>DOMException</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>DOMException</name>.
                                                <name>NOT_SUPPORTED_ERR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>msg</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Imports &lt;code&gt;ASObject&lt;/code&gt; into ASModel.
                * @param asobject &lt;code&gt;ASObject&lt;/code&gt; to be imported.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>importASObject</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ASObject</name>
                            </type>
                            <name>asobject</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>msg</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>DOMMessageFormatter</name>.
                                            <name>formatMessage</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>DOM_DOMAIN</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"NOT_SUPPORTED_ERR"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <throw>throw
                        <expr>new
                            <call>
                                <name>DOMException</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>DOMException</name>.
                                                <name>NOT_SUPPORTED_ERR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>msg</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Inserts &lt;code&gt;ASObject&lt;/code&gt; into ASModel.
                * @param asobject &lt;code&gt;ASObject&lt;/code&gt; to be inserted.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>insertASObject</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ASObject</name>
                            </type>
                            <name>asobject</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>msg</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>DOMMessageFormatter</name>.
                                            <name>formatMessage</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>DOM_DOMAIN</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"NOT_SUPPORTED_ERR"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <throw>throw
                        <expr>new
                            <call>
                                <name>DOMException</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>DOMException</name>.
                                                <name>NOT_SUPPORTED_ERR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>msg</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Creates an element declaration for the element type specified.
                * @param namespaceURI The &lt;code&gt;namespace URI&lt;/code&gt; of the element type
                * being declared.
                * @param name The name of the element. The format of the name could be
                * an NCName as defined by XML Namespaces or a Name as defined by XML
                * 1.0; it's ASModel-dependent.
                * @return A new &lt;code&gt;ASElementDeclaration&lt;/code&gt; object with
                * &lt;code&gt;name&lt;/code&gt; attribute set to &lt;code&gt;tagname&lt;/code&gt; and
                * &lt;code&gt;namespaceURI&lt;/code&gt; set to &lt;code&gt;systemId&lt;/code&gt;. Other
                * attributes of the element declaration are set through
                * &lt;code&gt;ASElementDeclaration&lt;/code&gt; interface methods.
                * @exception DOMException
                * INVALID_CHARACTER_ERR: Raised if the specified name contains an
                * illegal character.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>ASElementDeclaration</name>
                </type>
                <name>createASElementDeclaration</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>namespaceURI</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>DOMException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>msg</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>DOMMessageFormatter</name>.
                                            <name>formatMessage</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>DOM_DOMAIN</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"NOT_SUPPORTED_ERR"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <throw>throw
                        <expr>new
                            <call>
                                <name>DOMException</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>DOMException</name>.
                                                <name>NOT_SUPPORTED_ERR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>msg</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Creates an attribute declaration.
                * @param namespaceURI The namespace URI of the attribute being declared.
                * @param name The name of the attribute. The format of the name could be
                * an NCName as defined by XML Namespaces or a Name as defined by XML
                * 1.0; it's ASModel-dependent.
                * @return A new &lt;code&gt;ASAttributeDeclaration&lt;/code&gt; object with
                * appropriate attributes set by input parameters.
                * @exception DOMException
                * INVALID_CHARACTER_ERR: Raised if the input &lt;code&gt;name&lt;/code&gt;
                * parameter contains an illegal character.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>ASAttributeDeclaration</name>
                </type>
                <name>createASAttributeDeclaration</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>namespaceURI</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>DOMException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>msg</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>DOMMessageFormatter</name>.
                                            <name>formatMessage</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>DOM_DOMAIN</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"NOT_SUPPORTED_ERR"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <throw>throw
                        <expr>new
                            <call>
                                <name>DOMException</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>DOMException</name>.
                                                <name>NOT_SUPPORTED_ERR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>msg</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Creates a new notation declaration.
                * @param namespaceURI The namespace URI of the notation being declared.
                * @param name The name of the notation. The format of the name could be
                * an NCName as defined by XML Namespaces or a Name as defined by XML
                * 1.0; it's ASModel-dependent.
                * @param systemId The system identifier for the notation declaration.
                * @param publicId The public identifier for the notation declaration.
                * @return A new &lt;code&gt;ASNotationDeclaration&lt;/code&gt; object with
                * &lt;code&gt;notationName&lt;/code&gt; attribute set to &lt;code&gt;name&lt;/code&gt; and
                * &lt;code&gt;publicId&lt;/code&gt; and &lt;code&gt;systemId&lt;/code&gt; set to the
                * corresponding fields.
                * @exception DOMException
                * INVALID_CHARACTER_ERR: Raised if the specified name contains an
                * illegal character.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>ASNotationDeclaration</name>
                </type>
                <name>createASNotationDeclaration</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>namespaceURI</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>systemId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>publicId</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>DOMException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>msg</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>DOMMessageFormatter</name>.
                                            <name>formatMessage</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>DOM_DOMAIN</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"NOT_SUPPORTED_ERR"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <throw>throw
                        <expr>new
                            <call>
                                <name>DOMException</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>DOMException</name>.
                                                <name>NOT_SUPPORTED_ERR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>msg</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Creates an ASEntityDeclaration.
                * @param name The name of the entity being declared.
                * @return A new &lt;code&gt;ASEntityDeclaration&lt;/code&gt; object with
                * &lt;code&gt;entityName&lt;/code&gt; attribute set to name.
                * @exception DOMException
                * INVALID_CHARACTER_ERR: Raised if the specified name contains an
                * illegal character.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>ASEntityDeclaration</name>
                </type>
                <name>createASEntityDeclaration</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>DOMException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>msg</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>DOMMessageFormatter</name>.
                                            <name>formatMessage</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>DOM_DOMAIN</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"NOT_SUPPORTED_ERR"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <throw>throw
                        <expr>new
                            <call>
                                <name>DOMException</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>DOMException</name>.
                                                <name>NOT_SUPPORTED_ERR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>msg</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Creates an object which describes part of an
                * &lt;code&gt;ASElementDeclaration&lt;/code&gt;'s content model.
                * @param minOccurs The minimum occurrence for the subModels of this
                * &lt;code&gt;ASContentModel&lt;/code&gt;.
                * @param maxOccurs The maximum occurrence for the subModels of this
                * &lt;code&gt;ASContentModel&lt;/code&gt;.
                * @param operator operator of type &lt;code&gt;AS_CHOICE&lt;/code&gt;,
                * &lt;code&gt;AS_SEQUENCE&lt;/code&gt;, &lt;code&gt;AS_ALL&lt;/code&gt; or
                * &lt;code&gt;AS_NONE&lt;/code&gt;.
                * @return A new &lt;code&gt;ASContentModel&lt;/code&gt; object.
                * @exception DOMASException
                * A DOMASException, e.g., &lt;code&gt;minOccurs &amp;gt; maxOccurs&lt;/code&gt;.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>ASContentModel</name>
                </type>
                <name>createASContentModel</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>minOccurs</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>maxOccurs</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>operator</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>DOMASException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>msg</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>DOMMessageFormatter</name>.
                                            <name>formatMessage</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>DOM_DOMAIN</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"NOT_SUPPORTED_ERR"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <throw>throw
                        <expr>new
                            <call>
                                <name>DOMException</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>DOMException</name>.
                                                <name>NOT_SUPPORTED_ERR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>msg</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>


            <comment type="line">// convenience methods</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>SchemaGrammar</name>
                </type>
                <name>getGrammar</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fGrammar</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setGrammar</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>SchemaGrammar</name>
                            </type>
                            <name>grammar</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fGrammar</name>
                            =
                            <name>grammar</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Vector</name>
                </type>
                <name>getInternalASModels</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fASModels</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            }
        </block>
    </class>
</unit>
