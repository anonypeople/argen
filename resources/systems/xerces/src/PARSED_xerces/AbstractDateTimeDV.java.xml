<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\impl\dv\xs\AbstractDateTimeDV.java">
    <comment type="block">/*
        * Copyright 1999-2005 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>dv</name>.
            <name>xs</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>javax</name>.<name>xml</name>.<name>datatype</name>.
            <name>DatatypeFactory</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>javax</name>.<name>xml</name>.<name>datatype</name>.
            <name>Duration</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>javax</name>.<name>xml</name>.<name>datatype</name>.
            <name>XMLGregorianCalendar</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.
            <name>Constants</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>jaxp</name>.<name>datatype</name>.
            <name>DatatypeFactoryImpl</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.<name>datatypes</name>.
            <name>XSDateTime</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * This is the base class of all date/time datatype validators.
        * It implements common code for parsing, validating and comparing datatypes.
        * Classes that extend this class, must implement parse() method.
        *
        * REVISIT: There are many instance variables, which would cause problems
        * when we support grammar caching. A grammar is possibly used by
        * two parser instances at the same time, then the same simple type
        * decl object can be used to validate two strings at the same time.
        * -SG
        *
        * @xerces.internal
        *
        * @author Elena Litani
        * @author Len Berman
        * @author Gopal Sharma, SUN Microsystems Inc.
        *
        * @version $Id: AbstractDateTimeDV.java,v 1.39 2005/05/06 15:31:14 ankitp Exp $
        */
    </comment>
    <class>
        <specifier>public</specifier>
        <specifier>abstract</specifier> class <name>AbstractDateTimeDV</name>
        <super>
            <extends>extends
                <name>TypeValidator</name>
            </extends>
        </super>
        <block>{

            <comment type="line">//debugging</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>boolean</name>
                    </type>
                    <name>DEBUG</name>=
                    <init>
                        <expr>false</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">//define shared variables for date/time</comment>


            <comment type="line">//define constants to be used in assigning default values for</comment>
            <comment type="line">//all date/time excluding duration</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>int</name>
                    </type>
                    <name>YEAR</name>=
                    <init>
                        <expr>2000</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>int</name>
                    </type>
                    <name>MONTH</name>=
                    <init>
                        <expr>01</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>int</name>
                    </type>
                    <name>DAY</name> =
                    <init>
                        <expr>01</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>DatatypeFactory</name>
                    </type>
                    <name>factory</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>DatatypeFactoryImpl</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>short</name>
                </type>
                <name>getAllowedFacets</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>(
                            <name><name>XSSimpleTypeDecl</name>.
                                <name>FACET_PATTERN</name>
                            </name>
                            |
                            <name><name>XSSimpleTypeDecl</name>.
                                <name>FACET_WHITESPACE</name>
                            </name>
                            |
                            <name><name>XSSimpleTypeDecl</name>.
                                <name>FACET_ENUMERATION</name>
                            </name>
                            |
                            <name><name>XSSimpleTypeDecl</name>.
                                <name>FACET_MAXINCLUSIVE</name>
                            </name>
                            |
                            <name><name>XSSimpleTypeDecl</name>.
                                <name>FACET_MININCLUSIVE</name>
                            </name>
                            |
                            <name><name>XSSimpleTypeDecl</name>.
                                <name>FACET_MAXEXCLUSIVE</name>
                            </name>
                            |
                            <name><name>XSSimpleTypeDecl</name>.
                                <name>FACET_MINEXCLUSIVE</name>
                            </name>
                            )
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">//getAllowedFacets()</comment>


            <comment type="line">// distinguishes between identity and equality for date/time values</comment>
            <comment type="line">// ie: two values representing the same "moment in time" but with different</comment>
            <comment type="line">// remembered timezones are now equal but not identical.</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isIdentical</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>value1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>value2</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>!(<name>value1</name>
                                <name>instanceof</name>
                                <name>DateTimeData</name>) || !(<name>value2</name>
                                <name>instanceof</name>
                                <name>DateTimeData</name>)
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>DateTimeData</name>
                            </type>
                            <name>v1</name> =
                            <init>
                                <expr>(<name>DateTimeData</name>)
                                    <name>value1</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>DateTimeData</name>
                            </type>
                            <name>v2</name> =
                            <init>
                                <expr>(<name>DateTimeData</name>)
                                    <name>value2</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// original timezones must be the same in addition to date/time values
                    </comment>
                    <comment type="line">// being 'equal'</comment>
                    <if>if
                        <condition>(
                            <expr>(
                                <name><name>v1</name>.
                                    <name>timezoneHr</name>
                                </name>
                                ==
                                <name><name>v2</name>.
                                    <name>timezoneHr</name>
                                </name>
                                ) &amp;&amp; (
                                <name><name>v1</name>.
                                    <name>timezoneMin</name>
                                </name>
                                ==
                                <name><name>v2</name>.
                                    <name>timezoneMin</name>
                                </name>
                                )
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <call>
                                            <name><name>v1</name>.
                                                <name>equals</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>v2</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <return>return <expr>false</expr>;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">//isIdentical()</comment>

            <comment type="line">// the parameters are in compiled form (from getActualValue)</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>compare</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>value1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>value2</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>compareDates</name>
                                <argument_list>(
                                    <argument>
                                        <expr>((<name>DateTimeData</name>)<name>value1</name>)
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>((<name>DateTimeData</name>)<name>value2</name>)
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">//compare()</comment>

            <comment type="javadoc">/**
                * Compare algorithm described in dateDime (3.2.7).
                * Duration datatype overwrites this method
                *
                * @param date1 normalized date representation of the first value
                * @param date2 normalized date representation of the second value
                * @param strict
                * @return less, greater, less_equal, greater_equal, equal
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>short</name>
                </type>
                <name>compareDates</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>DateTimeData</name>
                            </type>
                            <name>date1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>DateTimeData</name>
                            </type>
                            <name>date2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>strict</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>date1</name>.
                                    <name>utc</name>
                                </name>
                                ==
                                <name><name>date2</name>.
                                    <name>utc</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <call>
                                            <name>compareOrder</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>date1</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>date2</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>c1</name>,
                            <name>c2</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>DateTimeData</name>
                            </type>
                            <name>tempDate</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>DateTimeData</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>this</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <name><name>date1</name>.
                                    <name>utc</name>
                                </name>
                                =='Z'
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{

                                <comment type="line">//compare date1&lt;=date1&lt;=(date2 with time zone -14)</comment>
                                <comment type="line">//</comment>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>cloneDate</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>date2</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>tempDate</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <comment type="line">//clones date1 value to global temporary storage: fTempDate
                                </comment>
                                <expr_stmt>
                                    <expr>
                                        <name><name>tempDate</name>.
                                            <name>timezoneHr</name>
                                        </name>
                                        =14
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>tempDate</name>.
                                            <name>timezoneMin</name>
                                        </name>
                                        = 0
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>tempDate</name>.
                                            <name>utc</name>
                                        </name>
                                        ='+'
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>normalize</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>tempDate</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>c1</name>
                                        =
                                        <call>
                                            <name>compareOrder</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>date1</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>tempDate</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>c1</name>
                                            ==
                                            <name>LESS_THAN</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <return>return
                                            <expr>
                                                <name>c1</name>
                                            </expr>
                                            ;
                                        </return>
                                    </then>
                                </if>

                                <comment type="line">//compare date1&gt;=(date2 with time zone +14)</comment>
                                <comment type="line">//</comment>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>cloneDate</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>date2</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>tempDate</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <comment type="line">//clones date1 value to global temporary storage: tempDate
                                </comment>
                                <expr_stmt>
                                    <expr>
                                        <name><name>tempDate</name>.
                                            <name>timezoneHr</name>
                                        </name>
                                        = -14
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>tempDate</name>.
                                            <name>timezoneMin</name>
                                        </name>
                                        = 0
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>tempDate</name>.
                                            <name>utc</name>
                                        </name>
                                        ='-'
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>normalize</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>tempDate</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>c2</name>
                                        =
                                        <call>
                                            <name>compareOrder</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>date1</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>tempDate</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>c2</name>
                                            ==
                                            <name>GREATER_THAN</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <return>return
                                            <expr>
                                                <name>c2</name>
                                            </expr>
                                            ;
                                        </return>
                                    </then>
                                </if>

                                <return>return
                                    <expr>
                                        <name>INDETERMINATE</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name><name>date2</name>.
                                            <name>utc</name>
                                        </name>
                                        =='Z'
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{

                                        <comment type="line">//compare (date1 with time zone -14)&lt;=date2</comment>
                                        <comment type="line">//</comment>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>cloneDate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>date1</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>tempDate</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <comment type="line">//clones date1 value to global temporary storage:
                                            tempDate
                                        </comment>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>tempDate</name>.
                                                    <name>timezoneHr</name>
                                                </name>
                                                = -14
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>tempDate</name>.
                                                    <name>timezoneMin</name>
                                                </name>
                                                = 0
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>tempDate</name>.
                                                    <name>utc</name>
                                                </name>
                                                ='-'
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>DEBUG</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>System</name>.<name>out</name>.
                                                                    <name>println</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"tempDate=" +
                                                                            <call>
                                                                                <name>dateToString</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>tempDate</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>normalize</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tempDate</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>c1</name>
                                                =
                                                <call>
                                                    <name>compareOrder</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tempDate</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>date2</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>DEBUG</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>System</name>.<name>out</name>.
                                                                    <name>println</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"date=" +
                                                                            <call>
                                                                                <name>dateToString</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>date2</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>System</name>.<name>out</name>.
                                                                    <name>println</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"tempDate=" +
                                                                            <call>
                                                                                <name>dateToString</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>tempDate</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>c1</name>
                                                    ==
                                                    <name>LESS_THAN</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <return>return
                                                    <expr>
                                                        <name>c1</name>
                                                    </expr>
                                                    ;
                                                </return>
                                            </then>
                                        </if>

                                        <comment type="line">//compare (date1 with time zone +14)&lt;=date2</comment>
                                        <comment type="line">//</comment>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>cloneDate</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>date1</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>tempDate</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <comment type="line">//clones date1 value to global temporary storage:
                                            tempDate
                                        </comment>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>tempDate</name>.
                                                    <name>timezoneHr</name>
                                                </name>
                                                = 14
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>tempDate</name>.
                                                    <name>timezoneMin</name>
                                                </name>
                                                = 0
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>tempDate</name>.
                                                    <name>utc</name>
                                                </name>
                                                ='+'
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>normalize</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tempDate</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>c2</name>
                                                =
                                                <call>
                                                    <name>compareOrder</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tempDate</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>date2</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>DEBUG</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>System</name>.<name>out</name>.
                                                                    <name>println</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"tempDate=" +
                                                                            <call>
                                                                                <name>dateToString</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>tempDate</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>c2</name>
                                                    ==
                                                    <name>GREATER_THAN</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <return>return
                                                    <expr>
                                                        <name>c2</name>
                                                    </expr>
                                                    ;
                                                </return>
                                            </then>
                                        </if>

                                        <return>return
                                            <expr>
                                                <name>INDETERMINATE</name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                        </else>
                    </if>
                    <return>return
                        <expr>
                            <name>INDETERMINATE</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Given normalized values, determines order-relation
                * between give date/time objects.
                *
                * @param date1 date/time object
                * @param date2 date/time object
                * @return 0 if date1 and date2 are equal, a value less than 0 if date1 is less than date2, a value
                greater than 0 if date1 is greater than date2
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>short</name>
                </type>
                <name>compareOrder</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>DateTimeData</name>
                            </type>
                            <name>date1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>DateTimeData</name>
                            </type>
                            <name>date2</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>date1</name>.
                                    <name>position</name>
                                </name>
                                &lt; 1
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>date1</name>.
                                                <name>year</name>
                                            </name>
                                            &lt;
                                            <name><name>date2</name>.
                                                <name>year</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <return>return <expr>-1</expr>;
                                        </return>
                                    </then>
                                </if>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>date1</name>.
                                                <name>year</name>
                                            </name>
                                            &gt;
                                            <name><name>date2</name>.
                                                <name>year</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <return>return <expr>1</expr>;
                                        </return>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>date1</name>.
                                    <name>position</name>
                                </name>
                                &lt; 2
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>date1</name>.
                                                <name>month</name>
                                            </name>
                                            &lt;
                                            <name><name>date2</name>.
                                                <name>month</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <return>return <expr>-1</expr>;
                                        </return>
                                    </then>
                                </if>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>date1</name>.
                                                <name>month</name>
                                            </name>
                                            &gt;
                                            <name><name>date2</name>.
                                                <name>month</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <return>return <expr>1</expr>;
                                        </return>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>date1</name>.
                                    <name>day</name>
                                </name>
                                &lt;
                                <name><name>date2</name>.
                                    <name>day</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return <expr>-1</expr>;
                            </return>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>date1</name>.
                                    <name>day</name>
                                </name>
                                &gt;
                                <name><name>date2</name>.
                                    <name>day</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return <expr>1</expr>;
                            </return>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>date1</name>.
                                    <name>hour</name>
                                </name>
                                &lt;
                                <name><name>date2</name>.
                                    <name>hour</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return <expr>-1</expr>;
                            </return>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>date1</name>.
                                    <name>hour</name>
                                </name>
                                &gt;
                                <name><name>date2</name>.
                                    <name>hour</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return <expr>1</expr>;
                            </return>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>date1</name>.
                                    <name>minute</name>
                                </name>
                                &lt;
                                <name><name>date2</name>.
                                    <name>minute</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return <expr>-1</expr>;
                            </return>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>date1</name>.
                                    <name>minute</name>
                                </name>
                                &gt;
                                <name><name>date2</name>.
                                    <name>minute</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return <expr>1</expr>;
                            </return>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>date1</name>.
                                    <name>second</name>
                                </name>
                                &lt;
                                <name><name>date2</name>.
                                    <name>second</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return <expr>-1</expr>;
                            </return>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>date1</name>.
                                    <name>second</name>
                                </name>
                                &gt;
                                <name><name>date2</name>.
                                    <name>second</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return <expr>1</expr>;
                            </return>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>date1</name>.
                                    <name>utc</name>
                                </name>
                                &lt;
                                <name><name>date2</name>.
                                    <name>utc</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return <expr>-1</expr>;
                            </return>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>date1</name>.
                                    <name>utc</name>
                                </name>
                                &gt;
                                <name><name>date2</name>.
                                    <name>utc</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return <expr>1</expr>;
                            </return>
                        </then>
                    </if>
                    <return>return <expr>0</expr>;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Parses time hh:mm:ss.sss and time zone if any
                *
                * @param start
                * @param end
                * @param data
                * @exception RuntimeException
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>getTime</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>buffer</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>start</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>end</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>DateTimeData</name>
                            </type>
                            <name>data</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>RuntimeException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>stop</name> =
                            <init>
                                <expr><name>start</name>+2
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">//get hours (hh)</comment>
                    <expr_stmt>
                        <expr>
                            <name><name>data</name>.
                                <name>hour</name>
                            </name>
                            =
                            <call>
                                <name>parseInt</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>buffer</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>start</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>stop</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">//get minutes (mm)</comment>

                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>buffer</name>.
                                        <name>charAt</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr><name>stop</name>++
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                !=':'
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>RuntimeException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Error in parsing time zone"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name>start</name>
                            =
                            <name>stop</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>stop</name>
                            = <name>stop</name>+2
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>data</name>.
                                <name>minute</name>
                            </name>
                            =
                            <call>
                                <name>parseInt</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>buffer</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>start</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>stop</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">//get seconds (ss)</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>buffer</name>.
                                        <name>charAt</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr><name>stop</name>++
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                !=':'
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>RuntimeException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Error in parsing time zone"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">//find UTC sign if any</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>sign</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>findUTCSign</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>buffer</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>start</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>end</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">//get seconds (ms)</comment>
                    <expr_stmt>
                        <expr>
                            <name>start</name>
                            =
                            <name>stop</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>stop</name>
                            = <name>sign</name> &lt; 0 ? <name>end</name> :
                            <name>sign</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>data</name>.
                                <name>second</name>
                            </name>
                            =
                            <call>
                                <name>parseSecond</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>buffer</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>start</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>stop</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">//parse UTC time zone (hh:mm)</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>sign</name>
                                &gt; 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>getTimeZone</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>buffer</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>data</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>sign</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>end</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Parses date CCYY-MM-DD
                *
                * @param buffer
                * @param start start position
                * @param end end position
                * @param date
                * @exception RuntimeException
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>int</name>
                </type>
                <name>getDate</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>buffer</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>start</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>end</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>DateTimeData</name>
                            </type>
                            <name>date</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>RuntimeException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <expr_stmt>
                        <expr>
                            <name>start</name>
                            =
                            <call>
                                <name>getYearMonth</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>buffer</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>start</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>end</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>date</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>buffer</name>.
                                        <name>charAt</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr><name>start</name>++
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                !='-'
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>RuntimeException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"CCYY-MM must be followed by '-' sign"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>stop</name> =
                            <init>
                                <expr>
                                    <name>start</name>
                                    + 2
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>date</name>.
                                <name>day</name>
                            </name>
                            =
                            <call>
                                <name>parseInt</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>buffer</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>start</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>stop</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>stop</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Parses date CCYY-MM
                *
                * @param buffer
                * @param start start position
                * @param end end position
                * @param date
                * @exception RuntimeException
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>int</name>
                </type>
                <name>getYearMonth</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>buffer</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>start</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>end</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>DateTimeData</name>
                            </type>
                            <name>date</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>RuntimeException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>buffer</name>.
                                        <name>charAt</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>0</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                =='-'
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// REVISIT: date starts with preceding '-' sign</comment>
                                <comment type="line">// do we have to do anything with it?</comment>
                                <comment type="line">//</comment>
                                <expr_stmt>
                                    <expr><name>start</name>++
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>i</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>indexOf</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>buffer</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>start</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>end</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>'-'</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr><name>i</name>==-1
                            </expr>
                            )
                        </condition>
                        <then>
                            <throw>throw
                                <expr>new
                                    <call>
                                        <name>RuntimeException</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"Year separator is missing or misplaced"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </throw>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>length</name> =
                            <init>
                                <expr><name>i</name>-
                                    <name>start</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr><name>length</name>&lt;4
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>RuntimeException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Year must have 'CCYY' format"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>length</name>
                                        &gt; 4 &amp;&amp;
                                        <call>
                                            <name><name>buffer</name>.
                                                <name>charAt</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>start</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        =='0'
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <throw>throw
                                            <expr>new
                                                <call>
                                                    <name>RuntimeException</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"Leading zeros are required if the year value would
                                                                otherwise have fewer than four digits; otherwise they
                                                                are forbidden"
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </throw>
                                        }
                                    </block>
                                </then>
                            </if>
                        </else>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name><name>date</name>.
                                <name>year</name>
                            </name>
                            =
                            <call>
                                <name>parseIntYear</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>buffer</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>i</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>buffer</name>.
                                        <name>charAt</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>i</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                !='-'
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>RuntimeException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"CCYY must be followed by '-' sign"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name>start</name>
                            = ++
                            <name>i</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>i</name>
                            = <name>start</name> +2
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>date</name>.
                                <name>month</name>
                            </name>
                            =
                            <call>
                                <name>parseInt</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>buffer</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>start</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>i</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>i</name>
                        </expr>
                        ;
                    </return>
                    <comment type="line">//fStart points right after the MONTH</comment>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Shared code from Date and YearMonth datatypes.
                * Finds if time zone sign is present
                *
                * @param end
                * @param date
                * @exception RuntimeException
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>parseTimeZone</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>buffer</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>start</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>end</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>DateTimeData</name>
                            </type>
                            <name>date</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>RuntimeException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">//fStart points right after the date</comment>

                    <if>if
                        <condition>(
                            <expr><name>start</name>&lt;
                                <name>end</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>sign</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name>findUTCSign</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>buffer</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>start</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>end</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr><name>sign</name>&lt;0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>RuntimeException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"Error in month parsing"</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>getTimeZone</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>buffer</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>date</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>sign</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>end</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Parses time zone: 'Z' or {+,-} followed by hh:mm
                *
                * @param data
                * @param sign
                * @exception RuntimeException
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>getTimeZone</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>buffer</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>DateTimeData</name>
                            </type>
                            <name>data</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>sign</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>end</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>RuntimeException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>data</name>.
                                <name>utc</name>
                            </name>
                            =
                            <call>
                                <name><name>buffer</name>.
                                    <name>charAt</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>sign</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>buffer</name>.
                                        <name>charAt</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>sign</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                == 'Z'
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr><name>end</name>&gt;(++<name>sign</name>)
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>RuntimeException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"Error in parsing time zone"</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr><name>sign</name>&lt;=(<name>end</name>-6)
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{

                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>negate</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>buffer</name>.
                                                        <name>charAt</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>sign</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                == '-'?-1:1
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <comment type="line">//parse hr</comment>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>stop</name> =
                                        <init>
                                            <expr>++<name>sign</name>+2
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>data</name>.
                                            <name>timezoneHr</name>
                                        </name>
                                        = <name>negate</name>*
                                        <call>
                                            <name>parseInt</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>buffer</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>sign</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>stop</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>buffer</name>.
                                                    <name>charAt</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr><name>stop</name>++
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            !=':'
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>RuntimeException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"Error in parsing time zone"</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </then>
                                </if>

                                <comment type="line">//parse min</comment>
                                <expr_stmt>
                                    <expr>
                                        <name><name>data</name>.
                                            <name>timezoneMin</name>
                                        </name>
                                        = <name>negate</name>*
                                        <call>
                                            <name>parseInt</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>buffer</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>stop</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr><name>stop</name>+2
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>

                                <if>if
                                    <condition>(
                                        <expr><name>stop</name>+2!=
                                            <name>end</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>RuntimeException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"Error in parsing time zone"</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>data</name>.
                                                <name>timezoneHr</name>
                                            </name>
                                            != 0 ||
                                            <name><name>data</name>.
                                                <name>timezoneMin</name>
                                            </name>
                                            != 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>data</name>.
                                                    <name>normalized</name>
                                                </name>
                                                = false
                                            </expr>
                                            ;
                                        </expr_stmt>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>RuntimeException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Error in parsing time zone"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </else>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>DEBUG</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>println</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"time[hh]="+
                                                        <name><name>data</name>.
                                                            <name>timezoneHr</name>
                                                        </name>
                                                        + " time[mm]=" +
                                                        <name><name>data</name>.
                                                            <name>timezoneMin</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Computes index of given char within StringBuffer
                *
                * @param start
                * @param end
                * @param ch character to look for in StringBuffer
                * @return index of ch within StringBuffer
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>int</name>
                </type>
                <name>indexOf</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>buffer</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>start</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>end</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>char</name>
                            </type>
                            <name>ch</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name>=
                                <init>
                                    <expr>
                                        <name>start</name>
                                    </expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr><name>i</name>&lt;
                                <name>end</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>buffer</name>.
                                                <name>charAt</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>i</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        ==
                                        <name>ch</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>
                                                <name>i</name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    <return>return <expr>-1</expr>;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Validates given date/time object accoring to W3C PR Schema
                * [D.1 ISO 8601 Conventions]
                *
                * @param data
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>validateDateTime</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>DateTimeData</name>
                            </type>
                            <name>data</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <comment type="line">//REVISIT: should we throw an exception for not valid dates</comment>
                    <comment type="line">// or reporting an error message should be sufficient?</comment>

                    <comment type="javadoc">/**
                        * XML Schema 1.1 - RQ-123: Allow year 0000 in date related types.
                        */
                    </comment>
                    <if>if
                        <condition>(
                            <expr>!
                                <name><name>Constants</name>.
                                    <name>SCHEMA_1_1_SUPPORT</name>
                                </name>
                                &amp;&amp;
                                <name><name>data</name>.
                                    <name>year</name>
                                </name>
                                ==0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>RuntimeException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"The year \"0000\" is an illegal year value"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>

                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name><name>data</name>.
                                    <name>month</name>
                                </name>
                                &lt;1 ||
                                <name><name>data</name>.
                                    <name>month</name>
                                </name>
                                &gt;12
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>RuntimeException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"The month must have values 1 to 12"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>

                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">//validate days</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>data</name>.
                                    <name>day</name>
                                </name>
                                &gt;
                                <call>
                                    <name>maxDayInMonthFor</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>data</name>.
                                                    <name>year</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>data</name>.
                                                    <name>month</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                ||
                                <name><name>data</name>.
                                    <name>day</name>
                                </name>
                                &lt;1
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>RuntimeException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"The day must have values 1 to 31"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">//validate hours</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>data</name>.
                                    <name>hour</name>
                                </name>
                                &gt;23 ||
                                <name><name>data</name>.
                                    <name>hour</name>
                                </name>
                                &lt;0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>data</name>.
                                                <name>hour</name>
                                            </name>
                                            == 24 &amp;&amp;
                                            <name><name>data</name>.
                                                <name>minute</name>
                                            </name>
                                            == 0 &amp;&amp;
                                            <name><name>data</name>.
                                                <name>second</name>
                                            </name>
                                            == 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name><name>data</name>.
                                                        <name>hour</name>
                                                    </name>
                                                    = 0
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>++
                                                        <name><name>data</name>.
                                                            <name>day</name>
                                                        </name>
                                                        &gt;
                                                        <call>
                                                            <name>maxDayInMonthFor</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>data</name>.
                                                                            <name>year</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>data</name>.
                                                                            <name>month</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <name><name>data</name>.
                                                                    <name>day</name>
                                                                </name>
                                                                = 1
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <if>if
                                                            <condition>(
                                                                <expr>++
                                                                    <name><name>data</name>.
                                                                        <name>month</name>
                                                                    </name>
                                                                    &gt; 12
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name><name>data</name>.
                                                                                <name>month</name>
                                                                            </name>
                                                                            = 1
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <if>if
                                                                        <condition>(
                                                                            <expr>
                                                                                <name><name>Constants</name>.
                                                                                    <name>SCHEMA_1_1_SUPPORT</name>
                                                                                </name>
                                                                            </expr>
                                                                            )
                                                                        </condition>
                                                                        <then>
                                                                            <block>{
                                                                                <expr_stmt>
                                                                                    <expr>++
                                                                                        <name><name>data</name>.
                                                                                            <name>year</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                }
                                                                            </block>
                                                                        </then>
                                                                        <else>else
                                                                            <if>if
                                                                                <condition>(
                                                                                    <expr>++
                                                                                        <name><name>data</name>.
                                                                                            <name>year</name>
                                                                                        </name>
                                                                                        == 0
                                                                                    </expr>
                                                                                    )
                                                                                </condition>
                                                                                <then>
                                                                                    <block>{
                                                                                        <expr_stmt>
                                                                                            <expr>
                                                                                                <name><name>data</name>.
                                                                                                    <name>year</name>
                                                                                                </name>
                                                                                                = 1
                                                                                            </expr>
                                                                                            ;
                                                                                        </expr_stmt>
                                                                                        }
                                                                                    </block>
                                                                                </then>
                                                                            </if>
                                                                        </else>
                                                                    </if>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>RuntimeException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"Hour must have values 0-23, unless 24:00:00"
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">//validate</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>data</name>.
                                    <name>minute</name>
                                </name>
                                &gt;59 ||
                                <name><name>data</name>.
                                    <name>minute</name>
                                </name>
                                &lt;0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>RuntimeException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Minute must have values 0-59"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">//validate</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>data</name>.
                                    <name>second</name>
                                </name>
                                &gt;=60 ||
                                <name><name>data</name>.
                                    <name>second</name>
                                </name>
                                &lt;0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>RuntimeException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Second must have values 0-59"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>

                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">//validate</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>data</name>.
                                    <name>timezoneHr</name>
                                </name>
                                &gt;14 ||
                                <name><name>data</name>.
                                    <name>timezoneHr</name>
                                </name>
                                &lt;-14
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>RuntimeException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Time zone should have range -14:00 to +14:00"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>(
                                            <name><name>data</name>.
                                                <name>timezoneHr</name>
                                            </name>
                                            == 14 ||
                                            <name><name>data</name>.
                                                <name>timezoneHr</name>
                                            </name>
                                            == -14) &amp;&amp;
                                            <name><name>data</name>.
                                                <name>timezoneMin</name>
                                            </name>
                                            != 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <throw>throw
                                            <expr>new
                                                <call>
                                                    <name>RuntimeException</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"Time zone should have range -14:00 to +14:00"</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </throw>
                                    </then>
                                    <else>else
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name><name>data</name>.
                                                        <name>timezoneMin</name>
                                                    </name>
                                                    &gt; 59 ||
                                                    <name><name>data</name>.
                                                        <name>timezoneMin</name>
                                                    </name>
                                                    &lt; -59
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <throw>throw
                                                    <expr>new
                                                        <call>
                                                            <name>RuntimeException</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"Minute must have values 0-59"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </throw>
                                            </then>
                                        </if>
                                    </else>
                                </if>
                                }
                            </block>
                        </else>
                    </if>

                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Return index of UTC char: 'Z', '+', '-'
                *
                * @param start
                * @param end
                * @return index of the UTC character that was found
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>int</name>
                </type>
                <name>findUTCSign</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>buffer</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>start</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>end</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>c</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name>=
                                <init>
                                    <expr>
                                        <name>start</name>
                                    </expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr><name>i</name>&lt;
                                <name>end</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <expr_stmt>
                                <expr><name>c</name>=
                                    <call>
                                        <name><name>buffer</name>.
                                            <name>charAt</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>i</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>c</name>
                                        == 'Z' || <name>c</name>=='+' || <name>c</name>=='-'
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>
                                                <name>i</name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>

                            }
                        </block>
                    </for>
                    <return>return <expr>-1</expr>;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Given start and end position, parses string value
                *
                * @param buffer string to parse
                * @param start start position
                * @param end end position
                * @return return integer representation of characters
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>int</name>
                </type>
                <name>parseInt</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>buffer</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>start</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>end</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>NumberFormatException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <comment type="line">//REVISIT: more testing on this parsing needs to be done.</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>radix</name>=
                            <init>
                                <expr>10</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>result</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>digit</name>=
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>limit</name> =
                            <init>
                                <expr>-
                                    <name><name>Integer</name>.
                                        <name>MAX_VALUE</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>multmin</name> =
                            <init>
                                <expr>
                                    <name>limit</name>
                                    /
                                    <name>radix</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>i</name> =
                            <init>
                                <expr>
                                    <name>start</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <do>do
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>digit</name>
                                    =
                                    <call>
                                        <name>getDigit</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>buffer</name>.
                                                            <name>charAt</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>i</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>digit</name>
                                        &lt; 0
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <throw>throw
                                        <expr>new
                                            <call>
                                                <name>NumberFormatException</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>"'" + <name>buffer</name> + "' has wrong format"
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </throw>
                                </then>
                            </if>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>result</name>
                                        &lt;
                                        <name>multmin</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <throw>throw
                                        <expr>new
                                            <call>
                                                <name>NumberFormatException</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>"'" + <name>buffer</name> + "' has wrong format"
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </throw>
                                </then>
                            </if>
                            <expr_stmt>
                                <expr>
                                    <name>result</name>
                                    *=
                                    <name>radix</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>result</name>
                                        &lt; <name>limit</name> +
                                        <name>digit</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <throw>throw
                                        <expr>new
                                            <call>
                                                <name>NumberFormatException</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>"'" + <name>buffer</name> + "' has wrong format"
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </throw>
                                </then>
                            </if>
                            <expr_stmt>
                                <expr>
                                    <name>result</name>
                                    -=
                                    <name>digit</name>
                                </expr>
                                ;
                            </expr_stmt>

                            }
                        </block>
                        while
                        <condition>(
                            <expr>++<name>i</name> &lt;
                                <name>end</name>
                            </expr>
                            )
                        </condition>
                        ;
                    </do>
                    <return>return
                        <expr>-
                            <name>result</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">// parse Year differently to support negative value.</comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>int</name>
                </type>
                <name>parseIntYear</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>buffer</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>end</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>radix</name>=
                            <init>
                                <expr>10</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>result</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>negative</name> =
                            <init>
                                <expr>false</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>i</name>=
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>limit</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>multmin</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>digit</name>=
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>buffer</name>.
                                        <name>charAt</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>0</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                == '-'
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>negative</name>
                                        = true
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>limit</name>
                                        =
                                        <name><name>Integer</name>.
                                            <name>MIN_VALUE</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr><name>i</name>++
                                    </expr>
                                    ;
                                </expr_stmt>

                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>limit</name>
                                        = -
                                        <name><name>Integer</name>.
                                            <name>MAX_VALUE</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name>multmin</name>
                            = <name>limit</name> /
                            <name>radix</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <while>while
                        <condition>(
                            <expr>
                                <name>i</name>
                                &lt;
                                <name>end</name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>digit</name>
                                    =
                                    <call>
                                        <name>getDigit</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>buffer</name>.
                                                            <name>charAt</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr><name>i</name>++
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>digit</name>
                                        &lt; 0
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <throw>throw
                                        <expr>new
                                            <call>
                                                <name>NumberFormatException</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>"'" + <name>buffer</name> + "' has wrong format"
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </throw>
                                </then>
                            </if>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>result</name>
                                        &lt;
                                        <name>multmin</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <throw>throw
                                        <expr>new
                                            <call>
                                                <name>NumberFormatException</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>"'" + <name>buffer</name> + "' has wrong format"
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </throw>
                                </then>
                            </if>
                            <expr_stmt>
                                <expr>
                                    <name>result</name>
                                    *=
                                    <name>radix</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>result</name>
                                        &lt; <name>limit</name> +
                                        <name>digit</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <throw>throw
                                        <expr>new
                                            <call>
                                                <name>NumberFormatException</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>"'" + <name>buffer</name> + "' has wrong format"
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </throw>
                                </then>
                            </if>
                            <expr_stmt>
                                <expr>
                                    <name>result</name>
                                    -=
                                    <name>digit</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </while>

                    <if>if
                        <condition>(
                            <expr>
                                <name>negative</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>i</name>
                                            &gt; 1
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <return>return
                                            <expr>
                                                <name>result</name>
                                            </expr>
                                            ;
                                        </return>
                                    </then>
                                    <else>else
                                        <throw>throw
                                            <expr>new
                                                <call>
                                                    <name>NumberFormatException</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"'" + <name>buffer</name> + "' has wrong format"
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </throw>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>-
                            <name>result</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * If timezone present - normalize dateTime [E Adding durations to dateTimes]
                *
                * @param date CCYY-MM-DDThh:mm:ss+03
                * @return CCYY-MM-DDThh:mm:ssZ
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>normalize</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>DateTimeData</name>
                            </type>
                            <name>date</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <comment type="line">// REVISIT: we have common code in addDuration() for durations</comment>
                    <comment type="line">// should consider reorganizing it.</comment>
                    <comment type="line">//</comment>

                    <comment type="line">//add minutes (from time zone)</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>negate</name> =
                            <init>
                                <expr>-1</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <name>DEBUG</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>println</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"==&gt;date.minute"+
                                                        <name><name>date</name>.
                                                            <name>minute</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>println</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"==&gt;date.timezoneMin" +
                                                        <name><name>date</name>.
                                                            <name>timezoneMin</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>temp</name> =
                            <init>
                                <expr>
                                    <name><name>date</name>.
                                        <name>minute</name>
                                    </name>
                                    + <name>negate</name> *
                                    <name><name>date</name>.
                                        <name>timezoneMin</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>carry</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>fQuotient</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>temp</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>60</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>date</name>.
                                <name>minute</name>
                            </name>
                            =
                            <call>
                                <name>mod</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>temp</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>60</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>carry</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <name>DEBUG</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>println</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"==&gt;carry: " +
                                                        <name>carry</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">//add hours</comment>
                    <expr_stmt>
                        <expr>
                            <name>temp</name>
                            =
                            <name><name>date</name>.
                                <name>hour</name>
                            </name>
                            + <name>negate</name> *
                            <name><name>date</name>.
                                <name>timezoneHr</name>
                            </name>
                            +
                            <name>carry</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>carry</name>
                            =
                            <call>
                                <name>fQuotient</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>temp</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>24</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>date</name>.
                                <name>hour</name>
                            </name>
                            =
                            <call>
                                <name>mod</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>temp</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>24</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>carry</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>DEBUG</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>println</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"==&gt;date.hour"+
                                                        <name><name>date</name>.
                                                            <name>hour</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>println</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"==&gt;carry: " +
                                                        <name>carry</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <expr_stmt>
                        <expr>
                            <name><name>date</name>.
                                <name>day</name>
                            </name>
                            =
                            <name><name>date</name>.
                                <name>day</name>
                            </name>
                            +
                            <name>carry</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <while>while
                        <condition>( <expr>true</expr> )
                        </condition>
                        <block>{
                            <expr_stmt>
                                <expr><name>temp</name>=
                                    <call>
                                        <name>maxDayInMonthFor</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>date</name>.
                                                        <name>year</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>date</name>.
                                                        <name>month</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name><name>date</name>.
                                            <name>day</name>
                                        </name>
                                        &lt;1
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name><name>date</name>.
                                                    <name>day</name>
                                                </name>
                                                =
                                                <name><name>date</name>.
                                                    <name>day</name>
                                                </name>
                                                +
                                                <call>
                                                    <name>maxDayInMonthFor</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>date</name>.
                                                                    <name>year</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>date</name>.
                                                                    <name>month</name>
                                                                </name>
                                                                -1
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr><name>carry</name>=-1
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name><name>date</name>.
                                                    <name>day</name>
                                                </name>
                                                &gt;
                                                <name>temp</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name><name>date</name>.
                                                            <name>day</name>
                                                        </name>
                                                        =
                                                        <name><name>date</name>.
                                                            <name>day</name>
                                                        </name>
                                                        -
                                                        <name>temp</name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr><name>carry</name>=1
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <block>{
                                                <break>break;</break>
                                                }
                                            </block>
                                        </else>
                                    </if>
                                </else>
                            </if>
                            <expr_stmt>
                                <expr><name>temp</name>=
                                    <name><name>date</name>.
                                        <name>month</name>
                                    </name>
                                    +
                                    <name>carry</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>date</name>.
                                        <name>month</name>
                                    </name>
                                    =
                                    <call>
                                        <name>modulo</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>temp</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>1</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>13</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>date</name>.
                                        <name>year</name>
                                    </name>
                                    =
                                    <name><name>date</name>.
                                        <name>year</name>
                                    </name>
                                    +
                                    <call>
                                        <name>fQuotient</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>temp</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>1</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>13</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name><name>date</name>.
                                            <name>year</name>
                                        </name>
                                        == 0 &amp;&amp; !
                                        <name><name>Constants</name>.
                                            <name>SCHEMA_1_1_SUPPORT</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name><name>date</name>.
                                                    <name>year</name>
                                                </name>
                                                = (
                                                <name><name>date</name>.
                                                    <name>timezoneHr</name>
                                                </name>
                                                &lt; 0 ||
                                                <name><name>date</name>.
                                                    <name>timezoneMin</name>
                                                </name>
                                                &lt; 0)?1:-1
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </while>
                    <expr_stmt>
                        <expr>
                            <name><name>date</name>.
                                <name>utc</name>
                            </name>
                            ='Z'
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * @param date
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>saveUnnormalized</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>DateTimeData</name>
                            </type>
                            <name>date</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>date</name>.
                                <name>unNormYear</name>
                            </name>
                            =
                            <name><name>date</name>.
                                <name>year</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>date</name>.
                                <name>unNormMonth</name>
                            </name>
                            =
                            <name><name>date</name>.
                                <name>month</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>date</name>.
                                <name>unNormDay</name>
                            </name>
                            =
                            <name><name>date</name>.
                                <name>day</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>date</name>.
                                <name>unNormHour</name>
                            </name>
                            =
                            <name><name>date</name>.
                                <name>hour</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>date</name>.
                                <name>unNormMinute</name>
                            </name>
                            =
                            <name><name>date</name>.
                                <name>minute</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>date</name>.
                                <name>unNormSecond</name>
                            </name>
                            =
                            <name><name>date</name>.
                                <name>second</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Resets object representation of date/time
                *
                * @param data date/time object
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>resetDateObj</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>DateTimeData</name>
                            </type>
                            <name>data</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>data</name>.
                                <name>year</name>
                            </name>
                            = 0
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>data</name>.
                                <name>month</name>
                            </name>
                            = 0
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>data</name>.
                                <name>day</name>
                            </name>
                            = 0
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>data</name>.
                                <name>hour</name>
                            </name>
                            = 0
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>data</name>.
                                <name>minute</name>
                            </name>
                            = 0
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>data</name>.
                                <name>second</name>
                            </name>
                            = 0
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>data</name>.
                                <name>utc</name>
                            </name>
                            = 0
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>data</name>.
                                <name>timezoneHr</name>
                            </name>
                            = 0
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>data</name>.
                                <name>timezoneMin</name>
                            </name>
                            = 0
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Given {year,month} computes maximum
                * number of days for given month
                *
                * @param year
                * @param month
                * @return integer containg the number of days in a given month
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>int</name>
                </type>
                <name>maxDayInMonthFor</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>year</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>month</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">//validate days</comment>
                    <if>if
                        <condition>(
                            <expr><name>month</name>==4 || <name>month</name>==6 || <name>month</name>==9 || <name>
                                month</name>==11
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>30</expr>;
                                </return>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr><name>month</name>==2
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name>isLeapYear</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>year</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <return>return <expr>29</expr>;
                                                    </return>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <block>{
                                                    <return>return <expr>28</expr>;
                                                    </return>
                                                    }
                                                </block>
                                            </else>
                                        </if>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <return>return <expr>31</expr>;
                                        </return>
                                        }
                                    </block>
                                </else>
                            </if>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name>boolean</name>
                </type>
                <name>isLeapYear</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>year</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <comment type="line">//REVISIT: should we take care about Julian calendar?</comment>
                    <return>return
                        <expr>((<name>year</name>%4 == 0) &amp;&amp; ((<name>year</name>%100 != 0) || (<name>year</name>%400
                            == 0)))
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">//</comment>
            <comment type="line">// help function described in W3C PR Schema [E Adding durations to dateTimes]</comment>
            <comment type="line">//</comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>int</name>
                </type>
                <name>mod</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>a</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>b</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>quotient</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">//modulo(a, b) = a - fQuotient(a,b)*b</comment>
                    <return>return
                        <expr>(<name>a</name> - <name>quotient</name>*<name>b</name>)
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">//</comment>
            <comment type="line">// help function described in W3C PR Schema [E Adding durations to dateTimes]</comment>
            <comment type="line">//</comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>int</name>
                </type>
                <name>fQuotient</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>a</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>b</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <comment type="line">//fQuotient(a, b) = the greatest integer less than or equal to a/b</comment>
                    <return>return
                        <expr>(<name>int</name>)
                            <call>
                                <name><name>Math</name>.
                                    <name>floor</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>(<name>float</name>)<name>a</name>/
                                            <name>b</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">//</comment>
            <comment type="line">// help function described in W3C PR Schema [E Adding durations to dateTimes]</comment>
            <comment type="line">//</comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>int</name>
                </type>
                <name>modulo</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>temp</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>low</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>high</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">//modulo(a - low, high - low) + low</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>a</name> =
                            <init>
                                <expr>
                                    <name>temp</name>
                                    -
                                    <name>low</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>b</name> =
                            <init>
                                <expr>
                                    <name>high</name>
                                    -
                                    <name>low</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>(
                            <call>
                                <name>mod</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>a</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>b</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>fQuotient</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>a</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>b</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            + <name>low</name>)
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">//</comment>
            <comment type="line">// help function described in W3C PR Schema [E Adding durations to dateTimes]</comment>
            <comment type="line">//</comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>int</name>
                </type>
                <name>fQuotient</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>temp</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>low</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>high</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">//fQuotient(a - low, high - low)</comment>

                    <return>return
                        <expr>
                            <call>
                                <name>fQuotient</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>temp</name>
                                            -
                                            <name>low</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>high</name>
                                            -
                                            <name>low</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>String</name>
                </type>
                <name>dateToString</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>DateTimeData</name>
                            </type>
                            <name>date</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>StringBuffer</name>
                            </type>
                            <name>message</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>StringBuffer</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>25</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>append</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>message</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>date</name>.
                                                <name>year</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>4</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>message</name>.
                                    <name>append</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>'-'</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>append</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>message</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>date</name>.
                                                <name>month</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>2</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>message</name>.
                                    <name>append</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>'-'</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>append</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>message</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>date</name>.
                                                <name>day</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>2</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>message</name>.
                                    <name>append</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>'T'</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>append</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>message</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>date</name>.
                                                <name>hour</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>2</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>message</name>.
                                    <name>append</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>':'</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>append</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>message</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>date</name>.
                                                <name>minute</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>2</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>message</name>.
                                    <name>append</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>':'</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>append</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>message</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>date</name>.
                                                <name>second</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>append</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>message</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>(<name>char</name>)
                                            <name><name>date</name>.
                                                <name>utc</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <call>
                                <name><name>message</name>.
                                    <name>toString</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>append</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>StringBuffer</name>
                            </type>
                            <name>message</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>nch</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>value</name>
                                ==
                                <name><name>Integer</name>.
                                    <name>MIN_VALUE</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>message</name>.
                                                <name>append</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>value</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>value</name>
                                &lt; 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>message</name>.
                                                <name>append</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>'-'</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>value</name>
                                        = -
                                        <name>value</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>nch</name>
                                == 4
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>value</name>
                                            &lt; 10
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>message</name>.
                                                        <name>append</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"000"</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                    </then>
                                    <else>else
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>value</name>
                                                    &lt; 100
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>message</name>.
                                                                <name>append</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"00"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                            </then>
                                            <else>else
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>value</name>
                                                            &lt; 1000
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>message</name>.
                                                                        <name>append</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"0"</expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                    </then>
                                                </if>
                                            </else>
                                        </if>
                                    </else>
                                </if>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>message</name>.
                                                <name>append</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>value</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>nch</name>
                                        == 2
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>value</name>
                                                    &lt; 10
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>message</name>.
                                                                <name>append</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>'0'</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>message</name>.
                                                        <name>append</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>value</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>value</name>
                                                    != 0
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>message</name>.
                                                                <name>append</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>(<name>char</name>)
                                                                        <name>value</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </else>
                            </if>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>append</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>StringBuffer</name>
                            </type>
                            <name>message</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>value</name>
                                &lt; 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>message</name>.
                                                <name>append</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>'-'</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>value</name>
                                        = -
                                        <name>value</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>value</name>
                                &lt; 10
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>message</name>.
                                            <name>append</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>'0'</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>message</name>.
                                    <name>append</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>value</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>double</name>
                </type>
                <name>parseSecond</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>buffer</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>start</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>end</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>NumberFormatException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>dot</name> =
                            <init>
                                <expr>-1</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>
                                        <name>start</name>
                                    </expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name>end</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>char</name>
                                    </type>
                                    <name>ch</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>buffer</name>.
                                                    <name>charAt</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>ch</name>
                                        == '.'
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <expr_stmt>
                                        <expr>
                                            <name>dot</name>
                                            =
                                            <name>i</name>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                </then>
                                <else>else
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>ch</name>
                                                &gt; '9' || <name>ch</name> &lt; '0'
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>NumberFormatException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"'" + <name>buffer</name> + "' has wrong format"
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                        </then>
                                    </if>
                                </else>
                            </if>
                            }
                        </block>
                    </for>
                    <if>if
                        <condition>(
                            <expr>
                                <name>dot</name>
                                == -1
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr><name>start</name>+2 !=
                                            <name>end</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <throw>throw
                                            <expr>new
                                                <call>
                                                    <name>NumberFormatException</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"'" + <name>buffer</name> + "' has wrong format"
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </throw>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr><name>start</name>+2 != <name>dot</name> || <name>dot</name>+1 ==
                                        <name>end</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <throw>throw
                                            <expr>new
                                                <call>
                                                    <name>NumberFormatException</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"'" + <name>buffer</name> + "' has wrong format"
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </throw>
                                        }
                                    </block>
                                </then>
                            </if>
                        </else>
                    </if>
                    <return>return
                        <expr>
                            <call>
                                <name><name>Double</name>.
                                    <name>parseDouble</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>buffer</name>.
                                                    <name>substring</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>start</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>end</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">//</comment>
            <comment type="line">//Private help functions</comment>
            <comment type="line">//</comment>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name>void</name>
                </type>
                <name>cloneDate</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>DateTimeData</name>
                            </type>
                            <name>finalValue</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>DateTimeData</name>
                            </type>
                            <name>tempDate</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>tempDate</name>.
                                <name>year</name>
                            </name>
                            =
                            <name><name>finalValue</name>.
                                <name>year</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>tempDate</name>.
                                <name>month</name>
                            </name>
                            =
                            <name><name>finalValue</name>.
                                <name>month</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>tempDate</name>.
                                <name>day</name>
                            </name>
                            =
                            <name><name>finalValue</name>.
                                <name>day</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>tempDate</name>.
                                <name>hour</name>
                            </name>
                            =
                            <name><name>finalValue</name>.
                                <name>hour</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>tempDate</name>.
                                <name>minute</name>
                            </name>
                            =
                            <name><name>finalValue</name>.
                                <name>minute</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>tempDate</name>.
                                <name>second</name>
                            </name>
                            =
                            <name><name>finalValue</name>.
                                <name>second</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>tempDate</name>.
                                <name>utc</name>
                            </name>
                            =
                            <name><name>finalValue</name>.
                                <name>utc</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>tempDate</name>.
                                <name>timezoneHr</name>
                            </name>
                            =
                            <name><name>finalValue</name>.
                                <name>timezoneHr</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>tempDate</name>.
                                <name>timezoneMin</name>
                            </name>
                            =
                            <name><name>finalValue</name>.
                                <name>timezoneMin</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Represents date time data
                */
            </comment>
            <class>
                <specifier>static</specifier>
                <specifier>final</specifier> class <name>DateTimeData</name>
                <super>
                    <implements>implements
                        <name>XSDateTime</name>
                    </implements>
                </super>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>year</name>, <name>month</name>, <name>day</name>, <name>hour</name>, <name>
                            minute</name>,
                            <name>utc</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>second</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>timezoneHr</name>,
                            <name>timezoneMin</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <name>String</name>
                            </type>
                            <name>originalValue</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>normalized</name> =
                            <init>
                                <expr>true</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>unNormYear</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>unNormMonth</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>unNormDay</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>unNormHour</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>unNormMinute</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>unNormSecond</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// used for comparisons - to decide the 'interesting' portions of</comment>
                    <comment type="line">// a date/time based data type.</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>position</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// a pointer to the type that was used go generate this data</comment>
                    <comment type="line">// note that this is not the actual simple type, but one of the</comment>
                    <comment type="line">// statically created XXXDV objects, so this won't cause any GC problem.
                    </comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>AbstractDateTimeDV</name>
                            </type>
                            <name>type</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <name>String</name>
                            </type>
                            <name>canonical</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <constructor>
                        <specifier>public</specifier>
                        <name>DateTimeData</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>originalValue</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>AbstractDateTimeDV</name>
                                    </type>
                                    <name>type</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>originalValue</name>
                                    </name>
                                    =
                                    <name>originalValue</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>type</name>
                                    </name>
                                    =
                                    <name>type</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>
                    <constructor>
                        <specifier>public</specifier>
                        <name>DateTimeData</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>year</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>month</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>day</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>hour</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>minute</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>double</name>
                                    </type>
                                    <name>second</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>utc</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>originalValue</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>boolean</name>
                                    </type>
                                    <name>normalized</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>AbstractDateTimeDV</name>
                                    </type>
                                    <name>type</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>year</name>
                                    </name>
                                    =
                                    <name>year</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>month</name>
                                    </name>
                                    =
                                    <name>month</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>day</name>
                                    </name>
                                    =
                                    <name>day</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>hour</name>
                                    </name>
                                    =
                                    <name>hour</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>minute</name>
                                    </name>
                                    =
                                    <name>minute</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>second</name>
                                    </name>
                                    =
                                    <name>second</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>utc</name>
                                    </name>
                                    =
                                    <name>utc</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>type</name>
                                    </name>
                                    =
                                    <name>type</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>originalValue</name>
                                    </name>
                                    =
                                    <name>originalValue</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>boolean</name>
                        </type>
                        <name>equals</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Object</name>
                                    </type>
                                    <name>obj</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>!(<name>obj</name>
                                        <name>instanceof</name>
                                        <name>DateTimeData</name>)
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <return>return <expr>false</expr>;
                                    </return>
                                </then>
                            </if>
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>type</name>.
                                            <name>compareDates</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>this</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>(<name>DateTimeData</name>)
                                                    <name>obj</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>true</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    ==0
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <specifier>synchronized</specifier>
                            <name>String</name>
                        </type>
                        <name>toString</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>canonical</name>
                                        ==
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>canonical</name>
                                                =
                                                <call>
                                                    <name><name>type</name>.
                                                        <name>dateToString</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>this</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            <return>return
                                <expr>
                                    <name>canonical</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    <comment type="block">/* (non-Javadoc)
                        * @see org.apache.xerces.xs.datatypes.XSDateTime#getYear()
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>int</name>
                        </type>
                        <name>getYears</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>type</name>
                                        <name>instanceof</name>
                                        <name>DurationDV</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <return>return <expr>0</expr>;
                                    </return>
                                </then>
                            </if>
                            <return>return
                                <expr><name>normalized</name>?<name>year</name>:
                                    <name>unNormYear</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    <comment type="block">/* (non-Javadoc)
                        * @see org.apache.xerces.xs.datatypes.XSDateTime#getMonth()
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>int</name>
                        </type>
                        <name>getMonths</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>type</name>
                                        <name>instanceof</name>
                                        <name>DurationDV</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr><name>year</name>*12 +
                                                <name>month</name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <return>return
                                <expr><name>normalized</name>?<name>month</name>:
                                    <name>unNormMonth</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    <comment type="block">/* (non-Javadoc)
                        * @see org.apache.xerces.xs.datatypes.XSDateTime#getDay()
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>int</name>
                        </type>
                        <name>getDays</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>type</name>
                                        <name>instanceof</name>
                                        <name>DurationDV</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <return>return <expr>0</expr>;
                                    </return>
                                </then>
                            </if>
                            <return>return
                                <expr><name>normalized</name>?<name>day</name>:
                                    <name>unNormDay</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    <comment type="block">/* (non-Javadoc)
                        * @see org.apache.xerces.xs.datatypes.XSDateTime#getHour()
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>int</name>
                        </type>
                        <name>getHours</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>type</name>
                                        <name>instanceof</name>
                                        <name>DurationDV</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <return>return <expr>0</expr>;
                                    </return>
                                </then>
                            </if>
                            <return>return
                                <expr><name>normalized</name>?<name>hour</name>:
                                    <name>unNormHour</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    <comment type="block">/* (non-Javadoc)
                        * @see org.apache.xerces.xs.datatypes.XSDateTime#getMinutes()
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>int</name>
                        </type>
                        <name>getMinutes</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>type</name>
                                        <name>instanceof</name>
                                        <name>DurationDV</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <return>return <expr>0</expr>;
                                    </return>
                                </then>
                            </if>
                            <return>return
                                <expr><name>normalized</name>?<name>minute</name>:
                                    <name>unNormMinute</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    <comment type="block">/* (non-Javadoc)
                        * @see org.apache.xerces.xs.datatypes.XSDateTime#getSeconds()
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>double</name>
                        </type>
                        <name>getSeconds</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>type</name>
                                        <name>instanceof</name>
                                        <name>DurationDV</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr><name>day</name>*24*60*60 + <name>hour</name>*60*60 + <name>
                                                minute</name>*60 +
                                                <name>second</name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <return>return
                                <expr><name>normalized</name>?<name>second</name>:
                                    <name>unNormSecond</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    <comment type="block">/* (non-Javadoc)
                        * @see org.apache.xerces.xs.datatypes.XSDateTime#hasTimeZone()
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>boolean</name>
                        </type>
                        <name>hasTimeZone</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name>utc</name>
                                    != 0
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    <comment type="block">/* (non-Javadoc)
                        * @see org.apache.xerces.xs.datatypes.XSDateTime#getTimeZoneHours()
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>int</name>
                        </type>
                        <name>getTimeZoneHours</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name>timezoneHr</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    <comment type="block">/* (non-Javadoc)
                        * @see org.apache.xerces.xs.datatypes.XSDateTime#getTimeZoneMinutes()
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>int</name>
                        </type>
                        <name>getTimeZoneMinutes</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name>timezoneMin</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    <comment type="block">/* (non-Javadoc)
                        * @see org.apache.xerces.xs.datatypes.XSDateTime#getLexicalValue()
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>String</name>
                        </type>
                        <name>getLexicalValue</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name>originalValue</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    <comment type="block">/* (non-Javadoc)
                        * @see org.apache.xerces.xs.datatypes.XSDateTime#normalize()
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>XSDateTime</name>
                        </type>
                        <name>normalize</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>!
                                        <name>normalized</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>DateTimeData</name>
                                                </type>
                                                <name>dt</name> =
                                                <init>
                                                    <expr>(<name>DateTimeData</name>)
                                                        <call>
                                                            <name><name>this</name>.
                                                                <name>clone</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>dt</name>.
                                                    <name>normalized</name>
                                                </name>
                                                = true
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <return>return
                                            <expr>
                                                <name>dt</name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <return>return
                                <expr>
                                    <name>this</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    <comment type="block">/* (non-Javadoc)
                        * @see org.apache.xerces.xs.datatypes.XSDateTime#isNormalized()
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>boolean</name>
                        </type>
                        <name>isNormalized</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name>normalized</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>Object</name>
                        </type>
                        <name>clone</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>DateTimeData</name>
                                    </type>
                                    <name>dt</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>DateTimeData</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>this</name>.
                                                                <name>year</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name><name>this</name>.
                                                                <name>month</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name><name>this</name>.
                                                                <name>day</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name><name>this</name>.
                                                                <name>hour</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name><name>this</name>.
                                                                <name>minute</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name><name>this</name>.
                                                                <name>second</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name><name>this</name>.
                                                                <name>utc</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name><name>this</name>.
                                                                <name>originalValue</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name><name>this</name>.
                                                                <name>normalized</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name><name>this</name>.
                                                                <name>type</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>dt</name>.
                                        <name>canonical</name>
                                    </name>
                                    =
                                    <name><name>this</name>.
                                        <name>canonical</name>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>dt</name>.
                                        <name>position</name>
                                    </name>
                                    =
                                    <name>position</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>dt</name>.
                                        <name>timezoneHr</name>
                                    </name>
                                    =
                                    <name><name>this</name>.
                                        <name>timezoneHr</name>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>dt</name>.
                                        <name>timezoneMin</name>
                                    </name>
                                    =
                                    <name><name>this</name>.
                                        <name>timezoneMin</name>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>dt</name>.
                                        <name>unNormYear</name>
                                    </name>
                                    =
                                    <name><name>this</name>.
                                        <name>unNormYear</name>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>dt</name>.
                                        <name>unNormMonth</name>
                                    </name>
                                    =
                                    <name><name>this</name>.
                                        <name>unNormMonth</name>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>dt</name>.
                                        <name>unNormDay</name>
                                    </name>
                                    =
                                    <name><name>this</name>.
                                        <name>unNormDay</name>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>dt</name>.
                                        <name>unNormHour</name>
                                    </name>
                                    =
                                    <name><name>this</name>.
                                        <name>unNormHour</name>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>dt</name>.
                                        <name>unNormMinute</name>
                                    </name>
                                    =
                                    <name><name>this</name>.
                                        <name>unNormMinute</name>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>dt</name>.
                                        <name>unNormSecond</name>
                                    </name>
                                    =
                                    <name><name>this</name>.
                                        <name>unNormSecond</name>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            <return>return
                                <expr>
                                    <name>dt</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="block">/* (non-Javadoc)
                        * @see org.apache.xerces.xs.datatypes.XSDateTime#getXMLGregorianCalendar()
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>XMLGregorianCalendar</name>
                        </type>
                        <name>getXMLGregorianCalendar</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>type</name>.
                                            <name>getXMLGregorianCalendar</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>this</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    <comment type="block">/* (non-Javadoc)
                        * @see org.apache.xerces.xs.datatypes.XSDateTime#getDuration()
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>Duration</name>
                        </type>
                        <name>getDuration</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>type</name>.
                                            <name>getDuration</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>this</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>XMLGregorianCalendar</name>
                </type>
                <name>getXMLGregorianCalendar</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>DateTimeData</name>
                            </type>
                            <name>data</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>Duration</name>
                </type>
                <name>getDuration</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>DateTimeData</name>
                            </type>
                            <name>data</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            }
        </block>
    </class>
</unit>
