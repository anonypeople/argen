<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\parsers\AbstractSAXParser.java">
    <comment type="block">/*
        * Copyright 2001-2005 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.
            <name>parsers</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>IOException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Locale</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.
            <name>Constants</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.
            <name>PSVIProvider</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>EntityResolverWrapper</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>EntityResolver2Wrapper</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>ErrorHandlerWrapper</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>SAXMessageFormatter</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>SymbolHash</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>XMLSymbols</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>Augmentations</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>NamespaceContext</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>QName</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XMLAttributes</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XMLLocator</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XMLResourceIdentifier</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XMLString</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XNIException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLConfigurationException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLEntityResolver</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLErrorHandler</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLInputSource</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLParseException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLParserConfiguration</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.
            <name>AttributePSVI</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.
            <name>ElementPSVI</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>xml</name>.<name>sax</name>.
            <name>AttributeList</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>xml</name>.<name>sax</name>.
            <name>Attributes</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>xml</name>.<name>sax</name>.
            <name>ContentHandler</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>xml</name>.<name>sax</name>.
            <name>DTDHandler</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>xml</name>.<name>sax</name>.
            <name>DocumentHandler</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>xml</name>.<name>sax</name>.
            <name>EntityResolver</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>xml</name>.<name>sax</name>.
            <name>ErrorHandler</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>xml</name>.<name>sax</name>.
            <name>InputSource</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>xml</name>.<name>sax</name>.
            <name>Locator</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>xml</name>.<name>sax</name>.
            <name>Parser</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>xml</name>.<name>sax</name>.
            <name>SAXException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>xml</name>.<name>sax</name>.
            <name>SAXNotRecognizedException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>xml</name>.<name>sax</name>.
            <name>SAXNotSupportedException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>xml</name>.<name>sax</name>.
            <name>SAXParseException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>xml</name>.<name>sax</name>.
            <name>XMLReader</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>xml</name>.<name>sax</name>.<name>ext</name>.
            <name>Attributes2</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>xml</name>.<name>sax</name>.<name>ext</name>.
            <name>DeclHandler</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>xml</name>.<name>sax</name>.<name>ext</name>.
            <name>EntityResolver2</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>xml</name>.<name>sax</name>.<name>ext</name>.
            <name>LexicalHandler</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>xml</name>.<name>sax</name>.<name>ext</name>.
            <name>Locator2</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>xml</name>.<name>sax</name>.<name>helpers</name>.
            <name>LocatorImpl</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * This is the base class of all SAX parsers. It implements both the
        * SAX1 and SAX2 parser functionality, while the actual pipeline is
        * defined in the parser configuration.
        *
        * @author Arnaud Le Hors, IBM
        * @author Andy Clark, IBM
        *
        * @version $Id: AbstractSAXParser.java,v 1.59 2005/06/24 02:33:43 mrglavas Exp $
        */
    </comment>
    <class>
        <specifier>public</specifier>
        <specifier>abstract</specifier> class
        <name>AbstractSAXParser</name>
        <super>
            <extends>extends
                <name>AbstractXMLDocumentParser</name>
            </extends>
            <implements>implements <name>PSVIProvider</name>,
                <comment type="line">// PSVI</comment>
                <name>Parser</name>,
                <name>XMLReader</name>
            </implements>
        </super>
        <comment type="line">// SAX1, SAX2</comment>
        <block>{

            <comment type="line">//</comment>
            <comment type="line">// Constants</comment>
            <comment type="line">//</comment>

            <comment type="line">// features</comment>

            <comment type="javadoc">/** Feature identifier: namespaces. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>NAMESPACES</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>SAX_FEATURE_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>NAMESPACES_FEATURE</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Feature identifier: namespace prefixes. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>NAMESPACE_PREFIXES</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>SAX_FEATURE_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>NAMESPACE_PREFIXES_FEATURE</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Feature id: string interning. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>STRING_INTERNING</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>SAX_FEATURE_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>STRING_INTERNING_FEATURE</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Feature identifier: allow notation and unparsed entity events to be sent out of
                order. */
            </comment>
            <comment type="line">// this is not meant to be a recognized feature, but we need it here to use</comment>
            <comment type="line">// if it is already a recognized feature for the pipeline</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>ALLOW_UE_AND_NOTATION_EVENTS</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>SAX_FEATURE_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>ALLOW_DTD_EVENTS_AFTER_ENDDTD_FEATURE</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Recognized features. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                        <index>[]</index>
                    </type>
                    <name>RECOGNIZED_FEATURES</name> =
                    <init>
                        <expr>
                            <block>{
                                <expr>
                                    <name>NAMESPACES</name>
                                </expr>
                                ,
                                <expr>
                                    <name>NAMESPACE_PREFIXES</name>
                                </expr>
                                ,
                                <expr>
                                    <name>STRING_INTERNING</name>
                                </expr>
                                ,
                                }
                            </block>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// properties</comment>

            <comment type="javadoc">/** Property id: lexical handler. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>LEXICAL_HANDLER</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>SAX_PROPERTY_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>LEXICAL_HANDLER_PROPERTY</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Property id: declaration handler. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>DECLARATION_HANDLER</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>SAX_PROPERTY_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>DECLARATION_HANDLER_PROPERTY</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Property id: DOM node. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>DOM_NODE</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>SAX_PROPERTY_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>DOM_NODE_PROPERTY</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Recognized properties. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                        <index>[]</index>
                    </type>
                    <name>RECOGNIZED_PROPERTIES</name> =
                    <init>
                        <expr>
                            <block>{
                                <expr>
                                    <name>LEXICAL_HANDLER</name>
                                </expr>
                                ,
                                <expr>
                                    <name>DECLARATION_HANDLER</name>
                                </expr>
                                ,
                                <expr>
                                    <name>DOM_NODE</name>
                                </expr>
                                ,
                                }
                            </block>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">//</comment>
            <comment type="line">// Data</comment>
            <comment type="line">//</comment>

            <comment type="line">// features</comment>

            <comment type="javadoc">/** Namespaces. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fNamespaces</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Namespace prefixes. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fNamespacePrefixes</name> =
                    <init>
                        <expr>false</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Lexical handler parameter entities. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fLexicalHandlerParameterEntities</name> =
                    <init>
                        <expr>true</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Standalone document declaration. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fStandalone</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Resolve DTD URIs. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fResolveDTDURIs</name> =
                    <init>
                        <expr>true</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Use EntityResolver2. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fUseEntityResolver2</name> =
                    <init>
                        <expr>true</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * XMLNS URIs: Namespace declarations in the
                * http://www.w3.org/2000/xmlns/ namespace.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fXMLNSURIs</name> =
                    <init>
                        <expr>false</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// parser handlers</comment>

            <comment type="javadoc">/** Content handler. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>ContentHandler</name>
                    </type>
                    <name>fContentHandler</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Document handler. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>DocumentHandler</name>
                    </type>
                    <name>fDocumentHandler</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Namespace context */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>NamespaceContext</name>
                    </type>
                    <name>fNamespaceContext</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** DTD handler. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name><name>org</name>.<name>xml</name>.<name>sax</name>.
                            <name>DTDHandler</name>
                        </name>
                    </type>
                    <name>fDTDHandler</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Decl handler. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>DeclHandler</name>
                    </type>
                    <name>fDeclHandler</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Lexical handler. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>LexicalHandler</name>
                    </type>
                    <name>fLexicalHandler</name>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>QName</name>
                    </type>
                    <name>fQName</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>QName</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// state</comment>

            <comment type="javadoc">/**
                * True if a parse is in progress. This state is needed because
                * some features/properties cannot be set while parsing (e.g.
                * validation and namespaces).
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fParseInProgress</name> =
                    <init>
                        <expr>false</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// track the version of the document being parsed</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>String</name>
                    </type>
                    <name>fVersion</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// temp vars</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>AttributesProxy</name>
                    </type>
                    <name>fAttributesProxy</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>AttributesProxy</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Augmentations</name>
                    </type>
                    <name>fAugmentations</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>


            <comment type="line">// temporary buffer for sending normalized values</comment>
            <comment type="line">// REVISIT: what should be the size of the buffer?</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>BUFFER_SIZE</name> =
                    <init>
                        <expr>20</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>char</name>
                        <index>[]</index>
                    </type>
                    <name>fCharBuffer</name> =
                    <init>
                        <expr>new
                            <name>
                                <name>char</name>
                                <index>[
                                    <expr>
                                        <name>BUFFER_SIZE</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// allows us to keep track of whether an attribute has</comment>
            <comment type="line">// been declared twice, so that we can avoid exposing the</comment>
            <comment type="line">// second declaration to any registered DeclHandler</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>SymbolHash</name>
                    </type>
                    <name>fDeclaredAttrs</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">//</comment>
            <comment type="line">// Constructors</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/** Default constructor. */</comment>
            <constructor>
                <specifier>protected</specifier>
                <name>AbstractSAXParser</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLParserConfiguration</name>
                            </type>
                            <name>config</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>super</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>config</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>config</name>.
                                    <name>addRecognizedFeatures</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>RECOGNIZED_FEATURES</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>config</name>.
                                    <name>addRecognizedProperties</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>RECOGNIZED_PROPERTIES</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>config</name>.
                                            <name>setFeature</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>ALLOW_UE_AND_NOTATION_EVENTS</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>false</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLConfigurationException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <comment type="line">// it wasn't a recognized feature, so we don't worry about it
                                </comment>
                                }
                            </block>
                        </catch>
                    </try>
                    }
                </block>
            </constructor>
            <comment type="line">// &lt;init&gt;(XMLParserConfiguration)</comment>

            <comment type="line">//</comment>
            <comment type="line">// XMLDocumentHandler methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * The start of the document.
                *
                * @param locator The document locator, or null if the document
                * location cannot be reported during the parsing
                * of this document. However, it is &lt;em&gt;strongly&lt;/em&gt;
                * recommended that a locator be supplied that can
                * at least report the system identifier of the
                * document.
                * @param encoding The auto-detected IANA encoding name of the entity
                * stream. This value will be null in those situations
                * where the entity encoding is not auto-detected (e.g.
                * internal entities or a document entity that is
                * parsed from a java.io.Reader).
                * @param namespaceContext
                * The namespace context in effect at the
                * start of this document.
                * This object represents the current context.
                * Implementors of this class are responsible
                * for copying the namespace bindings from the
                * the current context (and its parent contexts)
                * if that information is important.
                * @param augs Additional information that may include infoset augmentations
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>startDocument</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLLocator</name>
                            </type>
                            <name>locator</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>encoding</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>NamespaceContext</name>
                            </type>
                            <name>namespaceContext</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <expr_stmt>
                        <expr>
                            <name>fNamespaceContext</name>
                            =
                            <name>namespaceContext</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <try>try
                        <block>{
                            <comment type="line">// SAX1</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>fDocumentHandler</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>locator</name>
                                                    !=
                                                    <name>null</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fDocumentHandler</name>.
                                                                    <name>setDocumentLocator</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>new
                                                                            <call>
                                                                                <name>LocatorProxy</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>locator</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fDocumentHandler</name>.
                                                        <name>startDocument</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>

                            <comment type="line">// SAX2</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>fContentHandler</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>locator</name>
                                                    !=
                                                    <name>null</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fContentHandler</name>.
                                                                    <name>setDocumentLocator</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>new
                                                                            <call>
                                                                                <name>LocatorProxy</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>locator</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fContentHandler</name>.
                                                        <name>startDocument</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>SAXException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>XNIException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>e</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>

                    }
                </block>
            </function>
            <comment type="line">// startDocument(locator,encoding,augs)</comment>

            <comment type="javadoc">/**
                * Notifies of the presence of an XMLDecl line in the document. If
                * present, this method will be called immediately following the
                * startDocument call.
                *
                * @param version The XML version.
                * @param encoding The IANA encoding name of the document, or null if
                * not specified.
                * @param standalone The standalone value, or null if not specified.
                * @param augs Additional information that may include infoset augmentations
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>xmlDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>version</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>encoding</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>standalone</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <comment type="line">// the version need only be set once; if</comment>
                    <comment type="line">// document's XML 1.0|1.1, that's how it'll stay</comment>
                    <expr_stmt>
                        <expr>
                            <name>fVersion</name>
                            =
                            <name>version</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fStandalone</name>
                            = "yes".
                            <call>
                                <name>equals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>standalone</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="line">// xmlDecl(String,String,String)</comment>

            <comment type="javadoc">/**
                * Notifies of the presence of the DOCTYPE line in the document.
                *
                * @param rootElement The name of the root element.
                * @param publicId The public identifier if an external DTD or null
                * if the external DTD is specified using SYSTEM.
                * @param systemId The system identifier if an external DTD, null
                * otherwise.
                * @param augs Additional information that may include infoset augmentations
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>doctypeDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>rootElement</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>publicId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>systemId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fInDTD</name>
                            = true
                        </expr>
                        ;
                    </expr_stmt>

                    <try>try
                        <block>{
                            <comment type="line">// SAX2 extension</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>fLexicalHandler</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fLexicalHandler</name>.
                                                        <name>startDTD</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>rootElement</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>publicId</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>systemId</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>SAXException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>XNIException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>e</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>

                    <comment type="line">// is there a DeclHandler?</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDeclHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fDeclaredAttrs</name>
                                        = new
                                        <call>
                                            <name>SymbolHash</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// doctypeDecl(String,String,String)</comment>

            <comment type="javadoc">/**
                * This method notifies of the start of an entity. The DTD has the
                * pseudo-name of "[dtd]" parameter entity names start with '%'; and
                * general entity names are just the entity name.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; Since the document is an entity, the handler
                * will be notified of the start of the document entity by calling the
                * startEntity method with the entity name "[xml]" &lt;em&gt;before&lt;/em&gt; calling
                * the startDocument method. When exposing entity boundaries through the
                * SAX API, the document entity is never reported, however.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; This method is not called for entity references
                * appearing as part of attribute values.
                *
                * @param name The name of the entity.
                * @param identifier The resource identifier.
                * @param encoding The auto-detected IANA encoding name of the entity
                * stream. This value will be null in those situations
                * where the entity encoding is not auto-detected (e.g.
                * internal parameter entities).
                * @param augs Additional information that may include infoset augmentations
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>startGeneralEntity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLResourceIdentifier</name>
                            </type>
                            <name>identifier</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>encoding</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <try>try
                        <block>{
                            <comment type="line">// Only report startEntity if this entity was actually read.</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>augs</name>
                                        != <name>null</name> &amp;&amp;
                                        <call>
                                            <name><name>Boolean</name>.<name>TRUE</name>.
                                                <name>equals</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>augs</name>.
                                                                <name>getItem</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>Constants</name>.
                                                                            <name>ENTITY_SKIPPED</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <comment type="line">// report skipped entity to content handler</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>fContentHandler</name>
                                                    !=
                                                    <name>null</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fContentHandler</name>.
                                                                    <name>skippedEntity</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>name</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <comment type="line">// SAX2 extension</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>fLexicalHandler</name>
                                                    !=
                                                    <name>null</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fLexicalHandler</name>.
                                                                    <name>startEntity</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>name</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </else>
                            </if>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>SAXException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>XNIException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>e</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>

                    }
                </block>
            </function>
            <comment type="line">// startGeneralEntity(String,String,String,String,String)</comment>

            <comment type="javadoc">/**
                * This method notifies the end of an entity. The DTD has the pseudo-name
                * of "[dtd]" parameter entity names start with '%'; and general entity
                * names are just the entity name.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; Since the document is an entity, the handler
                * will be notified of the end of the document entity by calling the
                * endEntity method with the entity name "[xml]" &lt;em&gt;after&lt;/em&gt; calling
                * the endDocument method. When exposing entity boundaries through the
                * SAX API, the document entity is never reported, however.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; This method is not called for entity references
                * appearing as part of attribute values.
                *
                * @param name The name of the entity.
                * @param augs Additional information that may include infoset augmentations
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>endGeneralEntity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <try>try
                        <block>{
                            <comment type="line">// Only report endEntity if this entity was actually read.</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>augs</name>
                                        == <name>null</name> || !
                                        <call>
                                            <name><name>Boolean</name>.<name>TRUE</name>.
                                                <name>equals</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>augs</name>.
                                                                <name>getItem</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>Constants</name>.
                                                                            <name>ENTITY_SKIPPED</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <comment type="line">// SAX2 extension</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>fLexicalHandler</name>
                                                    !=
                                                    <name>null</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fLexicalHandler</name>.
                                                                    <name>endEntity</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>name</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>SAXException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>XNIException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>e</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>

                    }
                </block>
            </function>
            <comment type="line">// endEntity(String)</comment>

            <comment type="javadoc">/**
                * The start of an element. If the document specifies the start element
                * by using an empty tag, then the startElement method will immediately
                * be followed by the endElement method, with no intervening methods.
                *
                * @param element The name of the element.
                * @param attributes The element attributes.
                * @param augs Additional information that may include infoset augmentations
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>startElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>element</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLAttributes</name>
                            </type>
                            <name>attributes</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <try>try
                        <block>{
                            <comment type="line">// SAX1</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>fDocumentHandler</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <comment type="line">// REVISIT: should we support schema-normalized-value for
                                            SAX1 events
                                        </comment>
                                        <comment type="line">//</comment>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fAttributesProxy</name>.
                                                        <name>setAttributes</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>attributes</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fDocumentHandler</name>.
                                                        <name>startElement</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>element</name>.
                                                                    <name>rawname</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>fAttributesProxy</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>

                            <comment type="line">// SAX2</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>fContentHandler</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{

                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>fNamespaces</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <comment type="line">// send prefix mapping events</comment>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name>startNamespaceMapping</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>

                                                    <comment type="line">// REVISIT: It should not be necessary to
                                                        iterate over the attribute
                                                    </comment>
                                                    <comment type="line">// list when the set of [namespace attributes]
                                                        is empty for this
                                                    </comment>
                                                    <comment type="line">// element. This should be computable from the
                                                        NamespaceContext, but
                                                    </comment>
                                                    <comment type="line">// since we currently don't report the mappings
                                                        for the xml prefix
                                                    </comment>
                                                    <comment type="line">// we cannot use the declared prefix count for
                                                        the current context
                                                    </comment>
                                                    <comment type="line">// to skip this section. -- mrglavas</comment>
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>int</name>
                                                            </type>
                                                            <name>len</name> =
                                                            <init>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>attributes</name>.
                                                                            <name>getLength</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <if>if
                                                        <condition>(
                                                            <expr>!
                                                                <name>fNamespacePrefixes</name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <for>for (
                                                                    <init>
                                                                        <decl>
                                                                            <type>
                                                                                <name>int</name>
                                                                            </type>
                                                                            <name>i</name> =
                                                                            <init>
                                                                                <expr>
                                                                                    <name>len</name>
                                                                                    - 1
                                                                                </expr>
                                                                            </init>
                                                                        </decl>
                                                                        ;
                                                                    </init>
                                                                    <condition>
                                                                        <expr>
                                                                            <name>i</name>
                                                                            &gt;= 0
                                                                        </expr>
                                                                        ;
                                                                    </condition>
                                                                    <incr>
                                                                        <expr>--
                                                                            <name>i</name>
                                                                        </expr>
                                                                    </incr>
                                                                    )
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>attributes</name>.
                                                                                        <name>getName</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>i</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>fQName</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <if>if
                                                                            <condition>(
                                                                                <expr>(
                                                                                    <name><name>fQName</name>.
                                                                                        <name>prefix</name>
                                                                                    </name>
                                                                                    ==
                                                                                    <name><name>XMLSymbols</name>.
                                                                                        <name>PREFIX_XMLNS</name>
                                                                                    </name>
                                                                                    ) ||
                                                                                    (
                                                                                    <name><name>fQName</name>.
                                                                                        <name>rawname</name>
                                                                                    </name>
                                                                                    ==
                                                                                    <name><name>XMLSymbols</name>.
                                                                                        <name>PREFIX_XMLNS</name>
                                                                                    </name>
                                                                                    )
                                                                                </expr>
                                                                                )
                                                                            </condition>
                                                                            <then>
                                                                                <block>{
                                                                                    <comment type="line">// remove
                                                                                        namespace declaration attributes
                                                                                    </comment>
                                                                                    <expr_stmt>
                                                                                        <expr>
                                                                                            <call>
                                                                                                <name><name>
                                                                                                    attributes</name>.
                                                                                                    <name>
                                                                                                        removeAttributeAt
                                                                                                    </name>
                                                                                                </name>
                                                                                                <argument_list>(
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <name>i
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    )
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                        ;
                                                                                    </expr_stmt>
                                                                                    }
                                                                                </block>
                                                                            </then>
                                                                        </if>
                                                                        }
                                                                    </block>
                                                                </for>
                                                                }
                                                            </block>
                                                        </then>
                                                        <else>else
                                                            <if>if
                                                                <condition>(
                                                                    <expr>!
                                                                        <name>fXMLNSURIs</name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <for>for (
                                                                            <init>
                                                                                <decl>
                                                                                    <type>
                                                                                        <name>int</name>
                                                                                    </type>
                                                                                    <name>i</name> =
                                                                                    <init>
                                                                                        <expr>
                                                                                            <name>len</name>
                                                                                            - 1
                                                                                        </expr>
                                                                                    </init>
                                                                                </decl>
                                                                                ;
                                                                            </init>
                                                                            <condition>
                                                                                <expr>
                                                                                    <name>i</name>
                                                                                    &gt;= 0
                                                                                </expr>
                                                                                ;
                                                                            </condition>
                                                                            <incr>
                                                                                <expr>--
                                                                                    <name>i</name>
                                                                                </expr>
                                                                            </incr>
                                                                            )
                                                                            <block>{
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>
                                                                                                attributes</name>.
                                                                                                <name>getName</name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>i</name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                ,
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>fQName
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                <if>if
                                                                                    <condition>(
                                                                                        <expr>(
                                                                                            <name><name>fQName</name>.
                                                                                                <name>prefix</name>
                                                                                            </name>
                                                                                            ==
                                                                                            <name><name>
                                                                                                XMLSymbols</name>.
                                                                                                <name>PREFIX_XMLNS
                                                                                                </name>
                                                                                            </name>
                                                                                            ) ||
                                                                                            (
                                                                                            <name><name>fQName</name>.
                                                                                                <name>rawname</name>
                                                                                            </name>
                                                                                            ==
                                                                                            <name><name>
                                                                                                XMLSymbols</name>.
                                                                                                <name>PREFIX_XMLNS
                                                                                                </name>
                                                                                            </name>
                                                                                            )
                                                                                        </expr>
                                                                                        )
                                                                                    </condition>
                                                                                    <then>
                                                                                        <block>{
                                                                                            <comment type="line">//
                                                                                                localpart should be
                                                                                                empty string as per SAX
                                                                                                documentation:
                                                                                            </comment>
                                                                                            <comment type="line">//
                                                                                                http://www.saxproject.org/?selected=namespaces
                                                                                            </comment>
                                                                                            <expr_stmt>
                                                                                                <expr>
                                                                                                    <name><name>
                                                                                                        fQName</name>.
                                                                                                        <name>prefix
                                                                                                        </name>
                                                                                                    </name>
                                                                                                    = ""
                                                                                                </expr>
                                                                                                ;
                                                                                            </expr_stmt>
                                                                                            <expr_stmt>
                                                                                                <expr>
                                                                                                    <name><name>
                                                                                                        fQName</name>.
                                                                                                        <name>uri</name>
                                                                                                    </name>
                                                                                                    = ""
                                                                                                </expr>
                                                                                                ;
                                                                                            </expr_stmt>
                                                                                            <expr_stmt>
                                                                                                <expr>
                                                                                                    <name><name>
                                                                                                        fQName</name>.
                                                                                                        <name>
                                                                                                            localpart
                                                                                                        </name>
                                                                                                    </name>
                                                                                                    = ""
                                                                                                </expr>
                                                                                                ;
                                                                                            </expr_stmt>
                                                                                            <expr_stmt>
                                                                                                <expr>
                                                                                                    <call>
                                                                                                        <name><name>
                                                                                                            attributes</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                setName
                                                                                                            </name>
                                                                                                        </name>
                                                                                                        <argument_list>(
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        i
                                                                                                                    </name>
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            ,
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        fQName
                                                                                                                    </name>
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            )
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                                ;
                                                                                            </expr_stmt>
                                                                                            }
                                                                                        </block>
                                                                                    </then>
                                                                                </if>
                                                                                }
                                                                            </block>
                                                                        </for>
                                                                        }
                                                                    </block>
                                                                </then>
                                                            </if>
                                                        </else>
                                                    </if>
                                                    }
                                                </block>
                                            </then>
                                        </if>

                                        <expr_stmt>
                                            <expr>
                                                <name>fAugmentations</name>
                                                =
                                                <name>augs</name>
                                            </expr>
                                            ;
                                        </expr_stmt>

                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>String</name>
                                                </type>
                                                <name>uri</name> =
                                                <init>
                                                    <expr>
                                                        <name><name>element</name>.
                                                            <name>uri</name>
                                                        </name>
                                                        != <name>null</name> ?
                                                        <name><name>element</name>.
                                                            <name>uri</name>
                                                        </name>
                                                        : ""
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>String</name>
                                                </type>
                                                <name>localpart</name> =
                                                <init>
                                                    <expr>
                                                        <name>fNamespaces</name>
                                                        ?
                                                        <name><name>element</name>.
                                                            <name>localpart</name>
                                                        </name>
                                                        : ""
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fAttributesProxy</name>.
                                                        <name>setAttributes</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>attributes</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fContentHandler</name>.
                                                        <name>startElement</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>uri</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>localpart</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>element</name>.
                                                                    <name>rawname</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>fAttributesProxy</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>SAXException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>XNIException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>e</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>

                    }
                </block>
            </function>
            <comment type="line">// startElement(QName,XMLAttributes)</comment>

            <comment type="javadoc">/**
                * Character content.
                *
                * @param text The content.
                * @param augs Additional information that may include infoset augmentations
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>characters</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLString</name>
                            </type>
                            <name>text</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// if type is union (XML Schema) it is possible that we receive</comment>
                    <comment type="line">// character call with empty data</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>text</name>.
                                    <name>length</name>
                                </name>
                                == 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>


                    <try>try
                        <block>{
                            <comment type="line">// SAX1</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>fDocumentHandler</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <comment type="line">// REVISIT: should we support schema-normalized-value for
                                            SAX1 events
                                        </comment>
                                        <comment type="line">//</comment>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fDocumentHandler</name>.
                                                        <name>characters</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>text</name>.
                                                                    <name>ch</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>text</name>.
                                                                    <name>offset</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>text</name>.
                                                                    <name>length</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>

                            <comment type="line">// SAX2</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>fContentHandler</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fContentHandler</name>.
                                                        <name>characters</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>text</name>.
                                                                    <name>ch</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>text</name>.
                                                                    <name>offset</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>text</name>.
                                                                    <name>length</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>SAXException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>XNIException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>e</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>

                    }
                </block>
            </function>
            <comment type="line">// characters(XMLString)</comment>

            <comment type="javadoc">/**
                * Ignorable whitespace. For this method to be called, the document
                * source must have some way of determining that the text containing
                * only whitespace characters should be considered ignorable. For
                * example, the validator can determine if a length of whitespace
                * characters in the document are ignorable based on the element
                * content model.
                *
                * @param text The ignorable whitespace.
                * @param augs Additional information that may include infoset augmentations
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>ignorableWhitespace</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLString</name>
                            </type>
                            <name>text</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <try>try
                        <block>{
                            <comment type="line">// SAX1</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>fDocumentHandler</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fDocumentHandler</name>.
                                                        <name>ignorableWhitespace</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>text</name>.
                                                                    <name>ch</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>text</name>.
                                                                    <name>offset</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>text</name>.
                                                                    <name>length</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>

                            <comment type="line">// SAX2</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>fContentHandler</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fContentHandler</name>.
                                                        <name>ignorableWhitespace</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>text</name>.
                                                                    <name>ch</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>text</name>.
                                                                    <name>offset</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>text</name>.
                                                                    <name>length</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>SAXException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>XNIException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>e</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>

                    }
                </block>
            </function>
            <comment type="line">// ignorableWhitespace(XMLString)</comment>

            <comment type="javadoc">/**
                * The end of an element.
                *
                * @param element The name of the element.
                * @param augs Additional information that may include infoset augmentations
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>endElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>element</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{


                    <try>try
                        <block>{
                            <comment type="line">// SAX1</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>fDocumentHandler</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fDocumentHandler</name>.
                                                        <name>endElement</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>element</name>.
                                                                    <name>rawname</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>

                            <comment type="line">// SAX2</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>fContentHandler</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>fAugmentations</name>
                                                =
                                                <name>augs</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>String</name>
                                                </type>
                                                <name>uri</name> =
                                                <init>
                                                    <expr>
                                                        <name><name>element</name>.
                                                            <name>uri</name>
                                                        </name>
                                                        != <name>null</name> ?
                                                        <name><name>element</name>.
                                                            <name>uri</name>
                                                        </name>
                                                        : ""
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>String</name>
                                                </type>
                                                <name>localpart</name> =
                                                <init>
                                                    <expr>
                                                        <name>fNamespaces</name>
                                                        ?
                                                        <name><name>element</name>.
                                                            <name>localpart</name>
                                                        </name>
                                                        : ""
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fContentHandler</name>.
                                                        <name>endElement</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>uri</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>localpart</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>element</name>.
                                                                    <name>rawname</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>fNamespaces</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name>endNamespaceMapping</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>SAXException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>XNIException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>e</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>

                    }
                </block>
            </function>
            <comment type="line">// endElement(QName)</comment>

            <comment type="javadoc">/**
                * The start of a CDATA section.
                * @param augs Additional information that may include infoset augmentations
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>startCDATA</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <try>try
                        <block>{
                            <comment type="line">// SAX2 extension</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>fLexicalHandler</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fLexicalHandler</name>.
                                                        <name>startCDATA</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>SAXException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>XNIException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>e</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>

                    }
                </block>
            </function>
            <comment type="line">// startCDATA()</comment>

            <comment type="javadoc">/**
                * The end of a CDATA section.
                * @param augs Additional information that may include infoset augmentations
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>endCDATA</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <try>try
                        <block>{
                            <comment type="line">// SAX2 extension</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>fLexicalHandler</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fLexicalHandler</name>.
                                                        <name>endCDATA</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>SAXException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>XNIException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>e</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>

                    }
                </block>
            </function>
            <comment type="line">// endCDATA()</comment>

            <comment type="javadoc">/**
                * A comment.
                *
                * @param text The text in the comment.
                * @param augs Additional information that may include infoset augmentations
                *
                * @throws XNIException Thrown by application to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>comment</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLString</name>
                            </type>
                            <name>text</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <try>try
                        <block>{
                            <comment type="line">// SAX2 extension</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>fLexicalHandler</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fLexicalHandler</name>.
                                                        <name>comment</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>text</name>.
                                                                    <name>ch</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>0</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>text</name>.
                                                                    <name>length</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>SAXException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>XNIException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>e</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>

                    }
                </block>
            </function>
            <comment type="line">// comment(XMLString)</comment>

            <comment type="javadoc">/**
                * A processing instruction. Processing instructions consist of a
                * target name and, optionally, text data. The data is only meaningful
                * to the application.
                * &lt;p&gt;
                * Typically, a processing instruction's data will contain a series
                * of pseudo-attributes. These pseudo-attributes follow the form of
                * element attributes but are &lt;strong&gt;not&lt;/strong&gt; parsed or presented
                * to the application as anything other than text. The application is
                * responsible for parsing the data.
                *
                * @param target The target.
                * @param data The data or null if none specified.
                * @param augs Additional information that may include infoset augmentations
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>processingInstruction</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>target</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLString</name>
                            </type>
                            <name>data</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">//</comment>
                    <comment type="line">// REVISIT - I keep running into SAX apps that expect</comment>
                    <comment type="line">// null data to be an empty string, which is contrary</comment>
                    <comment type="line">// to the comment for this method in the SAX API.</comment>
                    <comment type="line">//</comment>

                    <try>try
                        <block>{
                            <comment type="line">// SAX1</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>fDocumentHandler</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fDocumentHandler</name>.
                                                        <name>processingInstruction</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>target</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>data</name>.
                                                                        <name>toString</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>

                            <comment type="line">// SAX2</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>fContentHandler</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fContentHandler</name>.
                                                        <name>processingInstruction</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>target</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>data</name>.
                                                                        <name>toString</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>SAXException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>XNIException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>e</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>

                    }
                </block>
            </function>
            <comment type="line">// processingInstruction(String,XMLString)</comment>


            <comment type="javadoc">/**
                * The end of the document.
                * @param augs Additional information that may include infoset augmentations
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>endDocument</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <try>try
                        <block>{
                            <comment type="line">// SAX1</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>fDocumentHandler</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fDocumentHandler</name>.
                                                        <name>endDocument</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>

                            <comment type="line">// SAX2</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>fContentHandler</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fContentHandler</name>.
                                                        <name>endDocument</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>SAXException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>XNIException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>e</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>

                    }
                </block>
            </function>
            <comment type="line">// endDocument()</comment>

            <comment type="line">//</comment>
            <comment type="line">// XMLDTDHandler methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * The start of the DTD external subset.
                *
                * @param augs Additional information that may include infoset
                * augmentations.
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>startExternalSubset</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLResourceIdentifier</name>
                            </type>
                            <name>identifier</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>startParameterEntity</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"[dtd]"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>augs</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * The end of the DTD external subset.
                *
                * @param augs Additional information that may include infoset
                * augmentations.
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>endExternalSubset</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>endParameterEntity</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"[dtd]"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>augs</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * This method notifies of the start of parameter entity. The DTD has the
                * pseudo-name of "[dtd]" parameter entity names start with '%'; and
                * general entity names are just the entity name.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; Since the document is an entity, the handler
                * will be notified of the start of the document entity by calling the
                * startEntity method with the entity name "[xml]" &lt;em&gt;before&lt;/em&gt; calling
                * the startDocument method. When exposing entity boundaries through the
                * SAX API, the document entity is never reported, however.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; This method is not called for entity references
                * appearing as part of attribute values.
                *
                * @param name The name of the parameter entity.
                * @param identifier The resource identifier.
                * @param encoding The auto-detected IANA encoding name of the entity
                * stream. This value will be null in those situations
                * where the entity encoding is not auto-detected (e.g.
                * internal parameter entities).
                * @param augs Additional information that may include infoset
                * augmentations.
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>startParameterEntity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLResourceIdentifier</name>
                            </type>
                            <name>identifier</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>encoding</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <try>try
                        <block>{
                            <comment type="line">// Only report startEntity if this entity was actually read.</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>augs</name>
                                        != <name>null</name> &amp;&amp;
                                        <call>
                                            <name><name>Boolean</name>.<name>TRUE</name>.
                                                <name>equals</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>augs</name>.
                                                                <name>getItem</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>Constants</name>.
                                                                            <name>ENTITY_SKIPPED</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <comment type="line">// report skipped entity to content handler</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>fContentHandler</name>
                                                    !=
                                                    <name>null</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fContentHandler</name>.
                                                                    <name>skippedEntity</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>name</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <comment type="line">// SAX2 extension</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>fLexicalHandler</name>
                                                    != <name>null</name> &amp;&amp;
                                                    <name>fLexicalHandlerParameterEntities</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fLexicalHandler</name>.
                                                                    <name>startEntity</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>name</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </else>
                            </if>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>SAXException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>XNIException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>e</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>

                    }
                </block>
            </function>
            <comment type="line">// startParameterEntity(String,identifier,String,Augmentation)</comment>

            <comment type="javadoc">/**
                * This method notifies the end of an entity. The DTD has the pseudo-name
                * of "[dtd]" parameter entity names start with '%'; and general entity
                * names are just the entity name.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; Since the document is an entity, the handler
                * will be notified of the end of the document entity by calling the
                * endEntity method with the entity name "[xml]" &lt;em&gt;after&lt;/em&gt; calling
                * the endDocument method. When exposing entity boundaries through the
                * SAX API, the document entity is never reported, however.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; This method is not called for entity references
                * appearing as part of attribute values.
                *
                * @param name The name of the parameter entity.
                * @param augs Additional information that may include infoset
                * augmentations.
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>endParameterEntity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <try>try
                        <block>{
                            <comment type="line">// Only report endEntity if this entity was actually read.</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>augs</name>
                                        == <name>null</name> || !
                                        <call>
                                            <name><name>Boolean</name>.<name>TRUE</name>.
                                                <name>equals</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>augs</name>.
                                                                <name>getItem</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>Constants</name>.
                                                                            <name>ENTITY_SKIPPED</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <comment type="line">// SAX2 extension</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>fLexicalHandler</name>
                                                    != <name>null</name> &amp;&amp;
                                                    <name>fLexicalHandlerParameterEntities</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fLexicalHandler</name>.
                                                                    <name>endEntity</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>name</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>SAXException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>XNIException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>e</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>

                    }
                </block>
            </function>
            <comment type="line">// endEntity(String)</comment>

            <comment type="javadoc">/**
                * An element declaration.
                *
                * @param name The name of the element.
                * @param contentModel The element content model.
                *
                * @param augs Additional information that may include infoset
                * augmentations.
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>elementDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>contentModel</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <try>try
                        <block>{
                            <comment type="line">// SAX2 extension</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>fDeclHandler</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fDeclHandler</name>.
                                                        <name>elementDecl</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>name</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>contentModel</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>SAXException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>XNIException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>e</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>

                    }
                </block>
            </function>
            <comment type="line">// elementDecl(String,String, Augmentations)</comment>

            <comment type="javadoc">/**
                * An attribute declaration.
                *
                * @param elementName The name of the element that this attribute
                * is associated with.
                * @param attributeName The name of the attribute.
                * @param type The attribute type. This value will be one of
                * the following: "CDATA", "ENTITY", "ENTITIES",
                * "ENUMERATION", "ID", "IDREF", "IDREFS",
                * "NMTOKEN", "NMTOKENS", or "NOTATION".
                * @param enumeration If the type has the value "ENUMERATION" or
                * "NOTATION", this array holds the allowed attribute
                * values; otherwise, this array is null.
                * @param defaultType The attribute default type. This value will be
                * one of the following: "#FIXED", "#IMPLIED",
                * "#REQUIRED", or null.
                * @param defaultValue The attribute default value, or null if no
                * default value is specified.
                *
                * @param nonNormalizedDefaultValue The attribute default value with no normalization
                * performed, or null if no default value is specified.
                * @param augs Additional information that may include infoset
                * augmentations.
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>attributeDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>elementName</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>attributeName</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>String</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>enumeration</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>defaultType</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLString</name>
                            </type>
                            <name>defaultValue</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLString</name>
                            </type>
                            <name>nonNormalizedDefaultValue</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <try>try
                        <block>{
                            <comment type="line">// SAX2 extension</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>fDeclHandler</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <comment type="line">// used as a key to detect duplicate attribute
                                            definitions.
                                        </comment>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>String</name>
                                                </type>
                                                <name>elemAttr</name> =
                                                <init>
                                                    <expr>new
                                                        <call>
                                                            <name>StringBuffer</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>elementName</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                        .
                                                        <call>
                                                            <name>append</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"&lt;"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                        .
                                                        <call>
                                                            <name>append</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>attributeName</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                        .
                                                        <call>
                                                            <name>toString</name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>fDeclaredAttrs</name>.
                                                            <name>get</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>elemAttr</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    !=
                                                    <name>null</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <comment type="line">// we aren't permitted to return duplicate
                                                        attribute definitions
                                                    </comment>
                                                    <return>return;</return>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fDeclaredAttrs</name>.
                                                        <name>put</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>elemAttr</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>Boolean</name>.
                                                                    <name>TRUE</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>type</name>.
                                                            <name>equals</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"NOTATION"</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    ||
                                                    <call>
                                                        <name><name>type</name>.
                                                            <name>equals</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"ENUMERATION"</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{

                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>StringBuffer</name>
                                                            </type>
                                                            <name>str</name> =
                                                            <init>
                                                                <expr>new
                                                                    <call>
                                                                        <name>StringBuffer</name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <call>
                                                                    <name><name>type</name>.
                                                                        <name>equals</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"NOTATION"</expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>str</name>.
                                                                                <name>append</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>type</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>str</name>.
                                                                                <name>append</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>" ("</expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </then>
                                                        <else>else
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>str</name>.
                                                                                <name>append</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>"("</expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </else>
                                                    </if>
                                                    <for>for (
                                                        <init>
                                                            <decl>
                                                                <type>
                                                                    <name>int</name>
                                                                </type>
                                                                <name>i</name> =
                                                                <init>
                                                                    <expr>0</expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </init>
                                                        <condition>
                                                            <expr>
                                                                <name>i</name>
                                                                &lt;
                                                                <name><name>enumeration</name>.
                                                                    <name>length</name>
                                                                </name>
                                                            </expr>
                                                            ;
                                                        </condition>
                                                        <incr>
                                                            <expr><name>i</name>++
                                                            </expr>
                                                        </incr>
                                                        )
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>str</name>.
                                                                            <name>append</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>
                                                                                        <name>enumeration</name>
                                                                                        <index>[
                                                                                            <expr>
                                                                                                <name>i</name>
                                                                                            </expr>
                                                                                            ]
                                                                                        </index>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name>i</name>
                                                                        &lt;
                                                                        <name><name>enumeration</name>.
                                                                            <name>length</name>
                                                                        </name>
                                                                        - 1
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>str</name>.
                                                                                        <name>append</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>'|'</expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </then>
                                                            </if>
                                                            }
                                                        </block>
                                                    </for>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>str</name>.
                                                                    <name>append</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>')'</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>type</name>
                                                            =
                                                            <call>
                                                                <name><name>str</name>.
                                                                    <name>toString</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>String</name>
                                                </type>
                                                <name>value</name> =
                                                <init>
                                                    <expr>(<name>defaultValue</name>==<name>null</name>) ? <name>null
                                                    </name> :
                                                        <call>
                                                            <name><name>defaultValue</name>.
                                                                <name>toString</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fDeclHandler</name>.
                                                        <name>attributeDecl</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>elementName</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>attributeName</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>type</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>defaultType</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>value</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>SAXException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>XNIException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>e</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>

                    }
                </block>
            </function>
            <comment type="line">// attributeDecl(String,String,String,String[],String,XMLString, XMLString,
                Augmentations)
            </comment>

            <comment type="javadoc">/**
                * An internal entity declaration.
                *
                * @param name The name of the entity. Parameter entity names start with
                * '%', whereas the name of a general entity is just the
                * entity name.
                * @param text The value of the entity.
                * @param nonNormalizedText The non-normalized value of the entity. This
                * value contains the same sequence of characters that was in
                * the internal entity declaration, without any entity
                * references expanded.
                *
                * @param augs Additional information that may include infoset
                * augmentations.
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>internalEntityDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLString</name>
                            </type>
                            <name>text</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLString</name>
                            </type>
                            <name>nonNormalizedText</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <try>try
                        <block>{
                            <comment type="line">// SAX2 extensions</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>fDeclHandler</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fDeclHandler</name>.
                                                        <name>internalEntityDecl</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>name</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>text</name>.
                                                                        <name>toString</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>SAXException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>XNIException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>e</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>

                    }
                </block>
            </function>
            <comment type="line">// internalEntityDecl(String,XMLString,XMLString)</comment>

            <comment type="javadoc">/**
                * An external entity declaration.
                *
                * @param name The name of the entity. Parameter entity names start
                * with '%', whereas the name of a general entity is just
                * the entity name.
                * @param identifier An object containing all location information
                * pertinent to this entity.
                * @param augs Additional information that may include infoset
                * augmentations.
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>externalEntityDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLResourceIdentifier</name>
                            </type>
                            <name>identifier</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <try>try
                        <block>{
                            <comment type="line">// SAX2 extension</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>fDeclHandler</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>String</name>
                                                </type>
                                                <name>publicId</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>identifier</name>.
                                                                <name>getPublicId</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>String</name>
                                                </type>
                                                <name>systemId</name> =
                                                <init>
                                                    <expr>
                                                        <name>fResolveDTDURIs</name>
                                                        ?
                                                        <call>
                                                            <name><name>identifier</name>.
                                                                <name>getExpandedSystemId</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        :
                                                        <call>
                                                            <name><name>identifier</name>.
                                                                <name>getLiteralSystemId</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fDeclHandler</name>.
                                                        <name>externalEntityDecl</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>name</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>publicId</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>systemId</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>SAXException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>XNIException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>e</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>

                    }
                </block>
            </function>
            <comment type="line">// externalEntityDecl(String,,XMLResourceIdentifier, Augmentations)</comment>

            <comment type="javadoc">/**
                * An unparsed entity declaration.
                *
                * @param name The name of the entity.
                * @param identifier An object containing all location information
                * pertinent to this entity.
                * @param notation The name of the notation.
                *
                * @param augs Additional information that may include infoset
                * augmentations.
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>unparsedEntityDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLResourceIdentifier</name>
                            </type>
                            <name>identifier</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>notation</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <try>try
                        <block>{
                            <comment type="line">// SAX2 extension</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>fDTDHandler</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>String</name>
                                                </type>
                                                <name>publicId</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>identifier</name>.
                                                                <name>getPublicId</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>String</name>
                                                </type>
                                                <name>systemId</name> =
                                                <init>
                                                    <expr>
                                                        <name>fResolveDTDURIs</name>
                                                        ?
                                                        <call>
                                                            <name><name>identifier</name>.
                                                                <name>getExpandedSystemId</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        :
                                                        <call>
                                                            <name><name>identifier</name>.
                                                                <name>getLiteralSystemId</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fDTDHandler</name>.
                                                        <name>unparsedEntityDecl</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>name</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>publicId</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>systemId</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>notation</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>SAXException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>XNIException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>e</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>

                    }
                </block>
            </function>
            <comment type="line">// unparsedEntityDecl(String,XMLResourceIdentifier, String, Augmentations)</comment>

            <comment type="javadoc">/**
                * A notation declaration
                *
                * @param name The name of the notation.
                * @param identifier An object containing all location information
                * pertinent to this notation.
                * @param augs Additional information that may include infoset
                * augmentations.
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>notationDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLResourceIdentifier</name>
                            </type>
                            <name>identifier</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <try>try
                        <block>{
                            <comment type="line">// SAX1 and SAX2</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>fDTDHandler</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>String</name>
                                                </type>
                                                <name>publicId</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>identifier</name>.
                                                                <name>getPublicId</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>String</name>
                                                </type>
                                                <name>systemId</name> =
                                                <init>
                                                    <expr>
                                                        <name>fResolveDTDURIs</name>
                                                        ?
                                                        <call>
                                                            <name><name>identifier</name>.
                                                                <name>getExpandedSystemId</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        :
                                                        <call>
                                                            <name><name>identifier</name>.
                                                                <name>getLiteralSystemId</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fDTDHandler</name>.
                                                        <name>notationDecl</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>name</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>publicId</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>systemId</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>SAXException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>XNIException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>e</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>

                    }
                </block>
            </function>
            <comment type="line">// notationDecl(String,XMLResourceIdentifier, Augmentations)</comment>

            <comment type="javadoc">/**
                * The end of the DTD.
                *
                * @param augs Additional information that may include infoset
                * augmentations.
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>endDTD</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fInDTD</name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>

                    <try>try
                        <block>{
                            <comment type="line">// SAX2 extension</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>fLexicalHandler</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fLexicalHandler</name>.
                                                        <name>endDTD</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>SAXException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>XNIException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>e</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDeclaredAttrs</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// help out the GC</comment>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDeclaredAttrs</name>.
                                                <name>clear</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// endDTD()</comment>

            <comment type="line">//</comment>
            <comment type="line">// Parser and XMLReader methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * Parses the input source specified by the given system identifier.
                * &lt;p&gt;
                * This method is equivalent to the following:
                * &lt;pre&gt;
                * parse(new InputSource(systemId));
                * &lt;/pre&gt;
                *
                * @param systemId The system identifier (URI).
                *
                * @exception org.xml.sax.SAXException Throws exception on SAX error.
                * @exception java.io.IOException Throws exception on i/o error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>parse</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>systemId</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>SAXException</name>
                        </expr>
                    </argument>
                    ,
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// parse document</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XMLInputSource</name>
                            </type>
                            <name>source</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>XMLInputSource</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>systemId</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>parse</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>source</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>

                        <comment type="line">// wrap XNI exceptions as SAX exceptions</comment>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLParseException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Exception</name>
                                        </type>
                                        <name>ex</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>e</name>.
                                                        <name>getException</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>ex</name>
                                            ==
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <comment type="line">// must be a parser exception; mine it for locator info
                                                and throw
                                            </comment>
                                            <comment type="line">// a SAXParseException</comment>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>LocatorImpl</name>
                                                    </type>
                                                    <name>locatorImpl</name> =
                                                    <init>
                                                        <expr>new
                                                            <class>
                                                                <super>
                                                                    <name>LocatorImpl</name>
                                                                </super>
                                                                <argument_list>()</argument_list>
                                                                <block>{
                                                                    <function>
                                                                        <type>
                                                                            <specifier>public</specifier>
                                                                            <name>String</name>
                                                                        </type>
                                                                        <name>getXMLVersion</name>
                                                                        <parameter_list>()</parameter_list>
                                                                        <block>{
                                                                            <return>return
                                                                                <expr>
                                                                                    <name>fVersion</name>
                                                                                </expr>
                                                                                ;
                                                                            </return>
                                                                            }
                                                                        </block>
                                                                    </function>
                                                                    <comment type="line">// since XMLParseExceptions
                                                                        know nothing about encoding,
                                                                    </comment>
                                                                    <comment type="line">// we cannot return anything
                                                                        meaningful in this context.
                                                                    </comment>
                                                                    <comment type="line">// We *could* consult the
                                                                        LocatorProxy, but the
                                                                    </comment>
                                                                    <comment type="line">// application can do this
                                                                        itself if it wishes to possibly
                                                                    </comment>
                                                                    <comment type="line">// be mislead.</comment>
                                                                    <function>
                                                                        <type>
                                                                            <specifier>public</specifier>
                                                                            <name>String</name>
                                                                        </type>
                                                                        <name>getEncoding</name>
                                                                        <parameter_list>()</parameter_list>
                                                                        <block>{
                                                                            <return>return
                                                                                <expr>
                                                                                    <name>null</name>
                                                                                </expr>
                                                                                ;
                                                                            </return>
                                                                            }
                                                                        </block>
                                                                    </function>
                                                                    }
                                                                </block>
                                                            </class>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>locatorImpl</name>.
                                                            <name>setPublicId</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>e</name>.
                                                                            <name>getPublicId</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>locatorImpl</name>.
                                                            <name>setSystemId</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>e</name>.
                                                                            <name>getExpandedSystemId</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>locatorImpl</name>.
                                                            <name>setLineNumber</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>e</name>.
                                                                            <name>getLineNumber</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>locatorImpl</name>.
                                                            <name>setColumnNumber</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>e</name>.
                                                                            <name>getColumnNumber</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>SAXParseException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>e</name>.
                                                                            <name>getMessage</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>locatorImpl</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>ex</name>
                                            <name>instanceof</name>
                                            <name>SAXException</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <comment type="line">// why did we create an XMLParseException?</comment>
                                            <throw>throw
                                                <expr>(<name>SAXException</name>)
                                                    <name>ex</name>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>ex</name>
                                            <name>instanceof</name>
                                            <name>IOException</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <throw>throw
                                                <expr>(<name>IOException</name>)
                                                    <name>ex</name>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>SAXException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>ex</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XNIException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Exception</name>
                                        </type>
                                        <name>ex</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>e</name>.
                                                        <name>getException</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>ex</name>
                                            ==
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>SAXException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>e</name>.
                                                                            <name>getMessage</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>ex</name>
                                            <name>instanceof</name>
                                            <name>SAXException</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <throw>throw
                                                <expr>(<name>SAXException</name>)
                                                    <name>ex</name>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>ex</name>
                                            <name>instanceof</name>
                                            <name>IOException</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <throw>throw
                                                <expr>(<name>IOException</name>)
                                                    <name>ex</name>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>SAXException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>ex</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>

                    }
                </block>
            </function>
            <comment type="line">// parse(String)</comment>

            <comment type="javadoc">/**
                * parse
                *
                * @param inputSource
                *
                * @exception org.xml.sax.SAXException
                * @exception java.io.IOException
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>parse</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>InputSource</name>
                            </type>
                            <name>inputSource</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>SAXException</name>
                        </expr>
                    </argument>
                    ,
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// parse document</comment>
                    <try>try
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>XMLInputSource</name>
                                    </type>
                                    <name>xmlInputSource</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>XMLInputSource</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>inputSource</name>.
                                                                    <name>getPublicId</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>inputSource</name>.
                                                                    <name>getSystemId</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>null</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>xmlInputSource</name>.
                                            <name>setByteStream</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>inputSource</name>.
                                                            <name>getByteStream</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>xmlInputSource</name>.
                                            <name>setCharacterStream</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>inputSource</name>.
                                                            <name>getCharacterStream</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>xmlInputSource</name>.
                                            <name>setEncoding</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>inputSource</name>.
                                                            <name>getEncoding</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>parse</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>xmlInputSource</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>

                        <comment type="line">// wrap XNI exceptions as SAX exceptions</comment>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLParseException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Exception</name>
                                        </type>
                                        <name>ex</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>e</name>.
                                                        <name>getException</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>ex</name>
                                            ==
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <comment type="line">// must be a parser exception; mine it for locator info
                                                and throw
                                            </comment>
                                            <comment type="line">// a SAXParseException</comment>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>LocatorImpl</name>
                                                    </type>
                                                    <name>locatorImpl</name> =
                                                    <init>
                                                        <expr>new
                                                            <class>
                                                                <super>
                                                                    <name>LocatorImpl</name>
                                                                </super>
                                                                <argument_list>()</argument_list>
                                                                <block>{
                                                                    <function>
                                                                        <type>
                                                                            <specifier>public</specifier>
                                                                            <name>String</name>
                                                                        </type>
                                                                        <name>getXMLVersion</name>
                                                                        <parameter_list>()</parameter_list>
                                                                        <block>{
                                                                            <return>return
                                                                                <expr>
                                                                                    <name>fVersion</name>
                                                                                </expr>
                                                                                ;
                                                                            </return>
                                                                            }
                                                                        </block>
                                                                    </function>
                                                                    <comment type="line">// since XMLParseExceptions
                                                                        know nothing about encoding,
                                                                    </comment>
                                                                    <comment type="line">// we cannot return anything
                                                                        meaningful in this context.
                                                                    </comment>
                                                                    <comment type="line">// We *could* consult the
                                                                        LocatorProxy, but the
                                                                    </comment>
                                                                    <comment type="line">// application can do this
                                                                        itself if it wishes to possibly
                                                                    </comment>
                                                                    <comment type="line">// be mislead.</comment>
                                                                    <function>
                                                                        <type>
                                                                            <specifier>public</specifier>
                                                                            <name>String</name>
                                                                        </type>
                                                                        <name>getEncoding</name>
                                                                        <parameter_list>()</parameter_list>
                                                                        <block>{
                                                                            <return>return
                                                                                <expr>
                                                                                    <name>null</name>
                                                                                </expr>
                                                                                ;
                                                                            </return>
                                                                            }
                                                                        </block>
                                                                    </function>
                                                                    }
                                                                </block>
                                                            </class>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>locatorImpl</name>.
                                                            <name>setPublicId</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>e</name>.
                                                                            <name>getPublicId</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>locatorImpl</name>.
                                                            <name>setSystemId</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>e</name>.
                                                                            <name>getExpandedSystemId</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>locatorImpl</name>.
                                                            <name>setLineNumber</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>e</name>.
                                                                            <name>getLineNumber</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>locatorImpl</name>.
                                                            <name>setColumnNumber</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>e</name>.
                                                                            <name>getColumnNumber</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>SAXParseException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>e</name>.
                                                                            <name>getMessage</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>locatorImpl</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>ex</name>
                                            <name>instanceof</name>
                                            <name>SAXException</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <comment type="line">// why did we create an XMLParseException?</comment>
                                            <throw>throw
                                                <expr>(<name>SAXException</name>)
                                                    <name>ex</name>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>ex</name>
                                            <name>instanceof</name>
                                            <name>IOException</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <throw>throw
                                                <expr>(<name>IOException</name>)
                                                    <name>ex</name>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>SAXException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>ex</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XNIException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Exception</name>
                                        </type>
                                        <name>ex</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>e</name>.
                                                        <name>getException</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>ex</name>
                                            ==
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>SAXException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>e</name>.
                                                                            <name>getMessage</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>ex</name>
                                            <name>instanceof</name>
                                            <name>SAXException</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <throw>throw
                                                <expr>(<name>SAXException</name>)
                                                    <name>ex</name>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>ex</name>
                                            <name>instanceof</name>
                                            <name>IOException</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <throw>throw
                                                <expr>(<name>IOException</name>)
                                                    <name>ex</name>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>SAXException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>ex</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>

                    }
                </block>
            </function>
            <comment type="line">// parse(InputSource)</comment>

            <comment type="javadoc">/**
                * Sets the resolver used to resolve external entities. The EntityResolver
                * interface supports resolution of public and system identifiers.
                *
                * @param resolver The new entity resolver. Passing a null value will
                * uninstall the currently installed resolver.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setEntityResolver</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>EntityResolver</name>
                            </type>
                            <name>resolver</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <try>try
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>XMLEntityResolver</name>
                                    </type>
                                    <name>xer</name> =
                                    <init>
                                        <expr>(<name>XMLEntityResolver</name>)
                                            <call>
                                                <name><name>fConfiguration</name>.
                                                    <name>getProperty</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>ENTITY_RESOLVER</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>fUseEntityResolver2</name>
                                        &amp;&amp; <name>resolver</name>
                                        <name>instanceof</name>
                                        <name>EntityResolver2</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>xer</name>
                                                    <name>instanceof</name>
                                                    <name>EntityResolver2Wrapper</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>EntityResolver2Wrapper</name>
                                                            </type>
                                                            <name>er2w</name> =
                                                            <init>
                                                                <expr>(<name>EntityResolver2Wrapper</name>)
                                                                    <name>xer</name>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>er2w</name>.
                                                                    <name>setEntityResolver</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>(<name>EntityResolver2</name>)
                                                                            <name>resolver</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fConfiguration</name>.
                                                                    <name>setProperty</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>ENTITY_RESOLVER</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>new
                                                                            <call>
                                                                                <name>EntityResolver2Wrapper</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>(<name>
                                                                                            EntityResolver2</name>)
                                                                                            <name>resolver</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </else>
                                        </if>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>xer</name>
                                                    <name>instanceof</name>
                                                    <name>EntityResolverWrapper</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>EntityResolverWrapper</name>
                                                            </type>
                                                            <name>erw</name> =
                                                            <init>
                                                                <expr>(<name>EntityResolverWrapper</name>)
                                                                    <name>xer</name>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>erw</name>.
                                                                    <name>setEntityResolver</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>resolver</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fConfiguration</name>.
                                                                    <name>setProperty</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>ENTITY_RESOLVER</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>new
                                                                            <call>
                                                                                <name>EntityResolverWrapper</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>resolver</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </else>
                                        </if>
                                        }
                                    </block>
                                </else>
                            </if>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLConfigurationException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <comment type="line">// do nothing</comment>
                                }
                            </block>
                        </catch>
                    </try>

                    }
                </block>
            </function>
            <comment type="line">// setEntityResolver(EntityResolver)</comment>

            <comment type="javadoc">/**
                * Return the current entity resolver.
                *
                * @return The current entity resolver, or null if none
                * has been registered.
                * @see #setEntityResolver
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>EntityResolver</name>
                </type>
                <name>getEntityResolver</name>
                <parameter_list>()</parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>EntityResolver</name>
                            </type>
                            <name>entityResolver</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <try>try
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>XMLEntityResolver</name>
                                    </type>
                                    <name>xmlEntityResolver</name> =
                                    <init>
                                        <expr>(<name>XMLEntityResolver</name>)
                                            <call>
                                                <name><name>fConfiguration</name>.
                                                    <name>getProperty</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>ENTITY_RESOLVER</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>xmlEntityResolver</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>xmlEntityResolver</name>
                                                    <name>instanceof</name>
                                                    <name>EntityResolverWrapper</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>entityResolver</name>
                                                            =
                                                            ((<name>EntityResolverWrapper</name>) <name>
                                                            xmlEntityResolver</name>).
                                                            <call>
                                                                <name>getEntityResolver</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>xmlEntityResolver</name>
                                                            <name>instanceof</name>
                                                            <name>EntityResolver2Wrapper</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>entityResolver</name>
                                                                    =
                                                                    ((<name>EntityResolver2Wrapper</name>) <name>
                                                                    xmlEntityResolver</name>).
                                                                    <call>
                                                                        <name>getEntityResolver</name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                            </else>
                                        </if>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLConfigurationException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <comment type="line">// do nothing</comment>
                                }
                            </block>
                        </catch>
                    </try>
                    <return>return
                        <expr>
                            <name>entityResolver</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// getEntityResolver():EntityResolver</comment>

            <comment type="javadoc">/**
                * Allow an application to register an error event handler.
                *
                * &lt;p&gt;If the application does not register an error handler, all
                * error events reported by the SAX parser will be silently
                * ignored; however, normal processing may not continue. It is
                * highly recommended that all SAX applications implement an
                * error handler to avoid unexpected bugs.&lt;/p&gt;
                *
                * &lt;p&gt;Applications may register a new or different handler in the
                * middle of a parse, and the SAX parser must begin using the new
                * handler immediately.&lt;/p&gt;
                *
                * @param errorHandler The error handler.
                * @see #getErrorHandler
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setErrorHandler</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ErrorHandler</name>
                            </type>
                            <name>errorHandler</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <try>try
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>XMLErrorHandler</name>
                                    </type>
                                    <name>xeh</name> =
                                    <init>
                                        <expr>(<name>XMLErrorHandler</name>)
                                            <call>
                                                <name><name>fConfiguration</name>.
                                                    <name>getProperty</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>ERROR_HANDLER</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>xeh</name>
                                        <name>instanceof</name>
                                        <name>ErrorHandlerWrapper</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>ErrorHandlerWrapper</name>
                                                </type>
                                                <name>ehw</name> =
                                                <init>
                                                    <expr>(<name>ErrorHandlerWrapper</name>)
                                                        <name>xeh</name>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>ehw</name>.
                                                        <name>setErrorHandler</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>errorHandler</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fConfiguration</name>.
                                                        <name>setProperty</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>ERROR_HANDLER</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>new
                                                                <call>
                                                                    <name>ErrorHandlerWrapper</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>errorHandler</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </else>
                            </if>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLConfigurationException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <comment type="line">// do nothing</comment>
                                }
                            </block>
                        </catch>
                    </try>

                    }
                </block>
            </function>
            <comment type="line">// setErrorHandler(ErrorHandler)</comment>

            <comment type="javadoc">/**
                * Return the current error handler.
                *
                * @return The current error handler, or null if none
                * has been registered.
                * @see #setErrorHandler
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>ErrorHandler</name>
                </type>
                <name>getErrorHandler</name>
                <parameter_list>()</parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ErrorHandler</name>
                            </type>
                            <name>errorHandler</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <try>try
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>XMLErrorHandler</name>
                                    </type>
                                    <name>xmlErrorHandler</name> =
                                    <init>
                                        <expr>(<name>XMLErrorHandler</name>)
                                            <call>
                                                <name><name>fConfiguration</name>.
                                                    <name>getProperty</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>ERROR_HANDLER</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>xmlErrorHandler</name>
                                        != <name>null</name> &amp;&amp;
                                        <name>xmlErrorHandler</name>
                                        <name>instanceof</name>
                                        <name>ErrorHandlerWrapper</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>errorHandler</name>
                                                = ((<name>ErrorHandlerWrapper</name>)<name>xmlErrorHandler</name>).
                                                <call>
                                                    <name>getErrorHandler</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLConfigurationException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <comment type="line">// do nothing</comment>
                                }
                            </block>
                        </catch>
                    </try>
                    <return>return
                        <expr>
                            <name>errorHandler</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// getErrorHandler():ErrorHandler</comment>

            <comment type="javadoc">/**
                * Set the locale to use for messages.
                *
                * @param locale The locale object to use for localization of messages.
                *
                * @exception SAXException An exception thrown if the parser does not
                * support the specified locale.
                *
                * @see org.xml.sax.Parser
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setLocale</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Locale</name>
                            </type>
                            <name>locale</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>SAXException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <comment type="line">//REVISIT:this methods is not part of SAX2 interfaces, we should throw
                        exception
                    </comment>
                    <comment type="line">//if any application uses SAX2 and sets locale also. -nb</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fConfiguration</name>.
                                    <name>setLocale</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>locale</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </function>
            <comment type="line">// setLocale(Locale)</comment>

            <comment type="javadoc">/**
                * Allow an application to register a DTD event handler.
                * &lt;p&gt;
                * If the application does not register a DTD handler, all DTD
                * events reported by the SAX parser will be silently ignored.
                * &lt;p&gt;
                * Applications may register a new or different handler in the
                * middle of a parse, and the SAX parser must begin using the new
                * handler immediately.
                *
                * @param dtdHandler The DTD handler.
                *

                * @see #getDTDHandler
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setDTDHandler</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>DTDHandler</name>
                            </type>
                            <name>dtdHandler</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fDTDHandler</name>
                            =
                            <name>dtdHandler</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="line">// setDTDHandler(DTDHandler)</comment>

            <comment type="line">//</comment>
            <comment type="line">// Parser methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * Allow an application to register a document event handler.
                * &lt;p&gt;
                * If the application does not register a document handler, all
                * document events reported by the SAX parser will be silently
                * ignored (this is the default behaviour implemented by
                * HandlerBase).
                * &lt;p&gt;
                * Applications may register a new or different handler in the
                * middle of a parse, and the SAX parser must begin using the new
                * handler immediately.
                *
                * @param documentHandler The document handler.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setDocumentHandler</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>DocumentHandler</name>
                            </type>
                            <name>documentHandler</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fDocumentHandler</name>
                            =
                            <name>documentHandler</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="line">// setDocumentHandler(DocumentHandler)</comment>

            <comment type="line">//</comment>
            <comment type="line">// XMLReader methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * Allow an application to register a content event handler.
                * &lt;p&gt;
                * If the application does not register a content handler, all
                * content events reported by the SAX parser will be silently
                * ignored.
                * &lt;p&gt;
                * Applications may register a new or different handler in the
                * middle of a parse, and the SAX parser must begin using the new
                * handler immediately.
                *
                * @param contentHandler The content handler.
                *
                * @see #getContentHandler
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setContentHandler</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ContentHandler</name>
                            </type>
                            <name>contentHandler</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fContentHandler</name>
                            =
                            <name>contentHandler</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="line">// setContentHandler(ContentHandler)</comment>

            <comment type="javadoc">/**
                * Return the current content handler.
                *
                * @return The current content handler, or null if none
                * has been registered.
                *
                * @see #setContentHandler
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>ContentHandler</name>
                </type>
                <name>getContentHandler</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fContentHandler</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getContentHandler():ContentHandler</comment>

            <comment type="javadoc">/**
                * Return the current DTD handler.
                *
                * @return The current DTD handler, or null if none
                * has been registered.
                * @see #setDTDHandler
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>DTDHandler</name>
                </type>
                <name>getDTDHandler</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fDTDHandler</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getDTDHandler():DTDHandler</comment>

            <comment type="javadoc">/**
                * Set the state of any feature in a SAX2 parser. The parser
                * might not recognize the feature, and if it does recognize
                * it, it might not be able to fulfill the request.
                *
                * @param featureId The unique identifier (URI) of the feature.
                * @param state The requested state of the feature (true or false).
                *
                * @exception SAXNotRecognizedException If the
                * requested feature is not known.
                * @exception SAXNotSupportedException If the
                * requested feature is known, but the requested
                * state is not supported.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setFeature</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>featureId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>state</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>SAXNotRecognizedException</name>
                        </expr>
                    </argument>
                    ,
                    <argument>
                        <expr>
                            <name>SAXNotSupportedException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <try>try
                        <block>{
                            <comment type="line">//</comment>
                            <comment type="line">// SAX2 Features</comment>
                            <comment type="line">//</comment>

                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>featureId</name>.
                                                <name>startsWith</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>Constants</name>.
                                                            <name>SAX_FEATURE_PREFIX</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <specifier>final</specifier>
                                                    <name>int</name>
                                                </type>
                                                <name>suffixLength</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>featureId</name>.
                                                                <name>length</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        -
                                                        <call>
                                                            <name><name>Constants</name>.<name>SAX_FEATURE_PREFIX</name>.
                                                                <name>length</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>

                                        <comment type="line">// http://xml.org/sax/features/namespaces</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>suffixLength</name>
                                                    ==
                                                    <call>
                                                        <name><name>Constants</name>.<name>NAMESPACES_FEATURE</name>.
                                                            <name>length</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    &amp;&amp;
                                                    <call>
                                                        <name><name>featureId</name>.
                                                            <name>endsWith</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Constants</name>.
                                                                        <name>NAMESPACES_FEATURE</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fConfiguration</name>.
                                                                    <name>setFeature</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>featureId</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>state</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>fNamespaces</name>
                                                            =
                                                            <name>state</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <return>return;</return>
                                                    }
                                                </block>
                                            </then>
                                        </if>

                                        <comment type="line">// http://xml.org/sax/features/namespace-prefixes</comment>
                                        <comment type="line">// controls the reporting of raw prefixed names and
                                            Namespace
                                        </comment>
                                        <comment type="line">// declarations (xmlns* attributes): when this feature is
                                            false
                                        </comment>
                                        <comment type="line">// (the default), raw prefixed names may optionally be
                                            reported,
                                        </comment>
                                        <comment type="line">// and xmlns* attributes must not be reported.</comment>
                                        <comment type="line">//</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>suffixLength</name>
                                                    ==
                                                    <call>
                                                        <name><name>Constants</name>.<name>
                                                            NAMESPACE_PREFIXES_FEATURE</name>.
                                                            <name>length</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    &amp;&amp;
                                                    <call>
                                                        <name><name>featureId</name>.
                                                            <name>endsWith</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Constants</name>.
                                                                        <name>NAMESPACE_PREFIXES_FEATURE</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fConfiguration</name>.
                                                                    <name>setFeature</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>featureId</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>state</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>fNamespacePrefixes</name>
                                                            =
                                                            <name>state</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <return>return;</return>
                                                    }
                                                </block>
                                            </then>
                                        </if>

                                        <comment type="line">// http://xml.org/sax/features/string-interning</comment>
                                        <comment type="line">// controls the use of java.lang.String#intern() for
                                            strings
                                        </comment>
                                        <comment type="line">// passed to SAX handlers.</comment>
                                        <comment type="line">//</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>suffixLength</name>
                                                    ==
                                                    <call>
                                                        <name><name>Constants</name>.<name>
                                                            STRING_INTERNING_FEATURE</name>.
                                                            <name>length</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    &amp;&amp;
                                                    <call>
                                                        <name><name>featureId</name>.
                                                            <name>endsWith</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Constants</name>.
                                                                        <name>STRING_INTERNING_FEATURE</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <if>if
                                                        <condition>(
                                                            <expr>!
                                                                <name>state</name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <throw>throw
                                                                    <expr>new
                                                                        <call>
                                                                            <name>SAXNotSupportedException</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>
                                                                                                SAXMessageFormatter</name>
                                                                                                .
                                                                                                <name>formatMessage
                                                                                                </name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <call>
                                                                                                            <name><name>
                                                                                                                fConfiguration</name>
                                                                                                                .
                                                                                                                <name>
                                                                                                                    getLocale
                                                                                                                </name>
                                                                                                            </name>
                                                                                                            <argument_list>
                                                                                                                ()
                                                                                                            </argument_list>
                                                                                                        </call>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                ,
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        "false-not-supported"
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                ,
                                                                                                <argument>
                                                                                                    <expr>new
                                                                                                        <name>
                                                                                                            <name>
                                                                                                                Object
                                                                                                            </name>
                                                                                                            <index>[]
                                                                                                            </index>
                                                                                                        </name>
                                                                                                        <block>{
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    featureId
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                            }
                                                                                                        </block>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </throw>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    <return>return;</return>
                                                    }
                                                </block>
                                            </then>
                                        </if>

                                        <comment type="line">//
                                            http://xml.org/sax/features/lexical-handler/parameter-entities
                                        </comment>
                                        <comment type="line">// controls whether the beginning and end of parameter
                                            entities
                                        </comment>
                                        <comment type="line">// will be reported to the LexicalHandler.</comment>
                                        <comment type="line">//</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>suffixLength</name>
                                                    ==
                                                    <call>
                                                        <name><name>Constants</name>.<name>
                                                            LEXICAL_HANDLER_PARAMETER_ENTITIES_FEATURE</name>.
                                                            <name>length</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    &amp;&amp;
                                                    <call>
                                                        <name><name>featureId</name>.
                                                            <name>endsWith</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Constants</name>.
                                                                        <name>
                                                                            LEXICAL_HANDLER_PARAMETER_ENTITIES_FEATURE
                                                                        </name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>fLexicalHandlerParameterEntities</name>
                                                            =
                                                            <name>state</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <return>return;</return>
                                                    }
                                                </block>
                                            </then>
                                        </if>

                                        <comment type="line">// http://xml.org/sax/features/resolve-dtd-uris</comment>
                                        <comment type="line">// controls whether system identifiers will be absolutized
                                            relative to
                                        </comment>
                                        <comment type="line">// their base URIs before reporting.</comment>
                                        <comment type="line">//</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>suffixLength</name>
                                                    ==
                                                    <call>
                                                        <name><name>Constants</name>.<name>
                                                            RESOLVE_DTD_URIS_FEATURE</name>.
                                                            <name>length</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    &amp;&amp;
                                                    <call>
                                                        <name><name>featureId</name>.
                                                            <name>endsWith</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Constants</name>.
                                                                        <name>RESOLVE_DTD_URIS_FEATURE</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>fResolveDTDURIs</name>
                                                            =
                                                            <name>state</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <return>return;</return>
                                                    }
                                                </block>
                                            </then>
                                        </if>

                                        <comment type="line">//
                                            http://xml.org/sax/features/unicode-normalization-checking
                                        </comment>
                                        <comment type="line">// controls whether Unicode normalization checking is
                                            performed
                                        </comment>
                                        <comment type="line">// as per Appendix B of the XML 1.1 specification</comment>
                                        <comment type="line">//</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>suffixLength</name>
                                                    ==
                                                    <call>
                                                        <name><name>Constants</name>.<name>
                                                            UNICODE_NORMALIZATION_CHECKING_FEATURE</name>.
                                                            <name>length</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    &amp;&amp;
                                                    <call>
                                                        <name><name>featureId</name>.
                                                            <name>endsWith</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Constants</name>.
                                                                        <name>UNICODE_NORMALIZATION_CHECKING_FEATURE
                                                                        </name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <comment type="line">// REVISIT: Allow this feature to be set once
                                                        Unicode normalization
                                                    </comment>
                                                    <comment type="line">// checking is supported -- mrglavas.</comment>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>state</name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <throw>throw
                                                                    <expr>new
                                                                        <call>
                                                                            <name>SAXNotSupportedException</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>
                                                                                                SAXMessageFormatter</name>
                                                                                                .
                                                                                                <name>formatMessage
                                                                                                </name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <call>
                                                                                                            <name><name>
                                                                                                                fConfiguration</name>
                                                                                                                .
                                                                                                                <name>
                                                                                                                    getLocale
                                                                                                                </name>
                                                                                                            </name>
                                                                                                            <argument_list>
                                                                                                                ()
                                                                                                            </argument_list>
                                                                                                        </call>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                ,
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        "true-not-supported"
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                ,
                                                                                                <argument>
                                                                                                    <expr>new
                                                                                                        <name>
                                                                                                            <name>
                                                                                                                Object
                                                                                                            </name>
                                                                                                            <index>[]
                                                                                                            </index>
                                                                                                        </name>
                                                                                                        <block>{
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    featureId
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                            }
                                                                                                        </block>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </throw>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    <return>return;</return>
                                                    }
                                                </block>
                                            </then>
                                        </if>

                                        <comment type="line">// http://xml.org/sax/features/xmlns-uris</comment>
                                        <comment type="line">// controls whether the parser reports that namespace
                                            declaration
                                        </comment>
                                        <comment type="line">// attributes as being in the namespace:
                                            http://www.w3.org/2000/xmlns/
                                        </comment>
                                        <comment type="line">//</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>suffixLength</name>
                                                    ==
                                                    <call>
                                                        <name><name>Constants</name>.<name>XMLNS_URIS_FEATURE</name>.
                                                            <name>length</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    &amp;&amp;
                                                    <call>
                                                        <name><name>featureId</name>.
                                                            <name>endsWith</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Constants</name>.
                                                                        <name>XMLNS_URIS_FEATURE</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>fXMLNSURIs</name>
                                                            =
                                                            <name>state</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <return>return;</return>
                                                    }
                                                </block>
                                            </then>
                                        </if>

                                        <comment type="line">// http://xml.org/sax/features/use-entity-resolver2
                                        </comment>
                                        <comment type="line">// controls whether the methods of an object implementing
                                        </comment>
                                        <comment type="line">// org.xml.sax.ext.EntityResolver2 will be used by the
                                            parser.
                                        </comment>
                                        <comment type="line">//</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>suffixLength</name>
                                                    ==
                                                    <call>
                                                        <name><name>Constants</name>.<name>
                                                            USE_ENTITY_RESOLVER2_FEATURE</name>.
                                                            <name>length</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    &amp;&amp;
                                                    <call>
                                                        <name><name>featureId</name>.
                                                            <name>endsWith</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Constants</name>.
                                                                        <name>USE_ENTITY_RESOLVER2_FEATURE</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>state</name>
                                                                !=
                                                                <name>fUseEntityResolver2</name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>fUseEntityResolver2</name>
                                                                        =
                                                                        <name>state</name>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <comment type="line">// Refresh EntityResolver
                                                                    wrapper.
                                                                </comment>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name>setEntityResolver</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name>getEntityResolver
                                                                                            </name>
                                                                                            <argument_list>()
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    <return>return;</return>
                                                    }
                                                </block>
                                            </then>
                                        </if>

                                        <comment type="line">//</comment>
                                        <comment type="line">// Read only features.</comment>
                                        <comment type="line">//</comment>

                                        <comment type="line">// http://xml.org/sax/features/is-standalone</comment>
                                        <comment type="line">// reports whether the document specified a standalone
                                            document declaration.
                                        </comment>
                                        <comment type="line">// http://xml.org/sax/features/use-attributes2</comment>
                                        <comment type="line">// reports whether Attributes objects passed to
                                            startElement also implement
                                        </comment>
                                        <comment type="line">// the org.xml.sax.ext.Attributes2 interface.</comment>
                                        <comment type="line">// http://xml.org/sax/features/use-locator2</comment>
                                        <comment type="line">// reports whether Locator objects passed to
                                            setDocumentLocator also implement
                                        </comment>
                                        <comment type="line">// the org.xml.sax.ext.Locator2 interface.</comment>
                                        <comment type="line">// http://xml.org/sax/features/xml-1.1</comment>
                                        <comment type="line">// reports whether the parser supports both XML 1.1 and XML
                                            1.0.
                                        </comment>
                                        <if>if
                                            <condition>(
                                                <expr>(<name>suffixLength</name> ==
                                                    <call>
                                                        <name><name>Constants</name>.<name>IS_STANDALONE_FEATURE</name>.
                                                            <name>length</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    &amp;&amp;
                                                    <call>
                                                        <name><name>featureId</name>.
                                                            <name>endsWith</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Constants</name>.
                                                                        <name>IS_STANDALONE_FEATURE</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    ) ||
                                                    (<name>suffixLength</name> ==
                                                    <call>
                                                        <name><name>Constants</name>.<name>
                                                            USE_ATTRIBUTES2_FEATURE</name>.
                                                            <name>length</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    &amp;&amp;
                                                    <call>
                                                        <name><name>featureId</name>.
                                                            <name>endsWith</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Constants</name>.
                                                                        <name>USE_ATTRIBUTES2_FEATURE</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    ) ||
                                                    (<name>suffixLength</name> ==
                                                    <call>
                                                        <name><name>Constants</name>.<name>USE_LOCATOR2_FEATURE</name>.
                                                            <name>length</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    &amp;&amp;
                                                    <call>
                                                        <name><name>featureId</name>.
                                                            <name>endsWith</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Constants</name>.
                                                                        <name>USE_LOCATOR2_FEATURE</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    ) ||
                                                    (<name>suffixLength</name> ==
                                                    <call>
                                                        <name><name>Constants</name>.<name>XML_11_FEATURE</name>.
                                                            <name>length</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    &amp;&amp;
                                                    <call>
                                                        <name><name>featureId</name>.
                                                            <name>endsWith</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Constants</name>.
                                                                        <name>XML_11_FEATURE</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    )
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>SAXNotSupportedException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>SAXMessageFormatter</name>.
                                                                                    <name>formatMessage</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <call>
                                                                                                <name><name>
                                                                                                    fConfiguration</name>
                                                                                                    .
                                                                                                    <name>getLocale
                                                                                                    </name>
                                                                                                </name>
                                                                                                <argument_list>()
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>"feature-read-only"</expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>new
                                                                                            <name>
                                                                                                <name>Object</name>
                                                                                                <index>[]</index>
                                                                                            </name>
                                                                                            <block>{
                                                                                                <expr>
                                                                                                    <name>featureId
                                                                                                    </name>
                                                                                                </expr>
                                                                                                }
                                                                                            </block>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                        </if>


                                        <comment type="line">//</comment>
                                        <comment type="line">// Drop through and perform default processing</comment>
                                        <comment type="line">//</comment>
                                        }
                                    </block>
                                </then>
                            </if>

                            <comment type="line">//</comment>
                            <comment type="line">// Xerces Features</comment>
                            <comment type="line">//</comment>

                            <comment type="block">/*
                                else if (featureId.startsWith(XERCES_FEATURES_PREFIX)) {
                                String feature = featureId.substring(XERCES_FEATURES_PREFIX.length());
                                //
                                // Drop through and perform default processing
                                //
                                }
                                */
                            </comment>

                            <comment type="line">//</comment>
                            <comment type="line">// Default handling</comment>
                            <comment type="line">//</comment>

                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fConfiguration</name>.
                                            <name>setFeature</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>featureId</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>state</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLConfigurationException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                        </type>
                                        <name>identifier</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>e</name>.
                                                        <name>getIdentifier</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>e</name>.
                                                    <name>getType</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            ==
                                            <name><name>XMLConfigurationException</name>.
                                                <name>NOT_RECOGNIZED</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>SAXNotRecognizedException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>SAXMessageFormatter</name>.
                                                                            <name>formatMessage</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>
                                                                                            fConfiguration</name>.
                                                                                            <name>getLocale</name>
                                                                                        </name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>"feature-not-recognized"</expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>new
                                                                                    <name>
                                                                                        <name>Object</name>
                                                                                        <index>[]</index>
                                                                                    </name>
                                                                                    <block>{
                                                                                        <expr>
                                                                                            <name>identifier</name>
                                                                                        </expr>
                                                                                        }
                                                                                    </block>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>SAXNotSupportedException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>SAXMessageFormatter</name>.
                                                                            <name>formatMessage</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>
                                                                                            fConfiguration</name>.
                                                                                            <name>getLocale</name>
                                                                                        </name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>"feature-not-supported"</expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>new
                                                                                    <name>
                                                                                        <name>Object</name>
                                                                                        <index>[]</index>
                                                                                    </name>
                                                                                    <block>{
                                                                                        <expr>
                                                                                            <name>identifier</name>
                                                                                        </expr>
                                                                                        }
                                                                                    </block>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </catch>
                    </try>

                    }
                </block>
            </function>
            <comment type="line">// setFeature(String,boolean)</comment>

            <comment type="javadoc">/**
                * Query the state of a feature.
                *
                * Query the current state of any feature in a SAX2 parser. The
                * parser might not recognize the feature.
                *
                * @param featureId The unique identifier (URI) of the feature
                * being set.
                * @return The current state of the feature.
                * @exception org.xml.sax.SAXNotRecognizedException If the
                * requested feature is not known.
                * @exception SAXNotSupportedException If the
                * requested feature is known but not supported.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>getFeature</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>featureId</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>SAXNotRecognizedException</name>
                        </expr>
                    </argument>
                    ,
                    <argument>
                        <expr>
                            <name>SAXNotSupportedException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <try>try
                        <block>{
                            <comment type="line">//</comment>
                            <comment type="line">// SAX2 Features</comment>
                            <comment type="line">//</comment>

                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>featureId</name>.
                                                <name>startsWith</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>Constants</name>.
                                                            <name>SAX_FEATURE_PREFIX</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <specifier>final</specifier>
                                                    <name>int</name>
                                                </type>
                                                <name>suffixLength</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>featureId</name>.
                                                                <name>length</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        -
                                                        <call>
                                                            <name><name>Constants</name>.<name>SAX_FEATURE_PREFIX</name>.
                                                                <name>length</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>

                                        <comment type="line">// http://xml.org/sax/features/namespace-prefixes</comment>
                                        <comment type="line">// controls the reporting of raw prefixed names and
                                            Namespace
                                        </comment>
                                        <comment type="line">// declarations (xmlns* attributes): when this feature is
                                            false
                                        </comment>
                                        <comment type="line">// (the default), raw prefixed names may optionally be
                                            reported,
                                        </comment>
                                        <comment type="line">// and xmlns* attributes must not be reported.</comment>
                                        <comment type="line">//</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>suffixLength</name>
                                                    ==
                                                    <call>
                                                        <name><name>Constants</name>.<name>
                                                            NAMESPACE_PREFIXES_FEATURE</name>.
                                                            <name>length</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    &amp;&amp;
                                                    <call>
                                                        <name><name>featureId</name>.
                                                            <name>endsWith</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Constants</name>.
                                                                        <name>NAMESPACE_PREFIXES_FEATURE</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>boolean</name>
                                                            </type>
                                                            <name>state</name> =
                                                            <init>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>fConfiguration</name>.
                                                                            <name>getFeature</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>featureId</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <return>return
                                                        <expr>
                                                            <name>state</name>
                                                        </expr>
                                                        ;
                                                    </return>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <comment type="line">// http://xml.org/sax/features/string-interning</comment>
                                        <comment type="line">// controls the use of java.lang.String#intern() for
                                            strings
                                        </comment>
                                        <comment type="line">// passed to SAX handlers.</comment>
                                        <comment type="line">//</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>suffixLength</name>
                                                    ==
                                                    <call>
                                                        <name><name>Constants</name>.<name>
                                                            STRING_INTERNING_FEATURE</name>.
                                                            <name>length</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    &amp;&amp;
                                                    <call>
                                                        <name><name>featureId</name>.
                                                            <name>endsWith</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Constants</name>.
                                                                        <name>STRING_INTERNING_FEATURE</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <return>return <expr>true</expr>;
                                                    </return>
                                                    }
                                                </block>
                                            </then>
                                        </if>

                                        <comment type="line">// http://xml.org/sax/features/is-standalone</comment>
                                        <comment type="line">// reports whether the document specified a standalone
                                            document declaration.
                                        </comment>
                                        <comment type="line">//</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>suffixLength</name>
                                                    ==
                                                    <call>
                                                        <name><name>Constants</name>.<name>IS_STANDALONE_FEATURE</name>.
                                                            <name>length</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    &amp;&amp;
                                                    <call>
                                                        <name><name>featureId</name>.
                                                            <name>endsWith</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Constants</name>.
                                                                        <name>IS_STANDALONE_FEATURE</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <return>return
                                                        <expr>
                                                            <name>fStandalone</name>
                                                        </expr>
                                                        ;
                                                    </return>
                                                    }
                                                </block>
                                            </then>
                                        </if>

                                        <comment type="line">// http://xml.org/sax/features/xml-1.1</comment>
                                        <comment type="line">// reports whether the parser supports both XML 1.1 and XML
                                            1.0.
                                        </comment>
                                        <comment type="line">//</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>suffixLength</name>
                                                    ==
                                                    <call>
                                                        <name><name>Constants</name>.<name>XML_11_FEATURE</name>.
                                                            <name>length</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    &amp;&amp;
                                                    <call>
                                                        <name><name>featureId</name>.
                                                            <name>endsWith</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Constants</name>.
                                                                        <name>XML_11_FEATURE</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <return>return
                                                        <expr>(<name>fConfiguration</name>
                                                            <name>instanceof</name>
                                                            <name>XML11Configurable</name>)
                                                        </expr>
                                                        ;
                                                    </return>
                                                    }
                                                </block>
                                            </then>
                                        </if>

                                        <comment type="line">//
                                            http://xml.org/sax/features/lexical-handler/parameter-entities
                                        </comment>
                                        <comment type="line">// controls whether the beginning and end of parameter
                                            entities
                                        </comment>
                                        <comment type="line">// will be reported to the LexicalHandler.</comment>
                                        <comment type="line">//</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>suffixLength</name>
                                                    ==
                                                    <call>
                                                        <name><name>Constants</name>.<name>
                                                            LEXICAL_HANDLER_PARAMETER_ENTITIES_FEATURE</name>.
                                                            <name>length</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    &amp;&amp;
                                                    <call>
                                                        <name><name>featureId</name>.
                                                            <name>endsWith</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Constants</name>.
                                                                        <name>
                                                                            LEXICAL_HANDLER_PARAMETER_ENTITIES_FEATURE
                                                                        </name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <return>return
                                                        <expr>
                                                            <name>fLexicalHandlerParameterEntities</name>
                                                        </expr>
                                                        ;
                                                    </return>
                                                    }
                                                </block>
                                            </then>
                                        </if>

                                        <comment type="line">// http://xml.org/sax/features/resolve-dtd-uris</comment>
                                        <comment type="line">// controls whether system identifiers will be absolutized
                                            relative to
                                        </comment>
                                        <comment type="line">// their base URIs before reporting.</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>suffixLength</name>
                                                    ==
                                                    <call>
                                                        <name><name>Constants</name>.<name>
                                                            RESOLVE_DTD_URIS_FEATURE</name>.
                                                            <name>length</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    &amp;&amp;
                                                    <call>
                                                        <name><name>featureId</name>.
                                                            <name>endsWith</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Constants</name>.
                                                                        <name>RESOLVE_DTD_URIS_FEATURE</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <return>return
                                                        <expr>
                                                            <name>fResolveDTDURIs</name>
                                                        </expr>
                                                        ;
                                                    </return>
                                                    }
                                                </block>
                                            </then>
                                        </if>

                                        <comment type="line">// http://xml.org/sax/features/xmlns-uris</comment>
                                        <comment type="line">// controls whether the parser reports that namespace
                                            declaration
                                        </comment>
                                        <comment type="line">// attributes as being in the namespace:
                                            http://www.w3.org/2000/xmlns/
                                        </comment>
                                        <comment type="line">//</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>suffixLength</name>
                                                    ==
                                                    <call>
                                                        <name><name>Constants</name>.<name>XMLNS_URIS_FEATURE</name>.
                                                            <name>length</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    &amp;&amp;
                                                    <call>
                                                        <name><name>featureId</name>.
                                                            <name>endsWith</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Constants</name>.
                                                                        <name>XMLNS_URIS_FEATURE</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <return>return
                                                        <expr>
                                                            <name>fXMLNSURIs</name>
                                                        </expr>
                                                        ;
                                                    </return>
                                                    }
                                                </block>
                                            </then>
                                        </if>

                                        <comment type="line">//
                                            http://xml.org/sax/features/unicode-normalization-checking
                                        </comment>
                                        <comment type="line">// controls whether Unicode normalization checking is
                                            performed
                                        </comment>
                                        <comment type="line">// as per Appendix B of the XML 1.1 specification</comment>
                                        <comment type="line">//</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>suffixLength</name>
                                                    ==
                                                    <call>
                                                        <name><name>Constants</name>.<name>
                                                            UNICODE_NORMALIZATION_CHECKING_FEATURE</name>.
                                                            <name>length</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    &amp;&amp;
                                                    <call>
                                                        <name><name>featureId</name>.
                                                            <name>endsWith</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Constants</name>.
                                                                        <name>UNICODE_NORMALIZATION_CHECKING_FEATURE
                                                                        </name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <comment type="line">// REVISIT: Allow this feature to be set once
                                                        Unicode normalization
                                                    </comment>
                                                    <comment type="line">// checking is supported -- mrglavas.</comment>
                                                    <return>return <expr>false</expr>;
                                                    </return>
                                                    }
                                                </block>
                                            </then>
                                        </if>

                                        <comment type="line">// http://xml.org/sax/features/use-entity-resolver2
                                        </comment>
                                        <comment type="line">// controls whether the methods of an object implementing
                                        </comment>
                                        <comment type="line">// org.xml.sax.ext.EntityResolver2 will be used by the
                                            parser.
                                        </comment>
                                        <comment type="line">//</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>suffixLength</name>
                                                    ==
                                                    <call>
                                                        <name><name>Constants</name>.<name>
                                                            USE_ENTITY_RESOLVER2_FEATURE</name>.
                                                            <name>length</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    &amp;&amp;
                                                    <call>
                                                        <name><name>featureId</name>.
                                                            <name>endsWith</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Constants</name>.
                                                                        <name>USE_ENTITY_RESOLVER2_FEATURE</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <return>return
                                                        <expr>
                                                            <name>fUseEntityResolver2</name>
                                                        </expr>
                                                        ;
                                                    </return>
                                                    }
                                                </block>
                                            </then>
                                        </if>

                                        <comment type="line">// http://xml.org/sax/features/use-attributes2</comment>
                                        <comment type="line">// reports whether Attributes objects passed to
                                            startElement also implement
                                        </comment>
                                        <comment type="line">// the org.xml.sax.ext.Attributes2 interface.</comment>
                                        <comment type="line">// http://xml.org/sax/features/use-locator2</comment>
                                        <comment type="line">// reports whether Locator objects passed to
                                            setDocumentLocator also implement
                                        </comment>
                                        <comment type="line">// the org.xml.sax.ext.Locator2 interface.</comment>
                                        <comment type="line">//</comment>
                                        <if>if
                                            <condition>(
                                                <expr>(<name>suffixLength</name> ==
                                                    <call>
                                                        <name><name>Constants</name>.<name>
                                                            USE_ATTRIBUTES2_FEATURE</name>.
                                                            <name>length</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    &amp;&amp;
                                                    <call>
                                                        <name><name>featureId</name>.
                                                            <name>endsWith</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Constants</name>.
                                                                        <name>USE_ATTRIBUTES2_FEATURE</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    ) ||
                                                    (<name>suffixLength</name> ==
                                                    <call>
                                                        <name><name>Constants</name>.<name>USE_LOCATOR2_FEATURE</name>.
                                                            <name>length</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    &amp;&amp;
                                                    <call>
                                                        <name><name>featureId</name>.
                                                            <name>endsWith</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Constants</name>.
                                                                        <name>USE_LOCATOR2_FEATURE</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    )
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <return>return <expr>true</expr>;
                                                    </return>
                                                    }
                                                </block>
                                            </then>
                                        </if>


                                        <comment type="line">//</comment>
                                        <comment type="line">// Drop through and perform default processing</comment>
                                        <comment type="line">//</comment>
                                        }
                                    </block>
                                </then>
                            </if>

                            <comment type="line">//</comment>
                            <comment type="line">// Xerces Features</comment>
                            <comment type="line">//</comment>

                            <comment type="block">/*
                                else if (featureId.startsWith(XERCES_FEATURES_PREFIX)) {
                                //
                                // Drop through and perform default processing
                                //
                                }
                                */
                            </comment>

                            <return>return
                                <expr>
                                    <call>
                                        <name><name>fConfiguration</name>.
                                            <name>getFeature</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>featureId</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLConfigurationException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                        </type>
                                        <name>identifier</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>e</name>.
                                                        <name>getIdentifier</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>e</name>.
                                                    <name>getType</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            ==
                                            <name><name>XMLConfigurationException</name>.
                                                <name>NOT_RECOGNIZED</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>SAXNotRecognizedException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>SAXMessageFormatter</name>.
                                                                            <name>formatMessage</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>
                                                                                            fConfiguration</name>.
                                                                                            <name>getLocale</name>
                                                                                        </name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>"feature-not-recognized"</expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>new
                                                                                    <name>
                                                                                        <name>Object</name>
                                                                                        <index>[]</index>
                                                                                    </name>
                                                                                    <block>{
                                                                                        <expr>
                                                                                            <name>identifier</name>
                                                                                        </expr>
                                                                                        }
                                                                                    </block>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>SAXNotSupportedException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>SAXMessageFormatter</name>.
                                                                            <name>formatMessage</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>
                                                                                            fConfiguration</name>.
                                                                                            <name>getLocale</name>
                                                                                        </name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>"feature-not-supported"</expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>new
                                                                                    <name>
                                                                                        <name>Object</name>
                                                                                        <index>[]</index>
                                                                                    </name>
                                                                                    <block>{
                                                                                        <expr>
                                                                                            <name>identifier</name>
                                                                                        </expr>
                                                                                        }
                                                                                    </block>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </catch>
                    </try>

                    }
                </block>
            </function>
            <comment type="line">// getFeature(String):boolean</comment>

            <comment type="javadoc">/**
                * Set the value of any property in a SAX2 parser. The parser
                * might not recognize the property, and if it does recognize
                * it, it might not support the requested value.
                *
                * @param propertyId The unique identifier (URI) of the property
                * being set.
                * @param value The value to which the property is being set.
                *
                * @exception SAXNotRecognizedException If the
                * requested property is not known.
                * @exception SAXNotSupportedException If the
                * requested property is known, but the requested
                * value is not supported.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setProperty</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>propertyId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>SAXNotRecognizedException</name>
                        </expr>
                    </argument>
                    ,
                    <argument>
                        <expr>
                            <name>SAXNotSupportedException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <try>try
                        <block>{
                            <comment type="line">//</comment>
                            <comment type="line">// SAX2 core properties</comment>
                            <comment type="line">//</comment>

                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>propertyId</name>.
                                                <name>startsWith</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>Constants</name>.
                                                            <name>SAX_PROPERTY_PREFIX</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <specifier>final</specifier>
                                                    <name>int</name>
                                                </type>
                                                <name>suffixLength</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>propertyId</name>.
                                                                <name>length</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        -
                                                        <call>
                                                            <name><name>Constants</name>.<name>
                                                                SAX_PROPERTY_PREFIX</name>.
                                                                <name>length</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>

                                        <comment type="line">//</comment>
                                        <comment type="line">// http://xml.org/sax/properties/lexical-handler</comment>
                                        <comment type="line">// Value type: org.xml.sax.ext.LexicalHandler</comment>
                                        <comment type="line">// Access: read/write, pre-parse only</comment>
                                        <comment type="line">// Set the lexical event handler.</comment>
                                        <comment type="line">//</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>suffixLength</name>
                                                    ==
                                                    <call>
                                                        <name><name>Constants</name>.<name>
                                                            LEXICAL_HANDLER_PROPERTY</name>.
                                                            <name>length</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    &amp;&amp;
                                                    <call>
                                                        <name><name>propertyId</name>.
                                                            <name>endsWith</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Constants</name>.
                                                                        <name>LEXICAL_HANDLER_PROPERTY</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <try>try
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name>setLexicalHandler</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>(<name>LexicalHandler</name>)
                                                                                    <name>value</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                        <catch>catch (
                                                            <param>
                                                                <decl>
                                                                    <type>
                                                                        <name>ClassCastException</name>
                                                                    </type>
                                                                    <name>e</name>
                                                                </decl>
                                                            </param>
                                                            )
                                                            <block>{
                                                                <throw>throw
                                                                    <expr>new
                                                                        <call>
                                                                            <name>SAXNotSupportedException</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>
                                                                                                SAXMessageFormatter</name>
                                                                                                .
                                                                                                <name>formatMessage
                                                                                                </name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <call>
                                                                                                            <name><name>
                                                                                                                fConfiguration</name>
                                                                                                                .
                                                                                                                <name>
                                                                                                                    getLocale
                                                                                                                </name>
                                                                                                            </name>
                                                                                                            <argument_list>
                                                                                                                ()
                                                                                                            </argument_list>
                                                                                                        </call>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                ,
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        "incompatible-class"
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                ,
                                                                                                <argument>
                                                                                                    <expr>new
                                                                                                        <name>
                                                                                                            <name>
                                                                                                                Object
                                                                                                            </name>
                                                                                                            <index>[]
                                                                                                            </index>
                                                                                                        </name>
                                                                                                        <block>{
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    propertyId
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                            , <expr>
                                                                                                                "org.xml.sax.ext.LexicalHandler"</expr>}
                                                                                                        </block>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </throw>
                                                                }
                                                            </block>
                                                        </catch>
                                                    </try>
                                                    <return>return;</return>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <comment type="line">//</comment>
                                        <comment type="line">// http://xml.org/sax/properties/declaration-handler
                                        </comment>
                                        <comment type="line">// Value type: org.xml.sax.ext.DeclHandler</comment>
                                        <comment type="line">// Access: read/write, pre-parse only</comment>
                                        <comment type="line">// Set the DTD declaration event handler.</comment>
                                        <comment type="line">//</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>suffixLength</name>
                                                    ==
                                                    <call>
                                                        <name><name>Constants</name>.<name>
                                                            DECLARATION_HANDLER_PROPERTY</name>.
                                                            <name>length</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    &amp;&amp;
                                                    <call>
                                                        <name><name>propertyId</name>.
                                                            <name>endsWith</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Constants</name>.
                                                                        <name>DECLARATION_HANDLER_PROPERTY</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <try>try
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name>setDeclHandler</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>(<name>DeclHandler</name>)
                                                                                    <name>value</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                        <catch>catch (
                                                            <param>
                                                                <decl>
                                                                    <type>
                                                                        <name>ClassCastException</name>
                                                                    </type>
                                                                    <name>e</name>
                                                                </decl>
                                                            </param>
                                                            )
                                                            <block>{
                                                                <throw>throw
                                                                    <expr>new
                                                                        <call>
                                                                            <name>SAXNotSupportedException</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>
                                                                                                SAXMessageFormatter</name>
                                                                                                .
                                                                                                <name>formatMessage
                                                                                                </name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <call>
                                                                                                            <name><name>
                                                                                                                fConfiguration</name>
                                                                                                                .
                                                                                                                <name>
                                                                                                                    getLocale
                                                                                                                </name>
                                                                                                            </name>
                                                                                                            <argument_list>
                                                                                                                ()
                                                                                                            </argument_list>
                                                                                                        </call>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                ,
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        "incompatible-class"
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                ,
                                                                                                <argument>
                                                                                                    <expr>new
                                                                                                        <name>
                                                                                                            <name>
                                                                                                                Object
                                                                                                            </name>
                                                                                                            <index>[]
                                                                                                            </index>
                                                                                                        </name>
                                                                                                        <block>{
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    propertyId
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                            , <expr>
                                                                                                                "org.xml.sax.ext.DeclHandler"</expr>}
                                                                                                        </block>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </throw>
                                                                }
                                                            </block>
                                                        </catch>
                                                    </try>
                                                    <return>return;</return>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <comment type="line">//</comment>
                                        <comment type="line">// http://xml.org/sax/properties/dom-node</comment>
                                        <comment type="line">// Value type: DOM Node</comment>
                                        <comment type="line">// Access: read-only</comment>
                                        <comment type="line">// Get the DOM node currently being visited, if the SAX
                                            parser is
                                        </comment>
                                        <comment type="line">// iterating over a DOM tree. If the parser recognises
                                            and
                                        </comment>
                                        <comment type="line">// supports this property but is not currently visiting a
                                            DOM
                                        </comment>
                                        <comment type="line">// node, it should return null (this is a good way to check
                                            for
                                        </comment>
                                        <comment type="line">// availability before the parse begins).</comment>
                                        <comment type="line">// http://xml.org/sax/properties/document-xml-version
                                        </comment>
                                        <comment type="line">// Value type: java.lang.String</comment>
                                        <comment type="line">// Access: read-only</comment>
                                        <comment type="line">// The literal string describing the actual XML version of
                                            the document.
                                        </comment>
                                        <comment type="line">//</comment>
                                        <if>if
                                            <condition>(
                                                <expr>(<name>suffixLength</name> ==
                                                    <call>
                                                        <name><name>Constants</name>.<name>DOM_NODE_PROPERTY</name>.
                                                            <name>length</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    &amp;&amp;
                                                    <call>
                                                        <name><name>propertyId</name>.
                                                            <name>endsWith</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Constants</name>.
                                                                        <name>DOM_NODE_PROPERTY</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    ) ||
                                                    (<name>suffixLength</name> ==
                                                    <call>
                                                        <name><name>Constants</name>.<name>
                                                            DOCUMENT_XML_VERSION_PROPERTY</name>.
                                                            <name>length</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    &amp;&amp;
                                                    <call>
                                                        <name><name>propertyId</name>.
                                                            <name>endsWith</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Constants</name>.
                                                                        <name>DOCUMENT_XML_VERSION_PROPERTY</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    )
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>SAXNotSupportedException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>SAXMessageFormatter</name>.
                                                                                    <name>formatMessage</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <call>
                                                                                                <name><name>
                                                                                                    fConfiguration</name>
                                                                                                    .
                                                                                                    <name>getLocale
                                                                                                    </name>
                                                                                                </name>
                                                                                                <argument_list>()
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>"property-read-only"
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>new
                                                                                            <name>
                                                                                                <name>Object</name>
                                                                                                <index>[]</index>
                                                                                            </name>
                                                                                            <block>{
                                                                                                <expr>
                                                                                                    <name>propertyId
                                                                                                    </name>
                                                                                                </expr>
                                                                                                }
                                                                                            </block>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <comment type="line">//</comment>
                                        <comment type="line">// Drop through and perform default processing</comment>
                                        <comment type="line">//</comment>
                                        }
                                    </block>
                                </then>
                            </if>

                            <comment type="line">//</comment>
                            <comment type="line">// Xerces Properties</comment>
                            <comment type="line">//</comment>

                            <comment type="block">/*
                                else if (propertyId.startsWith(XERCES_PROPERTIES_PREFIX)) {
                                //
                                // Drop through and perform default processing
                                //
                                }
                                */
                            </comment>

                            <comment type="line">//</comment>
                            <comment type="line">// Perform default processing</comment>
                            <comment type="line">//</comment>

                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fConfiguration</name>.
                                            <name>setProperty</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>propertyId</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>value</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLConfigurationException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                        </type>
                                        <name>identifier</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>e</name>.
                                                        <name>getIdentifier</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>e</name>.
                                                    <name>getType</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            ==
                                            <name><name>XMLConfigurationException</name>.
                                                <name>NOT_RECOGNIZED</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>SAXNotRecognizedException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>SAXMessageFormatter</name>.
                                                                            <name>formatMessage</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>
                                                                                            fConfiguration</name>.
                                                                                            <name>getLocale</name>
                                                                                        </name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>"property-not-recognized"</expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>new
                                                                                    <name>
                                                                                        <name>Object</name>
                                                                                        <index>[]</index>
                                                                                    </name>
                                                                                    <block>{
                                                                                        <expr>
                                                                                            <name>identifier</name>
                                                                                        </expr>
                                                                                        }
                                                                                    </block>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>SAXNotSupportedException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>SAXMessageFormatter</name>.
                                                                            <name>formatMessage</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>
                                                                                            fConfiguration</name>.
                                                                                            <name>getLocale</name>
                                                                                        </name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>"property-not-supported"</expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>new
                                                                                    <name>
                                                                                        <name>Object</name>
                                                                                        <index>[]</index>
                                                                                    </name>
                                                                                    <block>{
                                                                                        <expr>
                                                                                            <name>identifier</name>
                                                                                        </expr>
                                                                                        }
                                                                                    </block>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </catch>
                    </try>

                    }
                </block>
            </function>
            <comment type="line">// setProperty(String,Object)</comment>

            <comment type="javadoc">/**
                * Query the value of a property.
                *
                * Return the current value of a property in a SAX2 parser.
                * The parser might not recognize the property.
                *
                * @param propertyId The unique identifier (URI) of the property
                * being set.
                * @return The current value of the property.
                * @exception org.xml.sax.SAXNotRecognizedException If the
                * requested property is not known.
                * @exception SAXNotSupportedException If the
                * requested property is known but not supported.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Object</name>
                </type>
                <name>getProperty</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>propertyId</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>SAXNotRecognizedException</name>
                        </expr>
                    </argument>
                    ,
                    <argument>
                        <expr>
                            <name>SAXNotSupportedException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <try>try
                        <block>{
                            <comment type="line">//</comment>
                            <comment type="line">// SAX2 core properties</comment>
                            <comment type="line">//</comment>

                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>propertyId</name>.
                                                <name>startsWith</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>Constants</name>.
                                                            <name>SAX_PROPERTY_PREFIX</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <specifier>final</specifier>
                                                    <name>int</name>
                                                </type>
                                                <name>suffixLength</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>propertyId</name>.
                                                                <name>length</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        -
                                                        <call>
                                                            <name><name>Constants</name>.<name>
                                                                SAX_PROPERTY_PREFIX</name>.
                                                                <name>length</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>

                                        <comment type="line">//</comment>
                                        <comment type="line">// http://xml.org/sax/properties/document-xml-version
                                        </comment>
                                        <comment type="line">// Value type: java.lang.String</comment>
                                        <comment type="line">// Access: read-only</comment>
                                        <comment type="line">// The literal string describing the actual XML version of
                                            the document.
                                        </comment>
                                        <comment type="line">//</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>suffixLength</name>
                                                    ==
                                                    <call>
                                                        <name><name>Constants</name>.<name>
                                                            DOCUMENT_XML_VERSION_PROPERTY</name>.
                                                            <name>length</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    &amp;&amp;
                                                    <call>
                                                        <name><name>propertyId</name>.
                                                            <name>endsWith</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Constants</name>.
                                                                        <name>DOCUMENT_XML_VERSION_PROPERTY</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <return>return
                                                        <expr>
                                                            <name>fVersion</name>
                                                        </expr>
                                                        ;
                                                    </return>
                                                    }
                                                </block>
                                            </then>
                                        </if>

                                        <comment type="line">//</comment>
                                        <comment type="line">// http://xml.org/sax/properties/lexical-handler</comment>
                                        <comment type="line">// Value type: org.xml.sax.ext.LexicalHandler</comment>
                                        <comment type="line">// Access: read/write, pre-parse only</comment>
                                        <comment type="line">// Set the lexical event handler.</comment>
                                        <comment type="line">//</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>suffixLength</name>
                                                    ==
                                                    <call>
                                                        <name><name>Constants</name>.<name>
                                                            LEXICAL_HANDLER_PROPERTY</name>.
                                                            <name>length</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    &amp;&amp;
                                                    <call>
                                                        <name><name>propertyId</name>.
                                                            <name>endsWith</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Constants</name>.
                                                                        <name>LEXICAL_HANDLER_PROPERTY</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <return>return
                                                        <expr>
                                                            <call>
                                                                <name>getLexicalHandler</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </return>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <comment type="line">//</comment>
                                        <comment type="line">// http://xml.org/sax/properties/declaration-handler
                                        </comment>
                                        <comment type="line">// Value type: org.xml.sax.ext.DeclHandler</comment>
                                        <comment type="line">// Access: read/write, pre-parse only</comment>
                                        <comment type="line">// Set the DTD declaration event handler.</comment>
                                        <comment type="line">//</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>suffixLength</name>
                                                    ==
                                                    <call>
                                                        <name><name>Constants</name>.<name>
                                                            DECLARATION_HANDLER_PROPERTY</name>.
                                                            <name>length</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    &amp;&amp;
                                                    <call>
                                                        <name><name>propertyId</name>.
                                                            <name>endsWith</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Constants</name>.
                                                                        <name>DECLARATION_HANDLER_PROPERTY</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <return>return
                                                        <expr>
                                                            <call>
                                                                <name>getDeclHandler</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </return>
                                                    }
                                                </block>
                                            </then>
                                        </if>

                                        <comment type="line">//</comment>
                                        <comment type="line">// http://xml.org/sax/properties/dom-node</comment>
                                        <comment type="line">// Value type: DOM Node</comment>
                                        <comment type="line">// Access: read-only</comment>
                                        <comment type="line">// Get the DOM node currently being visited, if the SAX
                                            parser is
                                        </comment>
                                        <comment type="line">// iterating over a DOM tree. If the parser recognises
                                            and
                                        </comment>
                                        <comment type="line">// supports this property but is not currently visiting a
                                            DOM
                                        </comment>
                                        <comment type="line">// node, it should return null (this is a good way to check
                                            for
                                        </comment>
                                        <comment type="line">// availability before the parse begins).</comment>
                                        <comment type="line">//</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>suffixLength</name>
                                                    ==
                                                    <call>
                                                        <name><name>Constants</name>.<name>DOM_NODE_PROPERTY</name>.
                                                            <name>length</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    &amp;&amp;
                                                    <call>
                                                        <name><name>propertyId</name>.
                                                            <name>endsWith</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Constants</name>.
                                                                        <name>DOM_NODE_PROPERTY</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <comment type="line">// we are not iterating a DOM tree</comment>
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>SAXNotSupportedException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>SAXMessageFormatter</name>.
                                                                                    <name>formatMessage</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <call>
                                                                                                <name><name>
                                                                                                    fConfiguration</name>
                                                                                                    .
                                                                                                    <name>getLocale
                                                                                                    </name>
                                                                                                </name>
                                                                                                <argument_list>()
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            "dom-node-read-not-supported"
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>null</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                        </if>

                                        <comment type="line">//</comment>
                                        <comment type="line">// Drop through and perform default processing</comment>
                                        <comment type="line">//</comment>
                                        }
                                    </block>
                                </then>
                            </if>

                            <comment type="line">//</comment>
                            <comment type="line">// Xerces properties</comment>
                            <comment type="line">//</comment>

                            <comment type="block">/*
                                else if (propertyId.startsWith(XERCES_PROPERTIES_PREFIX)) {
                                //
                                // Drop through and perform default processing
                                //
                                }
                                */
                            </comment>

                            <comment type="line">//</comment>
                            <comment type="line">// Perform default processing</comment>
                            <comment type="line">//</comment>

                            <return>return
                                <expr>
                                    <call>
                                        <name><name>fConfiguration</name>.
                                            <name>getProperty</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>propertyId</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLConfigurationException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                        </type>
                                        <name>identifier</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>e</name>.
                                                        <name>getIdentifier</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>e</name>.
                                                    <name>getType</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            ==
                                            <name><name>XMLConfigurationException</name>.
                                                <name>NOT_RECOGNIZED</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>SAXNotRecognizedException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>SAXMessageFormatter</name>.
                                                                            <name>formatMessage</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>
                                                                                            fConfiguration</name>.
                                                                                            <name>getLocale</name>
                                                                                        </name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>"property-not-recognized"</expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>new
                                                                                    <name>
                                                                                        <name>Object</name>
                                                                                        <index>[]</index>
                                                                                    </name>
                                                                                    <block>{
                                                                                        <expr>
                                                                                            <name>identifier</name>
                                                                                        </expr>
                                                                                        }
                                                                                    </block>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>SAXNotSupportedException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>SAXMessageFormatter</name>.
                                                                            <name>formatMessage</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>
                                                                                            fConfiguration</name>.
                                                                                            <name>getLocale</name>
                                                                                        </name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>"property-not-supported"</expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>new
                                                                                    <name>
                                                                                        <name>Object</name>
                                                                                        <index>[]</index>
                                                                                    </name>
                                                                                    <block>{
                                                                                        <expr>
                                                                                            <name>identifier</name>
                                                                                        </expr>
                                                                                        }
                                                                                    </block>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </catch>
                    </try>

                    }
                </block>
            </function>
            <comment type="line">// getProperty(String):Object</comment>

            <comment type="line">//</comment>
            <comment type="line">// Protected methods</comment>
            <comment type="line">//</comment>

            <comment type="line">// SAX2 core properties</comment>

            <comment type="javadoc">/**
                * Set the DTD declaration event handler.
                * &lt;p&gt;
                * This method is the equivalent to the property:
                * &lt;pre&gt;
                * http://xml.org/sax/properties/declaration-handler
                * &lt;/pre&gt;
                *
                * @param handler The new handler.
                *
                * @see #getDeclHandler
                * @see #setProperty
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>setDeclHandler</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>DeclHandler</name>
                            </type>
                            <name>handler</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>SAXNotRecognizedException</name>
                        </expr>
                    </argument>
                    ,
                    <argument>
                        <expr>
                            <name>SAXNotSupportedException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name>fParseInProgress</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>SAXNotSupportedException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>SAXMessageFormatter</name>.
                                                                <name>formatMessage</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>fConfiguration</name>.
                                                                                <name>getLocale</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>"property-not-parsing-supported"</expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>new
                                                                        <name>
                                                                            <name>Object</name>
                                                                            <index>[]</index>
                                                                        </name>
                                                                        <block>{<expr>
                                                                            "http://xml.org/sax/properties/declaration-handler"</expr>}
                                                                        </block>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name>fDeclHandler</name>
                            =
                            <name>handler</name>
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </function>
            <comment type="line">// setDeclHandler(DeclHandler)</comment>

            <comment type="javadoc">/**
                * Returns the DTD declaration event handler.
                *
                * @see #setDeclHandler
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>DeclHandler</name>
                </type>
                <name>getDeclHandler</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>SAXNotRecognizedException</name>
                        </expr>
                    </argument>
                    ,
                    <argument>
                        <expr>
                            <name>SAXNotSupportedException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <return>return
                        <expr>
                            <name>fDeclHandler</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getDeclHandler():DeclHandler</comment>

            <comment type="javadoc">/**
                * Set the lexical event handler.
                * &lt;p&gt;
                * This method is the equivalent to the property:
                * &lt;pre&gt;
                * http://xml.org/sax/properties/lexical-handler
                * &lt;/pre&gt;
                *
                * @param handler lexical event handler
                *
                * @see #getLexicalHandler
                * @see #setProperty
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>setLexicalHandler</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>LexicalHandler</name>
                            </type>
                            <name>handler</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>SAXNotRecognizedException</name>
                        </expr>
                    </argument>
                    ,
                    <argument>
                        <expr>
                            <name>SAXNotSupportedException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name>fParseInProgress</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>SAXNotSupportedException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>SAXMessageFormatter</name>.
                                                                <name>formatMessage</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>fConfiguration</name>.
                                                                                <name>getLocale</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>"property-not-parsing-supported"</expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>new
                                                                        <name>
                                                                            <name>Object</name>
                                                                            <index>[]</index>
                                                                        </name>
                                                                        <block>{<expr>
                                                                            "http://xml.org/sax/properties/lexical-handler"</expr>}
                                                                        </block>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name>fLexicalHandler</name>
                            =
                            <name>handler</name>
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </function>
            <comment type="line">// setLexicalHandler(LexicalHandler)</comment>

            <comment type="javadoc">/**
                * Returns the lexical handler.
                *
                * @see #setLexicalHandler
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>LexicalHandler</name>
                </type>
                <name>getLexicalHandler</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>SAXNotRecognizedException</name>
                        </expr>
                    </argument>
                    ,
                    <argument>
                        <expr>
                            <name>SAXNotSupportedException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <return>return
                        <expr>
                            <name>fLexicalHandler</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getLexicalHandler():LexicalHandler</comment>

            <comment type="javadoc">/**
                * Send startPrefixMapping events
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <specifier>final</specifier>
                    <name>void</name>
                </type>
                <name>startNamespaceMapping</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>SAXException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>count</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>fNamespaceContext</name>.
                                            <name>getDeclaredPrefixCount</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>count</name>
                                &gt; 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                        </type>
                                        <name>prefix</name> =
                                        <init>
                                            <expr>
                                                <name>null</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                        </type>
                                        <name>uri</name> =
                                        <init>
                                            <expr>
                                                <name>null</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <for>for (
                                    <init>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>i</name> =
                                            <init>
                                                <expr>0</expr>
                                            </init>
                                        </decl>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            &lt;
                                            <name>count</name>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr><name>i</name>++
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>prefix</name>
                                                =
                                                <call>
                                                    <name><name>fNamespaceContext</name>.
                                                        <name>getDeclaredPrefixAt</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>uri</name>
                                                =
                                                <call>
                                                    <name><name>fNamespaceContext</name>.
                                                        <name>getURI</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>prefix</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fContentHandler</name>.
                                                        <name>startPrefixMapping</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>prefix</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>(<name>uri</name> == <name>null</name>) ? "" :
                                                                <name>uri</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </for>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Send endPrefixMapping events
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <specifier>final</specifier>
                    <name>void</name>
                </type>
                <name>endNamespaceMapping</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>SAXException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>count</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>fNamespaceContext</name>.
                                            <name>getDeclaredPrefixCount</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>count</name>
                                &gt; 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <for>for (
                                    <init>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>i</name> =
                                            <init>
                                                <expr>0</expr>
                                            </init>
                                        </decl>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            &lt;
                                            <name>count</name>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr><name>i</name>++
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fContentHandler</name>.
                                                        <name>endPrefixMapping</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>fNamespaceContext</name>.
                                                                        <name>getDeclaredPrefixAt</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>i</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </for>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="line">//</comment>
            <comment type="line">// XMLDocumentParser methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * Reset all components before parsing.
                *
                * @throws XNIException Thrown if an error occurs during initialization.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>reset</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>super</name>.
                                    <name>reset</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// reset state</comment>
                    <expr_stmt>
                        <expr>
                            <name>fInDTD</name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fVersion</name>
                            = "1.0"
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fStandalone</name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// features</comment>
                    <expr_stmt>
                        <expr>
                            <name>fNamespaces</name>
                            =
                            <call>
                                <name><name>fConfiguration</name>.
                                    <name>getFeature</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>NAMESPACES</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fNamespacePrefixes</name>
                            =
                            <call>
                                <name><name>fConfiguration</name>.
                                    <name>getFeature</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>NAMESPACE_PREFIXES</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fAugmentations</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fDeclaredAttrs</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </function>
            <comment type="line">// reset()</comment>

            <comment type="line">//</comment>
            <comment type="line">// Classes</comment>
            <comment type="line">//</comment>

            <class>
                <specifier>protected</specifier>
                class
                <name>LocatorProxy</name>
                <super>
                    <implements>implements
                        <name>Locator2</name>
                    </implements>
                </super>
                <block>{

                    <comment type="line">//</comment>
                    <comment type="line">// Data</comment>
                    <comment type="line">//</comment>

                    <comment type="javadoc">/** XML locator. */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>protected</specifier>
                                <name>XMLLocator</name>
                            </type>
                            <name>fLocator</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">//</comment>
                    <comment type="line">// Constructors</comment>
                    <comment type="line">//</comment>

                    <comment type="javadoc">/** Constructs an XML locator proxy. */</comment>
                    <constructor>
                        <specifier>public</specifier>
                        <name>LocatorProxy</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLLocator</name>
                                    </type>
                                    <name>locator</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>fLocator</name>
                                    =
                                    <name>locator</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>

                    <comment type="line">//</comment>
                    <comment type="line">// Locator methods</comment>
                    <comment type="line">//</comment>

                    <comment type="javadoc">/** Public identifier. */</comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>String</name>
                        </type>
                        <name>getPublicId</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>fLocator</name>.
                                            <name>getPublicId</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/** System identifier. */</comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>String</name>
                        </type>
                        <name>getSystemId</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>fLocator</name>.
                                            <name>getExpandedSystemId</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    <comment type="javadoc">/** Line number. */</comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>int</name>
                        </type>
                        <name>getLineNumber</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>fLocator</name>.
                                            <name>getLineNumber</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/** Column number. */</comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>int</name>
                        </type>
                        <name>getColumnNumber</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>fLocator</name>.
                                            <name>getColumnNumber</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="line">// Locator2 methods</comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>String</name>
                        </type>
                        <name>getXMLVersion</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>fLocator</name>.
                                            <name>getXMLVersion</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>String</name>
                        </type>
                        <name>getEncoding</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>fLocator</name>.
                                            <name>getEncoding</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    }
                </block>
            </class>
            <comment type="line">// class LocatorProxy</comment>

            <class>
                <specifier>protected</specifier>
                <specifier>static</specifier>
                <specifier>final</specifier> class
                <name>AttributesProxy</name>
                <super>
                    <implements>implements <name>AttributeList</name>,
                        <name>Attributes2</name>
                    </implements>
                </super>
                <block>{

                    <comment type="line">//</comment>
                    <comment type="line">// Data</comment>
                    <comment type="line">//</comment>

                    <comment type="javadoc">/** XML attributes. */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>protected</specifier>
                                <name>XMLAttributes</name>
                            </type>
                            <name>fAttributes</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">//</comment>
                    <comment type="line">// Public methods</comment>
                    <comment type="line">//</comment>

                    <comment type="javadoc">/** Sets the XML attributes. */</comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>setAttributes</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLAttributes</name>
                                    </type>
                                    <name>attributes</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>fAttributes</name>
                                    =
                                    <name>attributes</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>
                    <comment type="line">// setAttributes(XMLAttributes)</comment>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>int</name>
                        </type>
                        <name>getLength</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>fAttributes</name>.
                                            <name>getLength</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>String</name>
                        </type>
                        <name>getName</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>i</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>fAttributes</name>.
                                            <name>getQName</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>i</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>String</name>
                        </type>
                        <name>getQName</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>index</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>fAttributes</name>.
                                            <name>getQName</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>index</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>String</name>
                        </type>
                        <name>getURI</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>index</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <comment type="line">// REVISIT: this hides the fact that internally we use</comment>
                            <comment type="line">// null instead of empty string</comment>
                            <comment type="line">// SAX requires URI to be a string or an empty string</comment>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>uri</name>=
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>fAttributes</name>.
                                                    <name>getURI</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>index</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <return>return
                                <expr>
                                    <name>uri</name>
                                    != <name>null</name> ? <name>uri</name> : ""
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>String</name>
                        </type>
                        <name>getLocalName</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>index</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>fAttributes</name>.
                                            <name>getLocalName</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>index</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>String</name>
                        </type>
                        <name>getType</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>i</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>fAttributes</name>.
                                            <name>getType</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>i</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>String</name>
                        </type>
                        <name>getType</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>name</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>fAttributes</name>.
                                            <name>getType</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>name</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>String</name>
                        </type>
                        <name>getType</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>uri</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>localName</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>uri</name>.
                                            <name>equals</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>""</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    ?
                                    <call>
                                        <name><name>fAttributes</name>.
                                            <name>getType</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>localName</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    :
                                    <call>
                                        <name><name>fAttributes</name>.
                                            <name>getType</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>uri</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>localName</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>String</name>
                        </type>
                        <name>getValue</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>i</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>fAttributes</name>.
                                            <name>getValue</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>i</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>String</name>
                        </type>
                        <name>getValue</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>name</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>fAttributes</name>.
                                            <name>getValue</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>name</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>String</name>
                        </type>
                        <name>getValue</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>uri</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>localName</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>uri</name>.
                                            <name>equals</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>""</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    ?
                                    <call>
                                        <name><name>fAttributes</name>.
                                            <name>getValue</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>localName</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    :
                                    <call>
                                        <name><name>fAttributes</name>.
                                            <name>getValue</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>uri</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>localName</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>int</name>
                        </type>
                        <name>getIndex</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>qName</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>fAttributes</name>.
                                            <name>getIndex</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>qName</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>int</name>
                        </type>
                        <name>getIndex</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>uri</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>localPart</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>uri</name>.
                                            <name>equals</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>""</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    ?
                                    <call>
                                        <name><name>fAttributes</name>.
                                            <name>getIndex</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>localPart</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    :
                                    <call>
                                        <name><name>fAttributes</name>.
                                            <name>getIndex</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>uri</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>localPart</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="line">// Attributes2 methods</comment>
                    <comment type="line">// REVISIT: Localize exception messages. -- mrglavas</comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>boolean</name>
                        </type>
                        <name>isDeclared</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>index</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>index</name>
                                        &lt; 0 || <name>index</name> &gt;=
                                        <call>
                                            <name><name>fAttributes</name>.
                                                <name>getLength</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <throw>throw
                                            <expr>new
                                                <call>
                                                    <name>ArrayIndexOutOfBoundsException</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>index</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </throw>
                                        }
                                    </block>
                                </then>
                            </if>
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>Boolean</name>.<name>TRUE</name>.
                                            <name>equals</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>fAttributes</name>.
                                                            <name>getAugmentations</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>index</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    .
                                                    <call>
                                                        <name>getItem</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Constants</name>.
                                                                        <name>ATTRIBUTE_DECLARED</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>boolean</name>
                        </type>
                        <name>isDeclared</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>qName</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>index</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name>getIndex</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>qName</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>index</name>
                                        == -1
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <throw>throw
                                            <expr>new
                                                <call>
                                                    <name>IllegalArgumentException</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>qName</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </throw>
                                        }
                                    </block>
                                </then>
                            </if>
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>Boolean</name>.<name>TRUE</name>.
                                            <name>equals</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>fAttributes</name>.
                                                            <name>getAugmentations</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>index</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    .
                                                    <call>
                                                        <name>getItem</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Constants</name>.
                                                                        <name>ATTRIBUTE_DECLARED</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>boolean</name>
                        </type>
                        <name>isDeclared</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>uri</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>localName</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>index</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name>getIndex</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>uri</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>localName</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>index</name>
                                        == -1
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <throw>throw
                                            <expr>new
                                                <call>
                                                    <name>IllegalArgumentException</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>localName</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </throw>
                                        }
                                    </block>
                                </then>
                            </if>
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>Boolean</name>.<name>TRUE</name>.
                                            <name>equals</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>fAttributes</name>.
                                                            <name>getAugmentations</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>index</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    .
                                                    <call>
                                                        <name>getItem</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Constants</name>.
                                                                        <name>ATTRIBUTE_DECLARED</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>boolean</name>
                        </type>
                        <name>isSpecified</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>index</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>index</name>
                                        &lt; 0 || <name>index</name> &gt;=
                                        <call>
                                            <name><name>fAttributes</name>.
                                                <name>getLength</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <throw>throw
                                            <expr>new
                                                <call>
                                                    <name>ArrayIndexOutOfBoundsException</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>index</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </throw>
                                        }
                                    </block>
                                </then>
                            </if>
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>fAttributes</name>.
                                            <name>isSpecified</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>index</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>boolean</name>
                        </type>
                        <name>isSpecified</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>qName</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>index</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name>getIndex</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>qName</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>index</name>
                                        == -1
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <throw>throw
                                            <expr>new
                                                <call>
                                                    <name>IllegalArgumentException</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>qName</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </throw>
                                        }
                                    </block>
                                </then>
                            </if>
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>fAttributes</name>.
                                            <name>isSpecified</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>index</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>boolean</name>
                        </type>
                        <name>isSpecified</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>uri</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>localName</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>index</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name>getIndex</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>uri</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>localName</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>index</name>
                                        == -1
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <throw>throw
                                            <expr>new
                                                <call>
                                                    <name>IllegalArgumentException</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>localName</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </throw>
                                        }
                                    </block>
                                </then>
                            </if>
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>fAttributes</name>.
                                            <name>isSpecified</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>index</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    }
                </block>
            </class>
            <comment type="line">// class AttributesProxy</comment>


            <comment type="line">// PSVIProvider methods</comment>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>ElementPSVI</name>
                </type>
                <name>getElementPSVI</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>(<name>fAugmentations</name> != <name>null</name>)?(<name>ElementPSVI</name>)
                            <call>
                                <name><name>fAugmentations</name>.
                                    <name>getItem</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>Constants</name>.
                                                <name>ELEMENT_PSVI</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            :
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>AttributePSVI</name>
                </type>
                <name>getAttributePSVI</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <return>return
                        <expr>(<name>AttributePSVI</name>)
                            <call>
                                <name><name>fAttributesProxy</name>.<name>fAttributes</name>.
                                    <name>getAugmentations</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>index</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            .
                            <call>
                                <name>getItem</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>Constants</name>.
                                                <name>ATTRIBUTE_PSVI</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>AttributePSVI</name>
                </type>
                <name>getAttributePSVIByName</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>uri</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>localname</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>(<name>AttributePSVI</name>)
                            <call>
                                <name><name>fAttributesProxy</name>.<name>fAttributes</name>.
                                    <name>getAugmentations</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>uri</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>localname</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            .
                            <call>
                                <name>getItem</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>Constants</name>.
                                                <name>ATTRIBUTE_PSVI</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            }
        </block>
    </class>
    <comment type="line">// class AbstractSAXParser</comment>
</unit>
