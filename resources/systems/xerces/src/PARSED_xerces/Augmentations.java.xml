<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\xni\Augmentations.java">
    <comment type="block">/*
        * Copyright 2000-2002,2004 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.
            <name>xni</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Enumeration</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * The Augmentations interface defines a table of additional data that may
        * be passed along the document pipeline. The information can contain extra
        * arguments or infoset augmentations, for example PSVI. This additional
        * information is identified by a String key.
        * &lt;p&gt;
        * &lt;strong&gt;Note:&lt;/strong&gt;
        * Methods that receive Augmentations are required to copy the information
        * if it is to be saved for use beyond the scope of the method.
        * The Augmentations content is volatile, and maybe modified by any method in
        * any component in the pipeline. Therefore, methods passed this structure
        * should not save any reference to the structure.
        *
        * @author Elena Litani, IBM
        * @version $Id: Augmentations.java,v 1.7 2004/02/24 23:15:54 mrglavas Exp $
        */
    </comment>

    <class type="interface">
        <specifier>public</specifier>
        interface <name>Augmentations</name>
        <block>{


            <comment type="javadoc">/**
                * Add additional information identified by a key to the Augmentations structure.
                *
                * @param key Identifier, can't be &lt;code&gt;null&lt;/code&gt;
                * @param item Additional information
                *
                * @return the previous value of the specified key in the Augmentations structure,
                * or &lt;code&gt;null&lt;/code&gt; if it did not have one.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Object</name>
                </type>
                <name>putItem</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>key</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>item</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>


            <comment type="javadoc">/**
                * Get information identified by a key from the Augmentations structure
                *
                * @param key Identifier, can't be &lt;code&gt;null&lt;/code&gt;
                *
                * @return the value to which the key is mapped in the Augmentations structure;
                * &lt;code&gt;null&lt;/code&gt; if the key is not mapped to any value.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Object</name>
                </type>
                <name>getItem</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>key</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>


            <comment type="javadoc">/**
                * Remove additional info from the Augmentations structure
                *
                * @param key Identifier, can't be &lt;code&gt;null&lt;/code&gt;
                * @return the previous value of the specified key in the Augmentations structure,
                * or &lt;code&gt;null&lt;/code&gt; if it did not have one.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Object</name>
                </type>
                <name>removeItem</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>key</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>


            <comment type="javadoc">/**
                * Returns an enumeration of the keys in the Augmentations structure
                *
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Enumeration</name>
                </type>
                <name>keys</name>
                <parameter_list>()</parameter_list>;
            </function_decl>


            <comment type="javadoc">/**
                * Remove all objects from the Augmentations structure.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>removeAllItems</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            }
        </block>
    </class>
</unit>
