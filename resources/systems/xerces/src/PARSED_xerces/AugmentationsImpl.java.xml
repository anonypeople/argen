<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\util\AugmentationsImpl.java">
    <comment type="block">/*
        * Copyright 2000-2002,2004 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.
            <name>util</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Hashtable</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Enumeration</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>Augmentations</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * This class provides an implementation for Augmentations interface.
        * Augmentations interface defines a hashtable of additional data that could
        * be passed along the document pipeline. The information can contain extra
        * arguments or infoset augmentations, for example PSVI. This additional
        * information is identified by a String key.
        * &lt;p&gt;
        *
        * @author Elena Litani, IBM
        * @version $Id: AugmentationsImpl.java,v 1.9 2004/02/24 23:15:53 mrglavas Exp $
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>AugmentationsImpl</name>
        <super>
            <implements>implements
                <name>Augmentations</name>
            </implements>
        </super>
        <block>{

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>AugmentationsItemsContainer</name>
                    </type>
                    <name>fAugmentationsContainer</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>SmallContainer</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Add additional information identified by a key to the Augmentations structure.
                *
                * @param key Identifier, can't be &lt;code&gt;null&lt;/code&gt;
                * @param item Additional information
                *
                * @return the previous value of the specified key in the Augmentations strucutre,
                * or &lt;code&gt;null&lt;/code&gt; if it did not have one.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Object</name>
                </type>
                <name>putItem</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>key</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>item</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>oldValue</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>fAugmentationsContainer</name>.
                                            <name>putItem</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>key</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>item</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <name>oldValue</name>
                                == <name>null</name> &amp;&amp;
                                <call>
                                    <name><name>fAugmentationsContainer</name>.
                                        <name>isFull</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fAugmentationsContainer</name>
                                        =
                                        <call>
                                            <name><name>fAugmentationsContainer</name>.
                                                <name>expand</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <return>return
                        <expr>
                            <name>oldValue</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * Get information identified by a key from the Augmentations structure
                *
                * @param key Identifier, can't be &lt;code&gt;null&lt;/code&gt;
                *
                * @return the value to which the key is mapped in the Augmentations structure;
                * &lt;code&gt;null&lt;/code&gt; if the key is not mapped to any value.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Object</name>
                </type>
                <name>getItem</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>key</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>fAugmentationsContainer</name>.
                                    <name>getItem</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>key</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * Remove additional info from the Augmentations structure
                *
                * @param key Identifier, can't be &lt;code&gt;null&lt;/code&gt;
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Object</name>
                </type>
                <name>removeItem</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>key</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>fAugmentationsContainer</name>.
                                    <name>removeItem</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>key</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns an enumeration of the keys in the Augmentations structure
                *
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Enumeration</name>
                </type>
                <name>keys</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>fAugmentationsContainer</name>.
                                    <name>keys</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Remove all objects from the Augmentations structure.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>removeAllItems</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fAugmentationsContainer</name>.
                                    <name>clear</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>toString</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>fAugmentationsContainer</name>.
                                    <name>toString</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <class>
                <specifier>abstract</specifier>
                class <name>AugmentationsItemsContainer</name>
                <block>{
                    <function_decl>
                        <type>
                            <specifier>abstract</specifier>
                            <specifier>public</specifier>
                            <name>Object</name>
                        </type>
                        <name>putItem</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Object</name>
                                    </type>
                                    <name>key</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>Object</name>
                                    </type>
                                    <name>item</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        ;
                    </function_decl>
                    <function_decl>
                        <type>
                            <specifier>abstract</specifier>
                            <specifier>public</specifier>
                            <name>Object</name>
                        </type>
                        <name>getItem</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Object</name>
                                    </type>
                                    <name>key</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        ;
                    </function_decl>
                    <function_decl>
                        <type>
                            <specifier>abstract</specifier>
                            <specifier>public</specifier>
                            <name>Object</name>
                        </type>
                        <name>removeItem</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Object</name>
                                    </type>
                                    <name>key</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        ;
                    </function_decl>
                    <function_decl>
                        <type>
                            <specifier>abstract</specifier>
                            <specifier>public</specifier>
                            <name>Enumeration</name>
                        </type>
                        <name>keys</name>
                        <parameter_list>()</parameter_list>;
                    </function_decl>
                    <function_decl>
                        <type>
                            <specifier>abstract</specifier>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>clear</name>
                        <parameter_list>()</parameter_list>;
                    </function_decl>
                    <function_decl>
                        <type>
                            <specifier>abstract</specifier>
                            <specifier>public</specifier>
                            <name>boolean</name>
                        </type>
                        <name>isFull</name>
                        <parameter_list>()</parameter_list>;
                    </function_decl>
                    <function_decl>
                        <type>
                            <specifier>abstract</specifier>
                            <specifier>public</specifier>
                            <name>AugmentationsItemsContainer</name>
                        </type>
                        <name>expand</name>
                        <parameter_list>()</parameter_list>;
                    </function_decl>
                    }
                </block>
            </class>

            <class>class <name>SmallContainer</name>
                <super>
                    <extends>extends
                        <name>AugmentationsItemsContainer</name>
                    </extends>
                </super>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <specifier>static</specifier>
                                <name>int</name>
                            </type>
                            <name>SIZE_LIMIT</name> =
                            <init>
                                <expr>10</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>Object</name>
                                <index>[]</index>
                            </type>
                            <name>fAugmentations</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>Object</name>
                                        <index>[
                                            <expr><name>SIZE_LIMIT</name>*2
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>fNumEntries</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>Enumeration</name>
                        </type>
                        <name>keys</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>new
                                    <call>
                                        <name>SmallContainerKeyEnumeration</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>Object</name>
                        </type>
                        <name>getItem</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Object</name>
                                    </type>
                                    <name>key</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <for>for (
                                <init>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>i</name> =
                                        <init>
                                            <expr>0</expr>
                                        </init>
                                    </decl>
                                    ;
                                </init>
                                <condition>
                                    <expr>
                                        <name>i</name>
                                        &lt; <name>fNumEntries</name>*2
                                    </expr>
                                    ;
                                </condition>
                                <incr>
                                    <expr>
                                        <name>i</name>
                                        = <name>i</name> + 2
                                    </expr>
                                </incr>
                                )
                                <block>{
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>
                                                    <name>fAugmentations</name>
                                                    <index>[
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                .
                                                <call>
                                                    <name>equals</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>key</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <return>return
                                                    <expr>
                                                        <name>
                                                            <name>fAugmentations</name>
                                                            <index>[
                                                                <expr><name>i</name>+1
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                    </expr>
                                                    ;
                                                </return>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    }
                                </block>
                            </for>

                            <return>return
                                <expr>
                                    <name>null</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>Object</name>
                        </type>
                        <name>putItem</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Object</name>
                                    </type>
                                    <name>key</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>Object</name>
                                    </type>
                                    <name>item</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <for>for (
                                <init>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>i</name> =
                                        <init>
                                            <expr>0</expr>
                                        </init>
                                    </decl>
                                    ;
                                </init>
                                <condition>
                                    <expr>
                                        <name>i</name>
                                        &lt; <name>fNumEntries</name>*2
                                    </expr>
                                    ;
                                </condition>
                                <incr>
                                    <expr>
                                        <name>i</name>
                                        = <name>i</name> + 2
                                    </expr>
                                </incr>
                                )
                                <block>{
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>
                                                    <name>fAugmentations</name>
                                                    <index>[
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                .
                                                <call>
                                                    <name>equals</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>key</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>Object</name>
                                                        </type>
                                                        <name>oldValue</name> =
                                                        <init>
                                                            <expr>
                                                                <name>
                                                                    <name>fAugmentations</name>
                                                                    <index>[
                                                                        <expr><name>i</name>+1
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>
                                                            <name>fAugmentations</name>
                                                            <index>[
                                                                <expr><name>i</name>+1
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                        =
                                                        <name>item</name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>

                                                <return>return
                                                    <expr>
                                                        <name>oldValue</name>
                                                    </expr>
                                                    ;
                                                </return>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    }
                                </block>
                            </for>

                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>fAugmentations</name>
                                        <index>[
                                            <expr><name>fNumEntries</name>*2
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    =
                                    <name>key</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>fAugmentations</name>
                                        <index>[
                                            <expr><name>fNumEntries</name>*2+1
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    =
                                    <name>item</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr><name>fNumEntries</name>++
                                </expr>
                                ;
                            </expr_stmt>

                            <return>return
                                <expr>
                                    <name>null</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>


                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>Object</name>
                        </type>
                        <name>removeItem</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Object</name>
                                    </type>
                                    <name>key</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <for>for (
                                <init>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>i</name> =
                                        <init>
                                            <expr>0</expr>
                                        </init>
                                    </decl>
                                    ;
                                </init>
                                <condition>
                                    <expr>
                                        <name>i</name>
                                        &lt; <name>fNumEntries</name>*2
                                    </expr>
                                    ;
                                </condition>
                                <incr>
                                    <expr>
                                        <name>i</name>
                                        = <name>i</name> + 2
                                    </expr>
                                </incr>
                                )
                                <block>{
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>
                                                    <name>fAugmentations</name>
                                                    <index>[
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                .
                                                <call>
                                                    <name>equals</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>key</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>Object</name>
                                                        </type>
                                                        <name>oldValue</name> =
                                                        <init>
                                                            <expr>
                                                                <name>
                                                                    <name>fAugmentations</name>
                                                                    <index>[
                                                                        <expr><name>i</name>+1
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>

                                                <for>for (
                                                    <init>
                                                        <decl>
                                                            <type>
                                                                <name>int</name>
                                                            </type>
                                                            <name>j</name> =
                                                            <init>
                                                                <expr>
                                                                    <name>i</name>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </init>
                                                    <condition>
                                                        <expr>
                                                            <name>j</name>
                                                            &lt; <name>fNumEntries</name>*2 - 2
                                                        </expr>
                                                        ;
                                                    </condition>
                                                    <incr>
                                                        <expr>
                                                            <name>j</name>
                                                            = <name>j</name> + 2
                                                        </expr>
                                                    </incr>
                                                    )
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>
                                                                    <name>fAugmentations</name>
                                                                    <index>[
                                                                        <expr>
                                                                            <name>j</name>
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                                =
                                                                <name>
                                                                    <name>fAugmentations</name>
                                                                    <index>[
                                                                        <expr><name>j</name>+2
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>
                                                                    <name>fAugmentations</name>
                                                                    <index>[
                                                                        <expr><name>j</name>+1
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                                =
                                                                <name>
                                                                    <name>fAugmentations</name>
                                                                    <index>[
                                                                        <expr><name>j</name>+3
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </for>

                                                <expr_stmt>
                                                    <expr>
                                                        <name>
                                                            <name>fAugmentations</name>
                                                            <index>[
                                                                <expr><name>fNumEntries</name>*2-2
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                        =
                                                        <name>null</name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>
                                                            <name>fAugmentations</name>
                                                            <index>[
                                                                <expr><name>fNumEntries</name>*2-1
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                        =
                                                        <name>null</name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr><name>fNumEntries</name>--
                                                    </expr>
                                                    ;
                                                </expr_stmt>

                                                <return>return
                                                    <expr>
                                                        <name>oldValue</name>
                                                    </expr>
                                                    ;
                                                </return>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    }
                                </block>
                            </for>

                            <return>return
                                <expr>
                                    <name>null</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>clear</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <for>for (
                                <init>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>i</name> =
                                        <init>
                                            <expr>0</expr>
                                        </init>
                                    </decl>
                                    ;
                                </init>
                                <condition>
                                    <expr>
                                        <name>i</name>
                                        &lt; <name>fNumEntries</name>*2
                                    </expr>
                                    ;
                                </condition>
                                <incr>
                                    <expr>
                                        <name>i</name>
                                        = <name>i</name> + 2
                                    </expr>
                                </incr>
                                )
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <name>
                                                <name>fAugmentations</name>
                                                <index>[
                                                    <expr>
                                                        <name>i</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                            =
                                            <name>null</name>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <name>
                                                <name>fAugmentations</name>
                                                <index>[
                                                    <expr><name>i</name>+1
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                            =
                                            <name>null</name>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                            </for>

                            <expr_stmt>
                                <expr>
                                    <name>fNumEntries</name>
                                    = 0
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>boolean</name>
                        </type>
                        <name>isFull</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>(<name>fNumEntries</name> == <name>SIZE_LIMIT</name>)
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>AugmentationsItemsContainer</name>
                        </type>
                        <name>expand</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>LargeContainer</name>
                                    </type>
                                    <name>expandedContainer</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>LargeContainer</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>

                            <for>for (
                                <init>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>i</name> =
                                        <init>
                                            <expr>0</expr>
                                        </init>
                                    </decl>
                                    ;
                                </init>
                                <condition>
                                    <expr>
                                        <name>i</name>
                                        &lt; <name>fNumEntries</name>*2
                                    </expr>
                                    ;
                                </condition>
                                <incr>
                                    <expr>
                                        <name>i</name>
                                        = <name>i</name> + 2
                                    </expr>
                                </incr>
                                )
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>expandedContainer</name>.
                                                    <name>putItem</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>
                                                                <name>fAugmentations</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>i</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>
                                                                <name>fAugmentations</name>
                                                                <index>[
                                                                    <expr><name>i</name>+1
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                            </for>

                            <return>return
                                <expr>
                                    <name>expandedContainer</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>String</name>
                        </type>
                        <name>toString</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>StringBuffer</name>
                                    </type>
                                    <name>buff</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>StringBuffer</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>buff</name>.
                                            <name>append</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"SmallContainer - fNumEntries == " +
                                                    <name>fNumEntries</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>

                            <for>for (
                                <init>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>i</name> =
                                        <init>
                                            <expr>0</expr>
                                        </init>
                                    </decl>
                                    ;
                                </init>
                                <condition>
                                    <expr>
                                        <name>i</name>
                                        &lt; <name>SIZE_LIMIT</name>*2
                                    </expr>
                                    ;
                                </condition>
                                <incr>
                                    <expr><name>i</name>=<name>i</name>+2
                                    </expr>
                                </incr>
                                )
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>buff</name>.
                                                    <name>append</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>"\nfAugmentations["</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>buff</name>.
                                                    <name>append</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>buff</name>.
                                                    <name>append</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>"] == "</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>buff</name>.
                                                    <name>append</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>
                                                                <name>fAugmentations</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>i</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>buff</name>.
                                                    <name>append</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>"; fAugmentations["</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>buff</name>.
                                                    <name>append</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr><name>i</name>+1
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>buff</name>.
                                                    <name>append</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>"] == "</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>buff</name>.
                                                    <name>append</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>
                                                                <name>fAugmentations</name>
                                                                <index>[
                                                                    <expr><name>i</name>+1
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                            </for>

                            <return>return
                                <expr>
                                    <call>
                                        <name><name>buff</name>.
                                            <name>toString</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <class>class <name>SmallContainerKeyEnumeration</name>
                        <super>
                            <implements>implements
                                <name>Enumeration</name>
                            </implements>
                        </super>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Object</name>
                                        <index>[]</index>
                                    </type>
                                    <name>enumArray</name> =
                                    <init>
                                        <expr>new
                                            <name>
                                                <name>Object</name>
                                                <index>[
                                                    <expr>
                                                        <name>fNumEntries</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>next</name> =
                                    <init>
                                        <expr>0</expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>

                            <constructor>
                                <name>SmallContainerKeyEnumeration</name>
                                <parameter_list>()</parameter_list>
                                <block>{
                                    <for>for (
                                        <init>
                                            <decl>
                                                <type>
                                                    <name>int</name>
                                                </type>
                                                <name>i</name> =
                                                <init>
                                                    <expr>0</expr>
                                                </init>
                                            </decl>
                                            ;
                                        </init>
                                        <condition>
                                            <expr>
                                                <name>i</name>
                                                &lt;
                                                <name>fNumEntries</name>
                                            </expr>
                                            ;
                                        </condition>
                                        <incr>
                                            <expr><name>i</name>++
                                            </expr>
                                        </incr>
                                        )
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>
                                                        <name>enumArray</name>
                                                        <index>[
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    =
                                                    <name>
                                                        <name>fAugmentations</name>
                                                        <index>[
                                                            <expr><name>i</name>*2
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </for>
                                    }
                                </block>
                            </constructor>

                            <function>
                                <type>
                                    <specifier>public</specifier>
                                    <name>boolean</name>
                                </type>
                                <name>hasMoreElements</name>
                                <parameter_list>()</parameter_list>
                                <block>{
                                    <return>return
                                        <expr>
                                            <name>next</name>
                                            &lt;
                                            <name><name>enumArray</name>.
                                                <name>length</name>
                                            </name>
                                        </expr>
                                        ;
                                    </return>
                                    }
                                </block>
                            </function>

                            <function>
                                <type>
                                    <specifier>public</specifier>
                                    <name>Object</name>
                                </type>
                                <name>nextElement</name>
                                <parameter_list>()</parameter_list>
                                <block>{
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>next</name>
                                                &gt;=
                                                <name><name>enumArray</name>.
                                                    <name>length</name>
                                                </name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <throw>throw
                                                    <expr>new
                                                        <call>
                                                            <name><name>java</name>.<name>util</name>.
                                                                <name>NoSuchElementException</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </throw>
                                                }
                                            </block>
                                        </then>
                                    </if>

                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>Object</name>
                                            </type>
                                            <name>nextVal</name> =
                                            <init>
                                                <expr>
                                                    <name>
                                                        <name>enumArray</name>
                                                        <index>[
                                                            <expr>
                                                                <name>next</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <name>
                                                <name>enumArray</name>
                                                <index>[
                                                    <expr>
                                                        <name>next</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                            =
                                            <name>null</name>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <expr_stmt>
                                        <expr><name>next</name>++
                                        </expr>
                                        ;
                                    </expr_stmt>

                                    <return>return
                                        <expr>
                                            <name>nextVal</name>
                                        </expr>
                                        ;
                                    </return>
                                    }
                                </block>
                            </function>
                            }
                        </block>
                    </class>
                    }
                </block>
            </class>

            <class>class <name>LargeContainer</name>
                <super>
                    <extends>extends
                        <name>AugmentationsItemsContainer</name>
                    </extends>
                </super>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>Hashtable</name>
                            </type>
                            <name>fAugmentations</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>Hashtable</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>Object</name>
                        </type>
                        <name>getItem</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Object</name>
                                    </type>
                                    <name>key</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>fAugmentations</name>.
                                            <name>get</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>key</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>Object</name>
                        </type>
                        <name>putItem</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Object</name>
                                    </type>
                                    <name>key</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>Object</name>
                                    </type>
                                    <name>item</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>fAugmentations</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>key</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>item</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>Object</name>
                        </type>
                        <name>removeItem</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Object</name>
                                    </type>
                                    <name>key</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>fAugmentations</name>.
                                            <name>remove</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>key</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>Enumeration</name>
                        </type>
                        <name>keys</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>fAugmentations</name>.
                                            <name>keys</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>clear</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fAugmentations</name>.
                                            <name>clear</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>boolean</name>
                        </type>
                        <name>isFull</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return <expr>false</expr>;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>AugmentationsItemsContainer</name>
                        </type>
                        <name>expand</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name>this</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>String</name>
                        </type>
                        <name>toString</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>StringBuffer</name>
                                    </type>
                                    <name>buff</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>StringBuffer</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>buff</name>.
                                            <name>append</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"LargeContainer"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Enumeration</name>
                                    </type>
                                    <name>keys</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>fAugmentations</name>.
                                                    <name>keys</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>

                            <while>while
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>keys</name>.
                                                <name>hasMoreElements</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>Object</name>
                                            </type>
                                            <name>key</name> =
                                            <init>
                                                <expr>
                                                    <call>
                                                        <name><name>keys</name>.
                                                            <name>nextElement</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>buff</name>.
                                                    <name>append</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>"\nkey == "</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>buff</name>.
                                                    <name>append</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>key</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>buff</name>.
                                                    <name>append</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>"; value == "</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>buff</name>.
                                                    <name>append</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>fAugmentations</name>.
                                                                    <name>get</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>key</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                            </while>

                            <return>return
                                <expr>
                                    <call>
                                        <name><name>buff</name>.
                                            <name>toString</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>
            }
        </block>
    </class>
</unit>
