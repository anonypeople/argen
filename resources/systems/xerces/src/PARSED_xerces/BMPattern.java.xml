<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\impl\xpath\regex\BMPattern.java">
    <comment type="block">/*
        * Copyright 1999-2002,2004 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xpath</name>.
            <name>regex</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>text</name>.
            <name>CharacterIterator</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * Boyer-Moore searcher.
        *
        * @xerces.internal
        *
        * @version $Id: BMPattern.java,v 1.5 2004/10/04 22:07:40 mrglavas Exp $
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>BMPattern</name>
        <block>{
            <decl_stmt>
                <decl>
                    <type>
                        <name>char</name>
                        <index>[]</index>
                    </type>
                    <name>pattern</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <name>int</name>
                        <index>[]</index>
                    </type>
                    <name>shiftTable</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <name>boolean</name>
                    </type>
                    <name>ignoreCase</name>
                </decl>
                ;
            </decl_stmt>

            <constructor>
                <specifier>public</specifier>
                <name>BMPattern</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>pat</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>ignoreCase</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>this</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>pat</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>256</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>ignoreCase</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <constructor>
                <specifier>public</specifier>
                <name>BMPattern</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>pat</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>tableSize</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>ignoreCase</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>pattern</name>
                            </name>
                            =
                            <call>
                                <name><name>pat</name>.
                                    <name>toCharArray</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>shiftTable</name>
                            </name>
                            = new
                            <name>
                                <name>int</name>
                                <index>[
                                    <expr>
                                        <name>tableSize</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>ignoreCase</name>
                            </name>
                            =
                            <name>ignoreCase</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>length</name> =
                            <init>
                                <expr>
                                    <name><name>pattern</name>.
                                        <name>length</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name><name>this</name>.<name>shiftTable</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr>
                                <name>i</name>
                                ++
                            </expr>
                        </incr>
                        )
                        <expr_stmt>
                            <expr>
                                <name><name>this</name>.
                                    <name>shiftTable</name>
                                    <index>[
                                        <expr>
                                            <name>i</name>
                                        </expr>
                                        ]
                                    </index>
                                </name>
                                =
                                <name>length</name>
                            </expr>
                            ;
                        </expr_stmt>
                    </for>

                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name>length</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr>
                                <name>i</name>
                                ++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>char</name>
                                    </type>
                                    <name>ch</name> =
                                    <init>
                                        <expr>
                                            <name><name>this</name>.
                                                <name>pattern</name>
                                                <index>[
                                                    <expr>
                                                        <name>i</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>diff</name> =
                                    <init>
                                        <expr><name>length</name>-<name>i</name>-1
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>index</name> =
                                    <init>
                                        <expr>
                                            <name>ch</name>
                                            %
                                            <name><name>this</name>.<name>shiftTable</name>.
                                                <name>length</name>
                                            </name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>diff</name>
                                        &lt;
                                        <name><name>this</name>.
                                            <name>shiftTable</name>
                                            <index>[
                                                <expr>
                                                    <name>index</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <expr_stmt>
                                        <expr>
                                            <name><name>this</name>.
                                                <name>shiftTable</name>
                                                <index>[
                                                    <expr>
                                                        <name>index</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                            =
                                            <name>diff</name>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                </then>
                            </if>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name><name>this</name>.
                                            <name>ignoreCase</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>ch</name>
                                                =
                                                <call>
                                                    <name><name>Character</name>.
                                                        <name>toUpperCase</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>ch</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>index</name>
                                                = <name>ch</name> %
                                                <name><name>this</name>.<name>shiftTable</name>.
                                                    <name>length</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>diff</name>
                                                    &lt;
                                                    <name><name>this</name>.
                                                        <name>shiftTable</name>
                                                        <index>[
                                                            <expr>
                                                                <name>index</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <expr_stmt>
                                                    <expr>
                                                        <name><name>this</name>.
                                                            <name>shiftTable</name>
                                                            <index>[
                                                                <expr>
                                                                    <name>index</name>
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                        =
                                                        <name>diff</name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name>ch</name>
                                                =
                                                <call>
                                                    <name><name>Character</name>.
                                                        <name>toLowerCase</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>ch</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>index</name>
                                                = <name>ch</name> %
                                                <name><name>this</name>.<name>shiftTable</name>.
                                                    <name>length</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>diff</name>
                                                    &lt;
                                                    <name><name>this</name>.
                                                        <name>shiftTable</name>
                                                        <index>[
                                                            <expr>
                                                                <name>index</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <expr_stmt>
                                                    <expr>
                                                        <name><name>this</name>.
                                                            <name>shiftTable</name>
                                                            <index>[
                                                                <expr>
                                                                    <name>index</name>
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                        =
                                                        <name>diff</name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                *
                * @return -1 if &lt;var&gt;iterator&lt;/var&gt; does not contain this pattern.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>matches</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>CharacterIterator</name>
                            </type>
                            <name>iterator</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>start</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>limit</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>ignoreCase</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>this</name>.
                                            <name>matchesIgnoreCase</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>iterator</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>start</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>limit</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>plength</name> =
                            <init>
                                <expr>
                                    <name><name>this</name>.<name>pattern</name>.
                                        <name>length</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>plength</name>
                                == 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <name>start</name>
                                </expr>
                                ;
                            </return>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name> =
                            <init>
                                <expr><name>start</name>+
                                    <name>plength</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <while>while
                        <condition>(
                            <expr>
                                <name>index</name>
                                &lt;=
                                <name>limit</name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>pindex</name> =
                                    <init>
                                        <expr>
                                            <name>plength</name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>nindex</name> =
                                    <init>
                                        <expr><name>index</name>+1
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>char</name>
                                    </type>
                                    <name>ch</name>
                                </decl>
                                ;
                            </decl_stmt>
                            <do>do
                                <block>{
                                    <if>if
                                        <condition>(
                                            <expr>(<name>ch</name> =
                                                <call>
                                                    <name><name>iterator</name>.
                                                        <name>setIndex</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>--
                                                                <name>index</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                ) !=
                                                <name><name>this</name>.
                                                    <name>pattern</name>
                                                    <index>[
                                                        <expr>--
                                                            <name>pindex</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <break>break;</break>
                                        </then>
                                    </if>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>pindex</name>
                                                == 0
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <return>return
                                                <expr>
                                                    <name>index</name>
                                                </expr>
                                                ;
                                            </return>
                                        </then>
                                    </if>
                                    }
                                </block>
                                while
                                <condition>(
                                    <expr>
                                        <name>pindex</name>
                                        &gt; 0
                                    </expr>
                                    )
                                </condition>
                                ;
                            </do>
                            <expr_stmt>
                                <expr>
                                    <name>index</name>
                                    +=
                                    <name><name>this</name>.
                                        <name>shiftTable</name>
                                        <index>[
                                            <expr>
                                                <name>ch</name>
                                                %
                                                <name><name>this</name>.<name>shiftTable</name>.
                                                    <name>length</name>
                                                </name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    +1
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>index</name>
                                        &lt;
                                        <name>nindex</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <expr_stmt>
                                        <expr>
                                            <name>index</name>
                                            =
                                            <name>nindex</name>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                </then>
                            </if>
                            }
                        </block>
                    </while>
                    <return>return <expr>-1</expr>;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                *
                * @return -1 if &lt;var&gt;str&lt;/var&gt; does not contain this pattern.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>matches</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>str</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>start</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>limit</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>ignoreCase</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>this</name>.
                                            <name>matchesIgnoreCase</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>str</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>start</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>limit</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>plength</name> =
                            <init>
                                <expr>
                                    <name><name>this</name>.<name>pattern</name>.
                                        <name>length</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>plength</name>
                                == 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <name>start</name>
                                </expr>
                                ;
                            </return>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name> =
                            <init>
                                <expr><name>start</name>+
                                    <name>plength</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <while>while
                        <condition>(
                            <expr>
                                <name>index</name>
                                &lt;=
                                <name>limit</name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <comment type="line">//System.err.println("Starts at "+index);</comment>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>pindex</name> =
                                    <init>
                                        <expr>
                                            <name>plength</name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>nindex</name> =
                                    <init>
                                        <expr><name>index</name>+1
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>char</name>
                                    </type>
                                    <name>ch</name>
                                </decl>
                                ;
                            </decl_stmt>
                            <do>do
                                <block>{
                                    <if>if
                                        <condition>(
                                            <expr>(<name>ch</name> =
                                                <call>
                                                    <name><name>str</name>.
                                                        <name>charAt</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>--
                                                                <name>index</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                ) !=
                                                <name><name>this</name>.
                                                    <name>pattern</name>
                                                    <index>[
                                                        <expr>--
                                                            <name>pindex</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <break>break;</break>
                                        </then>
                                    </if>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>pindex</name>
                                                == 0
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <return>return
                                                <expr>
                                                    <name>index</name>
                                                </expr>
                                                ;
                                            </return>
                                        </then>
                                    </if>
                                    }
                                </block>
                                while
                                <condition>(
                                    <expr>
                                        <name>pindex</name>
                                        &gt; 0
                                    </expr>
                                    )
                                </condition>
                                ;
                            </do>
                            <expr_stmt>
                                <expr>
                                    <name>index</name>
                                    +=
                                    <name><name>this</name>.
                                        <name>shiftTable</name>
                                        <index>[
                                            <expr>
                                                <name>ch</name>
                                                %
                                                <name><name>this</name>.<name>shiftTable</name>.
                                                    <name>length</name>
                                                </name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    +1
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>index</name>
                                        &lt;
                                        <name>nindex</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <expr_stmt>
                                        <expr>
                                            <name>index</name>
                                            =
                                            <name>nindex</name>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                </then>
                            </if>
                            }
                        </block>
                    </while>
                    <return>return <expr>-1</expr>;
                    </return>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                *
                * @return -1 if &lt;var&gt;chars&lt;/char&gt; does not contain this pattern.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>matches</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>char</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>chars</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>start</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>limit</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>ignoreCase</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>this</name>.
                                            <name>matchesIgnoreCase</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>chars</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>start</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>limit</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>plength</name> =
                            <init>
                                <expr>
                                    <name><name>this</name>.<name>pattern</name>.
                                        <name>length</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>plength</name>
                                == 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <name>start</name>
                                </expr>
                                ;
                            </return>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name> =
                            <init>
                                <expr><name>start</name>+
                                    <name>plength</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <while>while
                        <condition>(
                            <expr>
                                <name>index</name>
                                &lt;=
                                <name>limit</name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <comment type="line">//System.err.println("Starts at "+index);</comment>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>pindex</name> =
                                    <init>
                                        <expr>
                                            <name>plength</name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>nindex</name> =
                                    <init>
                                        <expr><name>index</name>+1
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>char</name>
                                    </type>
                                    <name>ch</name>
                                </decl>
                                ;
                            </decl_stmt>
                            <do>do
                                <block>{
                                    <if>if
                                        <condition>(
                                            <expr>(<name>ch</name> =
                                                <name>
                                                    <name>chars</name>
                                                    <index>[
                                                        <expr>--
                                                            <name>index</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                ) !=
                                                <name><name>this</name>.
                                                    <name>pattern</name>
                                                    <index>[
                                                        <expr>--
                                                            <name>pindex</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <break>break;</break>
                                        </then>
                                    </if>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>pindex</name>
                                                == 0
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <return>return
                                                <expr>
                                                    <name>index</name>
                                                </expr>
                                                ;
                                            </return>
                                        </then>
                                    </if>
                                    }
                                </block>
                                while
                                <condition>(
                                    <expr>
                                        <name>pindex</name>
                                        &gt; 0
                                    </expr>
                                    )
                                </condition>
                                ;
                            </do>
                            <expr_stmt>
                                <expr>
                                    <name>index</name>
                                    +=
                                    <name><name>this</name>.
                                        <name>shiftTable</name>
                                        <index>[
                                            <expr>
                                                <name>ch</name>
                                                %
                                                <name><name>this</name>.<name>shiftTable</name>.
                                                    <name>length</name>
                                                </name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    +1
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>index</name>
                                        &lt;
                                        <name>nindex</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <expr_stmt>
                                        <expr>
                                            <name>index</name>
                                            =
                                            <name>nindex</name>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                </then>
                            </if>
                            }
                        </block>
                    </while>
                    <return>return <expr>-1</expr>;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <name>int</name>
                </type>
                <name>matchesIgnoreCase</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>CharacterIterator</name>
                            </type>
                            <name>iterator</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>start</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>limit</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>plength</name> =
                            <init>
                                <expr>
                                    <name><name>this</name>.<name>pattern</name>.
                                        <name>length</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>plength</name>
                                == 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <name>start</name>
                                </expr>
                                ;
                            </return>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name> =
                            <init>
                                <expr><name>start</name>+
                                    <name>plength</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <while>while
                        <condition>(
                            <expr>
                                <name>index</name>
                                &lt;=
                                <name>limit</name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>pindex</name> =
                                    <init>
                                        <expr>
                                            <name>plength</name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>nindex</name> =
                                    <init>
                                        <expr><name>index</name>+1
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>char</name>
                                    </type>
                                    <name>ch</name>
                                </decl>
                                ;
                            </decl_stmt>
                            <do>do
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>char</name>
                                            </type>
                                            <name>ch1</name> =
                                            <init>
                                                <expr>
                                                    <name>ch</name>
                                                    =
                                                    <call>
                                                        <name><name>iterator</name>.
                                                            <name>setIndex</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>--
                                                                    <name>index</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>char</name>
                                            </type>
                                            <name>ch2</name> =
                                            <init>
                                                <expr>
                                                    <name><name>this</name>.
                                                        <name>pattern</name>
                                                        <index>[
                                                            <expr>--
                                                                <name>pindex</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>ch1</name>
                                                !=
                                                <name>ch2</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>ch1</name>
                                                        =
                                                        <call>
                                                            <name><name>Character</name>.
                                                                <name>toUpperCase</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>ch1</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>ch2</name>
                                                        =
                                                        <call>
                                                            <name><name>Character</name>.
                                                                <name>toUpperCase</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>ch2</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>ch1</name>
                                                            != <name>ch2</name> &amp;&amp;
                                                            <call>
                                                                <name><name>Character</name>.
                                                                    <name>toLowerCase</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>ch1</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                            !=
                                                            <call>
                                                                <name><name>Character</name>.
                                                                    <name>toLowerCase</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>ch2</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <break>break;</break>
                                                    </then>
                                                </if>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>pindex</name>
                                                == 0
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <return>return
                                                <expr>
                                                    <name>index</name>
                                                </expr>
                                                ;
                                            </return>
                                        </then>
                                    </if>
                                    }
                                </block>
                                while
                                <condition>(
                                    <expr>
                                        <name>pindex</name>
                                        &gt; 0
                                    </expr>
                                    )
                                </condition>
                                ;
                            </do>
                            <expr_stmt>
                                <expr>
                                    <name>index</name>
                                    +=
                                    <name><name>this</name>.
                                        <name>shiftTable</name>
                                        <index>[
                                            <expr>
                                                <name>ch</name>
                                                %
                                                <name><name>this</name>.<name>shiftTable</name>.
                                                    <name>length</name>
                                                </name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    +1
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>index</name>
                                        &lt;
                                        <name>nindex</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <expr_stmt>
                                        <expr>
                                            <name>index</name>
                                            =
                                            <name>nindex</name>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                </then>
                            </if>
                            }
                        </block>
                    </while>
                    <return>return <expr>-1</expr>;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <name>int</name>
                </type>
                <name>matchesIgnoreCase</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>text</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>start</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>limit</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>plength</name> =
                            <init>
                                <expr>
                                    <name><name>this</name>.<name>pattern</name>.
                                        <name>length</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>plength</name>
                                == 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <name>start</name>
                                </expr>
                                ;
                            </return>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name> =
                            <init>
                                <expr><name>start</name>+
                                    <name>plength</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <while>while
                        <condition>(
                            <expr>
                                <name>index</name>
                                &lt;=
                                <name>limit</name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>pindex</name> =
                                    <init>
                                        <expr>
                                            <name>plength</name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>nindex</name> =
                                    <init>
                                        <expr><name>index</name>+1
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>char</name>
                                    </type>
                                    <name>ch</name>
                                </decl>
                                ;
                            </decl_stmt>
                            <do>do
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>char</name>
                                            </type>
                                            <name>ch1</name> =
                                            <init>
                                                <expr>
                                                    <name>ch</name>
                                                    =
                                                    <call>
                                                        <name><name>text</name>.
                                                            <name>charAt</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>--
                                                                    <name>index</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>char</name>
                                            </type>
                                            <name>ch2</name> =
                                            <init>
                                                <expr>
                                                    <name><name>this</name>.
                                                        <name>pattern</name>
                                                        <index>[
                                                            <expr>--
                                                                <name>pindex</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>ch1</name>
                                                !=
                                                <name>ch2</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>ch1</name>
                                                        =
                                                        <call>
                                                            <name><name>Character</name>.
                                                                <name>toUpperCase</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>ch1</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>ch2</name>
                                                        =
                                                        <call>
                                                            <name><name>Character</name>.
                                                                <name>toUpperCase</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>ch2</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>ch1</name>
                                                            != <name>ch2</name> &amp;&amp;
                                                            <call>
                                                                <name><name>Character</name>.
                                                                    <name>toLowerCase</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>ch1</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                            !=
                                                            <call>
                                                                <name><name>Character</name>.
                                                                    <name>toLowerCase</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>ch2</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <break>break;</break>
                                                    </then>
                                                </if>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>pindex</name>
                                                == 0
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <return>return
                                                <expr>
                                                    <name>index</name>
                                                </expr>
                                                ;
                                            </return>
                                        </then>
                                    </if>
                                    }
                                </block>
                                while
                                <condition>(
                                    <expr>
                                        <name>pindex</name>
                                        &gt; 0
                                    </expr>
                                    )
                                </condition>
                                ;
                            </do>
                            <expr_stmt>
                                <expr>
                                    <name>index</name>
                                    +=
                                    <name><name>this</name>.
                                        <name>shiftTable</name>
                                        <index>[
                                            <expr>
                                                <name>ch</name>
                                                %
                                                <name><name>this</name>.<name>shiftTable</name>.
                                                    <name>length</name>
                                                </name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    +1
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>index</name>
                                        &lt;
                                        <name>nindex</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <expr_stmt>
                                        <expr>
                                            <name>index</name>
                                            =
                                            <name>nindex</name>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                </then>
                            </if>
                            }
                        </block>
                    </while>
                    <return>return <expr>-1</expr>;
                    </return>
                    }
                </block>
            </function>
            <function>
                <type>
                    <name>int</name>
                </type>
                <name>matchesIgnoreCase</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>char</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>chars</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>start</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>limit</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>plength</name> =
                            <init>
                                <expr>
                                    <name><name>this</name>.<name>pattern</name>.
                                        <name>length</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>plength</name>
                                == 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <name>start</name>
                                </expr>
                                ;
                            </return>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name> =
                            <init>
                                <expr><name>start</name>+
                                    <name>plength</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <while>while
                        <condition>(
                            <expr>
                                <name>index</name>
                                &lt;=
                                <name>limit</name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>pindex</name> =
                                    <init>
                                        <expr>
                                            <name>plength</name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>nindex</name> =
                                    <init>
                                        <expr><name>index</name>+1
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>char</name>
                                    </type>
                                    <name>ch</name>
                                </decl>
                                ;
                            </decl_stmt>
                            <do>do
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>char</name>
                                            </type>
                                            <name>ch1</name> =
                                            <init>
                                                <expr>
                                                    <name>ch</name>
                                                    =
                                                    <name>
                                                        <name>chars</name>
                                                        <index>[
                                                            <expr>--
                                                                <name>index</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>char</name>
                                            </type>
                                            <name>ch2</name> =
                                            <init>
                                                <expr>
                                                    <name><name>this</name>.
                                                        <name>pattern</name>
                                                        <index>[
                                                            <expr>--
                                                                <name>pindex</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>ch1</name>
                                                !=
                                                <name>ch2</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>ch1</name>
                                                        =
                                                        <call>
                                                            <name><name>Character</name>.
                                                                <name>toUpperCase</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>ch1</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>ch2</name>
                                                        =
                                                        <call>
                                                            <name><name>Character</name>.
                                                                <name>toUpperCase</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>ch2</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>ch1</name>
                                                            != <name>ch2</name> &amp;&amp;
                                                            <call>
                                                                <name><name>Character</name>.
                                                                    <name>toLowerCase</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>ch1</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                            !=
                                                            <call>
                                                                <name><name>Character</name>.
                                                                    <name>toLowerCase</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>ch2</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <break>break;</break>
                                                    </then>
                                                </if>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>pindex</name>
                                                == 0
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <return>return
                                                <expr>
                                                    <name>index</name>
                                                </expr>
                                                ;
                                            </return>
                                        </then>
                                    </if>
                                    }
                                </block>
                                while
                                <condition>(
                                    <expr>
                                        <name>pindex</name>
                                        &gt; 0
                                    </expr>
                                    )
                                </condition>
                                ;
                            </do>
                            <expr_stmt>
                                <expr>
                                    <name>index</name>
                                    +=
                                    <name><name>this</name>.
                                        <name>shiftTable</name>
                                        <index>[
                                            <expr>
                                                <name>ch</name>
                                                %
                                                <name><name>this</name>.<name>shiftTable</name>.
                                                    <name>length</name>
                                                </name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    +1
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>index</name>
                                        &lt;
                                        <name>nindex</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <expr_stmt>
                                        <expr>
                                            <name>index</name>
                                            =
                                            <name>nindex</name>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                </then>
                            </if>
                            }
                        </block>
                    </while>
                    <return>return <expr>-1</expr>;
                    </return>
                    }
                </block>
            </function>

            <comment type="block">/*
                public static void main(String[] argv) {
                try {
                int[] shiftTable = new int[256];
                initializeBoyerMoore(argv[0], shiftTable, true);
                int o = -1;
                CharacterIterator ite = new java.text.StringCharacterIterator(argv[1]);
                long start = System.currentTimeMillis();
                //for (int i = 0; i &lt; 10000; i ++)
                o = searchIgnoreCasesWithBoyerMoore(ite, 0, argv[0], shiftTable);
                start = System.currentTimeMillis()-start;
                System.out.println("Result: "+o+", Elapsed: "+start);
                } catch (Exception ex) {
                ex.printStackTrace();
                }
                }*/
            </comment>
            }
        </block>
    </class>

</unit>
