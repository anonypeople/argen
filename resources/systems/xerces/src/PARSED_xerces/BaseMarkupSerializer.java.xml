<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xml\serialize\BaseMarkupSerializer.java">
    <comment type="block">/*
        * Copyright 1999-2002,2004,2005 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>


    <comment type="line">// Sep 14, 2000:</comment>
    <comment type="line">// Fixed comments to preserve whitespaces and add a line break</comment>
    <comment type="line">// when indenting. Reported by Gervase Markham &lt;gerv@gerv.net&gt;</comment>
    <comment type="line">// Sep 14, 2000:</comment>
    <comment type="line">// Fixed serializer to report IO exception directly, instead at</comment>
    <comment type="line">// the end of document processing.</comment>
    <comment type="line">// Reported by Patrick Higgins &lt;phiggins@transzap.com&gt;</comment>
    <comment type="line">// Sep 13, 2000:</comment>
    <comment type="line">// CR in character data will print as &amp;#0D;</comment>
    <comment type="line">// Aug 25, 2000:</comment>
    <comment type="line">// Fixed processing instruction printing inside element content</comment>
    <comment type="line">// to not escape content. Reported by Mikael Staldal</comment>
    <comment type="line">// &lt;d96-mst@d.kth.se&gt;</comment>
    <comment type="line">// Aug 25, 2000:</comment>
    <comment type="line">// Added ability to omit comments.</comment>
    <comment type="line">// Contributed by Anupam Bagchi &lt;abagchi@jtcsv.com&gt;</comment>
    <comment type="line">// Aug 26, 2000:</comment>
    <comment type="line">// Fixed bug in newline handling when preserving spaces.</comment>
    <comment type="line">// Contributed by Mike Dusseault &lt;mdusseault@home.com&gt;</comment>
    <comment type="line">// Aug 29, 2000:</comment>
    <comment type="line">// Fixed state.unescaped not being set to false when</comment>
    <comment type="line">// entering element state.</comment>
    <comment type="line">// Reported by Lowell Vaughn &lt;lvaughn@agillion.com&gt;</comment>


    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xml</name>.
            <name>serialize</name>
        </name>
        ;
    </package>


    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>IOException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>OutputStream</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>Writer</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Hashtable</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Vector</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>dom</name>.
            <name>DOMErrorImpl</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>dom</name>.
            <name>DOMLocatorImpl</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>dom</name>.
            <name>DOMMessageFormatter</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>XMLChar</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>DOMImplementation</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>Document</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>DocumentFragment</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>DocumentType</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>DOMError</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>DOMErrorHandler</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>Element</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>Entity</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>NamedNodeMap</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>Node</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>Notation</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.<name>ls</name>.
            <name>LSException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.<name>ls</name>.
            <name>LSSerializerFilter</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.<name>traversal</name>.
            <name>NodeFilter</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>xml</name>.<name>sax</name>.
            <name>ContentHandler</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>xml</name>.<name>sax</name>.
            <name>DTDHandler</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>xml</name>.<name>sax</name>.
            <name>DocumentHandler</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>xml</name>.<name>sax</name>.
            <name>Locator</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>xml</name>.<name>sax</name>.
            <name>SAXException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>xml</name>.<name>sax</name>.<name>ext</name>.
            <name>DeclHandler</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>xml</name>.<name>sax</name>.<name>ext</name>.
            <name>LexicalHandler</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * Base class for a serializer supporting both DOM and SAX pretty
        * serializing of XML/HTML/XHTML documents. Derives classes perform
        * the method-specific serializing, this class provides the common
        * serializing mechanisms.
        * &lt;p&gt;
        * The serializer must be initialized with the proper writer and
        * output format before it can be used by calling {@link #setOutputCharStream}
        * or {@link #setOutputByteStream} for the writer and {@link #setOutputFormat}
        * for the output format.
        * &lt;p&gt;
        * The serializer can be reused any number of times, but cannot
        * be used concurrently by two threads.
        * &lt;p&gt;
        * If an output stream is used, the encoding is taken from the
        * output format (defaults to &lt;tt&gt;UTF-8&lt;/tt&gt;). If a writer is
        * used, make sure the writer uses the same encoding (if applies)
        * as specified in the output format.
        * &lt;p&gt;
        * The serializer supports both DOM and SAX. DOM serializing is done
        * by calling {@link #serialize(Document)} and SAX serializing is done by firing
        * SAX events and using the serializer as a document handler.
        * This also applies to derived class.
        * &lt;p&gt;
        * If an I/O exception occurs while serializing, the serializer
        * will not throw an exception directly, but only throw it
        * at the end of serializing (either DOM or SAX's {@link
        * org.xml.sax.DocumentHandler#endDocument}.
        * &lt;p&gt;
        * For elements that are not specified as whitespace preserving,
        * the serializer will potentially break long text lines at space
        * boundaries, indent lines, and serialize elements on separate
        * lines. Line terminators will be regarded as spaces, and
        * spaces at beginning of line will be stripped.
        * &lt;p&gt;
        * When indenting, the serializer is capable of detecting seemingly
        * element content, and serializing these elements indented on separate
        * lines. An element is serialized indented when it is the first or
        * last child of an element, or immediate following or preceding
        * another element.
        *
        *
        * @version $Revision: 1.57 $ $Date: 2005/05/02 21:58:58 $
        * @author &lt;a href="mailto:arkin@intalio.com"&gt;Assaf Arkin&lt;/a&gt;
        * @author &lt;a href="mailto:rahul.srivastava@sun.com"&gt;Rahul Srivastava&lt;/a&gt;
        * @author Elena Litani, IBM
        * @see Serializer
        * @see LSSerializer
        */
    </comment>
    <class>
        <specifier>public</specifier>
        <specifier>abstract</specifier> class
        <name>BaseMarkupSerializer</name>
        <super>
            <implements>implements <name>ContentHandler</name>, <name>DocumentHandler</name>, <name>
                LexicalHandler</name>,
                <name>DTDHandler</name>, <name>DeclHandler</name>, <name>DOMSerializer</name>,
                <name>Serializer</name>
            </implements>
        </super>
        <block>{

            <comment type="line">// DOM L3 implementation</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>short</name>
                    </type>
                    <name>features</name> =
                    <init>
                        <expr>0xFFFFFFFF</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>DOMErrorHandler</name>
                    </type>
                    <name>fDOMErrorHandler</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>final</specifier>
                        <name>DOMErrorImpl</name>
                    </type>
                    <name>fDOMError</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>DOMErrorImpl</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>LSSerializerFilter</name>
                    </type>
                    <name>fDOMFilter</name>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>EncodingInfo</name>
                    </type>
                    <name>_encodingInfo</name>
                </decl>
                ;
            </decl_stmt>


            <comment type="javadoc">/**
                * Holds array of all element states that have been entered.
                * The array is automatically resized. When leaving an element,
                * it's state is not removed but reused when later returning
                * to the same nesting level.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>ElementState</name>
                        <index>[]</index>
                    </type>
                    <name>_elementStates</name>
                </decl>
                ;
            </decl_stmt>


            <comment type="javadoc">/**
                * The index of the next state to place in the array,
                * or one plus the index of the current state. When zero,
                * we are in no state.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>_elementStateCount</name>
                </decl>
                ;
            </decl_stmt>


            <comment type="javadoc">/**
                * Vector holding comments and PIs that come before the root
                * element (even after it), see {@link #serializePreRoot}.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Vector</name>
                    </type>
                    <name>_preRoot</name>
                </decl>
                ;
            </decl_stmt>


            <comment type="javadoc">/**
                * If the document has been started (header serialized), this
                * flag is set to true so it's not started twice.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>boolean</name>
                    </type>
                    <name>_started</name>
                </decl>
                ;
            </decl_stmt>


            <comment type="javadoc">/**
                * True if the serializer has been prepared. This flag is set
                * to false when the serializer is reset prior to using it,
                * and to true after it has been prepared for usage.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>boolean</name>
                    </type>
                    <name>_prepared</name>
                </decl>
                ;
            </decl_stmt>


            <comment type="javadoc">/**
                * Association between namespace URIs (keys) and prefixes (values).
                * Accumulated here prior to starting an element and placing this
                * list in the element state.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>Hashtable</name>
                    </type>
                    <name>_prefixes</name>
                </decl>
                ;
            </decl_stmt>


            <comment type="javadoc">/**
                * The system identifier of the document type, if known.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>String</name>
                    </type>
                    <name>_docTypePublicId</name>
                </decl>
                ;
            </decl_stmt>


            <comment type="javadoc">/**
                * The system identifier of the document type, if known.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>String</name>
                    </type>
                    <name>_docTypeSystemId</name>
                </decl>
                ;
            </decl_stmt>


            <comment type="javadoc">/**
                * The output format associated with this serializer. This will never
                * be a null reference. If no format was passed to the constructor,
                * the default one for this document type will be used. The format
                * object is never changed by the serializer.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>OutputFormat</name>
                    </type>
                    <name>_format</name>
                </decl>
                ;
            </decl_stmt>


            <comment type="javadoc">/**
                * The printer used for printing text parts.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>Printer</name>
                    </type>
                    <name>_printer</name>
                </decl>
                ;
            </decl_stmt>


            <comment type="javadoc">/**
                * True if indenting printer.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>boolean</name>
                    </type>
                    <name>_indenting</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Temporary buffer to store character data */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>final</specifier>
                        <name>StringBuffer</name>
                    </type>
                    <name>fStrBuffer</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>StringBuffer</name>
                                <argument_list>(
                                    <argument>
                                        <expr>40</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * The underlying writer.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Writer</name>
                    </type>
                    <name>_writer</name>
                </decl>
                ;
            </decl_stmt>


            <comment type="javadoc">/**
                * The output stream.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>OutputStream</name>
                    </type>
                    <name>_output</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Current node that is being processed */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>Node</name>
                    </type>
                    <name>fCurrentNode</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>


            <comment type="line">//--------------------------------//</comment>
            <comment type="line">// Constructor and initialization //</comment>
            <comment type="line">//--------------------------------//</comment>


            <comment type="javadoc">/**
                * Protected constructor can only be used by derived class.
                * Must initialize the serializer before serializing any document,
                * by calling {@link #setOutputCharStream} or {@link #setOutputByteStream}
                * first
                */
            </comment>
            <constructor>
                <specifier>protected</specifier>
                <name>BaseMarkupSerializer</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>OutputFormat</name>
                            </type>
                            <name>format</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>i</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <name>_elementStates</name>
                            = new
                            <name>
                                <name>ElementState</name>
                                <index>[ <expr>10</expr> ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <for>for (
                        <init>
                            <expr>
                                <name>i</name>
                                = 0
                            </expr>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name><name>_elementStates</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr>++
                                <name>i</name>
                            </expr>
                        </incr>
                        )
                        <expr_stmt>
                            <expr>
                                <name>
                                    <name>_elementStates</name>
                                    <index>[
                                        <expr>
                                            <name>i</name>
                                        </expr>
                                        ]
                                    </index>
                                </name>
                                = new
                                <call>
                                    <name>ElementState</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            ;
                        </expr_stmt>
                    </for>
                    <expr_stmt>
                        <expr>
                            <name>_format</name>
                            =
                            <name>format</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>DocumentHandler</name>
                </type>
                <name>asDocumentHandler</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>prepare</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>this</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>ContentHandler</name>
                </type>
                <name>asContentHandler</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>prepare</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>this</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>DOMSerializer</name>
                </type>
                <name>asDOMSerializer</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>prepare</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>this</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setOutputByteStream</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>OutputStream</name>
                            </type>
                            <name>output</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>output</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                        </type>
                                        <name>msg</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>formatMessage</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>DOMMessageFormatter</name>.
                                                                    <name>SERIALIZER_DOMAIN</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>"ArgumentIsNull"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>new
                                                                <name>
                                                                    <name>Object</name>
                                                                    <index>[]</index>
                                                                </name>
                                                                <block>{<expr>"output"</expr>}
                                                                </block>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>NullPointerException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>msg</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name>_output</name>
                            =
                            <name>output</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>_writer</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>reset</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setOutputCharStream</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Writer</name>
                            </type>
                            <name>writer</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>writer</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                        </type>
                                        <name>msg</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>formatMessage</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>DOMMessageFormatter</name>.
                                                                    <name>SERIALIZER_DOMAIN</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>"ArgumentIsNull"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>new
                                                                <name>
                                                                    <name>Object</name>
                                                                    <index>[]</index>
                                                                </name>
                                                                <block>{<expr>"writer"</expr>}
                                                                </block>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>NullPointerException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>msg</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name>_writer</name>
                            =
                            <name>writer</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>_output</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>reset</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setOutputFormat</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>OutputFormat</name>
                            </type>
                            <name>format</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>format</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                        </type>
                                        <name>msg</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>formatMessage</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>DOMMessageFormatter</name>.
                                                                    <name>SERIALIZER_DOMAIN</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>"ArgumentIsNull"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>new
                                                                <name>
                                                                    <name>Object</name>
                                                                    <index>[]</index>
                                                                </name>
                                                                <block>{<expr>"format"</expr>}
                                                                </block>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>NullPointerException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>msg</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name>_format</name>
                            =
                            <name>format</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>reset</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>reset</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>_elementStateCount</name>
                                &gt; 1
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                        </type>
                                        <name>msg</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>formatMessage</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>DOMMessageFormatter</name>.
                                                                    <name>SERIALIZER_DOMAIN</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>"ResetInMiddle"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>null</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalStateException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>msg</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name>_prepared</name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fCurrentNode</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fStrBuffer</name>.
                                    <name>setLength</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return <expr>true</expr>;
                    </return>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>prepare</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>_prepared</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return;</return>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>_writer</name>
                                == <name>null</name> &amp;&amp; <name>_output</name> ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                        </type>
                                        <name>msg</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>formatMessage</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>DOMMessageFormatter</name>.
                                                                    <name>SERIALIZER_DOMAIN</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>"NoWriterSupplied"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>null</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IOException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>msg</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">// If the output stream has been set, use it to construct</comment>
                    <comment type="line">// the writer. It is possible that the serializer has been</comment>
                    <comment type="line">// reused with the same output stream and different encoding.</comment>

                    <expr_stmt>
                        <expr>
                            <name>_encodingInfo</name>
                            =
                            <call>
                                <name><name>_format</name>.
                                    <name>getEncodingInfo</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <name>_output</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>_writer</name>
                                        =
                                        <call>
                                            <name><name>_encodingInfo</name>.
                                                <name>getWriter</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>_output</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>_format</name>.
                                        <name>getIndenting</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>_indenting</name>
                                        = true
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>_printer</name>
                                        = new
                                        <call>
                                            <name>IndentPrinter</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>_writer</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>_format</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>_indenting</name>
                                        = false
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>_printer</name>
                                        = new
                                        <call>
                                            <name>Printer</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>_writer</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>_format</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ElementState</name>
                            </type>
                            <name>state</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <name>_elementStateCount</name>
                            = 0
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>state</name>
                            =
                            <name>
                                <name>_elementStates</name>
                                <index>[ <expr>0</expr> ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>state</name>.
                                <name>namespaceURI</name>
                            </name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>state</name>.
                                <name>localName</name>
                            </name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>state</name>.
                                <name>rawName</name>
                            </name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>state</name>.
                                <name>preserveSpace</name>
                            </name>
                            =
                            <call>
                                <name><name>_format</name>.
                                    <name>getPreserveSpace</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>state</name>.
                                <name>empty</name>
                            </name>
                            = true
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>state</name>.
                                <name>afterElement</name>
                            </name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>state</name>.
                                <name>afterComment</name>
                            </name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>state</name>.
                                <name>doCData</name>
                            </name>
                            =
                            <name><name>state</name>.
                                <name>inCData</name>
                            </name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>state</name>.
                                <name>prefixes</name>
                            </name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name>_docTypePublicId</name>
                            =
                            <call>
                                <name><name>_format</name>.
                                    <name>getDoctypePublic</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>_docTypeSystemId</name>
                            =
                            <call>
                                <name><name>_format</name>.
                                    <name>getDoctypeSystem</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>_started</name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>_prepared</name>
                            = true
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>


            <comment type="line">//----------------------------------//</comment>
            <comment type="line">// DOM document serializing methods //</comment>
            <comment type="line">//----------------------------------//</comment>


            <comment type="javadoc">/**
                * Serializes the DOM element using the previously specified
                * writer and output format. Throws an exception only if
                * an I/O exception occured while serializing.
                *
                * @param elem The element to serialize
                * @throws IOException An I/O exception occured while
                * serializing
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>serialize</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Element</name>
                            </type>
                            <name>elem</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>reset</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>prepare</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>serializeNode</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>elem</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>_printer</name>.
                                    <name>flush</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>_printer</name>.
                                        <name>getException</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <throw>throw
                                <expr>
                                    <call>
                                        <name><name>_printer</name>.
                                            <name>getException</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </throw>
                        </then>
                    </if>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * Serializes the DOM document fragmnt using the previously specified
                * writer and output format. Throws an exception only if
                * an I/O exception occured while serializing.
                *
                * @param elem The element to serialize
                * @throws IOException An I/O exception occured while
                * serializing
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>serialize</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>DocumentFragment</name>
                            </type>
                            <name>frag</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>reset</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>prepare</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>serializeNode</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>frag</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>_printer</name>.
                                    <name>flush</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>_printer</name>.
                                        <name>getException</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <throw>throw
                                <expr>
                                    <call>
                                        <name><name>_printer</name>.
                                            <name>getException</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </throw>
                        </then>
                    </if>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * Serializes the DOM document using the previously specified
                * writer and output format. Throws an exception only if
                * an I/O exception occured while serializing.
                *
                * @param doc The document to serialize
                * @throws IOException An I/O exception occured while
                * serializing
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>serialize</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Document</name>
                            </type>
                            <name>doc</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>reset</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>prepare</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>serializeNode</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>doc</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>serializePreRoot</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>_printer</name>.
                                    <name>flush</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>_printer</name>.
                                        <name>getException</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <throw>throw
                                <expr>
                                    <call>
                                        <name><name>_printer</name>.
                                            <name>getException</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </throw>
                        </then>
                    </if>
                    }
                </block>
            </function>


            <comment type="line">//------------------------------------------//</comment>
            <comment type="line">// SAX document handler serializing methods //</comment>
            <comment type="line">//------------------------------------------//</comment>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>startDocument</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>SAXException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>prepare</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>IOException</name>
                                    </type>
                                    <name>except</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>SAXException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>except</name>.
                                                                <name>toString</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>
                    <comment type="line">// Nothing to do here. All the magic happens in startDocument(String)</comment>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>characters</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>char</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>chars</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>start</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>length</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>SAXException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ElementState</name>
                            </type>
                            <name>state</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>state</name>
                                    =
                                    <call>
                                        <name>content</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>

                            <comment type="line">// Check if text should be print as CDATA section or unescaped
                            </comment>
                            <comment type="line">// based on elements listed in the output format (the element</comment>
                            <comment type="line">// state) or whether we are inside a CDATA section or entity.</comment>

                            <if>if
                                <condition>(
                                    <expr>
                                        <name><name>state</name>.
                                            <name>inCData</name>
                                        </name>
                                        ||
                                        <name><name>state</name>.
                                            <name>doCData</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>int</name>
                                                </type>
                                                <name>saveIndent</name>
                                            </decl>
                                            ;
                                        </decl_stmt>

                                        <comment type="line">// Print a CDATA section. The text is not escaped, but ']]&gt;'</comment>
                                        <comment type="line">// appearing in the code must be identified and dealt
                                            with.
                                        </comment>
                                        <comment type="line">// The contents of a text node is considered space
                                            preserving.
                                        </comment>
                                        <if>if
                                            <condition>(
                                                <expr>!
                                                    <name><name>state</name>.
                                                        <name>inCData</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>_printer</name>.
                                                                    <name>printText</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"&lt;![CDATA["</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name><name>state</name>.
                                                                <name>inCData</name>
                                                            </name>
                                                            = true
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name>saveIndent</name>
                                                =
                                                <call>
                                                    <name><name>_printer</name>.
                                                        <name>getNextIndent</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>_printer</name>.
                                                        <name>setNextIndent</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>0</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>char</name>
                                                </type>
                                                <name>ch</name>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <specifier>final</specifier>
                                                    <name>int</name>
                                                </type>
                                                <name>end</name> =
                                                <init>
                                                    <expr>
                                                        <name>start</name>
                                                        +
                                                        <name>length</name>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <for>for (
                                            <init>
                                                <decl>
                                                    <type>
                                                        <name>int</name>
                                                    </type>
                                                    <name>index</name> =
                                                    <init>
                                                        <expr>
                                                            <name>start</name>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </init>
                                            <condition>
                                                <expr>
                                                    <name>index</name>
                                                    &lt;
                                                    <name>end</name>
                                                </expr>
                                                ;
                                            </condition>
                                            <incr>
                                                <expr>++
                                                    <name>index</name>
                                                </expr>
                                            </incr>
                                            )
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>ch</name>
                                                        =
                                                        <name>
                                                            <name>chars</name>
                                                            <index>[
                                                                <expr>
                                                                    <name>index</name>
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>ch</name>
                                                            == ']' &amp;&amp; <name>index</name> + 2 &lt; <name>end
                                                        </name> &amp;&amp;
                                                            <name>
                                                                <name>chars</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>index</name>
                                                                        + 1
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            == ']' &amp;&amp;
                                                            <name>
                                                                <name>chars</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>index</name>
                                                                        + 2
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            == '&gt;'
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>_printer</name>.
                                                                            <name>printText</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>"]]]]&gt;&lt;![CDATA[&gt;"</expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>index</name>
                                                                    +=2
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <continue>continue;</continue>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                <if>if
                                                    <condition>(
                                                        <expr>!
                                                            <call>
                                                                <name><name>XMLChar</name>.
                                                                    <name>isValid</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>ch</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <comment type="line">// check if it is surrogate</comment>
                                                            <if>if
                                                                <condition>(
                                                                    <expr>++<name>index</name> &lt;
                                                                        <name>end</name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <call>
                                                                                    <name>surrogates</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>ch</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>
                                                                                                    <name>chars</name>
                                                                                                    <index>[
                                                                                                        <expr>
                                                                                                            <name>
                                                                                                                index
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                        ]
                                                                                                    </index>
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </then>
                                                                <else>else
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <call>
                                                                                    <name>fatalError</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>"The character
                                                                                                '"+(<name>
                                                                                                    char</name>)<name>
                                                                                                    ch</name>+"' is an
                                                                                                invalid XML character"
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </else>
                                                            </if>
                                                            <continue>continue;</continue>
                                                            }
                                                        </block>
                                                    </then>
                                                    <else>else
                                                        <block>{
                                                            <if>if
                                                                <condition>(
                                                                    <expr>( <name>ch</name> &gt;= ' ' &amp;&amp;
                                                                        <call>
                                                                            <name><name>_encodingInfo</name>.
                                                                                <name>isPrintable</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>(<name>char</name>)
                                                                                        <name>ch</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                        &amp;&amp; <name>ch</name> != 0xF7 ) ||
                                                                        <name>ch</name>
                                                                        == '\n' || <name>ch</name> == '\r' || <name>ch
                                                                        </name> == '\t'
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>_printer</name>.
                                                                                        <name>printText</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>(<name>char</name>)
                                                                                                <name>ch</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </then>
                                                                <else>else
                                                                    <block>{
                                                                        <comment type="line">// The character is not
                                                                            printable -- split CDATA section
                                                                        </comment>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>_printer</name>.
                                                                                        <name>printText</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>"]]&gt;&amp;#x"</expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>_printer</name>.
                                                                                        <name>printText</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <call>
                                                                                                    <name><name>
                                                                                                        Integer</name>.
                                                                                                        <name>
                                                                                                            toHexString
                                                                                                        </name>
                                                                                                    </name>
                                                                                                    <argument_list>(
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    ch
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        )
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>_printer</name>.
                                                                                        <name>printText</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>";&lt;![CDATA["</expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </else>
                                                            </if>
                                                            }
                                                        </block>
                                                    </else>
                                                </if>
                                                }
                                            </block>
                                        </for>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>_printer</name>.
                                                        <name>setNextIndent</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>saveIndent</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>

                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{

                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>int</name>
                                                </type>
                                                <name>saveIndent</name>
                                            </decl>
                                            ;
                                        </decl_stmt>

                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name><name>state</name>.
                                                        <name>preserveSpace</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <comment type="line">// If preserving space then hold of indentation
                                                        so no
                                                    </comment>
                                                    <comment type="line">// excessive spaces are printed at line breaks,
                                                        escape
                                                    </comment>
                                                    <comment type="line">// the text content without replacing spaces
                                                        and print
                                                    </comment>
                                                    <comment type="line">// the text breaking only at line breaks.
                                                    </comment>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>saveIndent</name>
                                                            =
                                                            <call>
                                                                <name><name>_printer</name>.
                                                                    <name>getNextIndent</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>_printer</name>.
                                                                    <name>setNextIndent</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>0</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name>printText</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>chars</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>start</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>length</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>true</expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>state</name>.
                                                                                <name>unescaped</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>_printer</name>.
                                                                    <name>setNextIndent</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>saveIndent</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name>printText</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>chars</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>start</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>length</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>false</expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>state</name>.
                                                                                <name>unescaped</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </else>
                                        </if>
                                        }
                                    </block>
                                </else>
                            </if>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>IOException</name>
                                    </type>
                                    <name>except</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>SAXException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>except</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>ignorableWhitespace</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>char</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>chars</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>start</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>length</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>SAXException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>i</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>content</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>

                            <comment type="line">// Print ignorable whitespaces only when indenting, after</comment>
                            <comment type="line">// all they are indentation. Cancel the indentation to</comment>
                            <comment type="line">// not indent twice.</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>_indenting</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>_printer</name>.
                                                        <name>setThisIndent</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>0</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <for>for (
                                            <init>
                                                <expr>
                                                    <name>i</name>
                                                    =
                                                    <name>start</name>
                                                </expr>
                                                ;
                                            </init>
                                            <condition>
                                                <expr><name>length</name>-- &gt; 0
                                                </expr>
                                                ;
                                            </condition>
                                            <incr>
                                                <expr>++
                                                    <name>i</name>
                                                </expr>
                                            </incr>
                                            )
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>_printer</name>.
                                                            <name>printText</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>
                                                                        <name>chars</name>
                                                                        <index>[
                                                                            <expr>
                                                                                <name>i</name>
                                                                            </expr>
                                                                            ]
                                                                        </index>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                        </for>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>IOException</name>
                                    </type>
                                    <name>except</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>SAXException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>except</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>final</specifier>
                    <name>void</name>
                </type>
                <name>processingInstruction</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>target</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>code</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>SAXException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>processingInstructionIO</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>target</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>code</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>IOException</name>
                                    </type>
                                    <name>except</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>SAXException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>except</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>processingInstructionIO</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>target</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>code</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ElementState</name>
                            </type>
                            <name>state</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <name>state</name>
                            =
                            <call>
                                <name>content</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// Create the processing instruction textual representation.</comment>
                    <comment type="line">// Make sure we don't have '?&gt;' inside either target or code.</comment>
                    <expr_stmt>
                        <expr>
                            <name>index</name>
                            =
                            <call>
                                <name><name>target</name>.
                                    <name>indexOf</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"?&gt;"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>index</name>
                                &gt;= 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fStrBuffer</name>.
                                            <name>append</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"&lt;?"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>append</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>target</name>.
                                                            <name>substring</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>0</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>index</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                        <else>else
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fStrBuffer</name>.
                                            <name>append</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"&lt;?"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>append</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>target</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </else>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>code</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fStrBuffer</name>.
                                                <name>append</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>' '</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>index</name>
                                        =
                                        <call>
                                            <name><name>code</name>.
                                                <name>indexOf</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"?&gt;"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>index</name>
                                            &gt;= 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fStrBuffer</name>.
                                                        <name>append</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>code</name>.
                                                                        <name>substring</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>0</expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>index</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                    </then>
                                    <else>else
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fStrBuffer</name>.
                                                        <name>append</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>code</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fStrBuffer</name>.
                                    <name>append</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"?&gt;"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// If before the root element (or after it), do not print</comment>
                    <comment type="line">// the PI directly but place it in the pre-root vector.</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>isDocumentState</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>_preRoot</name>
                                            ==
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <expr_stmt>
                                            <expr>
                                                <name>_preRoot</name>
                                                = new
                                                <call>
                                                    <name>Vector</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                    </then>
                                </if>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>_preRoot</name>.
                                                <name>addElement</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>fStrBuffer</name>.
                                                                <name>toString</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>_printer</name>.
                                                <name>indent</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>printText</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>fStrBuffer</name>.
                                                                <name>toString</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>true</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>true</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>_printer</name>.
                                                <name>unindent</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>_indenting</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>state</name>.
                                                    <name>afterElement</name>
                                                </name>
                                                = true
                                            </expr>
                                            ;
                                        </expr_stmt>
                                    </then>
                                </if>
                                }
                            </block>
                        </else>
                    </if>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fStrBuffer</name>.
                                    <name>setLength</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>comment</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>char</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>chars</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>start</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>length</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>SAXException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>comment</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>String</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>chars</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>start</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>length</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>IOException</name>
                                    </type>
                                    <name>except</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>SAXException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>except</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>comment</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>text</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ElementState</name>
                            </type>
                            <name>state</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>_format</name>.
                                        <name>getOmitComments</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return;</return>
                        </then>
                    </if>

                    <expr_stmt>
                        <expr>
                            <name>state</name>
                            =
                            <call>
                                <name>content</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// Create the processing comment textual representation.</comment>
                    <comment type="line">// Make sure we don't have '--&gt;' inside the comment.</comment>
                    <expr_stmt>
                        <expr>
                            <name>index</name>
                            =
                            <call>
                                <name><name>text</name>.
                                    <name>indexOf</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"--&gt;"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>index</name>
                                &gt;= 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fStrBuffer</name>.
                                            <name>append</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"&lt;!--"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>append</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>text</name>.
                                                            <name>substring</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>0</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>index</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>append</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"--&gt;"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                        <else>else
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fStrBuffer</name>.
                                            <name>append</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"&lt;!--"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>append</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>text</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>append</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"--&gt;"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </else>
                    </if>

                    <comment type="line">// If before the root element (or after it), do not print</comment>
                    <comment type="line">// the comment directly but place it in the pre-root vector.</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>isDocumentState</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>_preRoot</name>
                                            ==
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <expr_stmt>
                                            <expr>
                                                <name>_preRoot</name>
                                                = new
                                                <call>
                                                    <name>Vector</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                    </then>
                                </if>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>_preRoot</name>.
                                                <name>addElement</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>fStrBuffer</name>.
                                                                <name>toString</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <comment type="line">// Indent this element on a new line if the first</comment>
                                <comment type="line">// content of the parent element or immediately</comment>
                                <comment type="line">// following an element.</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>_indenting</name>
                                            &amp;&amp; !
                                            <name><name>state</name>.
                                                <name>preserveSpace</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>_printer</name>.
                                                        <name>breakLine</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                    </then>
                                </if>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>_printer</name>.
                                                <name>indent</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>printText</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>fStrBuffer</name>.
                                                                <name>toString</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>true</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>true</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>_printer</name>.
                                                <name>unindent</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>_indenting</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>state</name>.
                                                    <name>afterElement</name>
                                                </name>
                                                = true
                                            </expr>
                                            ;
                                        </expr_stmt>
                                    </then>
                                </if>
                                }
                            </block>
                        </else>
                    </if>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fStrBuffer</name>.
                                    <name>setLength</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>state</name>.
                                <name>afterComment</name>
                            </name>
                            = true
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>state</name>.
                                <name>afterElement</name>
                            </name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>startCDATA</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ElementState</name>
                            </type>
                            <name>state</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <name>state</name>
                            =
                            <call>
                                <name>getElementState</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>state</name>.
                                <name>doCData</name>
                            </name>
                            = true
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>endCDATA</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ElementState</name>
                            </type>
                            <name>state</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <name>state</name>
                            =
                            <call>
                                <name>getElementState</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>state</name>.
                                <name>doCData</name>
                            </name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>startNonEscaping</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ElementState</name>
                            </type>
                            <name>state</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <name>state</name>
                            =
                            <call>
                                <name>getElementState</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>state</name>.
                                <name>unescaped</name>
                            </name>
                            = true
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>endNonEscaping</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ElementState</name>
                            </type>
                            <name>state</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <name>state</name>
                            =
                            <call>
                                <name>getElementState</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>state</name>.
                                <name>unescaped</name>
                            </name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>startPreserving</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ElementState</name>
                            </type>
                            <name>state</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <name>state</name>
                            =
                            <call>
                                <name>getElementState</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>state</name>.
                                <name>preserveSpace</name>
                            </name>
                            = true
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>endPreserving</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ElementState</name>
                            </type>
                            <name>state</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <name>state</name>
                            =
                            <call>
                                <name>getElementState</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>state</name>.
                                <name>preserveSpace</name>
                            </name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * Called at the end of the document to wrap it up.
                * Will flush the output stream and throw an exception
                * if any I/O error occured while serializing.
                *
                * @throws SAXException An I/O exception occured during
                * serializing
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>endDocument</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>SAXException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <try>try
                        <block>{
                            <comment type="line">// Print all the elements accumulated outside of</comment>
                            <comment type="line">// the root element.</comment>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>serializePreRoot</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <comment type="line">// Flush the output, this is necessary for fStrBuffered output.
                            </comment>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>_printer</name>.
                                            <name>flush</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>IOException</name>
                                    </type>
                                    <name>except</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>SAXException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>except</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>startEntity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// ???</comment>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>endEntity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// ???</comment>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setDocumentLocator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Locator</name>
                            </type>
                            <name>locator</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// Nothing to do</comment>
                    }
                </block>
            </function>


            <comment type="line">//-----------------------------------------//</comment>
            <comment type="line">// SAX content handler serializing methods //</comment>
            <comment type="line">//-----------------------------------------//</comment>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>skippedEntity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>SAXException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>endCDATA</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>content</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>_printer</name>.
                                            <name>printText</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>'&amp;'</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>_printer</name>.
                                            <name>printText</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>name</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>_printer</name>.
                                            <name>printText</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>';'</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>IOException</name>
                                    </type>
                                    <name>except</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>SAXException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>except</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>startPrefixMapping</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>prefix</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>uri</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>SAXException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>_prefixes</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <name>_prefixes</name>
                                    = new
                                    <call>
                                        <name>Hashtable</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>_prefixes</name>.
                                    <name>put</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>uri</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>prefix</name>
                                            == <name>null</name> ? "" :
                                            <name>prefix</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>endPrefixMapping</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>prefix</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>SAXException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    }
                </block>
            </function>


            <comment type="line">//------------------------------------------//</comment>
            <comment type="line">// SAX DTD/Decl handler serializing methods //</comment>
            <comment type="line">//------------------------------------------//</comment>


            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>final</specifier>
                    <name>void</name>
                </type>
                <name>startDTD</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>publicId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>systemId</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>SAXException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>_printer</name>.
                                            <name>enterDTD</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>_docTypePublicId</name>
                                    =
                                    <name>publicId</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>_docTypeSystemId</name>
                                    =
                                    <name>systemId</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>IOException</name>
                                    </type>
                                    <name>except</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>SAXException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>except</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>endDTD</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <comment type="line">// Nothing to do here, all the magic occurs in startDocument(String).</comment>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>elementDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>model</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>SAXException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>_printer</name>.
                                            <name>enterDTD</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>_printer</name>.
                                            <name>printText</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"&lt;!ELEMENT "</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>_printer</name>.
                                            <name>printText</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>name</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>_printer</name>.
                                            <name>printText</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>' '</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>_printer</name>.
                                            <name>printText</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>model</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>_printer</name>.
                                            <name>printText</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>'&gt;'</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>_indenting</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>_printer</name>.
                                                    <name>breakLine</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                </then>
                            </if>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>IOException</name>
                                    </type>
                                    <name>except</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>SAXException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>except</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>attributeDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>eName</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>aName</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>valueDefault</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>SAXException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>_printer</name>.
                                            <name>enterDTD</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>_printer</name>.
                                            <name>printText</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"&lt;!ATTLIST "</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>_printer</name>.
                                            <name>printText</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>eName</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>_printer</name>.
                                            <name>printText</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>' '</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>_printer</name>.
                                            <name>printText</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>aName</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>_printer</name>.
                                            <name>printText</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>' '</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>_printer</name>.
                                            <name>printText</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>type</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>valueDefault</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>_printer</name>.
                                                        <name>printText</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>' '</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>_printer</name>.
                                                        <name>printText</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>valueDefault</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>value</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>_printer</name>.
                                                        <name>printText</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>" \""</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>printEscaped</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>value</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>_printer</name>.
                                                        <name>printText</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>'"'</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>_printer</name>.
                                            <name>printText</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>'&gt;'</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>_indenting</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>_printer</name>.
                                                    <name>breakLine</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                </then>
                            </if>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>IOException</name>
                                    </type>
                                    <name>except</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>SAXException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>except</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>internalEntityDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>SAXException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>_printer</name>.
                                            <name>enterDTD</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>_printer</name>.
                                            <name>printText</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"&lt;!ENTITY "</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>_printer</name>.
                                            <name>printText</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>name</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>_printer</name>.
                                            <name>printText</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>" \""</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>printEscaped</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>value</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>_printer</name>.
                                            <name>printText</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"\"&gt;"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>_indenting</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>_printer</name>.
                                                    <name>breakLine</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                </then>
                            </if>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>IOException</name>
                                    </type>
                                    <name>except</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>SAXException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>except</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>externalEntityDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>publicId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>systemId</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>SAXException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>_printer</name>.
                                            <name>enterDTD</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>unparsedEntityDecl</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>name</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>publicId</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>systemId</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>IOException</name>
                                    </type>
                                    <name>except</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>SAXException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>except</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>unparsedEntityDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>publicId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>systemId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>notationName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>SAXException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>_printer</name>.
                                            <name>enterDTD</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>publicId</name>
                                        ==
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>_printer</name>.
                                                        <name>printText</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"&lt;!ENTITY "</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>_printer</name>.
                                                        <name>printText</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>name</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>_printer</name>.
                                                        <name>printText</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>" SYSTEM "</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>printDoctypeURL</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>systemId</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>_printer</name>.
                                                        <name>printText</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"&lt;!ENTITY "</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>_printer</name>.
                                                        <name>printText</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>name</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>_printer</name>.
                                                        <name>printText</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>" PUBLIC "</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>printDoctypeURL</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>publicId</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>_printer</name>.
                                                        <name>printText</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>' '</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>printDoctypeURL</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>systemId</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </else>
                            </if>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>notationName</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>_printer</name>.
                                                        <name>printText</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>" NDATA "</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>_printer</name>.
                                                        <name>printText</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>notationName</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>_printer</name>.
                                            <name>printText</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>'&gt;'</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>_indenting</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>_printer</name>.
                                                    <name>breakLine</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                </then>
                            </if>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>IOException</name>
                                    </type>
                                    <name>except</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>SAXException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>except</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>notationDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>publicId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>systemId</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>SAXException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>_printer</name>.
                                            <name>enterDTD</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>publicId</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>_printer</name>.
                                                        <name>printText</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"&lt;!NOTATION "</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>_printer</name>.
                                                        <name>printText</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>name</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>_printer</name>.
                                                        <name>printText</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>" PUBLIC "</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>printDoctypeURL</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>publicId</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>systemId</name>
                                                    !=
                                                    <name>null</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>_printer</name>.
                                                                    <name>printText</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>' '</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name>printDoctypeURL</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>systemId</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>_printer</name>.
                                                        <name>printText</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"&lt;!NOTATION "</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>_printer</name>.
                                                        <name>printText</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>name</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>_printer</name>.
                                                        <name>printText</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>" SYSTEM "</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>printDoctypeURL</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>systemId</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </else>
                            </if>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>_printer</name>.
                                            <name>printText</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>'&gt;'</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>_indenting</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>_printer</name>.
                                                    <name>breakLine</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                </then>
                            </if>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>IOException</name>
                                    </type>
                                    <name>except</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>SAXException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>except</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>
                    }
                </block>
            </function>


            <comment type="line">//------------------------------------------//</comment>
            <comment type="line">// Generic node serializing methods methods //</comment>
            <comment type="line">//------------------------------------------//</comment>


            <comment type="javadoc">/**
                * Serialize the DOM node. This method is shared across XML, HTML and XHTML
                * serializers and the differences are masked out in a separate {@link
                * #serializeElement}.
                *
                * @param node The node to serialize
                * @see #serializeElement
                * @throws IOException An I/O exception occured while
                * serializing
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>serializeNode</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>node</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fCurrentNode</name>
                            =
                            <name>node</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// Based on the node type call the suitable SAX handler.</comment>
                    <comment type="line">// Only comments entities and documents which are not</comment>
                    <comment type="line">// handled by SAX are serialized directly.</comment>
                    <switch>switch
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>node</name>.
                                        <name>getNodeType</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <case>case
                                <expr>
                                    <name><name>Node</name>.
                                        <name>TEXT_NODE</name>
                                    </name>
                                </expr>
                                :
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>String</name>
                                            </type>
                                            <name>text</name>
                                        </decl>
                                        ;
                                    </decl_stmt>

                                    <expr_stmt>
                                        <expr>
                                            <name>text</name>
                                            =
                                            <call>
                                                <name><name>node</name>.
                                                    <name>getNodeValue</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>text</name>
                                                !=
                                                <name>null</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>fDOMFilter</name>
                                                            !=<name>null</name> &amp;&amp;
                                                            (
                                                            <call>
                                                                <name><name>fDOMFilter</name>.
                                                                    <name>getWhatToShow</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                            &amp;
                                                            <name><name>NodeFilter</name>.
                                                                <name>SHOW_TEXT</name>
                                                            </name>
                                                            )!= 0
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <name>short</name>
                                                                    </type>
                                                                    <name>code</name> =
                                                                    <init>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>fDOMFilter</name>.
                                                                                    <name>acceptNode</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>node</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>
                                                            <switch>switch
                                                                <condition>(
                                                                    <expr>
                                                                        <name>code</name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <block>{
                                                                    <case>case
                                                                        <expr>
                                                                            <name><name>NodeFilter</name>.
                                                                                <name>FILTER_REJECT</name>
                                                                            </name>
                                                                        </expr>
                                                                        :
                                                                    </case>
                                                                    <case>case
                                                                        <expr>
                                                                            <name><name>NodeFilter</name>.
                                                                                <name>FILTER_SKIP</name>
                                                                            </name>
                                                                        </expr>
                                                                        :
                                                                        <block>{
                                                                            <break>break;</break>
                                                                            }
                                                                        </block>
                                                                    </case>
                                                                    <default>default:
                                                                        <block>{
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name>characters</name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>text</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            }
                                                                        </block>
                                                                    </default>
                                                                    }
                                                                </block>
                                                            </switch>
                                                            }
                                                        </block>
                                                    </then>
                                                    <else>else
                                                        <if>if
                                                            <condition>(
                                                                <expr>!<name>_indenting</name> ||
                                                                    <call>
                                                                        <name>getElementState</name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                    .
                                                                    <name>preserveSpace</name>
                                                                    || (
                                                                    <call>
                                                                        <name><name>text</name>.
                                                                            <name>replace</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>'\n'</expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>' '</expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                    .
                                                                    <call>
                                                                        <name>trim</name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                    .
                                                                    <call>
                                                                        <name>length</name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                    != 0)
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name>characters</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>text</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                            </then>
                                                        </if>
                                                    </else>
                                                </if>

                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <break>break;</break>
                                    }
                                </block>

                            </case>
                            <case>case
                                <expr>
                                    <name><name>Node</name>.
                                        <name>CDATA_SECTION_NODE</name>
                                    </name>
                                </expr>
                                :
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>String</name>
                                            </type>
                                            <name>text</name> =
                                            <init>
                                                <expr>
                                                    <call>
                                                        <name><name>node</name>.
                                                            <name>getNodeValue</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>(<name>features</name> &amp;
                                                <name><name>DOMSerializerImpl</name>.
                                                    <name>CDATA</name>
                                                </name>
                                                ) != 0
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>text</name>
                                                            !=
                                                            <name>null</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name>fDOMFilter</name>
                                                                        !=
                                                                        <name>null</name>
                                                                        &amp;&amp; (
                                                                        <call>
                                                                            <name><name>fDOMFilter</name>.
                                                                                <name>getWhatToShow</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                        &amp;
                                                                        <name><name>NodeFilter</name>.
                                                                            <name>SHOW_CDATA_SECTION</name>
                                                                        </name>
                                                                        )
                                                                        != 0
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <decl_stmt>
                                                                            <decl>
                                                                                <type>
                                                                                    <name>short</name>
                                                                                </type>
                                                                                <name>code</name> =
                                                                                <init>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>
                                                                                                fDOMFilter</name>.
                                                                                                <name>acceptNode</name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>node
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                </init>
                                                                            </decl>
                                                                            ;
                                                                        </decl_stmt>
                                                                        <switch>switch
                                                                            <condition>(
                                                                                <expr>
                                                                                    <name>code</name>
                                                                                </expr>
                                                                                )
                                                                            </condition>
                                                                            <block>{
                                                                                <case>case
                                                                                    <expr>
                                                                                        <name><name>NodeFilter</name>.
                                                                                            <name>FILTER_REJECT</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                    :
                                                                                </case>
                                                                                <case>case
                                                                                    <expr>
                                                                                        <name><name>NodeFilter</name>.
                                                                                            <name>FILTER_SKIP</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                    :
                                                                                    <block>{
                                                                                        <comment type="line">// skip the
                                                                                            CDATA node
                                                                                        </comment>
                                                                                        <return>return;</return>
                                                                                        }
                                                                                    </block>
                                                                                </case>
                                                                                <default>default :
                                                                                    <block>{
                                                                                        <comment type="line">//fall
                                                                                            through..
                                                                                        </comment>
                                                                                        }
                                                                                    </block>
                                                                                </default>
                                                                                }
                                                                            </block>
                                                                        </switch>
                                                                        }
                                                                    </block>
                                                                </then>
                                                            </if>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name>startCDATA</name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name>characters</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>text</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name>endCDATA</name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <block>{
                                                <comment type="line">// transform into a text node</comment>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>characters</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>text</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </else>
                                    </if>
                                    <break>break;</break>
                                    }
                                </block>
                            </case>
                            <case>case
                                <expr>
                                    <name><name>Node</name>.
                                        <name>COMMENT_NODE</name>
                                    </name>
                                </expr>
                                :
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>String</name>
                                            </type>
                                            <name>text</name>
                                        </decl>
                                        ;
                                    </decl_stmt>

                                    <if>if
                                        <condition>(
                                            <expr>!
                                                <call>
                                                    <name><name>_format</name>.
                                                        <name>getOmitComments</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>text</name>
                                                        =
                                                        <call>
                                                            <name><name>node</name>.
                                                                <name>getNodeValue</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>text</name>
                                                            !=
                                                            <name>null</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{

                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name>fDOMFilter</name>
                                                                        !=<name>null</name> &amp;&amp;
                                                                        (
                                                                        <call>
                                                                            <name><name>fDOMFilter</name>.
                                                                                <name>getWhatToShow</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                        &amp;
                                                                        <name><name>NodeFilter</name>.
                                                                            <name>SHOW_COMMENT</name>
                                                                        </name>
                                                                        )!= 0
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <decl_stmt>
                                                                            <decl>
                                                                                <type>
                                                                                    <name>short</name>
                                                                                </type>
                                                                                <name>code</name> =
                                                                                <init>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>
                                                                                                fDOMFilter</name>.
                                                                                                <name>acceptNode</name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>node
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                </init>
                                                                            </decl>
                                                                            ;
                                                                        </decl_stmt>
                                                                        <switch>switch
                                                                            <condition>(
                                                                                <expr>
                                                                                    <name>code</name>
                                                                                </expr>
                                                                                )
                                                                            </condition>
                                                                            <block>{
                                                                                <case>case
                                                                                    <expr>
                                                                                        <name><name>NodeFilter</name>.
                                                                                            <name>FILTER_REJECT</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                    :
                                                                                </case>
                                                                                <case>case
                                                                                    <expr>
                                                                                        <name><name>NodeFilter</name>.
                                                                                            <name>FILTER_SKIP</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                    :
                                                                                    <block>{
                                                                                        <comment type="line">// skip the
                                                                                            comment node
                                                                                        </comment>
                                                                                        <return>return;</return>
                                                                                        }
                                                                                    </block>
                                                                                </case>
                                                                                <default>default:
                                                                                    <block>{
                                                                                        <comment type="line">// fall
                                                                                            through
                                                                                        </comment>
                                                                                        }
                                                                                    </block>
                                                                                </default>
                                                                                }
                                                                            </block>
                                                                        </switch>
                                                                        }
                                                                    </block>
                                                                </then>
                                                            </if>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name>comment</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>text</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <break>break;</break>
                                    }
                                </block>

                            </case>
                            <case>case
                                <expr>
                                    <name><name>Node</name>.
                                        <name>ENTITY_REFERENCE_NODE</name>
                                    </name>
                                </expr>
                                :
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>Node</name>
                                            </type>
                                            <name>child</name>
                                        </decl>
                                        ;
                                    </decl_stmt>

                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name>endCDATA</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name>content</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>

                                    <if>if
                                        <condition>(
                                            <expr>((<name>features</name> &amp;
                                                <name><name>DOMSerializerImpl</name>.
                                                    <name>ENTITIES</name>
                                                </name>
                                                ) != 0)
                                                || (
                                                <call>
                                                    <name><name>node</name>.
                                                        <name>getFirstChild</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                == <name>null</name>)
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>fDOMFilter</name>
                                                            !=<name>null</name> &amp;&amp;
                                                            (
                                                            <call>
                                                                <name><name>fDOMFilter</name>.
                                                                    <name>getWhatToShow</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                            &amp;
                                                            <name><name>NodeFilter</name>.
                                                                <name>SHOW_ENTITY_REFERENCE</name>
                                                            </name>
                                                            )!= 0
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <name>short</name>
                                                                    </type>
                                                                    <name>code</name> =
                                                                    <init>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>fDOMFilter</name>.
                                                                                    <name>acceptNode</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>node</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>
                                                            <switch>switch
                                                                <condition>(
                                                                    <expr>
                                                                        <name>code</name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <block>{
                                                                    <case>case
                                                                        <expr>
                                                                            <name><name>NodeFilter</name>.
                                                                                <name>FILTER_REJECT</name>
                                                                            </name>
                                                                        </expr>
                                                                        :
                                                                        <block>{
                                                                            <return>return;</return>
                                                                            <comment type="line">// remove the node
                                                                            </comment>
                                                                            }
                                                                        </block>
                                                                    </case>
                                                                    <case>case
                                                                        <expr>
                                                                            <name><name>NodeFilter</name>.
                                                                                <name>FILTER_SKIP</name>
                                                                            </name>
                                                                        </expr>
                                                                        :
                                                                        <block>{
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <name>child</name>
                                                                                    =
                                                                                    <call>
                                                                                        <name><name>node</name>.
                                                                                            <name>getFirstChild</name>
                                                                                        </name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            <while>while
                                                                                <condition>(
                                                                                    <expr>
                                                                                        <name>child</name>
                                                                                        !=
                                                                                        <name>null</name>
                                                                                    </expr>
                                                                                    )
                                                                                </condition>
                                                                                <block>{
                                                                                    <expr_stmt>
                                                                                        <expr>
                                                                                            <call>
                                                                                                <name>serializeNode
                                                                                                </name>
                                                                                                <argument_list>(
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <name>
                                                                                                                child
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    )
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                        ;
                                                                                    </expr_stmt>
                                                                                    <expr_stmt>
                                                                                        <expr>
                                                                                            <name>child</name>
                                                                                            =
                                                                                            <call>
                                                                                                <name><name>child</name>
                                                                                                    .
                                                                                                    <name>
                                                                                                        getNextSibling
                                                                                                    </name>
                                                                                                </name>
                                                                                                <argument_list>()
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                        ;
                                                                                    </expr_stmt>
                                                                                    }
                                                                                </block>
                                                                            </while>
                                                                            <return>return;</return>
                                                                            }
                                                                        </block>

                                                                    </case>
                                                                    <default>default:
                                                                        <block>{
                                                                            <comment type="line">// fall through
                                                                            </comment>
                                                                            }
                                                                        </block>
                                                                    </default>
                                                                    }
                                                                </block>
                                                            </switch>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>checkUnboundNamespacePrefixedNode</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>node</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>

                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>_printer</name>.
                                                                <name>printText</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"&amp;"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>_printer</name>.
                                                                <name>printText</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>node</name>.
                                                                                <name>getNodeName</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>_printer</name>.
                                                                <name>printText</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>";"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>child</name>
                                                        =
                                                        <call>
                                                            <name><name>node</name>.
                                                                <name>getFirstChild</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <while>while
                                                    <condition>(
                                                        <expr>
                                                            <name>child</name>
                                                            !=
                                                            <name>null</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name>serializeNode</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>child</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>child</name>
                                                                =
                                                                <call>
                                                                    <name><name>child</name>.
                                                                        <name>getNextSibling</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </while>
                                                }
                                            </block>
                                        </else>
                                    </if>

                                    <break>break;</break>
                                    }
                                </block>

                            </case>
                            <case>case
                                <expr>
                                    <name><name>Node</name>.
                                        <name>PROCESSING_INSTRUCTION_NODE</name>
                                    </name>
                                </expr>
                                :
                                <block>{

                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>fDOMFilter</name>
                                                !=<name>null</name> &amp;&amp;
                                                (
                                                <call>
                                                    <name><name>fDOMFilter</name>.
                                                        <name>getWhatToShow</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                &amp;
                                                <name><name>NodeFilter</name>.
                                                    <name>SHOW_PROCESSING_INSTRUCTION</name>
                                                </name>
                                                )!= 0
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>short</name>
                                                        </type>
                                                        <name>code</name> =
                                                        <init>
                                                            <expr>
                                                                <call>
                                                                    <name><name>fDOMFilter</name>.
                                                                        <name>acceptNode</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>node</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <switch>switch
                                                    <condition>(
                                                        <expr>
                                                            <name>code</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <block>{
                                                        <case>case
                                                            <expr>
                                                                <name><name>NodeFilter</name>.
                                                                    <name>FILTER_REJECT</name>
                                                                </name>
                                                            </expr>
                                                            :
                                                        </case>
                                                        <case>case
                                                            <expr>
                                                                <name><name>NodeFilter</name>.
                                                                    <name>FILTER_SKIP</name>
                                                                </name>
                                                            </expr>
                                                            :
                                                            <block>{
                                                                <return>return;</return>
                                                                <comment type="line">// skip this node</comment>
                                                                }
                                                            </block>
                                                        </case>
                                                        <default>default:
                                                            <block>{
                                                                <comment type="line">// fall through</comment>
                                                                }
                                                            </block>
                                                        </default>
                                                        }
                                                    </block>
                                                </switch>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name>processingInstructionIO</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>node</name>.
                                                                    <name>getNodeName</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>node</name>.
                                                                    <name>getNodeValue</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <break>break;</break>
                                    }
                                </block>
                            </case>
                            <case>case
                                <expr>
                                    <name><name>Node</name>.
                                        <name>ELEMENT_NODE</name>
                                    </name>
                                </expr>
                                :
                                <block>{

                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>fDOMFilter</name>
                                                !=<name>null</name> &amp;&amp;
                                                (
                                                <call>
                                                    <name><name>fDOMFilter</name>.
                                                        <name>getWhatToShow</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                &amp;
                                                <name><name>NodeFilter</name>.
                                                    <name>SHOW_ELEMENT</name>
                                                </name>
                                                )!= 0
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>short</name>
                                                        </type>
                                                        <name>code</name> =
                                                        <init>
                                                            <expr>
                                                                <call>
                                                                    <name><name>fDOMFilter</name>.
                                                                        <name>acceptNode</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>node</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <switch>switch
                                                    <condition>(
                                                        <expr>
                                                            <name>code</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <block>{
                                                        <case>case
                                                            <expr>
                                                                <name><name>NodeFilter</name>.
                                                                    <name>FILTER_REJECT</name>
                                                                </name>
                                                            </expr>
                                                            :
                                                            <block>{
                                                                <return>return;</return>
                                                                }
                                                            </block>
                                                        </case>
                                                        <case>case
                                                            <expr>
                                                                <name><name>NodeFilter</name>.
                                                                    <name>FILTER_SKIP</name>
                                                                </name>
                                                            </expr>
                                                            :
                                                            <block>{
                                                                <decl_stmt>
                                                                    <decl>
                                                                        <type>
                                                                            <name>Node</name>
                                                                        </type>
                                                                        <name>child</name> =
                                                                        <init>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>node</name>.
                                                                                        <name>getFirstChild</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </init>
                                                                    </decl>
                                                                    ;
                                                                </decl_stmt>
                                                                <while>while
                                                                    <condition>(
                                                                        <expr>
                                                                            <name>child</name>
                                                                            !=
                                                                            <name>null</name>
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <call>
                                                                                    <name>serializeNode</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>child</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>child</name>
                                                                                =
                                                                                <call>
                                                                                    <name><name>child</name>.
                                                                                        <name>getNextSibling</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </while>
                                                                <return>return;</return>
                                                                <comment type="line">// skip this node</comment>
                                                                }
                                                            </block>

                                                        </case>
                                                        <default>default:
                                                            <block>{
                                                                <comment type="line">// fall through</comment>
                                                                }
                                                            </block>
                                                        </default>
                                                        }
                                                    </block>
                                                </switch>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name>serializeElement</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>(<name>Element</name>)
                                                            <name>node</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <break>break;</break>
                                    }
                                </block>
                            </case>
                            <case>case
                                <expr>
                                    <name><name>Node</name>.
                                        <name>DOCUMENT_NODE</name>
                                    </name>
                                </expr>
                                :
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>DocumentType</name>
                                            </type>
                                            <name>docType</name>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>DOMImplementation</name>
                                            </type>
                                            <name>domImpl</name>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>NamedNodeMap</name>
                                            </type>
                                            <name>map</name>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>Entity</name>
                                            </type>
                                            <name>entity</name>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>Notation</name>
                                            </type>
                                            <name>notation</name>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>i</name>
                                        </decl>
                                        ;
                                    </decl_stmt>

                                    <comment type="line">// If there is a document type, use the SAX events to</comment>
                                    <comment type="line">// serialize it.</comment>
                                    <expr_stmt>
                                        <expr>
                                            <name>docType</name>
                                            = ( (<name>Document</name>) <name>node</name> ).
                                            <call>
                                                <name>getDoctype</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>docType</name>
                                                !=
                                                <name>null</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <comment type="line">// DOM Level 2 (or higher)</comment>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>domImpl</name>
                                                        = ( (<name>Document</name>) <name>node</name> ).
                                                        <call>
                                                            <name>getImplementation</name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <try>try
                                                    <block>{
                                                        <decl_stmt>
                                                            <decl>
                                                                <type>
                                                                    <name>String</name>
                                                                </type>
                                                                <name>internal</name>
                                                            </decl>
                                                            ;
                                                        </decl_stmt>

                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>_printer</name>.
                                                                        <name>enterDTD</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>_docTypePublicId</name>
                                                                =
                                                                <call>
                                                                    <name><name>docType</name>.
                                                                        <name>getPublicId</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>_docTypeSystemId</name>
                                                                =
                                                                <call>
                                                                    <name><name>docType</name>.
                                                                        <name>getSystemId</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>internal</name>
                                                                =
                                                                <call>
                                                                    <name><name>docType</name>.
                                                                        <name>getInternalSubset</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>internal</name>
                                                                    != <name>null</name> &amp;&amp;
                                                                    <call>
                                                                        <name><name>internal</name>.
                                                                            <name>length</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                    &gt; 0
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>_printer</name>.
                                                                                <name>printText</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>internal</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                            </then>
                                                        </if>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name>endDTD</name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                    <comment type="line">// DOM Level 1 -- does implementation have
                                                        methods?
                                                    </comment>
                                                    <catch>catch (
                                                        <param>
                                                            <decl>
                                                                <type>
                                                                    <name>NoSuchMethodError</name>
                                                                </type>
                                                                <name>nsme</name>
                                                            </decl>
                                                        </param>
                                                        )
                                                        <block>{
                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <name>Class</name>
                                                                    </type>
                                                                    <name>docTypeClass</name> =
                                                                    <init>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>docType</name>.
                                                                                    <name>getClass</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>

                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <name>String</name>
                                                                    </type>
                                                                    <name>docTypePublicId</name> =
                                                                    <init>
                                                                        <expr>
                                                                            <name>null</name>
                                                                        </expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>
                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <name>String</name>
                                                                    </type>
                                                                    <name>docTypeSystemId</name> =
                                                                    <init>
                                                                        <expr>
                                                                            <name>null</name>
                                                                        </expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>
                                                            <try>try
                                                                <block>{
                                                                    <decl_stmt>
                                                                        <decl>
                                                                            <type>
                                                                                <name><name>java</name>.<name>
                                                                                    lang</name>.<name>reflect</name>.
                                                                                    <name>Method</name>
                                                                                </name>
                                                                            </type>
                                                                            <name>getPublicId</name> =
                                                                            <init>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>docTypeClass</name>.
                                                                                            <name>getMethod</name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>"getPublicId"
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>(
                                                                                                    <name>
                                                                                                        <name>Class
                                                                                                        </name>
                                                                                                        <index>[]
                                                                                                        </index>
                                                                                                    </name>
                                                                                                    )
                                                                                                    <name>null</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </init>
                                                                        </decl>
                                                                        ;
                                                                    </decl_stmt>
                                                                    <if>if
                                                                        <condition>(
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>getPublicId</name>.
                                                                                        <name>getReturnType</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                .
                                                                                <call>
                                                                                    <name>equals</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name><name>
                                                                                                    String</name>.
                                                                                                    <name>
                                                                                                        <name/>
                                                                                                    </name>
                                                                                                </name>
                                                                                                class
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            )
                                                                        </condition>
                                                                        <then>
                                                                            <block>{
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <name>docTypePublicId</name>
                                                                                        = (<name>String</name>)
                                                                                        <call>
                                                                                            <name><name>
                                                                                                getPublicId</name>.
                                                                                                <name>invoke</name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>docType
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                ,
                                                                                                <argument>
                                                                                                    <expr>(
                                                                                                        <name>
                                                                                                            <name>
                                                                                                                Object
                                                                                                            </name>
                                                                                                            <index>[]
                                                                                                            </index>
                                                                                                        </name>
                                                                                                        )
                                                                                                        <name>null
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                }
                                                                            </block>
                                                                        </then>
                                                                    </if>
                                                                    }
                                                                </block>
                                                                <catch>catch (
                                                                    <param>
                                                                        <decl>
                                                                            <type>
                                                                                <name>Exception</name>
                                                                            </type>
                                                                            <name>e</name>
                                                                        </decl>
                                                                    </param>
                                                                    )
                                                                    <block>{
                                                                        <comment type="line">// ignore</comment>
                                                                        }
                                                                    </block>
                                                                </catch>
                                                            </try>
                                                            <try>try
                                                                <block>{
                                                                    <decl_stmt>
                                                                        <decl>
                                                                            <type>
                                                                                <name><name>java</name>.<name>
                                                                                    lang</name>.<name>reflect</name>.
                                                                                    <name>Method</name>
                                                                                </name>
                                                                            </type>
                                                                            <name>getSystemId</name> =
                                                                            <init>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>docTypeClass</name>.
                                                                                            <name>getMethod</name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>"getSystemId"
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>(
                                                                                                    <name>
                                                                                                        <name>Class
                                                                                                        </name>
                                                                                                        <index>[]
                                                                                                        </index>
                                                                                                    </name>
                                                                                                    )
                                                                                                    <name>null</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </init>
                                                                        </decl>
                                                                        ;
                                                                    </decl_stmt>
                                                                    <if>if
                                                                        <condition>(
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>getSystemId</name>.
                                                                                        <name>getReturnType</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                .
                                                                                <call>
                                                                                    <name>equals</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name><name>
                                                                                                    String</name>.
                                                                                                    <name>
                                                                                                        <name/>
                                                                                                    </name>
                                                                                                </name>
                                                                                                class
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            )
                                                                        </condition>
                                                                        <then>
                                                                            <block>{
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <name>docTypeSystemId</name>
                                                                                        = (<name>String</name>)
                                                                                        <call>
                                                                                            <name><name>
                                                                                                getSystemId</name>.
                                                                                                <name>invoke</name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>docType
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                ,
                                                                                                <argument>
                                                                                                    <expr>(
                                                                                                        <name>
                                                                                                            <name>
                                                                                                                Object
                                                                                                            </name>
                                                                                                            <index>[]
                                                                                                            </index>
                                                                                                        </name>
                                                                                                        )
                                                                                                        <name>null
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                }
                                                                            </block>
                                                                        </then>
                                                                    </if>
                                                                    }
                                                                </block>
                                                                <catch>catch (
                                                                    <param>
                                                                        <decl>
                                                                            <type>
                                                                                <name>Exception</name>
                                                                            </type>
                                                                            <name>e</name>
                                                                        </decl>
                                                                    </param>
                                                                    )
                                                                    <block>{
                                                                        <comment type="line">// ignore</comment>
                                                                        }
                                                                    </block>
                                                                </catch>
                                                            </try>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>_printer</name>.
                                                                            <name>enterDTD</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>_docTypePublicId</name>
                                                                    =
                                                                    <name>docTypePublicId</name>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>_docTypeSystemId</name>
                                                                    =
                                                                    <name>docTypeSystemId</name>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name>endDTD</name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </catch>
                                                </try>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <comment type="line">// !! Fall through</comment>
                                    }
                                </block>
                            </case>
                            <case>case
                                <expr>
                                    <name><name>Node</name>.
                                        <name>DOCUMENT_FRAGMENT_NODE</name>
                                    </name>
                                </expr>
                                :
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>Node</name>
                                            </type>
                                            <name>child</name>
                                        </decl>
                                        ;
                                    </decl_stmt>

                                    <comment type="line">// By definition this will happen if the node is a document,
                                    </comment>
                                    <comment type="line">// document fragment, etc. Just serialize its contents. It
                                        will
                                    </comment>
                                    <comment type="line">// work well for other nodes that we do not know how to
                                        serialize.
                                    </comment>
                                    <expr_stmt>
                                        <expr>
                                            <name>child</name>
                                            =
                                            <call>
                                                <name><name>node</name>.
                                                    <name>getFirstChild</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <while>while
                                        <condition>(
                                            <expr>
                                                <name>child</name>
                                                !=
                                                <name>null</name>
                                            </expr>
                                            )
                                        </condition>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>serializeNode</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>child</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>child</name>
                                                    =
                                                    <call>
                                                        <name><name>child</name>.
                                                            <name>getNextSibling</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </while>
                                    <break>break;</break>
                                    }
                                </block>

                            </case>
                            <default>default:
                                <break>break;</break>
                            </default>
                            }
                        </block>
                    </switch>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * Must be called by a method about to print any type of content.
                * If the element was just opened, the opening tag is closed and
                * will be matched to a closing tag. Returns the current element
                * state with &lt;tt&gt;empty&lt;/tt&gt; and &lt;tt&gt;afterElement&lt;/tt&gt; set to false.
                *
                * @return The current element state
                * @throws IOException An I/O exception occured while
                * serializing
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>ElementState</name>
                </type>
                <name>content</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ElementState</name>
                            </type>
                            <name>state</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <name>state</name>
                            =
                            <call>
                                <name>getElementState</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name>isDocumentState</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// Need to close CData section first</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>state</name>.
                                                <name>inCData</name>
                                            </name>
                                            &amp;&amp; !
                                            <name><name>state</name>.
                                                <name>doCData</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>_printer</name>.
                                                            <name>printText</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"]]&gt;"</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name><name>state</name>.
                                                        <name>inCData</name>
                                                    </name>
                                                    = false
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <comment type="line">// If this is the first content in the element,</comment>
                                <comment type="line">// change the state to not-empty and close the</comment>
                                <comment type="line">// opening element tag.</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>state</name>.
                                                <name>empty</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>_printer</name>.
                                                            <name>printText</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>'&gt;'</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name><name>state</name>.
                                                        <name>empty</name>
                                                    </name>
                                                    = false
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <comment type="line">// Except for one content type, all of them</comment>
                                <comment type="line">// are not last element. That one content</comment>
                                <comment type="line">// type will take care of itself.</comment>
                                <expr_stmt>
                                    <expr>
                                        <name><name>state</name>.
                                            <name>afterElement</name>
                                        </name>
                                        = false
                                    </expr>
                                    ;
                                </expr_stmt>
                                <comment type="line">// Except for one content type, all of them</comment>
                                <comment type="line">// are not last comment. That one content</comment>
                                <comment type="line">// type will take care of itself.</comment>
                                <expr_stmt>
                                    <expr>
                                        <name><name>state</name>.
                                            <name>afterComment</name>
                                        </name>
                                        = false
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>state</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * Called to print the text contents in the prevailing element format.
                * Since this method is capable of printing text as CDATA, it is used
                * for that purpose as well. White space handling is determined by the
                * current element state. In addition, the output format can dictate
                * whether the text is printed as CDATA or unescaped.
                *
                * @param text The text to print
                * @param unescaped True is should print unescaped
                * @throws IOException An I/O exception occured while
                * serializing
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>characters</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>text</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ElementState</name>
                            </type>
                            <name>state</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <name>state</name>
                            =
                            <call>
                                <name>content</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// Check if text should be print as CDATA section or unescaped</comment>
                    <comment type="line">// based on elements listed in the output format (the element</comment>
                    <comment type="line">// state) or whether we are inside a CDATA section or entity.</comment>

                    <if>if
                        <condition>(
                            <expr>
                                <name><name>state</name>.
                                    <name>inCData</name>
                                </name>
                                ||
                                <name><name>state</name>.
                                    <name>doCData</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>index</name>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>saveIndent</name>
                                    </decl>
                                    ;
                                </decl_stmt>

                                <comment type="line">// Print a CDATA section. The text is not escaped, but ']]&gt;'
                                </comment>
                                <comment type="line">// appearing in the code must be identified and dealt with.
                                </comment>
                                <comment type="line">// The contents of a text node is considered space preserving.
                                </comment>
                                <if>if
                                    <condition>(
                                        <expr>!
                                            <name><name>state</name>.
                                                <name>inCData</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>_printer</name>.
                                                            <name>printText</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"&lt;![CDATA["</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name><name>state</name>.
                                                        <name>inCData</name>
                                                    </name>
                                                    = true
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <expr_stmt>
                                    <expr>
                                        <name>saveIndent</name>
                                        =
                                        <call>
                                            <name><name>_printer</name>.
                                                <name>getNextIndent</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>_printer</name>.
                                                <name>setNextIndent</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>0</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>printCDATAText</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>text</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>_printer</name>.
                                                <name>setNextIndent</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>saveIndent</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>

                                }
                            </block>
                        </then>
                        <else>else
                            <block>{

                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>saveIndent</name>
                                    </decl>
                                    ;
                                </decl_stmt>

                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>state</name>.
                                                <name>preserveSpace</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <comment type="line">// If preserving space then hold of indentation so no
                                            </comment>
                                            <comment type="line">// excessive spaces are printed at line breaks,
                                                escape
                                            </comment>
                                            <comment type="line">// the text content without replacing spaces and
                                                print
                                            </comment>
                                            <comment type="line">// the text breaking only at line breaks.</comment>
                                            <expr_stmt>
                                                <expr>
                                                    <name>saveIndent</name>
                                                    =
                                                    <call>
                                                        <name><name>_printer</name>.
                                                            <name>getNextIndent</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>_printer</name>.
                                                            <name>setNextIndent</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>0</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>printText</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>text</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>true</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name><name>state</name>.
                                                                        <name>unescaped</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>_printer</name>.
                                                            <name>setNextIndent</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>saveIndent</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>printText</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>text</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>false</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name><name>state</name>.
                                                                        <name>unescaped</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * Returns the suitable entity reference for this character value,
                * or null if no such entity exists. Calling this method with &lt;tt&gt;'&amp;amp;'&lt;/tt&gt;
                * will return &lt;tt&gt;"&amp;amp;amp;"&lt;/tt&gt;.
                *
                * @param ch Character value
                * @return Character entity name, or null
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>protected</specifier>
                    <specifier>abstract</specifier>
                    <name>String</name>
                </type>
                <name>getEntityRef</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>ch</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>


            <comment type="javadoc">/**
                * Called to serializee the DOM element. The element is serialized based on
                * the serializer's method (XML, HTML, XHTML).
                *
                * @param elem The element to serialize
                * @throws IOException An I/O exception occured while
                * serializing
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>protected</specifier>
                    <specifier>abstract</specifier>
                    <name>void</name>
                </type>
                <name>serializeElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Element</name>
                            </type>
                            <name>elem</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                ;
            </function_decl>


            <comment type="javadoc">/**
                * Comments and PIs cannot be serialized before the root element,
                * because the root element serializes the document type, which
                * generally comes first. Instead such PIs and comments are
                * accumulated inside a vector and serialized by calling this
                * method. Will be called when the root element is serialized
                * and when the document finished serializing.
                *
                * @throws IOException An I/O exception occured while
                * serializing
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>serializePreRoot</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>i</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <name>_preRoot</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <for>for (
                                    <init>
                                        <expr>
                                            <name>i</name>
                                            = 0
                                        </expr>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            &lt;
                                            <call>
                                                <name><name>_preRoot</name>.
                                                    <name>size</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr>++
                                            <name>i</name>
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>printText</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>(<name>String</name>)
                                                                <call>
                                                                    <name><name>_preRoot</name>.
                                                                        <name>elementAt</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>i</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>true</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>true</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>_indenting</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>_printer</name>.
                                                                <name>breakLine</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </for>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>_preRoot</name>.
                                                <name>removeAllElements</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>


            <comment type="line">//---------------------------------------------//</comment>
            <comment type="line">// Text pretty printing and formatting methods //</comment>
            <comment type="line">//---------------------------------------------//</comment>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>printCDATAText</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>text</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>length</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>text</name>.
                                            <name>length</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>char</name>
                            </type>
                            <name>ch</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>index</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>index</name>
                                &lt;
                                <name>length</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr>++
                                <name>index</name>
                            </expr>
                        </incr>
                        )
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>ch</name>
                                    =
                                    <call>
                                        <name><name>text</name>.
                                            <name>charAt</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>index</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>ch</name>
                                        == ']'
                                        &amp;&amp; <name>index</name> + 2 &lt;
                                        <name>length</name>
                                        &amp;&amp;
                                        <call>
                                            <name><name>text</name>.
                                                <name>charAt</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>index</name>
                                                        + 1
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        == ']'
                                        &amp;&amp;
                                        <call>
                                            <name><name>text</name>.
                                                <name>charAt</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>index</name>
                                                        + 2
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        == '&gt;'
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <comment type="line">// check for ']]&gt;'</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>fDOMErrorHandler</name>
                                                    !=
                                                    <name>null</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <comment type="line">// REVISIT: this means that if DOM Error
                                                        handler is not registered we don't report any
                                                    </comment>
                                                    <comment type="line">// fatal errors and might serialize not
                                                        wellformed document
                                                    </comment>
                                                    <if>if
                                                        <condition>(
                                                            <expr>(<name>features</name> &amp;
                                                                <name><name>DOMSerializerImpl</name>.
                                                                    <name>SPLITCDATA</name>
                                                                </name>
                                                                ) == 0
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <decl_stmt>
                                                                    <decl>
                                                                        <type>
                                                                            <name>String</name>
                                                                        </type>
                                                                        <name>msg</name> =
                                                                        <init>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>
                                                                                        DOMMessageFormatter</name>.
                                                                                        <name>formatMessage</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name><name>
                                                                                                    DOMMessageFormatter</name>
                                                                                                    .
                                                                                                    <name>
                                                                                                        SERIALIZER_DOMAIN
                                                                                                    </name>
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>"EndingCDATA"</expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>null</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </init>
                                                                    </decl>
                                                                    ;
                                                                </decl_stmt>
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>(<name>features</name> &amp;
                                                                            <name><name>DOMSerializerImpl</name>.
                                                                                <name>WELLFORMED</name>
                                                                            </name>
                                                                            ) != 0
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{
                                                                            <comment type="line">// issue fatal error
                                                                            </comment>
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name>modifyDOMError</name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>msg</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name><name>
                                                                                                        DOMError</name>.
                                                                                                        <name>
                                                                                                            SEVERITY_FATAL_ERROR
                                                                                                        </name>
                                                                                                    </name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    "wf-invalid-character"
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>fCurrentNode
                                                                                                    </name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>
                                                                                            fDOMErrorHandler</name>.
                                                                                            <name>handleError</name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>fDOMError
                                                                                                    </name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            <throw>throw
                                                                                <expr>new
                                                                                    <call>
                                                                                        <name>LSException</name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name><name>
                                                                                                        LSException</name>
                                                                                                        .
                                                                                                        <name>
                                                                                                            SERIALIZE_ERR
                                                                                                        </name>
                                                                                                    </name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>msg</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </throw>
                                                                            }
                                                                        </block>
                                                                    </then>
                                                                    <else>else
                                                                        <block>{
                                                                            <comment type="line">// issue error
                                                                            </comment>
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name>modifyDOMError</name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>msg</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name><name>
                                                                                                        DOMError</name>.
                                                                                                        <name>
                                                                                                            SEVERITY_ERROR
                                                                                                        </name>
                                                                                                    </name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    "cdata-section-not-splitted"
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>fCurrentNode
                                                                                                    </name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            <if>if
                                                                                <condition>(
                                                                                    <expr>!
                                                                                        <call>
                                                                                            <name><name>
                                                                                                fDOMErrorHandler</name>.
                                                                                                <name>handleError</name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>
                                                                                                            fDOMError
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    )
                                                                                </condition>
                                                                                <then>
                                                                                    <block>{
                                                                                        <throw>throw
                                                                                            <expr>new
                                                                                                <call>
                                                                                                    <name>LSException
                                                                                                    </name>
                                                                                                    <argument_list>(
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    <name>
                                                                                                                        LSException</name>
                                                                                                                    .
                                                                                                                    <name>
                                                                                                                        SERIALIZE_ERR
                                                                                                                    </name>
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        ,
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    msg
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        )
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                            ;
                                                                                        </throw>
                                                                                        }
                                                                                    </block>
                                                                                </then>
                                                                            </if>
                                                                            }
                                                                        </block>
                                                                    </else>
                                                                </if>
                                                                }
                                                            </block>
                                                        </then>
                                                        <else>else
                                                            <block>{
                                                                <comment type="line">// issue warning</comment>
                                                                <decl_stmt>
                                                                    <decl>
                                                                        <type>
                                                                            <name>String</name>
                                                                        </type>
                                                                        <name>msg</name> =
                                                                        <init>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>
                                                                                        DOMMessageFormatter</name>.
                                                                                        <name>formatMessage</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name><name>
                                                                                                    DOMMessageFormatter</name>
                                                                                                    .
                                                                                                    <name>
                                                                                                        SERIALIZER_DOMAIN
                                                                                                    </name>
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>"SplittingCDATA"
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>null</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </init>
                                                                    </decl>
                                                                    ;
                                                                </decl_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name>modifyDOMError</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>msg</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name><name>DOMError</name>.
                                                                                            <name>SEVERITY_WARNING
                                                                                            </name>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>null</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>fCurrentNode</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>fDOMErrorHandler</name>.
                                                                                <name>handleError</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>fDOMError</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </else>
                                                    </if>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <comment type="line">// split CDATA section</comment>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>_printer</name>.
                                                        <name>printText</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"]]]]&gt;&lt;![CDATA[&gt;"</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>index</name>
                                                += 2
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <continue>continue;</continue>
                                        }
                                    </block>
                                </then>
                            </if>

                            <if>if
                                <condition>(
                                    <expr>!
                                        <call>
                                            <name><name>XMLChar</name>.
                                                <name>isValid</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>ch</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <comment type="line">// check if it is surrogate</comment>
                                        <if>if
                                            <condition>(
                                                <expr>++<name>index</name> &lt;
                                                    <name>length</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name>surrogates</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>ch</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>text</name>.
                                                                                    <name>charAt</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>index</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name>fatalError</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"The character '"+(<name>
                                                                            char</name>)<name>ch</name>+"' is an invalid
                                                                            XML character"
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </else>
                                        </if>
                                        <continue>continue;</continue>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>( <name>ch</name> &gt;= ' ' &amp;&amp;
                                                    <call>
                                                        <name><name>_encodingInfo</name>.
                                                            <name>isPrintable</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>(<name>char</name>)
                                                                    <name>ch</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    &amp;&amp; <name>ch</name> != 0xF7 ) ||
                                                    <name>ch</name>
                                                    == '\n' || <name>ch</name> == '\r' || <name>ch</name> == '\t'
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>_printer</name>.
                                                                    <name>printText</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>(<name>char</name>)
                                                                            <name>ch</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <block>{

                                                    <comment type="line">// The character is not printable -- split
                                                        CDATA section
                                                    </comment>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>_printer</name>.
                                                                    <name>printText</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"]]&gt;&amp;#x"</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>_printer</name>.
                                                                    <name>printText</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>Integer</name>.
                                                                                    <name>toHexString</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>ch</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>_printer</name>.
                                                                    <name>printText</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>";&lt;![CDATA["</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </else>
                                        </if>
                                        }
                                    </block>
                                </else>
                            </if>
                            }
                        </block>
                    </for>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>surrogates</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>high</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>low</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>XMLChar</name>.
                                        <name>isHighSurrogate</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>high</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>!
                                            <call>
                                                <name><name>XMLChar</name>.
                                                    <name>isLowSurrogate</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>low</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <comment type="line">//Invalid XML</comment>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>fatalError</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"The character '"+(<name>char</name>)<name>
                                                                    low</name>+"' is an invalid XML character"
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>int</name>
                                                    </type>
                                                    <name>supplemental</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name><name>XMLChar</name>.
                                                                    <name>supplemental</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>(<name>char</name>)
                                                                            <name>high</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>(<name>char</name>)
                                                                            <name>low</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>!
                                                        <call>
                                                            <name><name>XMLChar</name>.
                                                                <name>isValid</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>supplemental</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <comment type="line">//Invalid XML</comment>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name>fatalError</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"The character '"+(<name>
                                                                                char</name>)<name>supplemental</name>+"'
                                                                                is an invalid XML character"
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                                <else>else
                                                    <block>{
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <call>
                                                                        <name>content</name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                    .
                                                                    <name>inCData</name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>_printer</name>.
                                                                                    <name>printText</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>"]]&gt;&amp;#x"</expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>_printer</name>.
                                                                                    <name>printText</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <call>
                                                                                                <name><name>
                                                                                                    Integer</name>.
                                                                                                    <name>toHexString
                                                                                                    </name>
                                                                                                </name>
                                                                                                <argument_list>(
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <name>
                                                                                                                supplemental
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    )
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>_printer</name>.
                                                                                    <name>printText</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>";&lt;![CDATA["</expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                            <else>else
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name>printHex</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>supplemental</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </else>
                                                        </if>
                                                        }
                                                    </block>
                                                </else>
                                            </if>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>fatalError</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"The character '"+(<name>char</name>)<name>high</name>+"' is
                                                        an invalid XML character"
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>

                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Called to print additional text with whitespace handling.
                * If spaces are preserved, the text is printed as if by calling
                * {@link #printText(String,boolean,boolean)} with a call to {@link Printer#breakLine}
                * for each new line. If spaces are not preserved, the text is
                * broken at space boundaries if longer than the line width;
                * Multiple spaces are printed as such, but spaces at beginning
                * of line are removed.
                *
                * @param text The text to print
                * @param preserveSpace Space preserving flag
                * @param unescaped Print unescaped
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>printText</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>char</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>chars</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>start</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>length</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>preserveSpace</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>unescaped</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>char</name>
                            </type>
                            <name>ch</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <name>preserveSpace</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// Preserving spaces: the text must print exactly as it is,
                                </comment>
                                <comment type="line">// without breaking when spaces appear in the text and without
                                </comment>
                                <comment type="line">// consolidating spaces. If a line terminator is used, a line
                                </comment>
                                <comment type="line">// break will occur.</comment>
                                <while>while
                                    <condition>(
                                        <expr><name>length</name>-- &gt; 0
                                        </expr>
                                        )
                                    </condition>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>ch</name>
                                                =
                                                <name>
                                                    <name>chars</name>
                                                    <index>[
                                                        <expr>
                                                            <name>start</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>++
                                                <name>start</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>ch</name>
                                                    == '\n' || <name>ch</name> == '\r' ||
                                                    <name>unescaped</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>_printer</name>.
                                                                <name>printText</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>ch</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                            </then>
                                            <else>else
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>printEscaped</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>ch</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                            </else>
                                        </if>
                                        }
                                    </block>
                                </while>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <comment type="line">// Not preserving spaces: print one part at a time, and</comment>
                                <comment type="line">// use spaces between parts to break them into different</comment>
                                <comment type="line">// lines. Spaces at beginning of line will be stripped</comment>
                                <comment type="line">// by printing mechanism. Line terminator is treated</comment>
                                <comment type="line">// no different than other text part.</comment>
                                <while>while
                                    <condition>(
                                        <expr><name>length</name>-- &gt; 0
                                        </expr>
                                        )
                                    </condition>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>ch</name>
                                                =
                                                <name>
                                                    <name>chars</name>
                                                    <index>[
                                                        <expr>
                                                            <name>start</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>++
                                                <name>start</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>ch</name>
                                                    == ' ' || <name>ch</name> == '\f' || <name>ch</name> == '\t' || <name>
                                                    ch
                                                </name> == '\n' || <name>ch</name> == '\r'
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>_printer</name>.
                                                                <name>printSpace</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                            </then>
                                            <else>else
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>unescaped</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>_printer</name>.
                                                                        <name>printText</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>ch</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                    </then>
                                                    <else>else
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name>printEscaped</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>ch</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                    </else>
                                                </if>
                                            </else>
                                        </if>
                                        }
                                    </block>
                                </while>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>printText</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>text</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>preserveSpace</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>unescaped</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>char</name>
                            </type>
                            <name>ch</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <name>preserveSpace</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// Preserving spaces: the text must print exactly as it is,
                                </comment>
                                <comment type="line">// without breaking when spaces appear in the text and without
                                </comment>
                                <comment type="line">// consolidating spaces. If a line terminator is used, a line
                                </comment>
                                <comment type="line">// break will occur.</comment>
                                <for>for (
                                    <init>
                                        <expr>
                                            <name>index</name>
                                            = 0
                                        </expr>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>index</name>
                                            &lt;
                                            <call>
                                                <name><name>text</name>.
                                                    <name>length</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr>++
                                            <name>index</name>
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>ch</name>
                                                =
                                                <call>
                                                    <name><name>text</name>.
                                                        <name>charAt</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>index</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>ch</name>
                                                    == '\n' || <name>ch</name> == '\r' ||
                                                    <name>unescaped</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>_printer</name>.
                                                                <name>printText</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>ch</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                            </then>
                                            <else>else
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>printEscaped</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>ch</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                            </else>
                                        </if>
                                        }
                                    </block>
                                </for>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <comment type="line">// Not preserving spaces: print one part at a time, and</comment>
                                <comment type="line">// use spaces between parts to break them into different</comment>
                                <comment type="line">// lines. Spaces at beginning of line will be stripped</comment>
                                <comment type="line">// by printing mechanism. Line terminator is treated</comment>
                                <comment type="line">// no different than other text part.</comment>
                                <for>for (
                                    <init>
                                        <expr>
                                            <name>index</name>
                                            = 0
                                        </expr>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>index</name>
                                            &lt;
                                            <call>
                                                <name><name>text</name>.
                                                    <name>length</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr>++
                                            <name>index</name>
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>ch</name>
                                                =
                                                <call>
                                                    <name><name>text</name>.
                                                        <name>charAt</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>index</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>ch</name>
                                                    == ' ' || <name>ch</name> == '\f' || <name>ch</name> == '\t' || <name>
                                                    ch
                                                </name> == '\n' || <name>ch</name> == '\r'
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>_printer</name>.
                                                                <name>printSpace</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                            </then>
                                            <else>else
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>unescaped</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>_printer</name>.
                                                                        <name>printText</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>ch</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                    </then>
                                                    <else>else
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name>printEscaped</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>ch</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                    </else>
                                                </if>
                                            </else>
                                        </if>
                                        }
                                    </block>
                                </for>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * Print a document type public or system identifier URL.
                * Encapsulates the URL in double quotes, escapes non-printing
                * characters and print it equivalent to {@link #printText}.
                *
                * @param url The document type url to print
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>printDoctypeURL</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>url</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>i</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>_printer</name>.
                                    <name>printText</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>'"'</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <for>for(
                        <init>
                            <expr>
                                <name>i</name>
                                = 0
                            </expr>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <call>
                                    <name><name>url</name>.
                                        <name>length</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr>++
                                <name>i</name>
                            </expr>
                        </incr>
                        )
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>url</name>.
                                                <name>charAt</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>i</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        == '"' ||
                                        <call>
                                            <name><name>url</name>.
                                                <name>charAt</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>i</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        &lt; 0x20 ||
                                        <call>
                                            <name><name>url</name>.
                                                <name>charAt</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>i</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        &gt; 0x7F
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>_printer</name>.
                                                        <name>printText</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>'%'</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>_printer</name>.
                                                        <name>printText</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>Integer</name>.
                                                                        <name>toHexString</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>url</name>.
                                                                                        <name>charAt</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>i</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>_printer</name>.
                                                    <name>printText</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>url</name>.
                                                                    <name>charAt</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>i</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                </else>
                            </if>
                            }
                        </block>
                    </for>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>_printer</name>.
                                    <name>printText</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>'"'</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>printEscaped</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>ch</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>charRef</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// If there is a suitable entity reference for this</comment>
                    <comment type="line">// character, print it. The list of available entity</comment>
                    <comment type="line">// references is almost but not identical between</comment>
                    <comment type="line">// XML and HTML.</comment>
                    <expr_stmt>
                        <expr>
                            <name>charRef</name>
                            =
                            <call>
                                <name>getEntityRef</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>ch</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>charRef</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>_printer</name>.
                                                <name>printText</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>'&amp;'</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>_printer</name>.
                                                <name>printText</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>charRef</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>_printer</name>.
                                                <name>printText</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>';'</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>( <name>ch</name> &gt;= ' ' &amp;&amp;
                                        <call>
                                            <name><name>_encodingInfo</name>.
                                                <name>isPrintable</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>(<name>char</name>)
                                                        <name>ch</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        &amp;&amp; <name>ch</name> != 0xF7 ) ||
                                        <name>ch</name>
                                        == '\n' || <name>ch</name> == '\r' || <name>ch</name> == '\t'
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <comment type="line">// Non printables are below ASCII space but not tab or
                                            line
                                        </comment>
                                        <comment type="line">// terminator, ASCII delete, or above a certain Unicode
                                            threshold.
                                        </comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>ch</name>
                                                    &lt; 0x10000
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>_printer</name>.
                                                                    <name>printText</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>(<name>char</name>)
                                                                            <name>ch</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>_printer</name>.
                                                                    <name>printText</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <call>(<name>char</name>)
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>((<name>ch</name>-0x10000)&gt;&gt;10)+0xd800
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>_printer</name>.
                                                                    <name>printText</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <call>(<name>char</name>)
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>((<name>ch</name>-0x10000)&amp;0x3ff)+0xdc00
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </else>
                                        </if>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>printHex</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>ch</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </else>
                            </if>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Escapes chars
                */
            </comment>
            <function>
                <type>
                    <specifier>final</specifier>
                    <name>void</name>
                </type>
                <name>printHex</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>ch</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>_printer</name>.
                                    <name>printText</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"&amp;#x"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>_printer</name>.
                                    <name>printText</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>Integer</name>.
                                                    <name>toHexString</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>ch</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>_printer</name>.
                                    <name>printText</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>';'</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * Escapes a string so it may be printed as text content or attribute
                * value. Non printable characters are escaped using character references.
                * Where the format specifies a deault entity reference, that reference
                * is used (e.g. &lt;tt&gt;&amp;amp;lt;&lt;/tt&gt;).
                *
                * @param source The string to escape
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>printEscaped</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>source</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <call>
                                    <name><name>source</name>.
                                        <name>length</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr>++
                                <name>i</name>
                            </expr>
                        </incr>
                        )
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>ch</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>source</name>.
                                                    <name>charAt</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>(<name>ch</name> &amp; 0xfc00) == 0xd800 &amp;&amp; <name>i</name>+1 &lt;
                                        <call>
                                            <name><name>source</name>.
                                                <name>length</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>int</name>
                                                </type>
                                                <name>lowch</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>source</name>.
                                                                <name>charAt</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr><name>i</name>+1
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>(<name>lowch</name> &amp; 0xfc00) == 0xdc00
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>ch</name>
                                                            = 0x10000 + ((<name>ch</name>-0xd800)&lt;&lt;10) + <name>
                                                            lowch</name>-0xdc00
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr><name>i</name>++
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </then>
                            </if>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>printEscaped</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>ch</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </for>
                    }
                </block>
            </function>


            <comment type="line">//--------------------------------//</comment>
            <comment type="line">// Element state handling methods //</comment>
            <comment type="line">//--------------------------------//</comment>


            <comment type="javadoc">/**
                * Return the state of the current element.
                *
                * @return Current element state
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>ElementState</name>
                </type>
                <name>getElementState</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>
                                <name>_elementStates</name>
                                <index>[
                                    <expr>
                                        <name>_elementStateCount</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * Enter a new element state for the specified element.
                * Tag name and space preserving is specified, element
                * state is initially empty.
                *
                * @return Current element state, or null
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>ElementState</name>
                </type>
                <name>enterElementState</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>namespaceURI</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>localName</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>rawName</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>preserveSpace</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ElementState</name>
                            </type>
                            <name>state</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <name>_elementStateCount</name>
                                + 1 ==
                                <name><name>_elementStates</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>ElementState</name>
                                            <index>[]</index>
                                        </type>
                                        <name>newStates</name>
                                    </decl>
                                    ;
                                </decl_stmt>

                                <comment type="line">// Need to create a larger array of states. This does not happen
                                </comment>
                                <comment type="line">// often, unless the document is really deep.</comment>
                                <expr_stmt>
                                    <expr>
                                        <name>newStates</name>
                                        = new
                                        <name>
                                            <name>ElementState</name>
                                            <index>[
                                                <expr>
                                                    <name><name>_elementStates</name>.
                                                        <name>length</name>
                                                    </name>
                                                    + 10
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <for>for (
                                    <init>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>i</name> =
                                            <init>
                                                <expr>0</expr>
                                            </init>
                                        </decl>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            &lt;
                                            <name><name>_elementStates</name>.
                                                <name>length</name>
                                            </name>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr>++
                                            <name>i</name>
                                        </expr>
                                    </incr>
                                    )
                                    <expr_stmt>
                                        <expr>
                                            <name>
                                                <name>newStates</name>
                                                <index>[
                                                    <expr>
                                                        <name>i</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                            =
                                            <name>
                                                <name>_elementStates</name>
                                                <index>[
                                                    <expr>
                                                        <name>i</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                </for>
                                <for>for (
                                    <init>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>i</name> =
                                            <init>
                                                <expr>
                                                    <name><name>_elementStates</name>.
                                                        <name>length</name>
                                                    </name>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            &lt;
                                            <name><name>newStates</name>.
                                                <name>length</name>
                                            </name>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr>++
                                            <name>i</name>
                                        </expr>
                                    </incr>
                                    )
                                    <expr_stmt>
                                        <expr>
                                            <name>
                                                <name>newStates</name>
                                                <index>[
                                                    <expr>
                                                        <name>i</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                            = new
                                            <call>
                                                <name>ElementState</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                </for>
                                <expr_stmt>
                                    <expr>
                                        <name>_elementStates</name>
                                        =
                                        <name>newStates</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <expr_stmt>
                        <expr>++
                            <name>_elementStateCount</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>state</name>
                            =
                            <name>
                                <name>_elementStates</name>
                                <index>[
                                    <expr>
                                        <name>_elementStateCount</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>state</name>.
                                <name>namespaceURI</name>
                            </name>
                            =
                            <name>namespaceURI</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>state</name>.
                                <name>localName</name>
                            </name>
                            =
                            <name>localName</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>state</name>.
                                <name>rawName</name>
                            </name>
                            =
                            <name>rawName</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>state</name>.
                                <name>preserveSpace</name>
                            </name>
                            =
                            <name>preserveSpace</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>state</name>.
                                <name>empty</name>
                            </name>
                            = true
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>state</name>.
                                <name>afterElement</name>
                            </name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>state</name>.
                                <name>afterComment</name>
                            </name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>state</name>.
                                <name>doCData</name>
                            </name>
                            =
                            <name><name>state</name>.
                                <name>inCData</name>
                            </name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>state</name>.
                                <name>unescaped</name>
                            </name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>state</name>.
                                <name>prefixes</name>
                            </name>
                            =
                            <name>_prefixes</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name>_prefixes</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>state</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * Leave the current element state and return to the
                * state of the parent element. If this was the root
                * element, return to the state of the document.
                *
                * @return Previous element state
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>ElementState</name>
                </type>
                <name>leaveElementState</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>_elementStateCount</name>
                                &gt; 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="block">/*Corrected by David Blondeau (blondeau@intalio.com)*/</comment>
                                <expr_stmt>
                                    <expr>
                                        <name>_prefixes</name>
                                        =
                                        <name>null</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <comment type="line">//_prefixes = _elementStates[ _elementStateCount ].prefixes;
                                </comment>
                                <expr_stmt>
                                    <expr>--
                                        <name>_elementStateCount</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <return>return
                                    <expr>
                                        <name>
                                            <name>_elementStates</name>
                                            <index>[
                                                <expr>
                                                    <name>_elementStateCount</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                        </type>
                                        <name>msg</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>formatMessage</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>DOMMessageFormatter</name>.
                                                                    <name>SERIALIZER_DOMAIN</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>"Internal"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>null</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalStateException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>msg</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * Returns true if in the state of the document.
                * Returns true before entering any element and after
                * leaving the root element.
                *
                * @return True if in the state of the document
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>boolean</name>
                </type>
                <name>isDocumentState</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>_elementStateCount</name>
                            == 0
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * Returns the namespace prefix for the specified URI.
                * If the URI has been mapped to a prefix, returns the
                * prefix, otherwise returns null.
                *
                * @param namespaceURI The namespace URI
                * @return The namespace prefix if known, or null
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>String</name>
                </type>
                <name>getPrefix</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>namespaceURI</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>prefix</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <name>_prefixes</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>prefix</name>
                                        = (<name>String</name>)
                                        <call>
                                            <name><name>_prefixes</name>.
                                                <name>get</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>namespaceURI</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>prefix</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <return>return
                                            <expr>
                                                <name>prefix</name>
                                            </expr>
                                            ;
                                        </return>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>_elementStateCount</name>
                                == 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <name>null</name>
                                </expr>
                                ;
                            </return>
                        </then>
                        <else>else
                            <block>{
                                <for>for (
                                    <init>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>i</name> =
                                            <init>
                                                <expr>
                                                    <name>_elementStateCount</name>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            &gt; 0
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr>--
                                            <name>i</name>
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>
                                                        <name>_elementStates</name>
                                                        <index>[
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    .<name>prefixes</name> !=
                                                    <name>null</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>prefix</name>
                                                            = (<name>String</name>)
                                                            <name>
                                                                <name>_elementStates</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>i</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            .
                                                            <call>
                                                                <name><name>prefixes</name>.
                                                                    <name>get</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>namespaceURI</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>prefix</name>
                                                                !=
                                                                <name>null</name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <return>return
                                                                <expr>
                                                                    <name>prefix</name>
                                                                </expr>
                                                                ;
                                                            </return>
                                                        </then>
                                                    </if>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </for>
                                }
                            </block>
                        </else>
                    </if>
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * The method modifies global DOM error object
                *
                * @param message
                * @param severity
                * @param type
                * @return a DOMError
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>DOMError</name>
                </type>
                <name>modifyDOMError</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>message</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>severity</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>node</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fDOMError</name>.
                                    <name>reset</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>fDOMError</name>.
                                <name>fMessage</name>
                            </name>
                            =
                            <name>message</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>fDOMError</name>.
                                <name>fType</name>
                            </name>
                            =
                            <name>type</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>fDOMError</name>.
                                <name>fSeverity</name>
                            </name>
                            =
                            <name>severity</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>fDOMError</name>.
                                <name>fLocator</name>
                            </name>
                            = new
                            <call>
                                <name>DOMLocatorImpl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>-1</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>-1</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>-1</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>node</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>fDOMError</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>fatalError</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>message</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDOMErrorHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>modifyDOMError</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>message</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>DOMError</name>.
                                                            <name>SEVERITY_FATAL_ERROR</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>fCurrentNode</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDOMErrorHandler</name>.
                                                <name>handleError</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fDOMError</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IOException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>message</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * DOM level 3:
                * Check a node to determine if it contains unbound namespace prefixes.
                *
                * @param node The node to check for unbound namespace prefices
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>checkUnboundNamespacePrefixedNode</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>node</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    }
                </block>
            </function>
            }
        </block>
    </class>
</unit>
