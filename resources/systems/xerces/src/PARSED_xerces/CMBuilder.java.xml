<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\impl\xs\models\CMBuilder.java">
    <comment type="block">/*
        * Copyright 2001-2004 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xs</name>.
            <name>models</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>dtd</name>.<name>
            models</name>.
            <name>CMNode</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xs</name>.
            <name>SchemaSymbols</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xs</name>.
            <name>XSComplexTypeDecl</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xs</name>.
            <name>XSDeclarationPool</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xs</name>.
            <name>XSElementDecl</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xs</name>.
            <name>XSModelGroupImpl</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xs</name>.
            <name>XSParticleDecl</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * This class constructs content models for a given grammar.
        *
        * @xerces.internal
        *
        * @author Elena Litani, IBM
        * @author Sandy Gao, IBM
        *
        * @version $Id: CMBuilder.java,v 1.23 2004/10/06 15:14:52 mrglavas Exp $
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>CMBuilder</name>
        <block>{

            <comment type="line">// REVISIT: should update the decl pool to cache XSCM objects too</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>XSDeclarationPool</name>
                    </type>
                    <name>fDeclPool</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// It never changes, so a static member is good enough</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <name>XSEmptyCM</name>
                    </type>
                    <name>fEmptyCM</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>XSEmptyCM</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// needed for DFA construction</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>fLeafCount</name>
                </decl>
                ;
            </decl_stmt>
            <comment type="line">// needed for UPA</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>fParticleCount</name>
                </decl>
                ;
            </decl_stmt>
            <comment type="line">//Factory to create Bin, Uni, Leaf nodes</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>CMNodeFactory</name>
                    </type>
                    <name>fNodeFactory</name>
                </decl>
                ;
            </decl_stmt>

            <constructor>
                <specifier>public</specifier>
                <name>CMBuilder</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>CMNodeFactory</name>
                            </type>
                            <name>nodeFactory</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fDeclPool</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fNodeFactory</name>
                            =
                            <name>nodeFactory</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setDeclPool</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSDeclarationPool</name>
                            </type>
                            <name>declPool</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fDeclPool</name>
                            =
                            <name>declPool</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Get content model for the a given type
                *
                * @param typeDecl get content model for which complex type
                * @return a content model validator
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>XSCMValidator</name>
                </type>
                <name>getContentModel</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSComplexTypeDecl</name>
                            </type>
                            <name>typeDecl</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <comment type="line">// for complex type with empty or simple content,</comment>
                    <comment type="line">// there is no content model validator</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>contentType</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>typeDecl</name>.
                                            <name>getContentType</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>contentType</name>
                                ==
                                <name><name>XSComplexTypeDecl</name>.
                                    <name>CONTENTTYPE_SIMPLE</name>
                                </name>
                                ||
                                <name>contentType</name>
                                ==
                                <name><name>XSComplexTypeDecl</name>.
                                    <name>CONTENTTYPE_EMPTY</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XSParticleDecl</name>
                            </type>
                            <name>particle</name> =
                            <init>
                                <expr>(<name>XSParticleDecl</name>)
                                    <call>
                                        <name><name>typeDecl</name>.
                                            <name>getParticle</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// if the content is element only or mixed, but no particle</comment>
                    <comment type="line">// is defined, return the empty content model</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>particle</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <name>fEmptyCM</name>
                                </expr>
                                ;
                            </return>
                        </then>
                    </if>

                    <comment type="line">// if the content model contains "all" model group,</comment>
                    <comment type="line">// we create an "all" content model, otherwise a DFA content model</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XSCMValidator</name>
                            </type>
                            <name>cmValidator</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>particle</name>.
                                    <name>fType</name>
                                </name>
                                ==
                                <name><name>XSParticleDecl</name>.
                                    <name>PARTICLE_MODELGROUP</name>
                                </name>
                                &amp;&amp;
                                ((<name>XSModelGroupImpl</name>)
                                <name><name>particle</name>.
                                    <name>fValue</name>
                                </name>
                                ).<name>fCompositor</name> ==
                                <name><name>XSModelGroupImpl</name>.
                                    <name>MODELGROUP_ALL</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>cmValidator</name>
                                        =
                                        <call>
                                            <name>createAllCM</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>particle</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>cmValidator</name>
                                        =
                                        <call>
                                            <name>createDFACM</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>particle</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>

                    <comment type="line">//now we are throught building content model and have passed sucessfully of the
                        nodecount check
                    </comment>
                    <comment type="line">//if set by the application</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fNodeFactory</name>.
                                    <name>resetNodeCount</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// if the validator returned is null, it means there is nothing in</comment>
                    <comment type="line">// the content model, so we return the empty content model.</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>cmValidator</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <name>cmValidator</name>
                                    =
                                    <name>fEmptyCM</name>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>

                    <return>return
                        <expr>
                            <name>cmValidator</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <name>XSCMValidator</name>
                </type>
                <name>createAllCM</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSParticleDecl</name>
                            </type>
                            <name>particle</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>particle</name>.
                                    <name>fMaxOccurs</name>
                                </name>
                                == 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <name>null</name>
                                </expr>
                                ;
                            </return>
                        </then>
                    </if>

                    <comment type="line">// get the model group, and add all children of it to the content model
                    </comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XSModelGroupImpl</name>
                            </type>
                            <name>group</name> =
                            <init>
                                <expr>(<name>XSModelGroupImpl</name>)
                                    <name><name>particle</name>.
                                        <name>fValue</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// create an all content model. the parameter indicates whether</comment>
                    <comment type="line">// the &lt;all&gt; itself is optional</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XSAllCM</name>
                            </type>
                            <name>allContent</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>XSAllCM</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>particle</name>.
                                                        <name>fMinOccurs</name>
                                                    </name>
                                                    == 0
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>group</name>.
                                                        <name>fParticleCount</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name><name>group</name>.
                                    <name>fParticleCount</name>
                                </name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <comment type="line">// add the element decl to the all content model</comment>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>allContent</name>.
                                            <name>addElement</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>(<name>XSElementDecl</name>)
                                                    <name><name>group</name>.
                                                        <name>fParticles</name>
                                                        <index>[
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    .
                                                    <name>fValue</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>group</name>.
                                                        <name>fParticles</name>
                                                        <index>[
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    .<name>fMinOccurs</name> == 0
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </for>
                    <return>return
                        <expr>
                            <name>allContent</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <name>XSCMValidator</name>
                </type>
                <name>createDFACM</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSParticleDecl</name>
                            </type>
                            <name>particle</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fLeafCount</name>
                            = 0
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fParticleCount</name>
                            = 0
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// convert particle tree to CM tree</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>CMNode</name>
                            </type>
                            <name>node</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>buildSyntaxTree</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>particle</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>node</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <name>null</name>
                                </expr>
                                ;
                            </return>
                        </then>
                    </if>
                    <comment type="line">// build DFA content model from the CM tree</comment>
                    <return>return
                        <expr>new
                            <call>
                                <name>XSDFACM</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>node</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fLeafCount</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">// 1. convert particle tree to CM tree:</comment>
            <comment type="line">// 2. expand all occurrence values: a{n, unbounded} -&gt; a, a, ..., a+</comment>
            <comment type="line">// a{n, m} -&gt; a, a, ..., a?, a?, ...</comment>
            <comment type="line">// 3. convert model groups (a, b, c, ...) or (a | b | c | ...) to</comment>
            <comment type="line">// binary tree: (((a,b),c),...) or (((a|b)|c)|...)</comment>
            <comment type="line">// 4. make sure each leaf node (XSCMLeaf) has a distinct position</comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>CMNode</name>
                </type>
                <name>buildSyntaxTree</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSParticleDecl</name>
                            </type>
                            <name>particle</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>maxOccurs</name> =
                            <init>
                                <expr>
                                    <name><name>particle</name>.
                                        <name>fMaxOccurs</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>minOccurs</name> =
                            <init>
                                <expr>
                                    <name><name>particle</name>.
                                        <name>fMinOccurs</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>type</name> =
                            <init>
                                <expr>
                                    <name><name>particle</name>.
                                        <name>fType</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>CMNode</name>
                            </type>
                            <name>nodeRet</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <if>if
                        <condition>(
                            <expr>(<name>type</name> ==
                                <name><name>XSParticleDecl</name>.
                                    <name>PARTICLE_WILDCARD</name>
                                </name>
                                ) ||
                                (<name>type</name> ==
                                <name><name>XSParticleDecl</name>.
                                    <name>PARTICLE_ELEMENT</name>
                                </name>
                                )
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// (task 1) element and wildcard particles should be converted to
                                </comment>
                                <comment type="line">// leaf nodes</comment>
                                <comment type="line">// REVISIT: Make a clone of the leaf particle, so that if there
                                </comment>
                                <comment type="line">// are two references to the same group, we have two different
                                </comment>
                                <comment type="line">// leaf particles for the same element or wildcard decl.</comment>
                                <comment type="line">// This is useful for checking UPA.</comment>
                                <expr_stmt>
                                    <expr>
                                        <name>nodeRet</name>
                                        =
                                        <call>
                                            <name><name>fNodeFactory</name>.
                                                <name>getCMLeafNode</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>particle</name>.
                                                            <name>fType</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>particle</name>.
                                                            <name>fValue</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr><name>fParticleCount</name>++
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr><name>fLeafCount</name>++
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <comment type="line">// (task 2) expand occurrence values</comment>
                                <expr_stmt>
                                    <expr>
                                        <name>nodeRet</name>
                                        =
                                        <call>
                                            <name>expandContentModel</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>nodeRet</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>minOccurs</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>maxOccurs</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>type</name>
                                        ==
                                        <name><name>XSParticleDecl</name>.
                                            <name>PARTICLE_MODELGROUP</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <comment type="line">// (task 1,3) convert model groups to binary trees
                                        </comment>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>XSModelGroupImpl</name>
                                                </type>
                                                <name>group</name> =
                                                <init>
                                                    <expr>(<name>XSModelGroupImpl</name>)
                                                        <name><name>particle</name>.
                                                            <name>fValue</name>
                                                        </name>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>CMNode</name>
                                                </type>
                                                <name>temp</name> =
                                                <init>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <comment type="line">// when the model group is a choice of more than one
                                            particles, but
                                        </comment>
                                        <comment type="line">// only one of the particle is not empty, (for example
                                        </comment>
                                        <comment type="line">// &lt;choice&gt;</comment>
                                        <comment type="line">// &lt;sequence/&gt;</comment>
                                        <comment type="line">// &lt;element name="e"/&gt;</comment>
                                        <comment type="line">// &lt;/choice&gt;</comment>
                                        <comment type="line">// ) we can't not return that one particle ("e"). instead,
                                            we should
                                        </comment>
                                        <comment type="line">// treat such particle as optional ("e?").</comment>
                                        <comment type="line">// the following boolean variable is true when there are at
                                            least
                                        </comment>
                                        <comment type="line">// 2 non-empty children.</comment>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>boolean</name>
                                                </type>
                                                <name>twoChildren</name> =
                                                <init>
                                                    <expr>false</expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <for>for (
                                            <init>
                                                <decl>
                                                    <type>
                                                        <name>int</name>
                                                    </type>
                                                    <name>i</name> =
                                                    <init>
                                                        <expr>0</expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </init>
                                            <condition>
                                                <expr>
                                                    <name>i</name>
                                                    &lt;
                                                    <name><name>group</name>.
                                                        <name>fParticleCount</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </condition>
                                            <incr>
                                                <expr><name>i</name>++
                                                </expr>
                                            </incr>
                                            )
                                            <block>{
                                                <comment type="line">// first convert each child to a CM tree</comment>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>temp</name>
                                                        =
                                                        <call>
                                                            <name>buildSyntaxTree</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>group</name>.
                                                                            <name>fParticles</name>
                                                                            <index>[
                                                                                <expr>
                                                                                    <name>i</name>
                                                                                </expr>
                                                                                ]
                                                                            </index>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <comment type="line">// then combine them using binary operation
                                                </comment>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>temp</name>
                                                            !=
                                                            <name>null</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name>nodeRet</name>
                                                                        ==
                                                                        <name>null</name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>nodeRet</name>
                                                                                =
                                                                                <name>temp</name>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </then>
                                                                <else>else
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>nodeRet</name>
                                                                                =
                                                                                <call>
                                                                                    <name><name>fNodeFactory</name>.
                                                                                        <name>getCMBinOpNode</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name><name>group</name>
                                                                                                    .
                                                                                                    <name>fCompositor
                                                                                                    </name>
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>nodeRet</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>temp</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <comment type="line">// record the fact that
                                                                            there are at least 2 children
                                                                        </comment>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>twoChildren</name>
                                                                                = true
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </else>
                                                            </if>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                }
                                            </block>
                                        </for>
                                        <comment type="line">// (task 2) expand occurrence values</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>nodeRet</name>
                                                    !=
                                                    <name>null</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <comment type="line">// when the group is "choice", there is only
                                                        one non-empty
                                                    </comment>
                                                    <comment type="line">// child, and the group had more than one
                                                        children, we need
                                                    </comment>
                                                    <comment type="line">// to create a zero-or-one (optional) node for
                                                        the non-empty
                                                    </comment>
                                                    <comment type="line">// particle.</comment>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name><name>group</name>.
                                                                    <name>fCompositor</name>
                                                                </name>
                                                                ==
                                                                <name><name>XSModelGroupImpl</name>.
                                                                    <name>MODELGROUP_CHOICE</name>
                                                                </name>
                                                                &amp;&amp;
                                                                !<name>twoChildren</name> &amp;&amp;
                                                                <name><name>group</name>.
                                                                    <name>fParticleCount</name>
                                                                </name>
                                                                &gt; 1
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>nodeRet</name>
                                                                        =
                                                                        <call>
                                                                            <name><name>fNodeFactory</name>.
                                                                                <name>getCMUniOpNode</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name><name>
                                                                                            XSParticleDecl</name>.
                                                                                            <name>PARTICLE_ZERO_OR_ONE
                                                                                            </name>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>nodeRet</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>nodeRet</name>
                                                            =
                                                            <call>
                                                                <name>expandContentModel</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>nodeRet</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>minOccurs</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>maxOccurs</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </then>
                            </if>
                        </else>
                    </if>

                    <return>return
                        <expr>
                            <name>nodeRet</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">// 2. expand all occurrence values: a{n, unbounded} -&gt; a, a, ..., a+</comment>
            <comment type="line">// a{n, m} -&gt; a, a, ..., a?, a?, ...</comment>
            <comment type="line">// 4. make sure each leaf node (XSCMLeaf) has a distinct position</comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>CMNode</name>
                </type>
                <name>expandContentModel</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>CMNode</name>
                            </type>
                            <name>node</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>minOccurs</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>maxOccurs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>CMNode</name>
                            </type>
                            <name>nodeRet</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <if>if
                        <condition>(
                            <expr><name>minOccurs</name>==1 &amp;&amp; <name>maxOccurs</name>==1
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>nodeRet</name>
                                        =
                                        <name>node</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr><name>minOccurs</name>==0 &amp;&amp; <name>maxOccurs</name>==1
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <comment type="line">//zero or one</comment>
                                        <expr_stmt>
                                            <expr>
                                                <name>nodeRet</name>
                                                =
                                                <call>
                                                    <name><name>fNodeFactory</name>.
                                                        <name>getCMUniOpNode</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>XSParticleDecl</name>.
                                                                    <name>PARTICLE_ZERO_OR_ONE</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>node</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>minOccurs</name>
                                                == 0 &amp;&amp; <name>maxOccurs</name>==
                                                <name><name>SchemaSymbols</name>.
                                                    <name>OCCURRENCE_UNBOUNDED</name>
                                                </name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <comment type="line">//zero or more</comment>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>nodeRet</name>
                                                        =
                                                        <call>
                                                            <name><name>fNodeFactory</name>.
                                                                <name>getCMUniOpNode</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>XSParticleDecl</name>.
                                                                            <name>PARTICLE_ZERO_OR_MORE</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>node</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>minOccurs</name>
                                                        == 1 &amp;&amp; <name>maxOccurs</name>==
                                                        <name><name>SchemaSymbols</name>.
                                                            <name>OCCURRENCE_UNBOUNDED</name>
                                                        </name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <comment type="line">//one or more</comment>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>nodeRet</name>
                                                                =
                                                                <call>
                                                                    <name><name>fNodeFactory</name>.
                                                                        <name>getCMUniOpNode</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>XSParticleDecl</name>.
                                                                                    <name>PARTICLE_ONE_OR_MORE</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>node</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                                <else>else
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>maxOccurs</name>
                                                                ==
                                                                <name><name>SchemaSymbols</name>.
                                                                    <name>OCCURRENCE_UNBOUNDED</name>
                                                                </name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <comment type="line">// =&gt; a,a,..,a+</comment>
                                                                <comment type="line">// create a+ node first, then put
                                                                    minOccurs-1 a's in front of it
                                                                </comment>
                                                                <comment type="line">// for the first time "node" is
                                                                    used, we don't need to make a copy
                                                                </comment>
                                                                <comment type="line">// and for other references to
                                                                    node, we make copies
                                                                </comment>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>nodeRet</name>
                                                                        =
                                                                        <call>
                                                                            <name><name>fNodeFactory</name>.
                                                                                <name>getCMUniOpNode</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name><name>
                                                                                            XSParticleDecl</name>.
                                                                                            <name>PARTICLE_ONE_OR_MORE
                                                                                            </name>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>node</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <comment type="line">// (task 4) we need to call
                                                                    copyNode here, so that we append
                                                                </comment>
                                                                <comment type="line">// an entire new copy of the node
                                                                    (a subtree). this is to ensure
                                                                </comment>
                                                                <comment type="line">// all leaf nodes have distinct
                                                                    position
                                                                </comment>
                                                                <comment type="line">// we know that minOccurs &gt; 1
                                                                </comment>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>nodeRet</name>
                                                                        =
                                                                        <call>
                                                                            <name><name>fNodeFactory</name>.
                                                                                <name>getCMBinOpNode</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name><name>
                                                                                            XSModelGroupImpl</name>.
                                                                                            <name>MODELGROUP_SEQUENCE
                                                                                            </name>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name>multiNodes</name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>node
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                ,
                                                                                                <argument>
                                                                                                    <expr><name>
                                                                                                        minOccurs</name>
                                                                                                        -1
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                ,
                                                                                                <argument>
                                                                                                    <expr>true</expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>nodeRet</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </then>
                                                        <else>else
                                                            <block>{
                                                                <comment type="line">// {n,m} =&gt;
                                                                    a,a,a,...(a),(a),...
                                                                </comment>
                                                                <comment type="line">// first n a's, then m-n a?'s.
                                                                </comment>
                                                                <comment type="line">// copyNode is called, for the same
                                                                    reason as above
                                                                </comment>
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>
                                                                            <name>minOccurs</name>
                                                                            &gt; 0
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <name>nodeRet</name>
                                                                                    =
                                                                                    <call>
                                                                                        <name>multiNodes</name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>node</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>minOccurs
                                                                                                    </name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>false</expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            }
                                                                        </block>
                                                                    </then>
                                                                </if>
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>
                                                                            <name>maxOccurs</name>
                                                                            &gt;
                                                                            <name>minOccurs</name>
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <name>node</name>
                                                                                    =
                                                                                    <call>
                                                                                        <name><name>fNodeFactory</name>.
                                                                                            <name>getCMUniOpNode</name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name><name>
                                                                                                        XSParticleDecl</name>
                                                                                                        .
                                                                                                        <name>
                                                                                                            PARTICLE_ZERO_OR_ONE
                                                                                                        </name>
                                                                                                    </name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>node</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            <if>if
                                                                                <condition>(
                                                                                    <expr>
                                                                                        <name>nodeRet</name>
                                                                                        ==
                                                                                        <name>null</name>
                                                                                    </expr>
                                                                                    )
                                                                                </condition>
                                                                                <then>
                                                                                    <block>{
                                                                                        <expr_stmt>
                                                                                            <expr>
                                                                                                <name>nodeRet</name>
                                                                                                =
                                                                                                <call>
                                                                                                    <name>multiNodes
                                                                                                    </name>
                                                                                                    <argument_list>(
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    node
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        ,
                                                                                                        <argument>
                                                                                                            <expr><name>
                                                                                                                maxOccurs</name>
                                                                                                                -
                                                                                                                <name>
                                                                                                                    minOccurs
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        ,
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                false
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        )
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                            ;
                                                                                        </expr_stmt>
                                                                                        }
                                                                                    </block>
                                                                                </then>
                                                                                <else>else
                                                                                    <block>{
                                                                                        <expr_stmt>
                                                                                            <expr>
                                                                                                <name>nodeRet</name>
                                                                                                =
                                                                                                <call>
                                                                                                    <name><name>
                                                                                                        fNodeFactory</name>
                                                                                                        .
                                                                                                        <name>
                                                                                                            getCMBinOpNode
                                                                                                        </name>
                                                                                                    </name>
                                                                                                    <argument_list>(
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    <name>
                                                                                                                        XSModelGroupImpl</name>
                                                                                                                    .
                                                                                                                    <name>
                                                                                                                        MODELGROUP_SEQUENCE
                                                                                                                    </name>
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        ,
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    nodeRet
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        ,
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                <call>
                                                                                                                    <name>
                                                                                                                        multiNodes
                                                                                                                    </name>
                                                                                                                    <argument_list>
                                                                                                                        (
                                                                                                                        <argument>
                                                                                                                            <expr>
                                                                                                                                <name>
                                                                                                                                    node
                                                                                                                                </name>
                                                                                                                            </expr>
                                                                                                                        </argument>
                                                                                                                        ,
                                                                                                                        <argument>
                                                                                                                            <expr>
                                                                                                                                <name>
                                                                                                                                    maxOccurs</name>
                                                                                                                                -
                                                                                                                                <name>
                                                                                                                                    minOccurs
                                                                                                                                </name>
                                                                                                                            </expr>
                                                                                                                        </argument>
                                                                                                                        ,
                                                                                                                        <argument>
                                                                                                                            <expr>
                                                                                                                                true
                                                                                                                            </expr>
                                                                                                                        </argument>
                                                                                                                        )
                                                                                                                    </argument_list>
                                                                                                                </call>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        )
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                            ;
                                                                                        </expr_stmt>
                                                                                        }
                                                                                    </block>
                                                                                </else>
                                                                            </if>
                                                                            }
                                                                        </block>
                                                                    </then>
                                                                </if>
                                                                }
                                                            </block>
                                                        </else>
                                                    </if>
                                                </else>
                                            </if>
                                        </else>
                                    </if>
                                </else>
                            </if>
                        </else>
                    </if>

                    <return>return
                        <expr>
                            <name>nodeRet</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name>CMNode</name>
                </type>
                <name>multiNodes</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>CMNode</name>
                            </type>
                            <name>node</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>num</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>copyFirst</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>num</name>
                                == 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>num</name>
                                == 1
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>copyFirst</name>
                                        ?
                                        <call>
                                            <name>copyNode</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>node</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        :
                                        <name>node</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>num1</name> =
                            <init>
                                <expr><name>num</name>/2
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>
                            <call>
                                <name><name>fNodeFactory</name>.
                                    <name>getCMBinOpNode</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>XSModelGroupImpl</name>.
                                                <name>MODELGROUP_SEQUENCE</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>multiNodes</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>node</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>num1</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>copyFirst</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>multiNodes</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>node</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr><name>num</name>-
                                                            <name>num1</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>true</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">// 4. make sure each leaf node (XSCMLeaf) has a distinct position</comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>CMNode</name>
                </type>
                <name>copyNode</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>CMNode</name>
                            </type>
                            <name>node</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>type</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>node</name>.
                                            <name>type</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// for choice or sequence, copy the two subtrees, and combine them</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>type</name>
                                ==
                                <name><name>XSModelGroupImpl</name>.
                                    <name>MODELGROUP_CHOICE</name>
                                </name>
                                ||
                                <name>type</name>
                                ==
                                <name><name>XSModelGroupImpl</name>.
                                    <name>MODELGROUP_SEQUENCE</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>XSCMBinOp</name>
                                        </type>
                                        <name>bin</name> =
                                        <init>
                                            <expr>(<name>XSCMBinOp</name>)
                                                <name>node</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>node</name>
                                        =
                                        <call>
                                            <name><name>fNodeFactory</name>.
                                                <name>getCMBinOpNode</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>type</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name>copyNode</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>bin</name>.
                                                                                <name>getLeft</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name>copyNode</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>bin</name>.
                                                                                <name>getRight</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <comment type="line">// for ?+*, copy the subtree, and put it in a new ?+* node</comment>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>type</name>
                                        ==
                                        <name><name>XSParticleDecl</name>.
                                            <name>PARTICLE_ZERO_OR_MORE</name>
                                        </name>
                                        ||
                                        <name>type</name>
                                        ==
                                        <name><name>XSParticleDecl</name>.
                                            <name>PARTICLE_ONE_OR_MORE</name>
                                        </name>
                                        ||
                                        <name>type</name>
                                        ==
                                        <name><name>XSParticleDecl</name>.
                                            <name>PARTICLE_ZERO_OR_ONE</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>XSCMUniOp</name>
                                                </type>
                                                <name>uni</name> =
                                                <init>
                                                    <expr>(<name>XSCMUniOp</name>)
                                                        <name>node</name>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>node</name>
                                                =
                                                <call>
                                                    <name><name>fNodeFactory</name>.
                                                        <name>getCMUniOpNode</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>type</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name>copyNode</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>uni</name>.
                                                                                        <name>getChild</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <comment type="line">// for element/wildcard (leaf), make a new leaf node,</comment>
                                <comment type="line">// with a distinct position</comment>
                                <else>else
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>type</name>
                                                ==
                                                <name><name>XSParticleDecl</name>.
                                                    <name>PARTICLE_ELEMENT</name>
                                                </name>
                                                ||
                                                <name>type</name>
                                                ==
                                                <name><name>XSParticleDecl</name>.
                                                    <name>PARTICLE_WILDCARD</name>
                                                </name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>XSCMLeaf</name>
                                                        </type>
                                                        <name>leaf</name> =
                                                        <init>
                                                            <expr>(<name>XSCMLeaf</name>)
                                                                <name>node</name>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>node</name>
                                                        =
                                                        <call>
                                                            <name><name>fNodeFactory</name>.
                                                                <name>getCMLeafNode</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>leaf</name>.
                                                                                <name>type</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>leaf</name>.
                                                                                <name>getLeaf</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>leaf</name>.
                                                                                <name>getParticleId</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr><name>fLeafCount</name>++
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                </else>
                            </if>
                        </else>
                    </if>

                    <return>return
                        <expr>
                            <name>node</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            }
        </block>
    </class>
</unit>
