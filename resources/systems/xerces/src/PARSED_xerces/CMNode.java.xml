<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\impl\dtd\models\CMNode.java">
    <comment type="block">/*
        * Copyright 1999-2002,2004 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>dtd</name>.
            <name>models</name>
        </name>
        ;
    </package>

    <comment type="javadoc">/**
        * A content model node.
        *
        * @xerces.internal
        *
        * @version $Id: CMNode.java,v 1.4 2004/10/04 22:00:42 mrglavas Exp $
        */
    </comment>
    <class>
        <specifier>public</specifier>
        <specifier>abstract</specifier> class
        <name>CMNode</name>
        <block>{
            <comment type="line">// -------------------------------------------------------------------</comment>
            <comment type="line">// Constructors</comment>
            <comment type="line">// -------------------------------------------------------------------</comment>
            <constructor>
                <specifier>public</specifier>
                <name>CMNode</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fType</name>
                            =
                            <name>type</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>


            <comment type="line">// -------------------------------------------------------------------</comment>
            <comment type="line">// Package, abstract methods</comment>
            <comment type="line">// -------------------------------------------------------------------</comment>
            <comment type="line">// made this public so it could be implemented and used outside this package -neilg.
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <specifier>abstract</specifier>
                    <name>boolean</name>
                </type>
                <name>isNullable</name>
                <parameter_list>()</parameter_list>
                ;
            </function_decl>


            <comment type="line">// -------------------------------------------------------------------</comment>
            <comment type="line">// Package final methods</comment>
            <comment type="line">// -------------------------------------------------------------------</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>final</specifier>
                    <name>int</name>
                </type>
                <name>type</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fType</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">// made this public so it could be implemented and used outside this package -neilg.
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>final</specifier>
                    <name>CMStateSet</name>
                </type>
                <name>firstPos</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fFirstPos</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fFirstPos</name>
                                        = new
                                        <call>
                                            <name>CMStateSet</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fMaxStates</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>calcFirstPos</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fFirstPos</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>fFirstPos</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">// made this public so it could be implemented and used outside this package -neilg.
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>final</specifier>
                    <name>CMStateSet</name>
                </type>
                <name>lastPos</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fLastPos</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fLastPos</name>
                                        = new
                                        <call>
                                            <name>CMStateSet</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fMaxStates</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>calcLastPos</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fLastPos</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>fLastPos</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>final</specifier>
                    <name>void</name>
                </type>
                <name>setFollowPos</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>CMStateSet</name>
                            </type>
                            <name>setToAdopt</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fFollowPos</name>
                            =
                            <name>setToAdopt</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>final</specifier>
                    <name>void</name>
                </type>
                <name>setMaxStates</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>maxStates</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fMaxStates</name>
                            =
                            <name>maxStates</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>


            <comment type="line">// -------------------------------------------------------------------</comment>
            <comment type="line">// Protected, abstract methods</comment>
            <comment type="line">// -------------------------------------------------------------------</comment>
            <function_decl>
                <type>
                    <specifier>protected</specifier>
                    <specifier>abstract</specifier>
                    <name>void</name>
                </type>
                <name>calcFirstPos</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>CMStateSet</name>
                            </type>
                            <name>toSet</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <function_decl>
                <type>
                    <specifier>protected</specifier>
                    <specifier>abstract</specifier>
                    <name>void</name>
                </type>
                <name>calcLastPos</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>CMStateSet</name>
                            </type>
                            <name>toSet</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>


            <comment type="line">// -------------------------------------------------------------------</comment>
            <comment type="line">// Private data members</comment>
            <comment type="line">//</comment>
            <comment type="line">// fType</comment>
            <comment type="line">// The type of node. This indicates whether its a leaf or an</comment>
            <comment type="line">// operation. Though we also do derived classes for these types,</comment>
            <comment type="line">// it is too expensive to use runtime typing to find this out.</comment>
            <comment type="line">// This is one of the ContentSpecNode.NODE_XXX types.</comment>
            <comment type="line">//</comment>
            <comment type="line">// fFirstPos</comment>
            <comment type="line">// The set of NFA states that represent the entry states of this</comment>
            <comment type="line">// node in the DFA.</comment>
            <comment type="line">//</comment>
            <comment type="line">// fFollowPos</comment>
            <comment type="line">// The set of NFA states that can be gotten to from from this</comment>
            <comment type="line">// node in the DFA.</comment>
            <comment type="line">//</comment>
            <comment type="line">// fLastPos</comment>
            <comment type="line">// The set of NFA states that represent the final states of this</comment>
            <comment type="line">// node in the DFA.</comment>
            <comment type="line">//</comment>
            <comment type="line">// fMaxStates</comment>
            <comment type="line">// The maximum number of states that the NFA has, which means the</comment>
            <comment type="line">// max number of NFA states that have to be traced in the state</comment>
            <comment type="line">// sets during the building of the DFA. Its unfortunate that it</comment>
            <comment type="line">// has to be stored redundantly, but we need to fault in the</comment>
            <comment type="line">// state set members and they have to be sized to this size. We</comment>
            <comment type="line">// init to to -1 so it will cause an error if its used without</comment>
            <comment type="line">// being initialized.</comment>
            <comment type="line">// -------------------------------------------------------------------</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>fType</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>CMStateSet</name>
                    </type>
                    <name>fFirstPos</name>   =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>CMStateSet</name>
                    </type>
                    <name>fFollowPos</name>  =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>CMStateSet</name>
                    </type>
                    <name>fLastPos</name>    =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>fMaxStates</name>  =
                    <init>
                        <expr>-1</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            }
        </block>
    </class>
    <empty_stmt>;</empty_stmt>


</unit>
