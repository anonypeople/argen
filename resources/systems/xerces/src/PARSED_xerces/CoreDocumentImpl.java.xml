<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\dom\CoreDocumentImpl.java">
    <comment type="block">/*
        * Copyright 1999-2002,2004,2005 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.
            <name>dom</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>lang</name>.<name>reflect</name>.
            <name>Constructor</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Enumeration</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Hashtable</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>URI</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>DOMConfiguration</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>UserDataHandler</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>XMLChar</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>XML11Char</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>NamespaceContext</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>Attr</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>CDATASection</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>Comment</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>DOMException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>DOMImplementation</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>Document</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>DocumentFragment</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>DocumentType</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>Element</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>Entity</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>EntityReference</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>NamedNodeMap</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>Node</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>NodeList</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>Notation</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>ProcessingInstruction</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>Text</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.<name>events</name>.
            <name>Event</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.<name>events</name>.
            <name>EventListener</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.<name>ls</name>.
            <name>DOMImplementationLS</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.<name>ls</name>.
            <name>LSSerializer</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * The Document interface represents the entire HTML or XML document.
        * Conceptually, it is the root of the document tree, and provides the
        * primary access to the document's data.
        * &lt;P&gt;
        * Since elements, text nodes, comments, processing instructions,
        * etc. cannot exist outside the context of a Document, the Document
        * interface also contains the factory methods needed to create these
        * objects. The Node objects created have a ownerDocument attribute
        * which associates them with the Document within whose context they
        * were created.
        * &lt;p&gt;
        * The CoreDocumentImpl class only implements the DOM Core. Additional modules
        * are supported by the more complete DocumentImpl subclass.
        * &lt;p&gt;
        * &lt;b&gt;Note:&lt;/b&gt; When any node in the document is serialized, the
        * entire document is serialized along with it.
        *
        * @xerces.internal
        *
        * @author Arnaud Le Hors, IBM
        * @author Joe Kesselman, IBM
        * @author Andy Clark, IBM
        * @author Ralf Pfeiffer, IBM
        * @version $Id: CoreDocumentImpl.java,v 1.86 2005/06/13 21:08:07 nddelima Exp $
        * @since PR-DOM-Level-1-19980818.
        */
    </comment>


    <class>
        <specifier>public</specifier>
        class
        <name>CoreDocumentImpl</name>
        <super>
            <extends>extends
                <name>ParentNode</name>
            </extends>
            <implements>implements
                <name>Document</name>
            </implements>
        </super>
        <block>{

            <comment type="javadoc">/**TODO::
                * 1. Change XML11Char method names similar to XMLChar. That will prevent lot
                * of dirty version checking code.
                *
                * 2. IMO during cloneNode qname/isXMLName check should not be made.
                */
            </comment>
            <comment type="line">//</comment>
            <comment type="line">// Constants</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/** Serialization version. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>long</name>
                    </type>
                    <name>serialVersionUID</name> =
                    <init>
                        <expr>0</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">//</comment>
            <comment type="line">// Data</comment>
            <comment type="line">//</comment>

            <comment type="line">// document information</comment>

            <comment type="javadoc">/** Document type. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>DocumentTypeImpl</name>
                    </type>
                    <name>docType</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Document element. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>ElementImpl</name>
                    </type>
                    <name>docElement</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** NodeListCache free list */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <name>transient</name>
                        <name>NodeListCache</name>
                    </type>
                    <name>fFreeNLCache</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**Experimental DOM Level 3 feature: Document encoding */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>String</name>
                    </type>
                    <name>encoding</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**Experimental DOM Level 3 feature: Document actualEncoding */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>String</name>
                    </type>
                    <name>actualEncoding</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**Experimental DOM Level 3 feature: Document version */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>String</name>
                    </type>
                    <name>version</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**Experimental DOM Level 3 feature: Document standalone */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>boolean</name>
                    </type>
                    <name>standalone</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**Experimental DOM Level 3 feature: documentURI */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>String</name>
                    </type>
                    <name>fDocumentURI</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">//Revisit :: change to a better data structure.</comment>
            <comment type="javadoc">/** Table for user data attached to this document nodes. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>Hashtable</name>
                    </type>
                    <name>userData</name>
                </decl>
                ;
            </decl_stmt>


            <comment type="javadoc">/** Identifiers. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>Hashtable</name>
                    </type>
                    <name>identifiers</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// DOM Level 3: normalizeDocument</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <name>transient</name>
                        <name>DOMNormalizer</name>
                    </type>
                    <name>domNormalizer</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <name>transient</name>
                        <name>DOMConfigurationImpl</name>
                    </type>
                    <name>fConfiguration</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// support of XPath API</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <name>transient</name>
                        <name>Object</name>
                    </type>
                    <name>fXPathEvaluator</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Table for quick check of child insertion. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>int</name>
                        <index>[]</index>
                    </type>
                    <name>kidOK</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Number of alterations made to this document since its creation.
                * Serves as a "dirty bit" so that live objects such as NodeList can
                * recognize when an alteration has been made and discard its cached
                * state information.
                * &lt;p&gt;
                * Any method that alters the tree structure MUST cause or be
                * accompanied by a call to changed(), to inform it that any outstanding
                * NodeLists may have to be updated.
                * &lt;p&gt;
                * (Required because NodeList is simultaneously "live" and integer-
                * indexed -- a bad decision in the DOM's design.)
                * &lt;p&gt;
                * Note that changes which do not affect the tree's structure -- changing
                * the node's name, for example -- do _not_ have to call changed().
                * &lt;p&gt;
                * Alternative implementation would be to use a cryptographic
                * Digest value rather than a count. This would have the advantage that
                * "harmless" changes (those producing equal() trees) would not force
                * NodeList to resynchronize. Disadvantage is that it's slightly more prone
                * to "false negatives", though that's the difference between "wildly
                * unlikely" and "absurdly unlikely". IF we start maintaining digests,
                * we should consider taking advantage of them.
                *
                * Note: This used to be done a node basis, so that we knew what
                * subtree changed. But since only DeepNodeList really use this today,
                * the gain appears to be really small compared to the cost of having
                * an int on every (parent) node plus having to walk up the tree all the
                * way to the root to mark the branch as changed everytime a node is
                * changed.
                * So we now have a single counter global to the document. It means that
                * some objects may flush their cache more often than necessary, but this
                * makes nodes smaller and only the document needs to be marked as changed.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>int</name>
                    </type>
                    <name>changes</name> =
                    <init>
                        <expr>0</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// experimental</comment>

            <comment type="javadoc">/** Allow grammar access. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>boolean</name>
                    </type>
                    <name>allowGrammarAccess</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Bypass error checking. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>boolean</name>
                    </type>
                    <name>errorChecking</name> =
                    <init>
                        <expr>true</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">//Did version change at any point when the document was created ?</comment>
            <comment type="line">//this field helps us to optimize when normalizingDocument.</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>boolean</name>
                    </type>
                    <name>xmlVersionChanged</name> =
                    <init>
                        <expr>false</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The following are required for compareDocumentPosition
                */
            </comment>
            <comment type="line">// Document number. Documents are ordered across the implementation using</comment>
            <comment type="line">// positive integer values. Documents are assigned numbers on demand.</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>documentNumber</name>=
                    <init>
                        <expr>0</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="line">// Node counter and table. Used to assign numbers to nodes for this</comment>
            <comment type="line">// document. Node number values are negative integers. Nodes are</comment>
            <comment type="line">// assigned numbers on demand.</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>nodeCounter</name> =
                    <init>
                        <expr>0</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Hashtable</name>
                    </type>
                    <name>nodeTable</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>boolean</name>
                    </type>
                    <name>xml11Version</name> =
                    <init>
                        <expr>false</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="line">//by default 1.0</comment>
            <comment type="line">//</comment>
            <comment type="line">// Static initialization</comment>
            <comment type="line">//</comment>

            static
            <block>{

                <expr_stmt>
                    <expr>
                        <name>kidOK</name>
                        = new
                        <name>
                            <name>int</name>
                            <index>[<expr>13</expr>]
                            </index>
                        </name>
                    </expr>
                    ;
                </expr_stmt>

                <expr_stmt>
                    <expr>
                        <name>
                            <name>kidOK</name>
                            <index>[
                                <expr>
                                    <name>DOCUMENT_NODE</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        =
                        1 &lt;&lt; <name>ELEMENT_NODE</name> | 1 &lt;&lt; <name>PROCESSING_INSTRUCTION_NODE</name> |
                        1 &lt;&lt; <name>COMMENT_NODE</name> | 1 &lt;&lt;
                        <name>DOCUMENT_TYPE_NODE</name>
                    </expr>
                    ;
                </expr_stmt>

                <expr_stmt>
                    <expr>
                        <name>
                            <name>kidOK</name>
                            <index>[
                                <expr>
                                    <name>DOCUMENT_FRAGMENT_NODE</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        =
                        <name>
                            <name>kidOK</name>
                            <index>[
                                <expr>
                                    <name>ENTITY_NODE</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        =
                        <name>
                            <name>kidOK</name>
                            <index>[
                                <expr>
                                    <name>ENTITY_REFERENCE_NODE</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        =
                        <name>
                            <name>kidOK</name>
                            <index>[
                                <expr>
                                    <name>ELEMENT_NODE</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        =
                        1 &lt;&lt; <name>ELEMENT_NODE</name> | 1 &lt;&lt; <name>PROCESSING_INSTRUCTION_NODE</name> |
                        1 &lt;&lt; <name>COMMENT_NODE</name> | 1 &lt;&lt; <name>TEXT_NODE</name> |
                        1 &lt;&lt; <name>CDATA_SECTION_NODE</name> | 1 &lt;&lt;
                        <name>ENTITY_REFERENCE_NODE</name>
                    </expr>
                    ;
                </expr_stmt>


                <expr_stmt>
                    <expr>
                        <name>
                            <name>kidOK</name>
                            <index>[
                                <expr>
                                    <name>ATTRIBUTE_NODE</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        =
                        1 &lt;&lt; <name>TEXT_NODE</name> | 1 &lt;&lt;
                        <name>ENTITY_REFERENCE_NODE</name>
                    </expr>
                    ;
                </expr_stmt>

                <expr_stmt>
                    <expr>
                        <name>
                            <name>kidOK</name>
                            <index>[
                                <expr>
                                    <name>DOCUMENT_TYPE_NODE</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        =
                        <name>
                            <name>kidOK</name>
                            <index>[
                                <expr>
                                    <name>PROCESSING_INSTRUCTION_NODE</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        =
                        <name>
                            <name>kidOK</name>
                            <index>[
                                <expr>
                                    <name>COMMENT_NODE</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        =
                        <name>
                            <name>kidOK</name>
                            <index>[
                                <expr>
                                    <name>TEXT_NODE</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        =
                        <name>
                            <name>kidOK</name>
                            <index>[
                                <expr>
                                    <name>CDATA_SECTION_NODE</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        =
                        <name>
                            <name>kidOK</name>
                            <index>[
                                <expr>
                                    <name>NOTATION_NODE</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        =
                        0
                    </expr>
                    ;
                </expr_stmt>

                }
            </block>
            <comment type="line">// static</comment>

            <comment type="line">//</comment>
            <comment type="line">// Constructors</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * NON-DOM: Actually creating a Document is outside the DOM's spec,
                * since it has to operate in terms of a particular implementation.
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>CoreDocumentImpl</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>this</name>
                                <argument_list>(
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/** Constructor. */</comment>
            <constructor>
                <specifier>public</specifier>
                <name>CoreDocumentImpl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>grammarAccess</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>super</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>ownerDocument</name>
                            =
                            <name>this</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>allowGrammarAccess</name>
                            =
                            <name>grammarAccess</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * For DOM2 support.
                * The createDocument factory method is in DOMImplementation.
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>CoreDocumentImpl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>DocumentType</name>
                            </type>
                            <name>doctype</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>this</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>doctype</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/** For DOM2 support. */</comment>
            <constructor>
                <specifier>public</specifier>
                <name>CoreDocumentImpl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>DocumentType</name>
                            </type>
                            <name>doctype</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>grammarAccess</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>this</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>grammarAccess</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>doctype</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>DocumentTypeImpl</name>
                                        </type>
                                        <name>doctypeImpl</name>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <try>try
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>doctypeImpl</name>
                                                = (<name>DocumentTypeImpl</name>)
                                                <name>doctype</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                    <catch>catch (
                                        <param>
                                            <decl>
                                                <type>
                                                    <name>ClassCastException</name>
                                                </type>
                                                <name>e</name>
                                            </decl>
                                        </param>
                                        )
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>String</name>
                                                    </type>
                                                    <name>msg</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name><name>DOMMessageFormatter</name>.
                                                                    <name>formatMessage</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>DOMMessageFormatter</name>.
                                                                                <name>DOM_DOMAIN</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>"WRONG_DOCUMENT_ERR"</expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>null</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>DOMException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>DOMException</name>.
                                                                        <name>WRONG_DOCUMENT_ERR</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>msg</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </catch>
                                </try>
                                <expr_stmt>
                                    <expr>
                                        <name><name>doctypeImpl</name>.
                                            <name>ownerDocument</name>
                                        </name>
                                        =
                                        <name>this</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>appendChild</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>doctype</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </constructor>

            <comment type="line">//</comment>
            <comment type="line">// Node methods</comment>
            <comment type="line">//</comment>

            <comment type="line">// even though ownerDocument refers to this in this implementation</comment>
            <comment type="line">// the DOM Level 2 spec says it must be null, so make it appear so</comment>
            <function>
                <type>
                    <specifier>final</specifier>
                    <specifier>public</specifier>
                    <name>Document</name>
                </type>
                <name>getOwnerDocument</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/** Returns the node type. */</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>short</name>
                </type>
                <name>getNodeType</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>Node</name>.
                                <name>DOCUMENT_NODE</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/** Returns the node name. */</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getNodeName</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return <expr>"#document"</expr>;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Deep-clone a document, including fixing ownerDoc for the cloned
                * children. Note that this requires bypassing the WRONG_DOCUMENT_ERR
                * protection. I've chosen to implement it by calling importNode
                * which is DOM Level 2.
                *
                * @return org.w3c.dom.Node
                * @param deep boolean, iff true replicate children
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Node</name>
                </type>
                <name>cloneNode</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>deep</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>CoreDocumentImpl</name>
                            </type>
                            <name>newdoc</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>CoreDocumentImpl</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>callUserDataHandlers</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>this</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>newdoc</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>UserDataHandler</name>.
                                                <name>NODE_CLONED</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>cloneNode</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>newdoc</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>deep</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <return>return
                        <expr>
                            <name>newdoc</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// cloneNode(boolean):Node</comment>


            <comment type="javadoc">/**
                * internal method to share code with subclass
                **/
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>cloneNode</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>CoreDocumentImpl</name>
                            </type>
                            <name>newdoc</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>deep</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <comment type="line">// clone the children by importing them</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>needsSyncChildren</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>synchronizeChildren</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>deep</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Hashtable</name>
                                        </type>
                                        <name>reversedIdentifiers</name> =
                                        <init>
                                            <expr>
                                                <name>null</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>

                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>identifiers</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <comment type="line">// Build a reverse mapping from element to
                                                identifier.
                                            </comment>
                                            <expr_stmt>
                                                <expr>
                                                    <name>reversedIdentifiers</name>
                                                    = new
                                                    <call>
                                                        <name>Hashtable</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>Enumeration</name>
                                                    </type>
                                                    <name>elementIds</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name><name>identifiers</name>.
                                                                    <name>keys</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <while>while
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name><name>elementIds</name>.
                                                                <name>hasMoreElements</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                    )
                                                </condition>
                                                <block>{
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>Object</name>
                                                            </type>
                                                            <name>elementId</name> =
                                                            <init>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>elementIds</name>.
                                                                            <name>nextElement</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>reversedIdentifiers</name>.
                                                                    <name>put</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>identifiers</name>.
                                                                                    <name>get</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>elementId</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>elementId</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </while>
                                            }
                                        </block>
                                    </then>
                                </if>

                                <comment type="line">// Copy children into new document.</comment>
                                <for>for (
                                    <init>
                                        <decl>
                                            <type>
                                                <name>ChildNode</name>
                                            </type>
                                            <name>kid</name> =
                                            <init>
                                                <expr>
                                                    <name>firstChild</name>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>kid</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr>
                                            <name>kid</name>
                                            =
                                            <name><name>kid</name>.
                                                <name>nextSibling</name>
                                            </name>
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>newdoc</name>.
                                                        <name>appendChild</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>newdoc</name>.
                                                                        <name>importNode</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>kid</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>true</expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>true</expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>reversedIdentifiers</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </for>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// experimental</comment>
                    <expr_stmt>
                        <expr>
                            <name><name>newdoc</name>.
                                <name>allowGrammarAccess</name>
                            </name>
                            =
                            <name>allowGrammarAccess</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>newdoc</name>.
                                <name>errorChecking</name>
                            </name>
                            =
                            <name>errorChecking</name>
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </function>
            <comment type="line">// cloneNode(CoreDocumentImpl,boolean):void</comment>

            <comment type="javadoc">/**
                * Since a Document may contain at most one top-level Element child,
                * and at most one DocumentType declaraction, we need to subclass our
                * add-children methods to implement this constraint.
                * Since appendChild() is implemented as insertBefore(,null),
                * altering the latter fixes both.
                * &lt;p&gt;
                * While I'm doing so, I've taken advantage of the opportunity to
                * cache documentElement and docType so we don't have to
                * search for them.
                *
                * REVISIT: According to the spec it is not allowed to alter neither the
                * document element nor the document type in any way
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Node</name>
                </type>
                <name>insertBefore</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>newChild</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>refChild</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>DOMException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// Only one such child permitted</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>type</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>newChild</name>.
                                            <name>getNodeType</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>errorChecking</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>(<name>type</name> ==
                                            <name><name>Node</name>.
                                                <name>ELEMENT_NODE</name>
                                            </name>
                                            &amp;&amp; <name>docElement</name> != <name>null</name>) ||
                                            (<name>type</name> ==
                                            <name><name>Node</name>.
                                                <name>DOCUMENT_TYPE_NODE</name>
                                            </name>
                                            &amp;&amp; <name>docType</name> != <name>null</name>)
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>String</name>
                                                    </type>
                                                    <name>msg</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name><name>DOMMessageFormatter</name>.
                                                                    <name>formatMessage</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>DOMMessageFormatter</name>.
                                                                                <name>DOM_DOMAIN</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>"HIERARCHY_REQUEST_ERR"</expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>null</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>DOMException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>DOMException</name>.
                                                                        <name>HIERARCHY_REQUEST_ERR</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>msg</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">// Adopt orphan doctypes</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>newChild</name>.
                                        <name>getOwnerDocument</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                == <name>null</name> &amp;&amp;
                                <name>newChild</name>
                                <name>instanceof</name>
                                <name>DocumentTypeImpl</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>((<name>DocumentTypeImpl</name>) <name>newChild</name>).<name>ownerDocument
                                    </name> =
                                        <name>this</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>super</name>.
                                    <name>insertBefore</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>newChild</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>refChild</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// If insert succeeded, cache the kid appropriately</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>type</name>
                                ==
                                <name><name>Node</name>.
                                    <name>ELEMENT_NODE</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>docElement</name>
                                        = (<name>ElementImpl</name>)
                                        <name>newChild</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>type</name>
                                        ==
                                        <name><name>Node</name>.
                                            <name>DOCUMENT_TYPE_NODE</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>docType</name>
                                                = (<name>DocumentTypeImpl</name>)
                                                <name>newChild</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                        </else>
                    </if>

                    <return>return
                        <expr>
                            <name>newChild</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// insertBefore(Node,Node):Node</comment>

            <comment type="javadoc">/**
                * Since insertBefore caches the docElement (and, currently, docType),
                * removeChild has to know how to undo the cache
                *
                * REVISIT: According to the spec it is not allowed to alter neither the
                * document element nor the document type in any way
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Node</name>
                </type>
                <name>removeChild</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>oldChild</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>DOMException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>super</name>.
                                    <name>removeChild</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>oldChild</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// If remove succeeded, un-cache the kid appropriately</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>type</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>oldChild</name>.
                                            <name>getNodeType</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>type</name>
                                ==
                                <name><name>Node</name>.
                                    <name>ELEMENT_NODE</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>docElement</name>
                                        =
                                        <name>null</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>type</name>
                                        ==
                                        <name><name>Node</name>.
                                            <name>DOCUMENT_TYPE_NODE</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>docType</name>
                                                =
                                                <name>null</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                        </else>
                    </if>

                    <return>return
                        <expr>
                            <name>oldChild</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// removeChild(Node):Node</comment>

            <comment type="javadoc">/**
                * Since we cache the docElement (and, currently, docType),
                * replaceChild has to update the cache
                *
                * REVISIT: According to the spec it is not allowed to alter neither the
                * document element nor the document type in any way
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Node</name>
                </type>
                <name>replaceChild</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>newChild</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>oldChild</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>DOMException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// Adopt orphan doctypes</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>newChild</name>.
                                        <name>getOwnerDocument</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                == <name>null</name> &amp;&amp;
                                <name>newChild</name>
                                <name>instanceof</name>
                                <name>DocumentTypeImpl</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>((<name>DocumentTypeImpl</name>) <name>newChild</name>).<name>ownerDocument
                                    </name> =
                                        <name>this</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>errorChecking</name>
                                &amp;&amp;((<name>docType</name> != <name>null</name> &amp;&amp;
                                <call>
                                    <name><name>oldChild</name>.
                                        <name>getNodeType</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                !=
                                <name><name>Node</name>.
                                    <name>DOCUMENT_TYPE_NODE</name>
                                </name>
                                &amp;&amp;
                                <call>
                                    <name><name>newChild</name>.
                                        <name>getNodeType</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                ==
                                <name><name>Node</name>.
                                    <name>DOCUMENT_TYPE_NODE</name>
                                </name>
                                )
                                || (<name>docElement</name> != <name>null</name> &amp;&amp;
                                <call>
                                    <name><name>oldChild</name>.
                                        <name>getNodeType</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                !=
                                <name><name>Node</name>.
                                    <name>ELEMENT_NODE</name>
                                </name>
                                &amp;&amp;
                                <call>
                                    <name><name>newChild</name>.
                                        <name>getNodeType</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                ==
                                <name><name>Node</name>.
                                    <name>ELEMENT_NODE</name>
                                </name>
                                ))
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{

                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>DOMException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>DOMException</name>.
                                                            <name>HIERARCHY_REQUEST_ERR</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>DOMMessageFormatter</name>.
                                                                <name>formatMessage</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>DOMMessageFormatter</name>.
                                                                            <name>DOM_DOMAIN</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>"HIERARCHY_REQUEST_ERR"</expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>null</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>super</name>.
                                    <name>replaceChild</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>newChild</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>oldChild</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>type</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>oldChild</name>.
                                            <name>getNodeType</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>type</name>
                                ==
                                <name><name>Node</name>.
                                    <name>ELEMENT_NODE</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>docElement</name>
                                        = (<name>ElementImpl</name>)
                                        <name>newChild</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>type</name>
                                        ==
                                        <name><name>Node</name>.
                                            <name>DOCUMENT_TYPE_NODE</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>docType</name>
                                                = (<name>DocumentTypeImpl</name>)
                                                <name>newChild</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                        </else>
                    </if>
                    <return>return
                        <expr>
                            <name>oldChild</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// replaceChild(Node,Node):Node</comment>

            <comment type="block">/*
                * Get Node text content
                * @since DOM Level 3
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getTextContent</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>DOMException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="block">/*
                * Set Node text content
                * @since DOM Level 3
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setTextContent</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>textContent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>DOMException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <comment type="line">// no-op</comment>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * @since DOM Level 3
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Object</name>
                </type>
                <name>getFeature</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>feature</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>version</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>anyVersion</name> =
                            <init>
                                <expr>
                                    <name>version</name>
                                    == <name>null</name> ||
                                    <call>
                                        <name><name>version</name>.
                                            <name>length</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    == 0
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// if a plus sign "+" is prepended to any feature name, implementations
                    </comment>
                    <comment type="line">// are considered in which the specified feature may not be directly</comment>
                    <comment type="line">// castable DOMImplementation.getFeature(feature, version). Without a</comment>
                    <comment type="line">// plus, only features whose interfaces are directly castable are</comment>
                    <comment type="line">// considered.</comment>
                    <if>if
                        <condition>(
                            <expr>(
                                <call>
                                    <name><name>feature</name>.
                                        <name>equalsIgnoreCase</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>"+XPath"</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                )
                                &amp;&amp; (<name>anyVersion</name> ||
                                <call>
                                    <name><name>version</name>.
                                        <name>equals</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>"3.0"</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                )
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{

                                <comment type="line">// If an XPathEvaluator was created previously</comment>
                                <comment type="line">// return it otherwise create a new one.</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fXPathEvaluator</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <return>return
                                                <expr>
                                                    <name>fXPathEvaluator</name>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </then>
                                </if>

                                <try>try
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>Class</name>
                                                </type>
                                                <name>xpathClass</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>ObjectFactory</name>.
                                                                <name>findProviderClass</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"org.apache.xpath.domapi.XPathEvaluatorImpl"
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>ObjectFactory</name>.
                                                                                <name>findClassLoader</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>true</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>Constructor</name>
                                                </type>
                                                <name>xpathClassConstr</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>xpathClass</name>.
                                                                <name>getConstructor</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>new
                                                                        <name>
                                                                            <name>Class</name>
                                                                            <index>[]</index>
                                                                        </name>
                                                                        <block>{
                                                                            <expr>
                                                                                <name><name>Document</name>.
                                                                                    <name>
                                                                                        <name/>
                                                                                    </name>
                                                                                </name>
                                                                                class
                                                                            </expr>
                                                                            }
                                                                        </block>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>

                                        <comment type="line">// Check if the DOM XPath implementation implements
                                        </comment>
                                        <comment type="line">// the interface org.w3c.dom.XPathEvaluator</comment>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>Class</name>
                                                </type>
                                                <name>
                                                    <name>interfaces</name>
                                                    <index>[]</index>
                                                </name>
                                                =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>xpathClass</name>.
                                                                <name>getInterfaces</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <for>for (
                                            <init>
                                                <decl>
                                                    <type>
                                                        <name>int</name>
                                                    </type>
                                                    <name>i</name> =
                                                    <init>
                                                        <expr>0</expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </init>
                                            <condition>
                                                <expr>
                                                    <name>i</name>
                                                    &lt;
                                                    <name><name>interfaces</name>.
                                                        <name>length</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </condition>
                                            <incr>
                                                <expr><name>i</name>++
                                                </expr>
                                            </incr>
                                            )
                                            <block>{
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>
                                                                <name>interfaces</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>i</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            .
                                                            <call>
                                                                <name>getName</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                            .
                                                            <call>
                                                                <name>equals</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"org.w3c.dom.xpath.XPathEvaluator"</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>fXPathEvaluator</name>
                                                                    =
                                                                    <call>
                                                                        <name><name>xpathClassConstr</name>.
                                                                            <name>newInstance</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>new
                                                                                    <name>
                                                                                        <name>Object</name>
                                                                                        <index>[]</index>
                                                                                    </name>
                                                                                    <block>{
                                                                                        <expr>
                                                                                            <name>this</name>
                                                                                        </expr>
                                                                                        }
                                                                                    </block>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <return>return
                                                                <expr>
                                                                    <name>fXPathEvaluator</name>
                                                                </expr>
                                                                ;
                                                            </return>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                }
                                            </block>
                                        </for>
                                        <return>return
                                            <expr>
                                                <name>null</name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                    <catch>catch (
                                        <param>
                                            <decl>
                                                <type>
                                                    <name>Exception</name>
                                                </type>
                                                <name>e</name>
                                            </decl>
                                        </param>
                                        )
                                        <block>{
                                            <return>return
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </catch>
                                </try>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <call>
                                <name><name>super</name>.
                                    <name>getFeature</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>feature</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>version</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">//</comment>
            <comment type="line">// Document methods</comment>
            <comment type="line">//</comment>

            <comment type="line">// factory methods</comment>

            <comment type="javadoc">/**
                * Factory method; creates an Attribute having this Document as its
                * OwnerDoc.
                *
                * @param name The name of the attribute. Note that the attribute's value is
                * _not_ established at the factory; remember to set it!
                *
                * @throws DOMException(INVALID_NAME_ERR)
                * if the attribute name is not acceptable.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Attr</name>
                </type>
                <name>createAttribute</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>DOMException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name>errorChecking</name>
                                &amp;&amp; !
                                <call>
                                    <name>isXMLName</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>name</name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>xml11Version</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                        </type>
                                        <name>msg</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>formatMessage</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>DOMMessageFormatter</name>.
                                                                    <name>DOM_DOMAIN</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>"INVALID_CHARACTER_ERR"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>null</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>DOMException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>DOMException</name>.
                                                            <name>INVALID_CHARACTER_ERR</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>msg</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>new
                            <call>
                                <name>AttrImpl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>this</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>name</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// createAttribute(String):Attr</comment>

            <comment type="javadoc">/**
                * Factory method; creates a CDATASection having this Document as
                * its OwnerDoc.
                *
                * @param data The initial contents of the CDATA
                *
                * @throws DOMException(NOT_SUPPORTED_ERR) for HTML documents. (HTML
                * not yet implemented.)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>CDATASection</name>
                </type>
                <name>createCDATASection</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>data</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>DOMException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>CDATASectionImpl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>this</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>data</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Factory method; creates a Comment having this Document as its
                * OwnerDoc.
                *
                * @param data The initial contents of the Comment. */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Comment</name>
                </type>
                <name>createComment</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>data</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>CommentImpl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>this</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>data</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Factory method; creates a DocumentFragment having this Document
                * as its OwnerDoc.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>DocumentFragment</name>
                </type>
                <name>createDocumentFragment</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>DocumentFragmentImpl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>this</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Factory method; creates an Element having this Document
                * as its OwnerDoc.
                *
                * @param tagName The name of the element type to instantiate. For
                * XML, this is case-sensitive. For HTML, the tagName parameter may
                * be provided in any case, but it must be mapped to the canonical
                * uppercase form by the DOM implementation.
                *
                * @throws DOMException(INVALID_NAME_ERR) if the tag name is not
                * acceptable.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Element</name>
                </type>
                <name>createElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>tagName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>DOMException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name>errorChecking</name>
                                &amp;&amp; !
                                <call>
                                    <name>isXMLName</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>tagName</name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>xml11Version</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                        </type>
                                        <name>msg</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>formatMessage</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>DOMMessageFormatter</name>.
                                                                    <name>DOM_DOMAIN</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>"INVALID_CHARACTER_ERR"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>null</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>DOMException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>DOMException</name>.
                                                            <name>INVALID_CHARACTER_ERR</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>msg</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>new
                            <call>
                                <name>ElementImpl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>this</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>tagName</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// createElement(String):Element</comment>

            <comment type="javadoc">/**
                * Factory method; creates an EntityReference having this Document
                * as its OwnerDoc.
                *
                * @param name The name of the Entity we wish to refer to
                *
                * @throws DOMException(NOT_SUPPORTED_ERR) for HTML documents, where
                * nonstandard entities are not permitted. (HTML not yet
                * implemented.)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>EntityReference</name>
                </type>
                <name>createEntityReference</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>DOMException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name>errorChecking</name>
                                &amp;&amp; !
                                <call>
                                    <name>isXMLName</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>name</name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>xml11Version</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                        </type>
                                        <name>msg</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>formatMessage</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>DOMMessageFormatter</name>.
                                                                    <name>DOM_DOMAIN</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>"INVALID_CHARACTER_ERR"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>null</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>DOMException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>DOMException</name>.
                                                            <name>INVALID_CHARACTER_ERR</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>msg</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>new
                            <call>
                                <name>EntityReferenceImpl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>this</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>name</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// createEntityReference(String):EntityReference</comment>

            <comment type="javadoc">/**
                * Factory method; creates a ProcessingInstruction having this Document
                * as its OwnerDoc.
                *
                * @param target The target "processor channel"
                * @param data Parameter string to be passed to the target.
                *
                * @throws DOMException(INVALID_NAME_ERR) if the target name is not
                * acceptable.
                *
                * @throws DOMException(NOT_SUPPORTED_ERR) for HTML documents. (HTML
                * not yet implemented.)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>ProcessingInstruction</name>
                </type>
                <name>createProcessingInstruction</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>target</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>data</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>DOMException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name>errorChecking</name>
                                &amp;&amp; !
                                <call>
                                    <name>isXMLName</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>target</name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>xml11Version</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                        </type>
                                        <name>msg</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>formatMessage</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>DOMMessageFormatter</name>.
                                                                    <name>DOM_DOMAIN</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>"INVALID_CHARACTER_ERR"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>null</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>DOMException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>DOMException</name>.
                                                            <name>INVALID_CHARACTER_ERR</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>msg</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>new
                            <call>
                                <name>ProcessingInstructionImpl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>this</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>target</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>data</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// createProcessingInstruction(String,String):ProcessingInstruction</comment>

            <comment type="javadoc">/**
                * Factory method; creates a Text node having this Document as its
                * OwnerDoc.
                *
                * @param data The initial contents of the Text.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Text</name>
                </type>
                <name>createTextNode</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>data</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>TextImpl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>this</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>data</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">// other document methods</comment>

            <comment type="javadoc">/**
                * For XML, this provides access to the Document Type Definition.
                * For HTML documents, and XML documents which don't specify a DTD,
                * it will be null.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>DocumentType</name>
                </type>
                <name>getDoctype</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>needsSyncChildren</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>synchronizeChildren</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>docType</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * Convenience method, allowing direct access to the child node
                * which is considered the root of the actual document content. For
                * HTML, where it is legal to have more than one Element at the top
                * level of the document, we pick the one with the tagName
                * "HTML". For XML there should be only one top-level
                *
                * (HTML not yet supported.)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Element</name>
                </type>
                <name>getDocumentElement</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>needsSyncChildren</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>synchronizeChildren</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>docElement</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Return a &lt;em&gt;live&lt;/em&gt; collection of all descendent Elements (not just
                * immediate children) having the specified tag name.
                *
                * @param tagname The type of Element we want to gather. "*" will be
                * taken as a wildcard, meaning "all elements in the document."
                *
                * @see DeepNodeListImpl
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>NodeList</name>
                </type>
                <name>getElementsByTagName</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>tagname</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>DeepNodeListImpl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>this</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>tagname</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Retrieve information describing the abilities of this particular
                * DOM implementation. Intended to support applications that may be
                * using DOMs retrieved from several different sources, potentially
                * with different underlying representations.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>DOMImplementation</name>
                </type>
                <name>getImplementation</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <comment type="line">// Currently implemented as a singleton, since it's hardcoded</comment>
                    <comment type="line">// information anyway.</comment>
                    <return>return
                        <expr>
                            <call>
                                <name><name>CoreDOMImplementationImpl</name>.
                                    <name>getDOMImplementation</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">//</comment>
            <comment type="line">// Public methods</comment>
            <comment type="line">//</comment>

            <comment type="line">// properties</comment>

            <comment type="javadoc">/**
                * Sets whether the DOM implementation performs error checking
                * upon operations. Turning off error checking only affects
                * the following DOM checks:
                * &lt;ul&gt;
                * &lt;li&gt;Checking strings to make sure that all characters are
                * legal XML characters
                * &lt;li&gt;Hierarchy checking such as allowed children, checks for
                * cycles, etc.
                * &lt;/ul&gt;
                * &lt;p&gt;
                * Turning off error checking does &lt;em&gt;not&lt;/em&gt; turn off the
                * following checks:
                * &lt;ul&gt;
                * &lt;li&gt;Read only checks
                * &lt;li&gt;Checks related to DOM events
                * &lt;/ul&gt;
                */
            </comment>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setErrorChecking</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>check</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>errorChecking</name>
                            =
                            <name>check</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="block">/*
                * DOM Level 3 WD - Experimental.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setStrictErrorChecking</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>check</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>errorChecking</name>
                            =
                            <name>check</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns true if the DOM implementation performs error checking.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>getErrorChecking</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>errorChecking</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="block">/*
                * DOM Level 3 WD - Experimental.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>getStrictErrorChecking</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>errorChecking</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * DOM Level 3 CR - Experimental. (Was getActualEncoding)
                *
                * An attribute specifying the encoding used for this document
                * at the time of the parsing. This is &lt;code&gt;null&lt;/code&gt; when
                * it is not known, such as when the &lt;code&gt;Document&lt;/code&gt; was
                * created in memory.
                * @since DOM Level 3
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getInputEncoding</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>actualEncoding</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * DOM Internal
                * (Was a DOM L3 Core WD public interface method setActualEncoding )
                *
                * An attribute specifying the actual encoding of this document. This is
                * &lt;code&gt;null&lt;/code&gt; otherwise.
                * &lt;br&gt; This attribute represents the property [character encoding scheme]
                * defined in .
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setInputEncoding</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>actualEncoding</name>
                            =
                            <name>value</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * DOM Internal
                * (Was a DOM L3 Core WD public interface method setXMLEncoding )
                *
                * An attribute specifying, as part of the XML declaration,
                * the encoding of this document. This is null when unspecified.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setXmlEncoding</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>encoding</name>
                            =
                            <name>value</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * @deprecated This method is internal and only exists for
                * compatibility with older applications. New applications
                * should never call this method.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setEncoding</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setXmlEncoding</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>value</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * DOM Level 3 WD - Experimental.
                * The encoding of this document (part of XML Declaration)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getXmlEncoding</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>encoding</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * @deprecated This method is internal and only exists for
                * compatibility with older applications. New applications
                * should never call this method.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getEncoding</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getXmlEncoding</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * DOM Level 3 CR - Experimental.
                * version - An attribute specifying, as part of the XML declaration,
                * the version number of this document.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setXmlVersion</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>value</name>.
                                        <name>equals</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>"1.0"</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                ||
                                <call>
                                    <name><name>value</name>.
                                        <name>equals</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>"1.1"</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">//we need to change the flag value only --</comment>
                                <comment type="line">// when the version set is different than already set.</comment>
                                <if>if
                                    <condition>(
                                        <expr>!
                                            <call>
                                                <name>getXmlVersion</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>equals</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>value</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>xmlVersionChanged</name>
                                                    = true
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <comment type="line">//change the normalization value back to false
                                            </comment>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>isNormalized</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>false</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>version</name>
                                                    =
                                                    <name>value</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <comment type="line">//NOT_SUPPORTED_ERR: Raised if the vesion is set to a value that is
                                    not supported by
                                </comment>
                                <comment type="line">//this document</comment>
                                <comment type="line">//we dont support any other XML version</comment>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                        </type>
                                        <name>msg</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>formatMessage</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>DOMMessageFormatter</name>.
                                                                    <name>DOM_DOMAIN</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>"NOT_SUPPORTED_ERR"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>null</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>DOMException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>DOMException</name>.
                                                            <name>NOT_SUPPORTED_ERR</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>msg</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>

                                }
                            </block>
                        </else>
                    </if>
                    <if>if
                        <condition>(
                            <expr>(
                                <call>
                                    <name>getXmlVersion</name>
                                    <argument_list>()</argument_list>
                                </call>
                                ).
                                <call>
                                    <name>equals</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>"1.1"</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>xml11Version</name>
                                        = true
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>xml11Version</name>
                                        = false
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * @deprecated This method is internal and only exists for
                * compatibility with older applications. New applications
                * should never call this method.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setVersion</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setXmlVersion</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>value</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * DOM Level 3 WD - Experimental.
                * The version of this document (part of XML Declaration)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getXmlVersion</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>(<name>version</name> == <name>null</name>)?"1.0":
                            <name>version</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * @deprecated This method is internal and only exists for
                * compatibility with older applications. New applications
                * should never call this method.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getVersion</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getXmlVersion</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * DOM Level 3 CR - Experimental.
                *
                * Xmlstandalone - An attribute specifying, as part of the XML declaration,
                * whether this document is standalone
                * @exception DOMException
                * NOT_SUPPORTED_ERR: Raised if this document does not support the
                * "XML" feature.
                * @since DOM Level 3
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setXmlStandalone</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>DOMException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>standalone</name>
                            =
                            <name>value</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * @deprecated This method is internal and only exists for
                * compatibility with older applications. New applications
                * should never call this method.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setStandalone</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setXmlStandalone</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>value</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * DOM Level 3 WD - Experimental.
                * standalone that specifies whether this document is standalone
                * (part of XML Declaration)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>getXmlStandalone</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>standalone</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * @deprecated This method is internal and only exists for
                * compatibility with older applications. New applications
                * should never call this method.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>getStandalone</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getXmlStandalone</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * DOM Level 3 WD - Experimental.
                * The location of the document or &lt;code&gt;null&lt;/code&gt; if undefined.
                * &lt;br&gt;Beware that when the &lt;code&gt;Document&lt;/code&gt; supports the feature
                * "HTML" , the href attribute of the HTML BASE element takes precedence
                * over this attribute.
                * @since DOM Level 3
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getDocumentURI</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fDocumentURI</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * DOM Level 3 WD - Experimental.
                * Renaming node
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Node</name>
                </type>
                <name>renameNode</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>n</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>namespaceURI</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>DOMException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name>errorChecking</name>
                                &amp;&amp;
                                <call>
                                    <name><name>n</name>.
                                        <name>getOwnerDocument</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                != <name>this</name> &amp;&amp; <name>n</name> !=
                                <name>this</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                        </type>
                                        <name>msg</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>formatMessage</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>DOMMessageFormatter</name>.
                                                                    <name>DOM_DOMAIN</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>"WRONG_DOCUMENT_ERR"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>null</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>DOMException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>DOMException</name>.
                                                            <name>WRONG_DOCUMENT_ERR</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>msg</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <switch>switch
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>n</name>.
                                        <name>getNodeType</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <case>case
                                <expr>
                                    <name>ELEMENT_NODE</name>
                                </expr>
                                :
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>ElementImpl</name>
                                            </type>
                                            <name>el</name> =
                                            <init>
                                                <expr>(<name>ElementImpl</name>)
                                                    <name>n</name>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>el</name>
                                                <name>instanceof</name>
                                                <name>ElementNSImpl</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>((<name>ElementNSImpl</name>) <name>el</name>).
                                                        <call>
                                                            <name>rename</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>namespaceURI</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>name</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>

                                                <comment type="line">// fire user data NODE_RENAMED event</comment>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>callUserDataHandlers</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>el</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>null</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>UserDataHandler</name>.
                                                                            <name>NODE_RENAMED</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <block>{
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>namespaceURI</name>
                                                            ==
                                                            <name>null</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name>errorChecking</name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <decl_stmt>
                                                                            <decl>
                                                                                <type>
                                                                                    <name>int</name>
                                                                                </type>
                                                                                <name>colon1</name> =
                                                                                <init>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>name</name>.
                                                                                                <name>indexOf</name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>':'</expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                </init>
                                                                            </decl>
                                                                            ;
                                                                        </decl_stmt>
                                                                        <if>if
                                                                            <condition>(
                                                                                <expr>
                                                                                    <name>colon1</name>
                                                                                    != -1
                                                                                </expr>
                                                                                )
                                                                            </condition>
                                                                            <then>
                                                                                <block>{
                                                                                    <decl_stmt>
                                                                                        <decl>
                                                                                            <type>
                                                                                                <name>String</name>
                                                                                            </type>
                                                                                            <name>msg</name> =
                                                                                            <init>
                                                                                                <expr>
                                                                                                    <call>
                                                                                                        <name><name>
                                                                                                            DOMMessageFormatter</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                formatMessage
                                                                                                            </name>
                                                                                                        </name>
                                                                                                        <argument_list>(
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        <name>
                                                                                                                            DOMMessageFormatter</name>
                                                                                                                        .
                                                                                                                        <name>
                                                                                                                            DOM_DOMAIN
                                                                                                                        </name>
                                                                                                                    </name>
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            ,
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    "NAMESPACE_ERR"
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            ,
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        null
                                                                                                                    </name>
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            )
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                            </init>
                                                                                        </decl>
                                                                                        ;
                                                                                    </decl_stmt>
                                                                                    <throw>throw
                                                                                        <expr>new
                                                                                            <call>
                                                                                                <name>DOMException
                                                                                                </name>
                                                                                                <argument_list>(
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <name><name>
                                                                                                                DOMException</name>
                                                                                                                .
                                                                                                                <name>
                                                                                                                    NAMESPACE_ERR
                                                                                                                </name>
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    ,
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <name>msg
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    )
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                        ;
                                                                                    </throw>
                                                                                    }
                                                                                </block>
                                                                            </then>
                                                                        </if>
                                                                        <if>if
                                                                            <condition>(
                                                                                <expr>!
                                                                                    <call>
                                                                                        <name>isXMLName</name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>name</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>xml11Version
                                                                                                    </name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                )
                                                                            </condition>
                                                                            <then>
                                                                                <block>{
                                                                                    <decl_stmt>
                                                                                        <decl>
                                                                                            <type>
                                                                                                <name>String</name>
                                                                                            </type>
                                                                                            <name>msg</name> =
                                                                                            <init>
                                                                                                <expr>
                                                                                                    <call>
                                                                                                        <name><name>
                                                                                                            DOMMessageFormatter</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                formatMessage
                                                                                                            </name>
                                                                                                        </name>
                                                                                                        <argument_list>(
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        <name>
                                                                                                                            DOMMessageFormatter</name>
                                                                                                                        .
                                                                                                                        <name>
                                                                                                                            DOM_DOMAIN
                                                                                                                        </name>
                                                                                                                    </name>
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            ,
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    "INVALID_CHARACTER_ERR"
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            ,
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        null
                                                                                                                    </name>
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            )
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                            </init>
                                                                                        </decl>
                                                                                        ;
                                                                                    </decl_stmt>
                                                                                    <throw>throw
                                                                                        <expr>new
                                                                                            <call>
                                                                                                <name>DOMException
                                                                                                </name>
                                                                                                <argument_list>(
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <name><name>
                                                                                                                DOMException</name>
                                                                                                                .
                                                                                                                <name>
                                                                                                                    INVALID_CHARACTER_ERR
                                                                                                                </name>
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    ,
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <name>msg
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    )
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                        ;
                                                                                    </throw>
                                                                                    }
                                                                                </block>
                                                                            </then>
                                                                        </if>
                                                                        }
                                                                    </block>
                                                                </then>
                                                            </if>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>el</name>.
                                                                            <name>rename</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>name</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>

                                                            <comment type="line">// fire user data NODE_RENAMED event
                                                            </comment>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name>callUserDataHandlers</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>el</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>null</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name><name>UserDataHandler</name>.
                                                                                        <name>NODE_RENAMED</name>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                    <else>else
                                                        <block>{
                                                            <comment type="line">// we need to create a new object
                                                            </comment>
                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <name>ElementNSImpl</name>
                                                                    </type>
                                                                    <name>nel</name> =
                                                                    <init>
                                                                        <expr>new
                                                                            <call>
                                                                                <name>ElementNSImpl</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>this</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>namespaceURI</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>name</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>

                                                            <comment type="line">// register event listeners on new
                                                                node
                                                            </comment>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name>copyEventListeners</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>el</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>nel</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>

                                                            <comment type="line">// remove user data from old node
                                                            </comment>
                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <name>Hashtable</name>
                                                                    </type>
                                                                    <name>data</name> =
                                                                    <init>
                                                                        <expr>
                                                                            <call>
                                                                                <name>removeUserDataTable</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>el</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>

                                                            <comment type="line">// remove old node from parent if any
                                                            </comment>
                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <name>Node</name>
                                                                    </type>
                                                                    <name>parent</name> =
                                                                    <init>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>el</name>.
                                                                                    <name>getParentNode</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>
                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <name>Node</name>
                                                                    </type>
                                                                    <name>nextSib</name> =
                                                                    <init>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>el</name>.
                                                                                    <name>getNextSibling</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name>parent</name>
                                                                        !=
                                                                        <name>null</name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>parent</name>.
                                                                                        <name>removeChild</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>el</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </then>
                                                            </if>
                                                            <comment type="line">// move children to new node</comment>
                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <name>Node</name>
                                                                    </type>
                                                                    <name>child</name> =
                                                                    <init>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>el</name>.
                                                                                    <name>getFirstChild</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>
                                                            <while>while
                                                                <condition>(
                                                                    <expr>
                                                                        <name>child</name>
                                                                        !=
                                                                        <name>null</name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>el</name>.
                                                                                    <name>removeChild</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>child</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>nel</name>.
                                                                                    <name>appendChild</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>child</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>child</name>
                                                                            =
                                                                            <call>
                                                                                <name><name>el</name>.
                                                                                    <name>getFirstChild</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </while>
                                                            <comment type="line">// move specified attributes to new
                                                                node
                                                            </comment>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>nel</name>.
                                                                            <name>moveSpecifiedAttributes</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>el</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>

                                                            <comment type="line">// attach user data to new node
                                                            </comment>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name>setUserDataTable</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>nel</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>data</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>

                                                            <comment type="line">// and fire user data NODE_RENAMED
                                                                event
                                                            </comment>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name>callUserDataHandlers</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>el</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>nel</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name><name>UserDataHandler</name>.
                                                                                        <name>NODE_RENAMED</name>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>

                                                            <comment type="line">// insert new node where old one was
                                                            </comment>
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name>parent</name>
                                                                        !=
                                                                        <name>null</name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>parent</name>.
                                                                                        <name>insertBefore</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>nel</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>nextSib</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </then>
                                                            </if>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>el</name>
                                                                    =
                                                                    <name>nel</name>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </else>
                                                </if>
                                                }
                                            </block>
                                        </else>
                                    </if>
                                    <comment type="line">// fire ElementNameChanged event</comment>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name>renamedElement</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>(<name>Element</name>)
                                                            <name>n</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>el</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <return>return
                                        <expr>
                                            <name>el</name>
                                        </expr>
                                        ;
                                    </return>
                                    }
                                </block>
                            </case>
                            <case>case
                                <expr>
                                    <name>ATTRIBUTE_NODE</name>
                                </expr>
                                :
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>AttrImpl</name>
                                            </type>
                                            <name>at</name> =
                                            <init>
                                                <expr>(<name>AttrImpl</name>)
                                                    <name>n</name>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>

                                    <comment type="line">// dettach attr from element</comment>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>Element</name>
                                            </type>
                                            <name>el</name> =
                                            <init>
                                                <expr>
                                                    <call>
                                                        <name><name>at</name>.
                                                            <name>getOwnerElement</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>el</name>
                                                !=
                                                <name>null</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>el</name>.
                                                                <name>removeAttributeNode</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>at</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>n</name>
                                                <name>instanceof</name>
                                                <name>AttrNSImpl</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>((<name>AttrNSImpl</name>) <name>at</name>).
                                                        <call>
                                                            <name>rename</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>namespaceURI</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>name</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <comment type="line">// reattach attr to element</comment>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>el</name>
                                                            !=
                                                            <name>null</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>el</name>.
                                                                            <name>setAttributeNodeNS</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>at</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>

                                                <comment type="line">// fire user data NODE_RENAMED event</comment>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>callUserDataHandlers</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>at</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>null</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>UserDataHandler</name>.
                                                                            <name>NODE_RENAMED</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <block>{
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>namespaceURI</name>
                                                            ==
                                                            <name>null</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>at</name>.
                                                                            <name>rename</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>name</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <comment type="line">// reattach attr to element</comment>
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name>el</name>
                                                                        !=
                                                                        <name>null</name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>el</name>.
                                                                                        <name>setAttributeNode</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>at</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </then>
                                                            </if>

                                                            <comment type="line">// fire user data NODE_RENAMED event
                                                            </comment>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name>callUserDataHandlers</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>at</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>null</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name><name>UserDataHandler</name>.
                                                                                        <name>NODE_RENAMED</name>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                    <else>else
                                                        <block>{
                                                            <comment type="line">// we need to create a new object
                                                            </comment>
                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <name>AttrNSImpl</name>
                                                                    </type>
                                                                    <name>nat</name> =
                                                                    <init>
                                                                        <expr>new
                                                                            <call>
                                                                                <name>AttrNSImpl</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>this</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>namespaceURI</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>name</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>

                                                            <comment type="line">// register event listeners on new
                                                                node
                                                            </comment>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name>copyEventListeners</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>at</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>nat</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>

                                                            <comment type="line">// remove user data from old node
                                                            </comment>
                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <name>Hashtable</name>
                                                                    </type>
                                                                    <name>data</name> =
                                                                    <init>
                                                                        <expr>
                                                                            <call>
                                                                                <name>removeUserDataTable</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>at</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>

                                                            <comment type="line">// move children to new node</comment>
                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <name>Node</name>
                                                                    </type>
                                                                    <name>child</name> =
                                                                    <init>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>at</name>.
                                                                                    <name>getFirstChild</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>
                                                            <while>while
                                                                <condition>(
                                                                    <expr>
                                                                        <name>child</name>
                                                                        !=
                                                                        <name>null</name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>at</name>.
                                                                                    <name>removeChild</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>child</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>nat</name>.
                                                                                    <name>appendChild</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>child</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>child</name>
                                                                            =
                                                                            <call>
                                                                                <name><name>at</name>.
                                                                                    <name>getFirstChild</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </while>

                                                            <comment type="line">// attach user data to new node
                                                            </comment>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name>setUserDataTable</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>nat</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>data</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>

                                                            <comment type="line">// and fire user data NODE_RENAMED
                                                                event
                                                            </comment>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name>callUserDataHandlers</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>at</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>nat</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name><name>UserDataHandler</name>.
                                                                                        <name>NODE_RENAMED</name>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>

                                                            <comment type="line">// reattach attr to element</comment>
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name>el</name>
                                                                        !=
                                                                        <name>null</name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>el</name>.
                                                                                        <name>setAttributeNode</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>nat</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </then>
                                                            </if>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>at</name>
                                                                    =
                                                                    <name>nat</name>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </else>
                                                </if>
                                                }
                                            </block>
                                        </else>
                                    </if>
                                    <comment type="line">// fire AttributeNameChanged event</comment>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name>renamedAttrNode</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>(<name>Attr</name>)
                                                            <name>n</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>at</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>

                                    <return>return
                                        <expr>
                                            <name>at</name>
                                        </expr>
                                        ;
                                    </return>
                                    }
                                </block>
                            </case>
                            <default>default:
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>String</name>
                                            </type>
                                            <name>msg</name> =
                                            <init>
                                                <expr>
                                                    <call>
                                                        <name><name>DOMMessageFormatter</name>.
                                                            <name>formatMessage</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>DOMMessageFormatter</name>.
                                                                        <name>DOM_DOMAIN</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>"NOT_SUPPORTED_ERR"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>null</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <throw>throw
                                        <expr>new
                                            <call>
                                                <name>DOMException</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>DOMException</name>.
                                                                <name>NOT_SUPPORTED_ERR</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>msg</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </throw>
                                    }
                                </block>
                            </default>
                            }
                        </block>
                    </switch>

                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * DOM Level 3 WD - Experimental
                * Normalize document.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>normalizeDocument</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <comment type="line">// No need to normalize if already normalized.</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>isNormalized</name>
                                    <argument_list>()</argument_list>
                                </call>
                                &amp;&amp; !
                                <call>
                                    <name>isNormalizeDocRequired</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>needsSyncChildren</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>synchronizeChildren</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>domNormalizer</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>domNormalizer</name>
                                        = new
                                        <call>
                                            <name>DOMNormalizer</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>fConfiguration</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fConfiguration</name>
                                        = new
                                        <call>
                                            <name>DOMConfigurationImpl</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fConfiguration</name>.
                                                <name>reset</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>domNormalizer</name>.
                                    <name>normalizeDocument</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>this</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fConfiguration</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>isNormalized</name>
                                <argument_list>(
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">//set the XMLversion changed value to false -- once we have finished</comment>
                    <comment type="line">//doing normalization</comment>
                    <expr_stmt>
                        <expr>
                            <name>xmlVersionChanged</name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * DOM Level 3 CR - Experimental
                *
                * The configuration used when &lt;code&gt;Document.normalizeDocument&lt;/code&gt; is
                * invoked.
                * @since DOM Level 3
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>DOMConfiguration</name>
                </type>
                <name>getDomConfig</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fConfiguration</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fConfiguration</name>
                                        = new
                                        <call>
                                            <name>DOMConfigurationImpl</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>fConfiguration</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * Returns the absolute base URI of this node or null if the implementation
                * wasn't able to obtain an absolute URI. Note: If the URI is malformed, a
                * null is returned.
                *
                * @return The absolute base URI of this node or null.
                * @since DOM Level 3
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getBaseURI</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDocumentURI</name>
                                != <name>null</name> &amp;&amp;
                                <call>
                                    <name><name>fDocumentURI</name>.
                                        <name>length</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                != 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// attribute value is always empty string</comment>
                                <try>try
                                    <block>{
                                        <return>return
                                            <expr>new
                                                <call>
                                                    <name>URI</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>fDocumentURI</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                .
                                                <call>
                                                    <name>toString</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                    <catch>catch (
                                        <param>
                                            <decl>
                                                <type>
                                                    <name><name>org</name>.<name>apache</name>.<name>
                                                        xerces</name>.<name>util</name>.<name>URI</name>.
                                                        <name>MalformedURIException</name>
                                                    </name>
                                                </type>
                                                <name>e</name>
                                            </decl>
                                        </param>
                                        )
                                        <block>{
                                            <comment type="line">// REVISIT: what should happen in this case?</comment>
                                            <return>return
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </catch>
                                </try>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>fDocumentURI</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * DOM Level 3 WD - Experimental.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setDocumentURI</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>documentURI</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fDocumentURI</name>
                            =
                            <name>documentURI</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>


            <comment type="line">//</comment>
            <comment type="line">// DOM L3 LS</comment>
            <comment type="line">//</comment>
            <comment type="javadoc">/**
                * DOM Level 3 WD - Experimental.
                * Indicates whether the method load should be synchronous or
                * asynchronous. When the async attribute is set to &lt;code&gt;true&lt;/code&gt;
                * the load method returns control to the caller before the document has
                * completed loading. The default value of this property is
                * &lt;code&gt;false&lt;/code&gt;.
                * &lt;br&gt;Setting the value of this attribute might throw NOT_SUPPORTED_ERR
                * if the implementation doesn't support the mode the attribute is being
                * set to. Should the DOM spec define the default value of this
                * property? What if implementing both async and sync IO is impractical
                * in some systems? 2001-09-14. default is &lt;code&gt;false&lt;/code&gt; but we
                * need to check with Mozilla and IE.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>getAsync</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return <expr>false</expr>;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * DOM Level 3 WD - Experimental.
                * Indicates whether the method load should be synchronous or
                * asynchronous. When the async attribute is set to &lt;code&gt;true&lt;/code&gt;
                * the load method returns control to the caller before the document has
                * completed loading. The default value of this property is
                * &lt;code&gt;false&lt;/code&gt;.
                * &lt;br&gt;Setting the value of this attribute might throw NOT_SUPPORTED_ERR
                * if the implementation doesn't support the mode the attribute is being
                * set to. Should the DOM spec define the default value of this
                * property? What if implementing both async and sync IO is impractical
                * in some systems? 2001-09-14. default is &lt;code&gt;false&lt;/code&gt; but we
                * need to check with Mozilla and IE.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setAsync</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>async</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>async</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                        </type>
                                        <name>msg</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>formatMessage</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>DOMMessageFormatter</name>.
                                                                    <name>DOM_DOMAIN</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>"NOT_SUPPORTED_ERR"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>null</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>DOMException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>DOMException</name>.
                                                            <name>NOT_SUPPORTED_ERR</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>msg</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * DOM Level 3 WD - Experimental.
                * If the document is currently being loaded as a result of the method
                * &lt;code&gt;load&lt;/code&gt; being invoked the loading and parsing is
                * immediately aborted. The possibly partial result of parsing the
                * document is discarded and the document is cleared.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>abort</name>
                <parameter_list>()</parameter_list>
                <block>{
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * DOM Level 3 WD - Experimental.
                *
                * Replaces the content of the document with the result of parsing the
                * given URI. Invoking this method will either block the caller or
                * return to the caller immediately depending on the value of the async
                * attribute. Once the document is fully loaded a "load" event (as
                * defined in [&lt;a href='http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331'&gt;DOM Level 3
                Events&lt;/a&gt;]
                * , except that the &lt;code&gt;Event.targetNode&lt;/code&gt; will be the document,
                * not an element) will be dispatched on the document. If an error
                * occurs, an implementation dependent "error" event will be dispatched
                * on the document. If this method is called on a document that is
                * currently loading, the current load is interrupted and the new URI
                * load is initiated.
                * &lt;br&gt; When invoking this method the parameters used in the
                * &lt;code&gt;DOMParser&lt;/code&gt; interface are assumed to have their default
                * values with the exception that the parameters &lt;code&gt;"entities"&lt;/code&gt;
                * , &lt;code&gt;"normalize-characters"&lt;/code&gt;,
                * &lt;code&gt;"check-character-normalization"&lt;/code&gt; are set to
                * &lt;code&gt;"false"&lt;/code&gt;.
                * &lt;br&gt; The result of a call to this method is the same the result of a
                * call to &lt;code&gt;DOMParser.parseWithContext&lt;/code&gt; with an input stream
                * referencing the URI that was passed to this call, the document as the
                * context node, and the action &lt;code&gt;ACTION_REPLACE_CHILDREN&lt;/code&gt;.
                * @param uri The URI reference for the XML file to be loaded. If this is
                * a relative URI, the base URI used by the implementation is
                * implementation dependent.
                * @return If async is set to &lt;code&gt;true&lt;/code&gt; &lt;code&gt;load&lt;/code&gt; returns
                * &lt;code&gt;true&lt;/code&gt; if the document load was successfully initiated.
                * If an error occurred when initiating the document load,
                * &lt;code&gt;load&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;.If async is set to
                * &lt;code&gt;false&lt;/code&gt; &lt;code&gt;load&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; if
                * the document was successfully loaded and parsed. If an error
                * occurred when either loading or parsing the URI, &lt;code&gt;load&lt;/code&gt;
                * returns &lt;code&gt;false&lt;/code&gt;.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>load</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>uri</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return <expr>false</expr>;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * DOM Level 3 WD - Experimental.
                * Replace the content of the document with the result of parsing the
                * input string, this method is always synchronous.
                * @param source A string containing an XML document.
                * @return &lt;code&gt;true&lt;/code&gt; if parsing the input string succeeded
                * without errors, otherwise &lt;code&gt;false&lt;/code&gt;.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>loadXML</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>source</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return <expr>false</expr>;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * DOM Level 3 WD - Experimental.
                * Save the document or the given node and all its descendants to a string
                * (i.e. serialize the document or node).
                * &lt;br&gt;The parameters used in the &lt;code&gt;LSSerializer&lt;/code&gt; interface are
                * assumed to have their default values when invoking this method.
                * &lt;br&gt; The result of a call to this method is the same the result of a
                * call to &lt;code&gt;LSSerializer.writeToString&lt;/code&gt; with the document as
                * the node to write.
                * @param node Specifies what to serialize, if this parameter is
                * &lt;code&gt;null&lt;/code&gt; the whole document is serialized, if it's
                * non-null the given node is serialized.
                * @return The serialized document or &lt;code&gt;null&lt;/code&gt; in case an error
                * occurred.
                * @exception DOMException
                * WRONG_DOCUMENT_ERR: Raised if the node passed in as the node
                * parameter is from an other document.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>saveXML</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>node</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>DOMException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>errorChecking</name>
                                &amp;&amp; <name>node</name> != <name>null</name> &amp;&amp;
                                <name>this</name>
                                !=
                                <call>
                                    <name><name>node</name>.
                                        <name>getOwnerDocument</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                        </type>
                                        <name>msg</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>formatMessage</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>DOMMessageFormatter</name>.
                                                                    <name>DOM_DOMAIN</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>"WRONG_DOCUMENT_ERR"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>null</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>DOMException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>DOMException</name>.
                                                            <name>WRONG_DOCUMENT_ERR</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>msg</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>DOMImplementationLS</name>
                            </type>
                            <name>domImplLS</name> =
                            <init>
                                <expr>(<name>DOMImplementationLS</name>)
                                    <call>
                                        <name><name>DOMImplementationImpl</name>.
                                            <name>getDOMImplementation</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>LSSerializer</name>
                            </type>
                            <name>xmlWriter</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>domImplLS</name>.
                                            <name>createLSSerializer</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>node</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>node</name>
                                        =
                                        <name>this</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <call>
                                <name><name>xmlWriter</name>.
                                    <name>writeToString</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>node</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets whether the DOM implementation generates mutation events
                * upon operations.
                */
            </comment>
            <function>
                <type>
                    <name>void</name>
                </type>
                <name>setMutationEvents</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>set</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// does nothing by default - overidden in subclass</comment>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns true if the DOM implementation generates mutation events.
                */
            </comment>
            <function>
                <type>
                    <name>boolean</name>
                </type>
                <name>getMutationEvents</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <comment type="line">// does nothing by default - overriden in subclass</comment>
                    <return>return <expr>false</expr>;
                    </return>
                    }
                </block>
            </function>


            <comment type="line">// non-DOM factory methods</comment>

            <comment type="javadoc">/**
                * NON-DOM
                * Factory method; creates a DocumentType having this Document
                * as its OwnerDoc. (REC-DOM-Level-1-19981001 left the process of building
                * DTD information unspecified.)
                *
                * @param name The name of the Entity we wish to provide a value for.
                *
                * @throws DOMException(NOT_SUPPORTED_ERR) for HTML documents, where
                * DTDs are not permitted. (HTML not yet implemented.)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>DocumentType</name>
                </type>
                <name>createDocumentType</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>qualifiedName</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>publicID</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>systemID</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>DOMException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <return>return
                        <expr>new
                            <call>
                                <name>DocumentTypeImpl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>this</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>qualifiedName</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>publicID</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>systemID</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// createDocumentType(String):DocumentType</comment>

            <comment type="javadoc">/**
                * NON-DOM
                * Factory method; creates an Entity having this Document
                * as its OwnerDoc. (REC-DOM-Level-1-19981001 left the process of building
                * DTD information unspecified.)
                *
                * @param name The name of the Entity we wish to provide a value for.
                *
                * @throws DOMException(NOT_SUPPORTED_ERR) for HTML documents, where
                * nonstandard entities are not permitted. (HTML not yet
                * implemented.)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Entity</name>
                </type>
                <name>createEntity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>DOMException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{


                    <if>if
                        <condition>(
                            <expr>
                                <name>errorChecking</name>
                                &amp;&amp; !
                                <call>
                                    <name>isXMLName</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>name</name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>xml11Version</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                        </type>
                                        <name>msg</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>formatMessage</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>DOMMessageFormatter</name>.
                                                                    <name>DOM_DOMAIN</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>"INVALID_CHARACTER_ERR"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>null</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>DOMException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>DOMException</name>.
                                                            <name>INVALID_CHARACTER_ERR</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>msg</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>new
                            <call>
                                <name>EntityImpl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>this</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>name</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// createEntity(String):Entity</comment>

            <comment type="javadoc">/**
                * NON-DOM
                * Factory method; creates a Notation having this Document
                * as its OwnerDoc. (REC-DOM-Level-1-19981001 left the process of building
                * DTD information unspecified.)
                *
                * @param name The name of the Notation we wish to describe
                *
                * @throws DOMException(NOT_SUPPORTED_ERR) for HTML documents, where
                * notations are not permitted. (HTML not yet
                * implemented.)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Notation</name>
                </type>
                <name>createNotation</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>DOMException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name>errorChecking</name>
                                &amp;&amp; !
                                <call>
                                    <name>isXMLName</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>name</name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>xml11Version</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                        </type>
                                        <name>msg</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>formatMessage</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>DOMMessageFormatter</name>.
                                                                    <name>DOM_DOMAIN</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>"INVALID_CHARACTER_ERR"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>null</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>DOMException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>DOMException</name>.
                                                            <name>INVALID_CHARACTER_ERR</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>msg</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>new
                            <call>
                                <name>NotationImpl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>this</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>name</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// createNotation(String):Notation</comment>

            <comment type="javadoc">/**
                * NON-DOM Factory method: creates an element definition. Element
                * definitions hold default attribute values.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>ElementDefinitionImpl</name>
                </type>
                <name>createElementDefinition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>DOMException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name>errorChecking</name>
                                &amp;&amp; !
                                <call>
                                    <name>isXMLName</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>name</name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>xml11Version</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                        </type>
                                        <name>msg</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>formatMessage</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>DOMMessageFormatter</name>.
                                                                    <name>DOM_DOMAIN</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>"INVALID_CHARACTER_ERR"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>null</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>DOMException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>DOMException</name>.
                                                            <name>INVALID_CHARACTER_ERR</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>msg</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>new
                            <call>
                                <name>ElementDefinitionImpl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>this</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>name</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// createElementDefinition(String):ElementDefinitionImpl</comment>

            <comment type="line">// other non-DOM methods</comment>

            <comment type="javadoc">/** NON-DOM: Get the number associated with this document. Used to
                * order documents in the implementation.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>int</name>
                </type>
                <name>getNodeNumber</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr><name>documentNumber</name>==0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{

                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>CoreDOMImplementationImpl</name>
                                        </type>
                                        <name>cd</name> =
                                        <init>
                                            <expr>(<name>CoreDOMImplementationImpl</name>)
                                                <call>
                                                    <name><name>CoreDOMImplementationImpl</name>.
                                                        <name>getDOMImplementation</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>documentNumber</name>
                                        =
                                        <call>
                                            <name><name>cd</name>.
                                                <name>assignDocumentNumber</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>documentNumber</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <comment type="javadoc">/** NON-DOM: Get a number associated with a node created with respect
                * to this document. Needed for compareDocumentPosition when nodes
                * are disconnected. This is only used on demand.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>int</name>
                </type>
                <name>getNodeNumber</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>node</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <comment type="line">// Check if the node is already in the hash</comment>
                    <comment type="line">// If so, retrieve the node number</comment>
                    <comment type="line">// If not, assign a number to the node</comment>
                    <comment type="line">// Node numbers are negative, from -1 to -n</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>num</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>nodeTable</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>nodeTable</name>
                                        = new
                                        <call>
                                            <name>Hashtable</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>num</name>
                                        = --
                                        <name>nodeCounter</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>nodeTable</name>.
                                                <name>put</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>node</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>new
                                                        <call>
                                                            <name>Integer</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>num</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Integer</name>
                                        </type>
                                        <name>n</name> =
                                        <init>
                                            <expr>(<name>Integer</name>)
                                                <call>
                                                    <name><name>nodeTable</name>.
                                                        <name>get</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>node</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr><name>n</name>==
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>num</name>
                                                    = --
                                                    <name>nodeCounter</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>nodeTable</name>.
                                                            <name>put</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>node</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>new
                                                                    <call>
                                                                        <name>Integer</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>num</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <expr_stmt>
                                            <expr>
                                                <name>num</name>
                                                =
                                                <call>
                                                    <name><name>n</name>.
                                                        <name>intValue</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                    </else>
                                </if>
                                }
                            </block>
                        </else>
                    </if>
                    <return>return
                        <expr>
                            <name>num</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Copies a node from another document to this document. The new nodes are
                * created using this document's factory methods and are populated with the
                * data from the source's accessor methods defined by the DOM interfaces.
                * Its behavior is otherwise similar to that of cloneNode.
                * &lt;p&gt;
                * According to the DOM specifications, document nodes cannot be imported
                * and a NOT_SUPPORTED_ERR exception is thrown if attempted.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Node</name>
                </type>
                <name>importNode</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>source</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>deep</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>DOMException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>importNode</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>source</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>deep</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// importNode(Node,boolean):Node</comment>

            <comment type="javadoc">/**
                * Overloaded implementation of DOM's importNode method. This method
                * provides the core functionality for the public importNode and cloneNode
                * methods.
                *
                * The reversedIdentifiers parameter is provided for cloneNode to
                * preserve the document's identifiers. The Hashtable has Elements as the
                * keys and their identifiers as the values. When an element is being
                * imported, a check is done for an associated identifier. If one exists,
                * the identifier is registered with the new, imported element. If
                * reversedIdentifiers is null, the parameter is not applied.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>Node</name>
                </type>
                <name>importNode</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>source</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>deep</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>cloningDoc</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Hashtable</name>
                            </type>
                            <name>reversedIdentifiers</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>DOMException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>newnode</name>=
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Hashtable</name>
                            </type>
                            <name>userData</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// Sigh. This doesn't work; too many nodes have private data that</comment>
                    <comment type="line">// would have to be manually tweaked. May be able to add local</comment>
                    <comment type="line">// shortcuts to each nodetype. Consider ?????</comment>
                    <comment type="line">// if(source instanceof NodeImpl &amp;&amp;</comment>
                    <comment type="line">// !(source instanceof DocumentImpl))</comment>
                    <comment type="line">// {</comment>
                    <comment type="line">// // Can't clone DocumentImpl since it invokes us...</comment>
                    <comment type="line">// newnode=(NodeImpl)source.cloneNode(false);</comment>
                    <comment type="line">// newnode.ownerDocument=this;</comment>
                    <comment type="line">// }</comment>
                    <comment type="line">// else</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>source</name>
                                <name>instanceof</name>
                                <name>NodeImpl</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <name>userData</name>
                                    = ((<name>NodeImpl</name>)<name>source</name>).
                                    <call>
                                        <name>getUserDataRecord</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>type</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>source</name>.
                                            <name>getNodeType</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <switch>switch
                        <condition>(
                            <expr>
                                <name>type</name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <case>case
                                <expr>
                                    <name>ELEMENT_NODE</name>
                                </expr>
                                :
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>Element</name>
                                            </type>
                                            <name>newElement</name>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>boolean</name>
                                            </type>
                                            <name>domLevel20</name> =
                                            <init>
                                                <expr>
                                                    <call>
                                                        <name><name>source</name>.
                                                            <name>getOwnerDocument</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    .
                                                    <call>
                                                        <name>getImplementation</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    .
                                                    <call>
                                                        <name>hasFeature</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"XML"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>"2.0"</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <comment type="line">// Create element according to namespace
                                        support/qualification.
                                    </comment>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>domLevel20</name>
                                                == false ||
                                                <call>
                                                    <name><name>source</name>.
                                                        <name>getLocalName</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                ==
                                                <name>null</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <expr_stmt>
                                                <expr>
                                                    <name>newElement</name>
                                                    =
                                                    <call>
                                                        <name>createElement</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>source</name>.
                                                                            <name>getNodeName</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                        </then>
                                        <else>else
                                            <expr_stmt>
                                                <expr>
                                                    <name>newElement</name>
                                                    =
                                                    <call>
                                                        <name>createElementNS</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>source</name>.
                                                                            <name>getNamespaceURI</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>source</name>.
                                                                            <name>getNodeName</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                        </else>
                                    </if>

                                    <comment type="line">// Copy element's attributes, if any.</comment>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>NamedNodeMap</name>
                                            </type>
                                            <name>sourceAttrs</name> =
                                            <init>
                                                <expr>
                                                    <call>
                                                        <name><name>source</name>.
                                                            <name>getAttributes</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>sourceAttrs</name>
                                                !=
                                                <name>null</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>int</name>
                                                        </type>
                                                        <name>length</name> =
                                                        <init>
                                                            <expr>
                                                                <call>
                                                                    <name><name>sourceAttrs</name>.
                                                                        <name>getLength</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <for>for (
                                                    <init>
                                                        <decl>
                                                            <type>
                                                                <name>int</name>
                                                            </type>
                                                            <name>index</name> =
                                                            <init>
                                                                <expr>0</expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </init>
                                                    <condition>
                                                        <expr>
                                                            <name>index</name>
                                                            &lt;
                                                            <name>length</name>
                                                        </expr>
                                                        ;
                                                    </condition>
                                                    <incr>
                                                        <expr><name>index</name>++
                                                        </expr>
                                                    </incr>
                                                    )
                                                    <block>{
                                                        <decl_stmt>
                                                            <decl>
                                                                <type>
                                                                    <name>Attr</name>
                                                                </type>
                                                                <name>attr</name> =
                                                                <init>
                                                                    <expr>(<name>Attr</name>)
                                                                        <call>
                                                                            <name><name>sourceAttrs</name>.
                                                                                <name>item</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>index</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </decl_stmt>

                                                        <comment type="line">// NOTE: this methods is used for both
                                                            importingNode
                                                        </comment>
                                                        <comment type="line">// and cloning the document node. In case
                                                            of the
                                                        </comment>
                                                        <comment type="line">// clonning default attributes should be
                                                            copied.
                                                        </comment>
                                                        <comment type="line">// But for importNode defaults should be
                                                            ignored.
                                                        </comment>
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <call>
                                                                        <name><name>attr</name>.
                                                                            <name>getSpecified</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                    ||
                                                                    <name>cloningDoc</name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <decl_stmt>
                                                                        <decl>
                                                                            <type>
                                                                                <name>Attr</name>
                                                                            </type>
                                                                            <name>newAttr</name> =
                                                                            <init>
                                                                                <expr>(<name>Attr</name>)
                                                                                    <call>
                                                                                        <name>importNode</name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>attr</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>true</expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>cloningDoc
                                                                                                    </name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>
                                                                                                        reversedIdentifiers
                                                                                                    </name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </init>
                                                                        </decl>
                                                                        ;
                                                                    </decl_stmt>

                                                                    <comment type="line">// Attach attribute according
                                                                        to namespace
                                                                    </comment>
                                                                    <comment type="line">// support/qualification.
                                                                    </comment>
                                                                    <if>if
                                                                        <condition>(
                                                                            <expr>
                                                                                <name>domLevel20</name>
                                                                                == false ||
                                                                                <call>
                                                                                    <name><name>attr</name>.
                                                                                        <name>getLocalName</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                ==
                                                                                <name>null</name>
                                                                            </expr>
                                                                            )
                                                                        </condition>
                                                                        <then>
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>newElement</name>.
                                                                                            <name>setAttributeNode
                                                                                            </name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>newAttr</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                        </then>
                                                                        <else>else
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>newElement</name>.
                                                                                            <name>setAttributeNodeNS
                                                                                            </name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>newAttr</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                        </else>
                                                                    </if>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        }
                                                    </block>
                                                </for>
                                                }
                                            </block>
                                        </then>
                                    </if>

                                    <comment type="line">// Register element identifier.</comment>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>reversedIdentifiers</name>
                                                !=
                                                <name>null</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <comment type="line">// Does element have an associated identifier?
                                                </comment>
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>Object</name>
                                                        </type>
                                                        <name>elementId</name> =
                                                        <init>
                                                            <expr>
                                                                <call>
                                                                    <name><name>reversedIdentifiers</name>.
                                                                        <name>get</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>source</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>elementId</name>
                                                            !=
                                                            <name>null</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name>identifiers</name>
                                                                        ==
                                                                        <name>null</name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>identifiers</name>
                                                                            = new
                                                                            <call>
                                                                                <name>Hashtable</name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                </then>
                                                            </if>

                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>identifiers</name>.
                                                                            <name>put</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>elementId</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>newElement</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                }
                                            </block>
                                        </then>
                                    </if>

                                    <expr_stmt>
                                        <expr>
                                            <name>newnode</name>
                                            =
                                            <name>newElement</name>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <break>break;</break>
                                    }
                                </block>

                            </case>
                            <case>case
                                <expr>
                                    <name>ATTRIBUTE_NODE</name>
                                </expr>
                                :
                                <block>{

                                    <if>if
                                        <condition>(
                                            <expr>
                                                <call>
                                                    <name><name>source</name>.
                                                        <name>getOwnerDocument</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                .
                                                <call>
                                                    <name>getImplementation</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                .
                                                <call>
                                                    <name>hasFeature</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"XML"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>"2.0"</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <call>
                                                                <name><name>source</name>.
                                                                    <name>getLocalName</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                            ==
                                                            <name>null</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>newnode</name>
                                                                    =
                                                                    <call>
                                                                        <name>createAttribute</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>source</name>.
                                                                                            <name>getNodeName</name>
                                                                                        </name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                    <else>else
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>newnode</name>
                                                                    =
                                                                    <call>
                                                                        <name>createAttributeNS</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>source</name>.
                                                                                            <name>getNamespaceURI</name>
                                                                                        </name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>source</name>.
                                                                                            <name>getNodeName</name>
                                                                                        </name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </else>
                                                </if>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>newnode</name>
                                                        =
                                                        <call>
                                                            <name>createAttribute</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>source</name>.
                                                                                <name>getNodeName</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </else>
                                    </if>
                                    <comment type="line">// if source is an AttrImpl from this very same
                                        implementation
                                    </comment>
                                    <comment type="line">// avoid creating the child nodes if possible</comment>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>source</name>
                                                <name>instanceof</name>
                                                <name>AttrImpl</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>AttrImpl</name>
                                                        </type>
                                                        <name>attr</name> =
                                                        <init>
                                                            <expr>(<name>AttrImpl</name>)
                                                                <name>source</name>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <call>
                                                                <name><name>attr</name>.
                                                                    <name>hasStringValue</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <name>AttrImpl</name>
                                                                    </type>
                                                                    <name>newattr</name> =
                                                                    <init>
                                                                        <expr>(<name>AttrImpl</name>)
                                                                            <name>newnode</name>
                                                                        </expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>newattr</name>.
                                                                            <name>setValue</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>attr</name>.
                                                                                            <name>getValue</name>
                                                                                        </name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>deep</name>
                                                                    = false
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                    <else>else
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>deep</name>
                                                                    = true
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </else>
                                                </if>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <block>{
                                                <comment type="line">// According to the DOM spec the kids carry the
                                                    value.
                                                </comment>
                                                <comment type="line">// However, there are non compliant implementations
                                                    out
                                                </comment>
                                                <comment type="line">// there that fail to do so. To avoid ending up
                                                    with no
                                                </comment>
                                                <comment type="line">// value at all, in this case we simply copy the
                                                    text value
                                                </comment>
                                                <comment type="line">// directly.</comment>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <call>
                                                                <name><name>source</name>.
                                                                    <name>getFirstChild</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                            ==
                                                            <name>null</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>newnode</name>.
                                                                            <name>setNodeValue</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>source</name>.
                                                                                            <name>getNodeValue</name>
                                                                                        </name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>deep</name>
                                                                    = false
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                    <else>else
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>deep</name>
                                                                    = true
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </else>
                                                </if>
                                                }
                                            </block>
                                        </else>
                                    </if>
                                    <break>break;</break>
                                    }
                                </block>

                            </case>
                            <case>case
                                <expr>
                                    <name>TEXT_NODE</name>
                                </expr>
                                :
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <name>newnode</name>
                                            =
                                            <call>
                                                <name>createTextNode</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>source</name>.
                                                                    <name>getNodeValue</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <break>break;</break>
                                    }
                                </block>

                            </case>
                            <case>case
                                <expr>
                                    <name>CDATA_SECTION_NODE</name>
                                </expr>
                                :
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <name>newnode</name>
                                            =
                                            <call>
                                                <name>createCDATASection</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>source</name>.
                                                                    <name>getNodeValue</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <break>break;</break>
                                    }
                                </block>

                            </case>
                            <case>case
                                <expr>
                                    <name>ENTITY_REFERENCE_NODE</name>
                                </expr>
                                :
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <name>newnode</name>
                                            =
                                            <call>
                                                <name>createEntityReference</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>source</name>.
                                                                    <name>getNodeName</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <comment type="line">// the subtree is created according to this doc by the method
                                    </comment>
                                    <comment type="line">// above, so avoid carrying over original subtree</comment>
                                    <expr_stmt>
                                        <expr>
                                            <name>deep</name>
                                            = false
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <break>break;</break>
                                    }
                                </block>

                            </case>
                            <case>case
                                <expr>
                                    <name>ENTITY_NODE</name>
                                </expr>
                                :
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>Entity</name>
                                            </type>
                                            <name>srcentity</name> =
                                            <init>
                                                <expr>(<name>Entity</name>)
                                                    <name>source</name>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>EntityImpl</name>
                                            </type>
                                            <name>newentity</name> =
                                            <init>
                                                <expr>(<name>EntityImpl</name>)
                                                    <call>
                                                        <name>createEntity</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>source</name>.
                                                                            <name>getNodeName</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>newentity</name>.
                                                    <name>setPublicId</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>srcentity</name>.
                                                                    <name>getPublicId</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>newentity</name>.
                                                    <name>setSystemId</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>srcentity</name>.
                                                                    <name>getSystemId</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>newentity</name>.
                                                    <name>setNotationName</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>srcentity</name>.
                                                                    <name>getNotationName</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <comment type="line">// Kids carry additional value,</comment>
                                    <comment type="line">// allow deep import temporarily</comment>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>newentity</name>.
                                                    <name>isReadOnly</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>false</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <name>newnode</name>
                                            =
                                            <name>newentity</name>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <break>break;</break>
                                    }
                                </block>

                            </case>
                            <case>case
                                <expr>
                                    <name>PROCESSING_INSTRUCTION_NODE</name>
                                </expr>
                                :
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <name>newnode</name>
                                            =
                                            <call>
                                                <name>createProcessingInstruction</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>source</name>.
                                                                    <name>getNodeName</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>source</name>.
                                                                    <name>getNodeValue</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <break>break;</break>
                                    }
                                </block>

                            </case>
                            <case>case
                                <expr>
                                    <name>COMMENT_NODE</name>
                                </expr>
                                :
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <name>newnode</name>
                                            =
                                            <call>
                                                <name>createComment</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>source</name>.
                                                                    <name>getNodeValue</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <break>break;</break>
                                    }
                                </block>

                            </case>
                            <case>case
                                <expr>
                                    <name>DOCUMENT_TYPE_NODE</name>
                                </expr>
                                :
                                <block>{
                                    <comment type="line">// unless this is used as part of cloning a Document</comment>
                                    <comment type="line">// forbid it for the sake of being compliant to the DOM spec
                                    </comment>
                                    <if>if
                                        <condition>(
                                            <expr>!
                                                <name>cloningDoc</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>String</name>
                                                        </type>
                                                        <name>msg</name> =
                                                        <init>
                                                            <expr>
                                                                <call>
                                                                    <name><name>DOMMessageFormatter</name>.
                                                                        <name>formatMessage</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>DOMMessageFormatter</name>.
                                                                                    <name>DOM_DOMAIN</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>"NOT_SUPPORTED_ERR"</expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>null</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <throw>throw
                                                    <expr>new
                                                        <call>
                                                            <name>DOMException</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>DOMException</name>.
                                                                            <name>NOT_SUPPORTED_ERR</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>msg</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </throw>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>DocumentType</name>
                                            </type>
                                            <name>srcdoctype</name> =
                                            <init>
                                                <expr>(<name>DocumentType</name>)
                                                    <name>source</name>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>DocumentTypeImpl</name>
                                            </type>
                                            <name>newdoctype</name> =
                                            <init>
                                                <expr>(<name>DocumentTypeImpl</name>)
                                                    <call>
                                                        <name>createDocumentType</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>srcdoctype</name>.
                                                                            <name>getNodeName</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>srcdoctype</name>.
                                                                            <name>getPublicId</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>srcdoctype</name>.
                                                                            <name>getSystemId</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <comment type="line">// Values are on NamedNodeMaps</comment>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>NamedNodeMap</name>
                                            </type>
                                            <name>smap</name> =
                                            <init>
                                                <expr>
                                                    <call>
                                                        <name><name>srcdoctype</name>.
                                                            <name>getEntities</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>NamedNodeMap</name>
                                            </type>
                                            <name>tmap</name> =
                                            <init>
                                                <expr>
                                                    <call>
                                                        <name><name>newdoctype</name>.
                                                            <name>getEntities</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>smap</name>
                                                !=
                                                <name>null</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <for>for(
                                                    <init>
                                                        <decl>
                                                            <type>
                                                                <name>int</name>
                                                            </type>
                                                            <name>i</name> =
                                                            <init>
                                                                <expr>0</expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </init>
                                                    <condition>
                                                        <expr>
                                                            <name>i</name>
                                                            &lt;
                                                            <call>
                                                                <name><name>smap</name>.
                                                                    <name>getLength</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </condition>
                                                    <incr>
                                                        <expr><name>i</name>++
                                                        </expr>
                                                    </incr>
                                                    )
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>tmap</name>.
                                                                        <name>setNamedItem</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <call>
                                                                                    <name>importNode</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <call>
                                                                                                    <name><name>
                                                                                                        smap</name>.
                                                                                                        <name>item
                                                                                                        </name>
                                                                                                    </name>
                                                                                                    <argument_list>(
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    i
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        )
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>true</expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>true</expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>
                                                                                                    reversedIdentifiers
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </for>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <expr_stmt>
                                        <expr>
                                            <name>smap</name>
                                            =
                                            <call>
                                                <name><name>srcdoctype</name>.
                                                    <name>getNotations</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <name>tmap</name>
                                            =
                                            <call>
                                                <name><name>newdoctype</name>.
                                                    <name>getNotations</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>smap</name>
                                                !=
                                                <name>null</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <for>for(
                                                    <init>
                                                        <decl>
                                                            <type>
                                                                <name>int</name>
                                                            </type>
                                                            <name>i</name> =
                                                            <init>
                                                                <expr>0</expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </init>
                                                    <condition>
                                                        <expr>
                                                            <name>i</name>
                                                            &lt;
                                                            <call>
                                                                <name><name>smap</name>.
                                                                    <name>getLength</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </condition>
                                                    <incr>
                                                        <expr><name>i</name>++
                                                        </expr>
                                                    </incr>
                                                    )
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>tmap</name>.
                                                                        <name>setNamedItem</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <call>
                                                                                    <name>importNode</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <call>
                                                                                                    <name><name>
                                                                                                        smap</name>.
                                                                                                        <name>item
                                                                                                        </name>
                                                                                                    </name>
                                                                                                    <argument_list>(
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    i
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        )
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>true</expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>true</expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>
                                                                                                    reversedIdentifiers
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </for>
                                                }
                                            </block>
                                        </then>
                                    </if>

                                    <comment type="line">// NOTE: At this time, the DOM definition of DocumentType
                                    </comment>
                                    <comment type="line">// doesn't cover Elements and their Attributes. domimpl's
                                    </comment>
                                    <comment type="line">// extentions in that area will not be preserved, even if
                                    </comment>
                                    <comment type="line">// copying from domimpl to domimpl. We could special-case
                                    </comment>
                                    <comment type="line">// that here. Arguably we should. Consider. ?????</comment>
                                    <expr_stmt>
                                        <expr>
                                            <name>newnode</name>
                                            =
                                            <name>newdoctype</name>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <break>break;</break>
                                    }
                                </block>

                            </case>
                            <case>case
                                <expr>
                                    <name>DOCUMENT_FRAGMENT_NODE</name>
                                </expr>
                                :
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <name>newnode</name>
                                            =
                                            <call>
                                                <name>createDocumentFragment</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <comment type="line">// No name, kids carry value</comment>
                                    <break>break;</break>
                                    }
                                </block>

                            </case>
                            <case>case
                                <expr>
                                    <name>NOTATION_NODE</name>
                                </expr>
                                :
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>Notation</name>
                                            </type>
                                            <name>srcnotation</name> =
                                            <init>
                                                <expr>(<name>Notation</name>)
                                                    <name>source</name>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>NotationImpl</name>
                                            </type>
                                            <name>newnotation</name> =
                                            <init>
                                                <expr>(<name>NotationImpl</name>)
                                                    <call>
                                                        <name>createNotation</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>source</name>.
                                                                            <name>getNodeName</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>newnotation</name>.
                                                    <name>setPublicId</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>srcnotation</name>.
                                                                    <name>getPublicId</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>newnotation</name>.
                                                    <name>setSystemId</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>srcnotation</name>.
                                                                    <name>getSystemId</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <comment type="line">// Kids carry additional value</comment>
                                    <expr_stmt>
                                        <expr>
                                            <name>newnode</name>
                                            =
                                            <name>newnotation</name>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <comment type="line">// No name, no value</comment>
                                    <break>break;</break>
                                    }
                                </block>
                            </case>
                            <case>case
                                <expr>
                                    <name>DOCUMENT_NODE</name>
                                </expr>
                                :
                                <comment type="line">// Can't import document nodes</comment>
                            </case>
                            <default>default:
                                <block>{
                                    <comment type="line">// Unknown node type</comment>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>String</name>
                                            </type>
                                            <name>msg</name> =
                                            <init>
                                                <expr>
                                                    <call>
                                                        <name><name>DOMMessageFormatter</name>.
                                                            <name>formatMessage</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>DOMMessageFormatter</name>.
                                                                        <name>DOM_DOMAIN</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>"NOT_SUPPORTED_ERR"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>null</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <throw>throw
                                        <expr>new
                                            <call>
                                                <name>DOMException</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>DOMException</name>.
                                                                <name>NOT_SUPPORTED_ERR</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>msg</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </throw>
                                    }
                                </block>
                            </default>
                            }
                        </block>
                    </switch>

                    <if>if
                        <condition>(
                            <expr>
                                <name>userData</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>callUserDataHandlers</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>source</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>newnode</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>UserDataHandler</name>.
                                                        <name>NODE_IMPORTED</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>userData</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>

                    <comment type="line">// If deep, replicate and attach the kids.</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>deep</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <for>for (
                                    <init>
                                        <decl>
                                            <type>
                                                <name>Node</name>
                                            </type>
                                            <name>srckid</name> =
                                            <init>
                                                <expr>
                                                    <call>
                                                        <name><name>source</name>.
                                                            <name>getFirstChild</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>srckid</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr>
                                            <name>srckid</name>
                                            =
                                            <call>
                                                <name><name>srckid</name>.
                                                    <name>getNextSibling</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>newnode</name>.
                                                        <name>appendChild</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name>importNode</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>srckid</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>true</expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>cloningDoc</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>reversedIdentifiers</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </for>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>newnode</name>.
                                        <name>getNodeType</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                ==
                                <name><name>Node</name>.
                                    <name>ENTITY_NODE</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>((<name>NodeImpl</name>)<name>newnode</name>).
                                        <call>
                                            <name>setReadOnly</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>true</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>true</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>newnode</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// importNode(Node,boolean,boolean,Hashtable):Node</comment>

            <comment type="javadoc">/**
                * DOM Level 3 WD - Experimental
                * Change the node's ownerDocument, and its subtree, to this Document
                *
                * @param source The node to adopt.
                * @see #importNode
                **/
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Node</name>
                </type>
                <name>adoptNode</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>source</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>NodeImpl</name>
                            </type>
                            <name>node</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Hashtable</name>
                            </type>
                            <name>userData</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>node</name>
                                    = (<name>NodeImpl</name>)
                                    <name>source</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>ClassCastException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <comment type="line">// source node comes from a different DOMImplementation</comment>
                                <return>return
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </catch>
                    </try>

                    <comment type="line">// Return null if the source is null</comment>

                    <if>if
                        <condition>(
                            <expr>
                                <name>source</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>source</name>
                                        != <name>null</name> &amp;&amp;
                                        <call>
                                            <name><name>source</name>.
                                                <name>getOwnerDocument</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{

                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>DOMImplementation</name>
                                                </type>
                                                <name>thisImpl</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>this</name>.
                                                                <name>getImplementation</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>DOMImplementation</name>
                                                </type>
                                                <name>otherImpl</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>source</name>.
                                                                <name>getOwnerDocument</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        .
                                                        <call>
                                                            <name>getImplementation</name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>

                                        <comment type="line">// when the source node comes from a different
                                            implementation.
                                        </comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>thisImpl</name>
                                                    !=
                                                    <name>otherImpl</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{

                                                    <comment type="line">// Adopting from a DefferedDOM to DOM</comment>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>thisImpl</name>
                                                                <name>instanceof</name>
                                                                <name><name>org</name>.<name>apache</name>.<name>
                                                                    xerces</name>.<name>dom</name>.
                                                                    <name>DOMImplementationImpl</name>
                                                                </name>
                                                                &amp;&amp;
                                                                <name>otherImpl</name>
                                                                <name>instanceof</name>
                                                                <name><name>org</name>.<name>apache</name>.<name>
                                                                    xerces</name>.<name>dom</name>.
                                                                    <name>DeferredDOMImplementationImpl</name>
                                                                </name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <comment type="line">// traverse the DOM and expand
                                                                    deffered nodes and then allow adoption
                                                                </comment>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name>undeferChildren</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>node</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </then>
                                                        <else>else
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name>thisImpl</name>
                                                                        <name>instanceof</name>
                                                                        <name><name>org</name>.<name>
                                                                            apache</name>.<name>xerces</name>.<name>
                                                                            dom</name>.
                                                                            <name>DeferredDOMImplementationImpl</name>
                                                                        </name>
                                                                        &amp;&amp; <name>otherImpl</name>
                                                                        <name>instanceof</name>
                                                                        <name><name>org</name>.<name>
                                                                            apache</name>.<name>xerces</name>.<name>
                                                                            dom</name>.
                                                                            <name>DOMImplementationImpl</name>
                                                                        </name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <comment type="line">// Adopting from a DOM into
                                                                            a DefferedDOM, this should be okay
                                                                        </comment>
                                                                        }
                                                                    </block>
                                                                </then>
                                                                <else>else
                                                                    <block>{
                                                                        <comment type="line">// Adopting between two
                                                                            dissimilar DOM's is not allowed
                                                                        </comment>
                                                                        <return>return
                                                                            <expr>
                                                                                <name>null</name>
                                                                            </expr>
                                                                            ;
                                                                        </return>
                                                                        }
                                                                    </block>
                                                                </else>
                                                            </if>
                                                        </else>
                                                    </if>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </then>
                            </if>
                        </else>
                    </if>

                    <switch>switch
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>node</name>.
                                        <name>getNodeType</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <case>case
                                <expr>
                                    <name>ATTRIBUTE_NODE</name>
                                </expr>
                                :
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>AttrImpl</name>
                                            </type>
                                            <name>attr</name> =
                                            <init>
                                                <expr>(<name>AttrImpl</name>)
                                                    <name>node</name>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <comment type="line">// remove node from wherever it is</comment>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <call>
                                                    <name><name>attr</name>.
                                                        <name>getOwnerElement</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                !=
                                                <name>null</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <comment type="line">//1. owner element attribute is set to null
                                                </comment>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>attr</name>.
                                                                <name>getOwnerElement</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        .
                                                        <call>
                                                            <name>removeAttributeNode</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>attr</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <comment type="line">//2. specified flag is set to true</comment>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>attr</name>.
                                                    <name>isSpecified</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>true</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <name>userData</name>
                                            =
                                            <call>
                                                <name><name>node</name>.
                                                    <name>getUserDataRecord</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>

                                    <comment type="line">//3. change ownership</comment>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>attr</name>.
                                                    <name>setOwnerDocument</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>this</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>userData</name>
                                                !=
                                                <name>null</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>setUserDataTable</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>node</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>userData</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                        </then>
                                    </if>
                                    <break>break;</break>
                                    }
                                </block>
                                <comment type="line">//entity, notation nodes are read only nodes.. so they can't be
                                    adopted.
                                </comment>
                                <comment type="line">//runtime will fall through to NOTATION_NODE</comment>
                            </case>
                            <case>case
                                <expr>
                                    <name>ENTITY_NODE</name>
                                </expr>
                                :
                            </case>
                            <case>case
                                <expr>
                                    <name>NOTATION_NODE</name>
                                </expr>
                                :
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>String</name>
                                            </type>
                                            <name>msg</name> =
                                            <init>
                                                <expr>
                                                    <call>
                                                        <name><name>DOMMessageFormatter</name>.
                                                            <name>formatMessage</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>DOMMessageFormatter</name>.
                                                                        <name>DOM_DOMAIN</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>"NO_MODIFICATION_ALLOWED_ERR"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>null</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <throw>throw
                                        <expr>new
                                            <call>
                                                <name>DOMException</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>DOMException</name>.
                                                                <name>NO_MODIFICATION_ALLOWED_ERR</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>msg</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </throw>

                                    }
                                </block>
                                <comment type="line">//document, documentype nodes can't be adopted.</comment>
                                <comment type="line">//runtime will fall through to DocumentTypeNode</comment>
                            </case>
                            <case>case
                                <expr>
                                    <name>DOCUMENT_NODE</name>
                                </expr>
                                :
                            </case>
                            <case>case
                                <expr>
                                    <name>DOCUMENT_TYPE_NODE</name>
                                </expr>
                                :
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>String</name>
                                            </type>
                                            <name>msg</name> =
                                            <init>
                                                <expr>
                                                    <call>
                                                        <name><name>DOMMessageFormatter</name>.
                                                            <name>formatMessage</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>DOMMessageFormatter</name>.
                                                                        <name>DOM_DOMAIN</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>"NOT_SUPPORTED_ERR"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>null</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <throw>throw
                                        <expr>new
                                            <call>
                                                <name>DOMException</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>DOMException</name>.
                                                                <name>NOT_SUPPORTED_ERR</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>msg</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </throw>
                                    }
                                </block>
                            </case>
                            <case>case
                                <expr>
                                    <name>ENTITY_REFERENCE_NODE</name>
                                </expr>
                                :
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <name>userData</name>
                                            =
                                            <call>
                                                <name><name>node</name>.
                                                    <name>getUserDataRecord</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <comment type="line">// remove node from wherever it is</comment>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>Node</name>
                                            </type>
                                            <name>parent</name> =
                                            <init>
                                                <expr>
                                                    <call>
                                                        <name><name>node</name>.
                                                            <name>getParentNode</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>parent</name>
                                                !=
                                                <name>null</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>parent</name>.
                                                                <name>removeChild</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>source</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <comment type="line">// discard its replacement value</comment>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>Node</name>
                                            </type>
                                            <name>child</name>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <while>while
                                        <condition>(
                                            <expr>(<name>child</name> =
                                                <call>
                                                    <name><name>node</name>.
                                                        <name>getFirstChild</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                ) !=
                                                <name>null</name>
                                            </expr>
                                            )
                                        </condition>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>node</name>.
                                                            <name>removeChild</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>child</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </while>
                                    <comment type="line">// change ownership</comment>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>node</name>.
                                                    <name>setOwnerDocument</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>this</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>userData</name>
                                                !=
                                                <name>null</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>setUserDataTable</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>node</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>userData</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                        </then>
                                    </if>
                                    <comment type="line">// set its new replacement value if any</comment>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>docType</name>
                                                ==
                                                <name>null</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <break>break;</break>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>NamedNodeMap</name>
                                            </type>
                                            <name>entities</name> =
                                            <init>
                                                <expr>
                                                    <call>
                                                        <name><name>docType</name>.
                                                            <name>getEntities</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>Node</name>
                                            </type>
                                            <name>entityNode</name> =
                                            <init>
                                                <expr>
                                                    <call>
                                                        <name><name>entities</name>.
                                                            <name>getNamedItem</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>node</name>.
                                                                            <name>getNodeName</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>entityNode</name>
                                                ==
                                                <name>null</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <break>break;</break>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <for>for (
                                        <init>
                                            <expr>
                                                <name>child</name>
                                                =
                                                <call>
                                                    <name><name>entityNode</name>.
                                                        <name>getFirstChild</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </init>
                                        <condition>
                                            <expr>
                                                <name>child</name>
                                                !=
                                                <name>null</name>
                                            </expr>
                                            ;
                                        </condition>
                                        <incr>
                                            <expr>
                                                <name>child</name>
                                                =
                                                <call>
                                                    <name><name>child</name>.
                                                        <name>getNextSibling</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </incr>
                                        )
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>Node</name>
                                                    </type>
                                                    <name>childClone</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name><name>child</name>.
                                                                    <name>cloneNode</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>true</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>node</name>.
                                                            <name>appendChild</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>childClone</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </for>
                                    <break>break;</break>
                                    }
                                </block>
                            </case>
                            <case>case
                                <expr>
                                    <name>ELEMENT_NODE</name>
                                </expr>
                                :
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <name>userData</name>
                                            =
                                            <call>
                                                <name><name>node</name>.
                                                    <name>getUserDataRecord</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <comment type="line">// remove node from wherever it is</comment>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>Node</name>
                                            </type>
                                            <name>parent</name> =
                                            <init>
                                                <expr>
                                                    <call>
                                                        <name><name>node</name>.
                                                            <name>getParentNode</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>parent</name>
                                                !=
                                                <name>null</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>parent</name>.
                                                                <name>removeChild</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>source</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <comment type="line">// change ownership</comment>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>node</name>.
                                                    <name>setOwnerDocument</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>this</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>userData</name>
                                                !=
                                                <name>null</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>setUserDataTable</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>node</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>userData</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                        </then>
                                    </if>
                                    <comment type="line">// reconcile default attributes</comment>
                                    <expr_stmt>
                                        <expr>((<name>ElementImpl</name>)<name>node</name>).
                                            <call>
                                                <name>reconcileDefaultAttributes</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <break>break;</break>
                                    }
                                </block>
                            </case>
                            <default>default:
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <name>userData</name>
                                            =
                                            <call>
                                                <name><name>node</name>.
                                                    <name>getUserDataRecord</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <comment type="line">// remove node from wherever it is</comment>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>Node</name>
                                            </type>
                                            <name>parent</name> =
                                            <init>
                                                <expr>
                                                    <call>
                                                        <name><name>node</name>.
                                                            <name>getParentNode</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>parent</name>
                                                !=
                                                <name>null</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>parent</name>.
                                                                <name>removeChild</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>source</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <comment type="line">// change ownership</comment>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>node</name>.
                                                    <name>setOwnerDocument</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>this</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>userData</name>
                                                !=
                                                <name>null</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>setUserDataTable</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>node</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>userData</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                        </then>
                                    </if>
                                    }
                                </block>
                            </default>
                            }
                        </block>
                    </switch>

                    <comment type="line">//DOM L3 Core CR</comment>
                    <comment type="line">
                        //http://www.w3.org/TR/2003/CR-DOM-Level-3-Core-20031107/core.html#UserDataHandler-ADOPTED
                    </comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>userData</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>callUserDataHandlers</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>source</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>UserDataHandler</name>.
                                                        <name>NODE_ADOPTED</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>userData</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>

                    <return>return
                        <expr>
                            <name>node</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Traverses the DOM Tree and expands deferred nodes and their
                * children.
                *
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>undeferChildren</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>node</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>top</name> =
                            <init>
                                <expr>
                                    <name>node</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <while>while
                        <condition>(
                            <expr>
                                <name>null</name>
                                !=
                                <name>node</name>
                            </expr>
                            )
                        </condition>
                        <block>{

                            <if>if
                                <condition>(
                                    <expr>((<name>NodeImpl</name>)<name>node</name>).
                                        <call>
                                            <name>needsSyncData</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>((<name>NodeImpl</name>)<name>node</name>).
                                                <call>
                                                    <name>synchronizeData</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>

                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Node</name>
                                    </type>
                                    <name>nextNode</name> =
                                    <init>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>nextNode</name>
                                    =
                                    <call>
                                        <name><name>node</name>.
                                            <name>getFirstChild</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>

                            <while>while
                                <condition>(
                                    <expr>
                                        <name>null</name>
                                        ==
                                        <name>nextNode</name>
                                    </expr>
                                    )
                                </condition>
                                <block>{

                                    <if>if
                                        <condition>(
                                            <expr>
                                                <call>
                                                    <name><name>top</name>.
                                                        <name>equals</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>node</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <break>break;</break>
                                        </then>
                                    </if>

                                    <expr_stmt>
                                        <expr>
                                            <name>nextNode</name>
                                            =
                                            <call>
                                                <name><name>node</name>.
                                                    <name>getNextSibling</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>

                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>null</name>
                                                ==
                                                <name>nextNode</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>node</name>
                                                        =
                                                        <call>
                                                            <name><name>node</name>.
                                                                <name>getParentNode</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>

                                                <if>if
                                                    <condition>(
                                                        <expr>(<name>null</name> == <name>node</name>) || (
                                                            <call>
                                                                <name><name>top</name>.
                                                                    <name>equals</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>node</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                            )
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>nextNode</name>
                                                                    =
                                                                    <name>null</name>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <break>break;</break>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    }
                                </block>
                            </while>

                            <expr_stmt>
                                <expr>
                                    <name>node</name>
                                    =
                                    <name>nextNode</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </while>
                    }
                </block>
            </function>

            <comment type="line">// identifier maintenence</comment>
            <comment type="javadoc">/**
                * Introduced in DOM Level 2
                * Returns the Element whose ID is given by elementId. If no such element
                * exists, returns null. Behavior is not defined if more than one element
                * has this ID.
                * &lt;p&gt;
                * Note: The DOM implementation must have information that says which
                * attributes are of type ID. Attributes with the name "ID" are not of type
                * ID unless so defined. Implementations that do not know whether
                * attributes are of type ID or not are expected to return null.
                * @see #getIdentifier
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Element</name>
                </type>
                <name>getElementById</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>elementId</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getIdentifier</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>elementId</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Remove all identifiers from the ID table
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <specifier>final</specifier>
                    <name>void</name>
                </type>
                <name>clearIdentifiers</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>identifiers</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>identifiers</name>.
                                                <name>clear</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Registers an identifier name with a specified element node.
                * If the identifier is already registered, the new element
                * node replaces the previous node. If the specified element
                * node is null, removeIdentifier() is called.
                *
                * @see #getIdentifier
                * @see #removeIdentifier
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>putIdentifier</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>idName</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Element</name>
                            </type>
                            <name>element</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name>element</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>removeIdentifier</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>idName</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>needsSyncData</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>synchronizeData</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>identifiers</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>identifiers</name>
                                        = new
                                        <call>
                                            <name>Hashtable</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>identifiers</name>.
                                    <name>put</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>idName</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>element</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </function>
            <comment type="line">// putIdentifier(String,Element)</comment>

            <comment type="javadoc">/**
                * Returns a previously registered element with the specified
                * identifier name, or null if no element is registered.
                *
                * @see #putIdentifier
                * @see #removeIdentifier
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Element</name>
                </type>
                <name>getIdentifier</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>idName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>needsSyncData</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>synchronizeData</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>identifiers</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Element</name>
                            </type>
                            <name>elem</name> =
                            <init>
                                <expr>(<name>Element</name>)
                                    <call>
                                        <name><name>identifiers</name>.
                                            <name>get</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>idName</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>elem</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// check that the element is in the tree</comment>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Node</name>
                                        </type>
                                        <name>parent</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>elem</name>.
                                                        <name>getParentNode</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <while>while
                                    <condition>(
                                        <expr>
                                            <name>parent</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>parent</name>
                                                    ==
                                                    <name>this</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <return>return
                                                        <expr>
                                                            <name>elem</name>
                                                        </expr>
                                                        ;
                                                    </return>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name>parent</name>
                                                =
                                                <call>
                                                    <name><name>parent</name>.
                                                        <name>getParentNode</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </while>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getIdentifier(String):Element</comment>

            <comment type="javadoc">/**
                * Removes a previously registered element with the specified
                * identifier name.
                *
                * @see #putIdentifier
                * @see #getIdentifier
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>removeIdentifier</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>idName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>needsSyncData</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>synchronizeData</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>identifiers</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>identifiers</name>.
                                    <name>remove</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>idName</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </function>
            <comment type="line">// removeIdentifier(String)</comment>

            <comment type="javadoc">/** Returns an enumeration registered of identifier names. */</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Enumeration</name>
                </type>
                <name>getIdentifiers</name>
                <parameter_list>()</parameter_list>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>needsSyncData</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>synchronizeData</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>identifiers</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>identifiers</name>
                                        = new
                                        <call>
                                            <name>Hashtable</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <return>return
                        <expr>
                            <call>
                                <name><name>identifiers</name>.
                                    <name>keys</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// getIdentifiers():Enumeration</comment>

            <comment type="line">//</comment>
            <comment type="line">// DOM2: Namespace methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * Introduced in DOM Level 2. &lt;p&gt;
                * Creates an element of the given qualified name and namespace URI.
                * If the given namespaceURI is null or an empty string and the
                * qualifiedName has a prefix that is "xml", the created element
                * is bound to the predefined namespace
                * "http://www.w3.org/XML/1998/namespace" [Namespaces].
                * @param namespaceURI The namespace URI of the element to
                * create.
                * @param qualifiedName The qualified name of the element type to
                * instantiate.
                * @return Element A new Element object with the following attributes:
                * @throws DOMException INVALID_CHARACTER_ERR: Raised if the specified
                * name contains an invalid character.
                * @throws DOMException NAMESPACE_ERR: Raised if the qualifiedName has a
                * prefix that is "xml" and the namespaceURI is
                * neither null nor an empty string nor
                * "http://www.w3.org/XML/1998/namespace", or
                * if the qualifiedName has a prefix different
                * from "xml" and the namespaceURI is null or an
                * empty string.
                * @since WD-DOM-Level-2-19990923
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Element</name>
                </type>
                <name>createElementNS</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>namespaceURI</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>qualifiedName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>DOMException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>ElementNSImpl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>this</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>namespaceURI</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>qualifiedName</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * NON-DOM: a factory method used by the Xerces DOM parser
                * to create an element.
                *
                * @param namespaceURI The namespace URI of the element to
                * create.
                * @param qualifiedName The qualified name of the element type to
                * instantiate.
                * @param localpart The local name of the attribute to instantiate.
                *
                * @return Element A new Element object with the following attributes:
                * @exception DOMException INVALID_CHARACTER_ERR: Raised if the specified
                * name contains an invalid character.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Element</name>
                </type>
                <name>createElementNS</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>namespaceURI</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>qualifiedName</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>localpart</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>DOMException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>ElementNSImpl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>this</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>namespaceURI</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>qualifiedName</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>localpart</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Introduced in DOM Level 2. &lt;p&gt;
                * Creates an attribute of the given qualified name and namespace URI.
                * If the given namespaceURI is null or an empty string and the
                * qualifiedName has a prefix that is "xml", the created element
                * is bound to the predefined namespace
                * "http://www.w3.org/XML/1998/namespace" [Namespaces].
                *
                * @param namespaceURI The namespace URI of the attribute to
                * create. When it is null or an empty string,
                * this method behaves like createAttribute.
                * @param qualifiedName The qualified name of the attribute to
                * instantiate.
                * @return Attr A new Attr object.
                * @throws DOMException INVALID_CHARACTER_ERR: Raised if the specified
                * name contains an invalid character.
                * @since WD-DOM-Level-2-19990923
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Attr</name>
                </type>
                <name>createAttributeNS</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>namespaceURI</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>qualifiedName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>DOMException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>AttrNSImpl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>this</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>namespaceURI</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>qualifiedName</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * NON-DOM: a factory method used by the Xerces DOM parser
                * to create an element.
                *
                * @param namespaceURI The namespace URI of the attribute to
                * create. When it is null or an empty string,
                * this method behaves like createAttribute.
                * @param qualifiedName The qualified name of the attribute to
                * instantiate.
                * @param localpart The local name of the attribute to instantiate.
                *
                * @return Attr A new Attr object.
                * @throws DOMException INVALID_CHARACTER_ERR: Raised if the specified
                * name contains an invalid character.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Attr</name>
                </type>
                <name>createAttributeNS</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>namespaceURI</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>qualifiedName</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>localpart</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>DOMException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>AttrNSImpl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>this</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>namespaceURI</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>qualifiedName</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>localpart</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Introduced in DOM Level 2. &lt;p&gt;
                * Returns a NodeList of all the Elements with a given local name and
                * namespace URI in the order in which they would be encountered in a
                * preorder traversal of the Document tree.
                * @param namespaceURI The namespace URI of the elements to match
                * on. The special value "*" matches all
                * namespaces. When it is null or an empty
                * string, this method behaves like
                * getElementsByTagName.
                * @param localName The local name of the elements to match on.
                * The special value "*" matches all local names.
                * @return NodeList A new NodeList object containing all the matched
                * Elements.
                * @since WD-DOM-Level-2-19990923
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>NodeList</name>
                </type>
                <name>getElementsByTagNameNS</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>namespaceURI</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>localName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>DeepNodeListImpl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>this</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>namespaceURI</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>localName</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">//</comment>
            <comment type="line">// Object methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/** Clone. */</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Object</name>
                </type>
                <name>clone</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>CloneNotSupportedException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>CoreDocumentImpl</name>
                            </type>
                            <name>newdoc</name> =
                            <init>
                                <expr>(<name>CoreDocumentImpl</name>)
                                    <call>
                                        <name><name>super</name>.
                                            <name>clone</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>newdoc</name>.
                                <name>docType</name>
                            </name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>newdoc</name>.
                                <name>docElement</name>
                            </name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>newdoc</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">//</comment>
            <comment type="line">// Public static methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * Check the string against XML's definition of acceptable names for
                * elements and attributes and so on using the XMLCharacterProperties
                * utility class
                */
            </comment>

            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <specifier>final</specifier>
                    <name>boolean</name>
                </type>
                <name>isXMLName</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>s</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>xml11Version</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name>s</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <name>xml11Version</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>XMLChar</name>.
                                            <name>isValidName</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>s</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                        </then>
                        <else>else
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>XML11Char</name>.
                                            <name>isXML11ValidName</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>s</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                        </else>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// isXMLName(String):boolean</comment>

            <comment type="javadoc">/**
                * Checks if the given qualified name is legal with respect
                * to the version of XML to which this document must conform.
                *
                * @param prefix prefix of qualified name
                * @param local local part of qualified name
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <specifier>final</specifier>
                    <name>boolean</name>
                </type>
                <name>isValidQName</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>prefix</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>local</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>xml11Version</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <comment type="line">// check that both prefix and local part match NCName</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>local</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return <expr>false</expr>;
                            </return>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>validNCName</name> =
                            <init>
                                <expr>false</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <if>if
                        <condition>(
                            <expr>!
                                <name>xml11Version</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>validNCName</name>
                                        = (<name>prefix</name> == <name>null</name> ||
                                        <call>
                                            <name><name>XMLChar</name>.
                                                <name>isValidNCName</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>prefix</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        )
                                        &amp;&amp;
                                        <call>
                                            <name><name>XMLChar</name>.
                                                <name>isValidNCName</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>local</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>validNCName</name>
                                        = (<name>prefix</name> == <name>null</name> ||
                                        <call>
                                            <name><name>XML11Char</name>.
                                                <name>isXML11ValidNCName</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>prefix</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        )
                                        &amp;&amp;
                                        <call>
                                            <name><name>XML11Char</name>.
                                                <name>isXML11ValidNCName</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>local</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>

                    <return>return
                        <expr>
                            <name>validNCName</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">//</comment>
            <comment type="line">// Protected methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * Uses the kidOK lookup table to check whether the proposed
                * tree structure is legal.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>boolean</name>
                </type>
                <name>isKidOK</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>parent</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>child</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>allowGrammarAccess</name>
                                &amp;&amp;
                                <call>
                                    <name><name>parent</name>.
                                        <name>getNodeType</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                ==
                                <name><name>Node</name>.
                                    <name>DOCUMENT_TYPE_NODE</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <call>
                                            <name><name>child</name>.
                                                <name>getNodeType</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        ==
                                        <name><name>Node</name>.
                                            <name>ELEMENT_NODE</name>
                                        </name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>0 != (
                            <name>
                                <name>kidOK</name>
                                <index>[
                                    <expr>
                                        <call>
                                            <name><name>parent</name>.
                                                <name>getNodeType</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            &amp; 1 &lt;&lt;
                            <call>
                                <name><name>child</name>.
                                    <name>getNodeType</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            )
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Denotes that this node has changed.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>changed</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr><name>changes</name>++
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the number of changes to this node.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>int</name>
                </type>
                <name>changes</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>changes</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">// NodeListCache pool</comment>

            <comment type="javadoc">/**
                * Returns a NodeListCache for the given node.
                */
            </comment>
            <function>
                <type>
                    <name>NodeListCache</name>
                </type>
                <name>getNodeListCache</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ParentNode</name>
                            </type>
                            <name>owner</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fFreeNLCache</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>new
                                        <call>
                                            <name>NodeListCache</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>owner</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>NodeListCache</name>
                            </type>
                            <name>c</name> =
                            <init>
                                <expr>
                                    <name>fFreeNLCache</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fFreeNLCache</name>
                            =
                            <name><name>fFreeNLCache</name>.
                                <name>next</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>c</name>.
                                <name>fChild</name>
                            </name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>c</name>.
                                <name>fChildIndex</name>
                            </name>
                            = -1
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>c</name>.
                                <name>fLength</name>
                            </name>
                            = -1
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// revoke previous ownership</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>c</name>.
                                    <name>fOwner</name>
                                </name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>c</name>.<name>fOwner</name>.
                                            <name>fNodeListCache</name>
                                        </name>
                                        =
                                        <name>null</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name><name>c</name>.
                                <name>fOwner</name>
                            </name>
                            =
                            <name>owner</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// c.next = null; not necessary, except for confused people...</comment>
                    <return>return
                        <expr>
                            <name>c</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Puts the given NodeListCache in the free list.
                * Note: The owner node can keep using it until we reuse it
                */
            </comment>
            <function>
                <type>
                    <name>void</name>
                </type>
                <name>freeNodeListCache</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>NodeListCache</name>
                            </type>
                            <name>c</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>c</name>.
                                <name>next</name>
                            </name>
                            =
                            <name>fFreeNLCache</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fFreeNLCache</name>
                            =
                            <name>c</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * Associate an object to a key on this node. The object can later be
                * retrieved from this node by calling &lt;code&gt;getUserData&lt;/code&gt; with the
                * same key.
                * @param n The node to associate the object to.
                * @param key The key to associate the object to.
                * @param data The object to associate to the given key, or
                * &lt;code&gt;null&lt;/code&gt; to remove any existing association to that key.
                * @param handler The handler to associate to that key, or
                * &lt;code&gt;null&lt;/code&gt;.
                * @return Returns the &lt;code&gt;DOMObject&lt;/code&gt; previously associated to
                * the given key on this node, or &lt;code&gt;null&lt;/code&gt; if there was none.
                * @since DOM Level 3
                *
                * REVISIT: we could use a free list of UserDataRecord here
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Object</name>
                </type>
                <name>setUserData</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>n</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>key</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>data</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>UserDataHandler</name>
                            </type>
                            <name>handler</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>data</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>userData</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>Hashtable</name>
                                                    </type>
                                                    <name>t</name> =
                                                    <init>
                                                        <expr>(<name>Hashtable</name>)
                                                            <call>
                                                                <name><name>userData</name>.
                                                                    <name>get</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>n</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>t</name>
                                                        !=
                                                        <name>null</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <decl_stmt>
                                                            <decl>
                                                                <type>
                                                                    <name>Object</name>
                                                                </type>
                                                                <name>o</name> =
                                                                <init>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>t</name>.
                                                                                <name>remove</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>key</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </decl_stmt>
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>o</name>
                                                                    !=
                                                                    <name>null</name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <decl_stmt>
                                                                        <decl>
                                                                            <type>
                                                                                <name>UserDataRecord</name>
                                                                            </type>
                                                                            <name>r</name> =
                                                                            <init>
                                                                                <expr>(<name>UserDataRecord</name>)
                                                                                    <name>o</name>
                                                                                </expr>
                                                                            </init>
                                                                        </decl>
                                                                        ;
                                                                    </decl_stmt>
                                                                    <return>return
                                                                        <expr>
                                                                            <name><name>r</name>.
                                                                                <name>fData</name>
                                                                            </name>
                                                                        </expr>
                                                                        ;
                                                                    </return>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <return>return
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Hashtable</name>
                                        </type>
                                        <name>t</name>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>userData</name>
                                            ==
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>userData</name>
                                                    = new
                                                    <call>
                                                        <name>Hashtable</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>t</name>
                                                    = new
                                                    <call>
                                                        <name>Hashtable</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>userData</name>.
                                                            <name>put</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>n</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>t</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>t</name>
                                                    = (<name>Hashtable</name>)
                                                    <call>
                                                        <name><name>userData</name>.
                                                            <name>get</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>n</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>t</name>
                                                        ==
                                                        <name>null</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>t</name>
                                                                = new
                                                                <call>
                                                                    <name>Hashtable</name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>userData</name>.
                                                                        <name>put</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>n</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>t</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </else>
                                </if>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Object</name>
                                        </type>
                                        <name>o</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>t</name>.
                                                        <name>put</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>key</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>new
                                                                <call>
                                                                    <name>UserDataRecord</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>data</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>handler</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>o</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>UserDataRecord</name>
                                                    </type>
                                                    <name>r</name> =
                                                    <init>
                                                        <expr>(<name>UserDataRecord</name>)
                                                            <name>o</name>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <return>return
                                                <expr>
                                                    <name><name>r</name>.
                                                        <name>fData</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <return>return
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * Retrieves the object associated to a key on a this node. The object
                * must first have been set to this node by calling
                * &lt;code&gt;setUserData&lt;/code&gt; with the same key.
                * @param n The node the object is associated to.
                * @param key The key the object is associated to.
                * @return Returns the &lt;code&gt;DOMObject&lt;/code&gt; associated to the given key
                * on this node, or &lt;code&gt;null&lt;/code&gt; if there was none.
                * @since DOM Level 3
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Object</name>
                </type>
                <name>getUserData</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>n</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>key</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>userData</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Hashtable</name>
                            </type>
                            <name>t</name> =
                            <init>
                                <expr>(<name>Hashtable</name>)
                                    <call>
                                        <name><name>userData</name>.
                                            <name>get</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>n</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>t</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>o</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>t</name>.
                                            <name>get</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>key</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>o</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>UserDataRecord</name>
                                        </type>
                                        <name>r</name> =
                                        <init>
                                            <expr>(<name>UserDataRecord</name>)
                                                <name>o</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <return>return
                                    <expr>
                                        <name><name>r</name>.
                                            <name>fData</name>
                                        </name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>Hashtable</name>
                </type>
                <name>getUserDataRecord</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>n</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>userData</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Hashtable</name>
                            </type>
                            <name>t</name> =
                            <init>
                                <expr>(<name>Hashtable</name>)
                                    <call>
                                        <name><name>userData</name>.
                                            <name>get</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>n</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>t</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>t</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Remove user data table for the given node.
                * @param n The node this operation applies to.
                * @return The removed table.
                */
            </comment>
            <function>
                <type>
                    <name>Hashtable</name>
                </type>
                <name>removeUserDataTable</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>n</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>userData</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>(<name>Hashtable</name>)
                            <call>
                                <name><name>userData</name>.
                                    <name>get</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>n</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Set user data table for the given node.
                * @param n The node this operation applies to.
                * @param data The user data table.
                */
            </comment>
            <function>
                <type>
                    <name>void</name>
                </type>
                <name>setUserDataTable</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>n</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Hashtable</name>
                            </type>
                            <name>data</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>userData</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <name>userData</name>
                                    = new
                                    <call>
                                        <name>Hashtable</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>data</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>userData</name>.
                                                <name>put</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>n</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>data</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Call user data handlers when a node is deleted (finalized)
                * @param n The node this operation applies to.
                * @param c The copy node or null.
                * @param operation The operation - import, clone, or delete.
                */
            </comment>
            <function>
                <type>
                    <name>void</name>
                </type>
                <name>callUserDataHandlers</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>n</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>c</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>operation</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>userData</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">//Hashtable t = (Hashtable) userData.get(n);</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>n</name>
                                <name>instanceof</name>
                                <name>NodeImpl</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Hashtable</name>
                                        </type>
                                        <name>t</name> =
                                        <init>
                                            <expr>((<name>NodeImpl</name>)<name>n</name>).
                                                <call>
                                                    <name>getUserDataRecord</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>t</name>
                                            == <name>null</name> ||
                                            <call>
                                                <name><name>t</name>.
                                                    <name>isEmpty</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <return>return;</return>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>callUserDataHandlers</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>n</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>c</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>operation</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>t</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Call user data handlers when a node is deleted (finalized)
                * @param n The node this operation applies to.
                * @param c The copy node or null.
                * @param operation The operation - import, clone, or delete.
                * @param handlers Data associated with n.
                */
            </comment>
            <function>
                <type>
                    <name>void</name>
                </type>
                <name>callUserDataHandlers</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>n</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>c</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>operation</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Hashtable</name>
                            </type>
                            <name>userData</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>userData</name>
                                == <name>null</name> ||
                                <call>
                                    <name><name>userData</name>.
                                        <name>isEmpty</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Enumeration</name>
                            </type>
                            <name>keys</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>userData</name>.
                                            <name>keys</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <while>while
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>keys</name>.
                                        <name>hasMoreElements</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>key</name> =
                                    <init>
                                        <expr>(<name>String</name>)
                                            <call>
                                                <name><name>keys</name>.
                                                    <name>nextElement</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>UserDataRecord</name>
                                    </type>
                                    <name>r</name> =
                                    <init>
                                        <expr>(<name>UserDataRecord</name>)
                                            <call>
                                                <name><name>userData</name>.
                                                    <name>get</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>key</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name><name>r</name>.
                                            <name>fHandler</name>
                                        </name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>r</name>.<name>fHandler</name>.
                                                        <name>handle</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>operation</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>key</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>r</name>.
                                                                    <name>fData</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>n</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>c</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </while>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Call user data handlers to let them know the nodes they are related to
                * are being deleted. The alternative would be to do that on Node but
                * because the nodes are used as the keys we have a reference to them that
                * prevents them from being gc'ed until the document is. At the same time,
                * doing it here has the advantage of avoiding a finalize() method on Node,
                * which would affect all nodes and not just the ones that have a user
                * data.
                */
            </comment>
            <comment type="line">// Temporarily comment out this method, because</comment>
            <comment type="line">// 1. It seems that finalizers are not guaranteed to be called, so the</comment>
            <comment type="line">// functionality is not implemented.</comment>
            <comment type="line">// 2. It affects the performance greatly in multi-thread environment.</comment>
            <comment type="line">// -SG</comment>
            <comment type="block">/*public void finalize() {
                if (userData == null) {
                return;
                }
                Enumeration nodes = userData.keys();
                while (nodes.hasMoreElements()) {
                Object node = nodes.nextElement();
                Hashtable t = (Hashtable) userData.get(node);
                if (t != null &amp;&amp; !t.isEmpty()) {
                Enumeration keys = t.keys();
                while (keys.hasMoreElements()) {
                String key = (String) keys.nextElement();
                UserDataRecord r = (UserDataRecord) t.get(key);
                if (r.fHandler != null) {
                r.fHandler.handle(UserDataHandler.NODE_DELETED,
                key, r.fData, null, null);
                }
                }
                }
                }
                }*/
            </comment>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <specifier>final</specifier>
                    <name>void</name>
                </type>
                <name>checkNamespaceWF</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>qname</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>colon1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>colon2</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <if>if
                        <condition>(
                            <expr>!
                                <name>errorChecking</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">// it is an error for NCName to have more than one ':'</comment>
                    <comment type="line">// check if it is valid QName [Namespace in XML production 6]</comment>
                    <comment type="line">// :camera , nikon:camera:minolta, camera:</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>colon1</name>
                                == 0 || <name>colon1</name> ==
                                <call>
                                    <name><name>qname</name>.
                                        <name>length</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                - 1 || <name>colon2</name> !=
                                <name>colon1</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                        </type>
                                        <name>msg</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>formatMessage</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>DOMMessageFormatter</name>.
                                                                    <name>DOM_DOMAIN</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>"NAMESPACE_ERR"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>null</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>DOMException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>DOMException</name>.
                                                            <name>NAMESPACE_ERR</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>msg</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <specifier>final</specifier>
                    <name>void</name>
                </type>
                <name>checkDOMNSErr</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>prefix</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>namespace</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>errorChecking</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>namespace</name>
                                            ==
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>String</name>
                                                    </type>
                                                    <name>msg</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name><name>DOMMessageFormatter</name>.
                                                                    <name>formatMessage</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>DOMMessageFormatter</name>.
                                                                                <name>DOM_DOMAIN</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>"NAMESPACE_ERR"</expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>null</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>DOMException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>DOMException</name>.
                                                                        <name>NAMESPACE_ERR</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>msg</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>prefix</name>.
                                                            <name>equals</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"xml"</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    &amp;&amp; !
                                                    <call>
                                                        <name><name>namespace</name>.
                                                            <name>equals</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>NamespaceContext</name>.
                                                                        <name>XML_URI</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>String</name>
                                                            </type>
                                                            <name>msg</name> =
                                                            <init>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>DOMMessageFormatter</name>.
                                                                            <name>formatMessage</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name><name>
                                                                                        DOMMessageFormatter</name>.
                                                                                        <name>DOM_DOMAIN</name>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>"NAMESPACE_ERR"</expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>null</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>DOMException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>DOMException</name>.
                                                                                <name>NAMESPACE_ERR</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>msg</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <call>
                                                                <name><name>prefix</name>.
                                                                    <name>equals</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"xmlns"</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                            &amp;&amp; !
                                                            <call>
                                                                <name><name>namespace</name>.
                                                                    <name>equals</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>NamespaceContext</name>.
                                                                                <name>XMLNS_URI</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                            || (!
                                                            <call>
                                                                <name><name>prefix</name>.
                                                                    <name>equals</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"xmlns"</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                            &amp;&amp;
                                                            <call>
                                                                <name><name>namespace</name>.
                                                                    <name>equals</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>NamespaceContext</name>.
                                                                                <name>XMLNS_URI</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                            )
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <name>String</name>
                                                                    </type>
                                                                    <name>msg</name> =
                                                                    <init>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>DOMMessageFormatter</name>.
                                                                                    <name>formatMessage</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name><name>
                                                                                                DOMMessageFormatter</name>
                                                                                                .
                                                                                                <name>DOM_DOMAIN</name>
                                                                                            </name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>"NAMESPACE_ERR"</expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>null</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>
                                                            <throw>throw
                                                                <expr>new
                                                                    <call>
                                                                        <name>DOMException</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name><name>DOMException</name>.
                                                                                        <name>NAMESPACE_ERR</name>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>msg</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </throw>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                            </else>
                                        </if>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Checks if the given qualified name is legal with respect
                * to the version of XML to which this document must conform.
                *
                * @param prefix prefix of qualified name
                * @param local local part of qualified name
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <specifier>final</specifier>
                    <name>void</name>
                </type>
                <name>checkQName</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>prefix</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>local</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>!
                                <name>errorChecking</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// check that both prefix and local part match NCName</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>validNCName</name> =
                            <init>
                                <expr>false</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>!
                                <name>xml11Version</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>validNCName</name>
                                        = (<name>prefix</name> == <name>null</name> ||
                                        <call>
                                            <name><name>XMLChar</name>.
                                                <name>isValidNCName</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>prefix</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        )
                                        &amp;&amp;
                                        <call>
                                            <name><name>XMLChar</name>.
                                                <name>isValidNCName</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>local</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>validNCName</name>
                                        = (<name>prefix</name> == <name>null</name> ||
                                        <call>
                                            <name><name>XML11Char</name>.
                                                <name>isXML11ValidNCName</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>prefix</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        )
                                        &amp;&amp;
                                        <call>
                                            <name><name>XML11Char</name>.
                                                <name>isXML11ValidNCName</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>local</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>

                    <if>if
                        <condition>(
                            <expr>!
                                <name>validNCName</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// REVISIT: add qname parameter to the message</comment>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                        </type>
                                        <name>msg</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>formatMessage</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>DOMMessageFormatter</name>.
                                                                    <name>DOM_DOMAIN</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>"INVALID_CHARACTER_ERR"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>null</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>DOMException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>DOMException</name>.
                                                            <name>INVALID_CHARACTER_ERR</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>msg</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * We could have more xml versions in future , but for now we could
                * do with this to handle XML 1.0 and 1.1
                */
            </comment>
            <function>
                <type>
                    <name>boolean</name>
                </type>
                <name>isXML11Version</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>xml11Version</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <name>boolean</name>
                </type>
                <name>isNormalizeDocRequired</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <comment type="line">// REVISIT: Implement to optimize when normalization</comment>
                    <comment type="line">// is required</comment>
                    <return>return <expr>true</expr>;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">//we should be checking the (elements, attribute, entity etc.) names only when
            </comment>
            <comment type="line">//version of the document is changed.</comment>
            <function>
                <type>
                    <name>boolean</name>
                </type>
                <name>isXMLVersionChanged</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>xmlVersionChanged</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * NON-DOM: kept for backward compatibility
                * Store user data related to a given node
                * This is a place where we could use weak references! Indeed, the node
                * here won't be GC'ed as long as some user data is attached to it, since
                * the userData table will have a reference to the node.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>setUserData</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>NodeImpl</name>
                            </type>
                            <name>n</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>data</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setUserData</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>n</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"XERCES1DOMUSERDATA"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>data</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * NON-DOM: kept for backward compatibility
                * Retreive user data related to a given node
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>Object</name>
                </type>
                <name>getUserData</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>NodeImpl</name>
                            </type>
                            <name>n</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getUserData</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>n</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"XERCES1DOMUSERDATA"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <comment type="line">// Event related methods overidden in subclass</comment>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>addEventListener</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>NodeImpl</name>
                            </type>
                            <name>node</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>EventListener</name>
                            </type>
                            <name>listener</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>useCapture</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// does nothing by default - overidden in subclass</comment>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>removeEventListener</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>NodeImpl</name>
                            </type>
                            <name>node</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>EventListener</name>
                            </type>
                            <name>listener</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>useCapture</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// does nothing by default - overidden in subclass</comment>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>copyEventListeners</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>NodeImpl</name>
                            </type>
                            <name>src</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>NodeImpl</name>
                            </type>
                            <name>tgt</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// does nothing by default - overidden in subclass</comment>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>boolean</name>
                </type>
                <name>dispatchEvent</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>NodeImpl</name>
                            </type>
                            <name>node</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Event</name>
                            </type>
                            <name>event</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// does nothing by default - overidden in subclass</comment>
                    <return>return <expr>false</expr>;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">// Notification methods overidden in subclasses</comment>

            <comment type="javadoc">/**
                * A method to be called when some text was changed in a text node,
                * so that live objects can be notified.
                */
            </comment>
            <function>
                <type>
                    <name>void</name>
                </type>
                <name>replacedText</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>NodeImpl</name>
                            </type>
                            <name>node</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * A method to be called when some text was deleted from a text node,
                * so that live objects can be notified.
                */
            </comment>
            <function>
                <type>
                    <name>void</name>
                </type>
                <name>deletedText</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>NodeImpl</name>
                            </type>
                            <name>node</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>offset</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>count</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * A method to be called when some text was inserted into a text node,
                * so that live objects can be notified.
                */
            </comment>
            <function>
                <type>
                    <name>void</name>
                </type>
                <name>insertedText</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>NodeImpl</name>
                            </type>
                            <name>node</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>offset</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>count</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * A method to be called when a character data node is about to be modified
                */
            </comment>
            <function>
                <type>
                    <name>void</name>
                </type>
                <name>modifyingCharacterData</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>NodeImpl</name>
                            </type>
                            <name>node</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>replace</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * A method to be called when a character data node has been modified
                */
            </comment>
            <function>
                <type>
                    <name>void</name>
                </type>
                <name>modifiedCharacterData</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>NodeImpl</name>
                            </type>
                            <name>node</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>oldvalue</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>replace</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * A method to be called when a node is about to be inserted in the tree.
                */
            </comment>
            <function>
                <type>
                    <name>void</name>
                </type>
                <name>insertingNode</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>NodeImpl</name>
                            </type>
                            <name>node</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>replace</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * A method to be called when a node has been inserted in the tree.
                */
            </comment>
            <function>
                <type>
                    <name>void</name>
                </type>
                <name>insertedNode</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>NodeImpl</name>
                            </type>
                            <name>node</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>NodeImpl</name>
                            </type>
                            <name>newInternal</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>replace</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * A method to be called when a node is about to be removed from the tree.
                */
            </comment>
            <function>
                <type>
                    <name>void</name>
                </type>
                <name>removingNode</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>NodeImpl</name>
                            </type>
                            <name>node</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>NodeImpl</name>
                            </type>
                            <name>oldChild</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>replace</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * A method to be called when a node has been removed from the tree.
                */
            </comment>
            <function>
                <type>
                    <name>void</name>
                </type>
                <name>removedNode</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>NodeImpl</name>
                            </type>
                            <name>node</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>replace</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * A method to be called when a node is about to be replaced in the tree.
                */
            </comment>
            <function>
                <type>
                    <name>void</name>
                </type>
                <name>replacingNode</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>NodeImpl</name>
                            </type>
                            <name>node</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * A method to be called when a node has been replaced in the tree.
                */
            </comment>
            <function>
                <type>
                    <name>void</name>
                </type>
                <name>replacedNode</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>NodeImpl</name>
                            </type>
                            <name>node</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * A method to be called when a character data node is about to be replaced
                */
            </comment>
            <function>
                <type>
                    <name>void</name>
                </type>
                <name>replacingData</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>NodeImpl</name>
                            </type>
                            <name>node</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * method to be called when a character data node has been replaced.
                */
            </comment>
            <function>
                <type>
                    <name>void</name>
                </type>
                <name>replacedCharacterData</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>NodeImpl</name>
                            </type>
                            <name>node</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>oldvalue</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * A method to be called when an attribute value has been modified
                */
            </comment>
            <function>
                <type>
                    <name>void</name>
                </type>
                <name>modifiedAttrValue</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>AttrImpl</name>
                            </type>
                            <name>attr</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>oldvalue</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * A method to be called when an attribute node has been set
                */
            </comment>
            <function>
                <type>
                    <name>void</name>
                </type>
                <name>setAttrNode</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>AttrImpl</name>
                            </type>
                            <name>attr</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>AttrImpl</name>
                            </type>
                            <name>previous</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * A method to be called when an attribute node has been removed
                */
            </comment>
            <function>
                <type>
                    <name>void</name>
                </type>
                <name>removedAttrNode</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>AttrImpl</name>
                            </type>
                            <name>attr</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>NodeImpl</name>
                            </type>
                            <name>oldOwner</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * A method to be called when an attribute node has been renamed
                */
            </comment>
            <function>
                <type>
                    <name>void</name>
                </type>
                <name>renamedAttrNode</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Attr</name>
                            </type>
                            <name>oldAt</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Attr</name>
                            </type>
                            <name>newAt</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * A method to be called when an element has been renamed
                */
            </comment>
            <function>
                <type>
                    <name>void</name>
                </type>
                <name>renamedElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Element</name>
                            </type>
                            <name>oldEl</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Element</name>
                            </type>
                            <name>newEl</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    }
                </block>
            </function>

            }
        </block>
    </class>
    <comment type="line">// class CoreDocumentImpl</comment>
</unit>
