<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\dom3\as\DOMASException.java">
    <comment type="block">/*
        * Copyright (c) 2001 World Wide Web Consortium,
        * (Massachusetts Institute of Technology, Institut National de
        * Recherche en Informatique et en Automatique, Keio University). All
        * Rights Reserved. This program is distributed under the W3C's Software
        * Intellectual Property License. This program is distributed in the
        * hope that it will be useful, but WITHOUT ANY WARRANTY; without even
        * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
        * PURPOSE.
        * See W3C License http://www.w3.org/Consortium/Legal/ for more details.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>dom3</name>.
            <name>as</name>
        </name>
        ;
    </package>

    <comment type="javadoc">/**
        * @deprecated
        * Abstract Schemas operations may throw a &lt;code&gt;DOMSystemException&lt;/code&gt; as
        * described in their descriptions.
        * &lt;p&gt;See also the &lt;a href='http://www.w3.org/TR/2001/WD-DOM-Level-3-ASLS-20011025'&gt;Document Object
        Model (DOM) Level 3 Abstract Schemas and Load
        and Save Specification&lt;/a&gt;.
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>DOMASException</name>
        <super>
            <extends>extends
                <name>RuntimeException</name>
            </extends>
        </super>
        <block>{
            <constructor>
                <specifier>public</specifier>
                <name>DOMASException</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>code</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>message</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>super</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>message</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>code</name>
                            </name>
                            =
                            <name>code</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <name>short</name>
                    </type>
                    <name>code</name>
                </decl>
                ;
            </decl_stmt>
            <comment type="line">// ASExceptionCode</comment>
            <comment type="javadoc">/**
                * If an element declaration already exists with the same name within an
                * &lt;code&gt;AS_CHOICE&lt;/code&gt; operator.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>DUPLICATE_NAME_ERR</name>        =
                    <init>
                        <expr>1</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * If the type of the &lt;code&gt;ASObject&lt;/code&gt; is neither an
                * &lt;code&gt;ASContentModel&lt;/code&gt; nor an &lt;code&gt;ASElementDeclaration&lt;/code&gt;.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>TYPE_ERR</name>                  =
                    <init>
                        <expr>2</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * If the &lt;code&gt;DocumentEditAS&lt;/code&gt; related to the node does not have
                * any active &lt;code&gt;ASModel&lt;/code&gt; and &lt;code&gt;wfValidityCheckLevel&lt;/code&gt;
                * is set to &lt;code&gt;PARTIAL&lt;/code&gt; or &lt;code&gt;STRICT_VALIDITY_CHECK&lt;/code&gt;.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>NO_AS_AVAILABLE</name>           =
                    <init>
                        <expr>3</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * When &lt;code&gt;mimeTypeCheck&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; and the input
                * source has an incorrect MIME Type. See the attribute
                * &lt;code&gt;mimeTypeCheck&lt;/code&gt;.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>WRONG_MIME_TYPE_ERR</name>       =
                    <init>
                        <expr>4</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            }
        </block>
    </class>
</unit>
