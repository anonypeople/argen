<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\dom\DOMErrorImpl.java">
    <comment type="block">/*
        * Copyright 2001, 2002,2004 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.
            <name>dom</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>DOMError</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>DOMLocator</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLParseException</name>
        </name>
        ;
    </import>


    <comment type="javadoc">/**
        * &lt;code&gt;DOMErrorImpl&lt;/code&gt; is an implementation that describes an error.
        * &lt;strong&gt;Note:&lt;/strong&gt; The error object that describes the error
        * might be reused by Xerces implementation, across multiple calls to the
        * handleEvent method on DOMErrorHandler interface.
        *
        *
        * &lt;p&gt;See also the &lt;a href='http://www.w3.org/TR/2001/WD-DOM-Level-3-Core-20010913'&gt;Document Object
        Model (DOM) Level 3 Core Specification&lt;/a&gt;.
        *
        * @xerces.internal
        *
        * @author Gopal Sharma, SUN Microsystems Inc.
        * @author Elena Litani, IBM
        *
        * @version $Id: DOMErrorImpl.java,v 1.14 2005/05/02 22:02:22 mrglavas Exp $
        */
    </comment>

    <comment type="line">// REVISIT: the implementation of ErrorReporter.</comment>
    <comment type="line">// we probably should not pass XMLParseException</comment>
    <comment type="line">//</comment>

    <class>
        <specifier>public</specifier>
        class <name>DOMErrorImpl</name>
        <super>
            <implements>implements
                <name>DOMError</name>
            </implements>
        </super>
        <block>{

            <comment type="line">//</comment>
            <comment type="line">// Data</comment>
            <comment type="line">//</comment>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <name>short</name>
                    </type>
                    <name>fSeverity</name> =
                    <init>
                        <expr>
                            <name><name>DOMError</name>.
                                <name>SEVERITY_WARNING</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <name>String</name>
                    </type>
                    <name>fMessage</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <name>DOMLocatorImpl</name>
                    </type>
                    <name>fLocator</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>DOMLocatorImpl</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <name>Exception</name>
                    </type>
                    <name>fException</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <name>String</name>
                    </type>
                    <name>fType</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <name>Object</name>
                    </type>
                    <name>fRelatedData</name>
                </decl>
                ;
            </decl_stmt>


            <comment type="line">//</comment>
            <comment type="line">// Constructors</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/** Default constructor. */</comment>
            <constructor>
                <specifier>public</specifier>
                <name>DOMErrorImpl</name>
                <parameter_list>()</parameter_list>
                <block>{
                    }
                </block>
            </constructor>

            <comment type="javadoc">/** Exctracts information from XMLParserException) */</comment>
            <constructor>
                <specifier>public</specifier>
                <name>DOMErrorImpl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>severity</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLParseException</name>
                            </type>
                            <name>exception</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fSeverity</name>
                            =
                            <name>severity</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fException</name>
                            =
                            <name>exception</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fLocator</name>
                            =
                            <call>
                                <name>createDOMLocator</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>exception</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * The severity of the error, either &lt;code&gt;SEVERITY_WARNING&lt;/code&gt;,
                * &lt;code&gt;SEVERITY_ERROR&lt;/code&gt;, or &lt;code&gt;SEVERITY_FATAL_ERROR&lt;/code&gt;.
                */
            </comment>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>short</name>
                </type>
                <name>getSeverity</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fSeverity</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * An implementation specific string describing the error that occured.
                */
            </comment>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getMessage</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fMessage</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * The location of the error.
                */
            </comment>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>DOMLocator</name>
                </type>
                <name>getLocation</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fLocator</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">// method to get the DOMLocator Object</comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>DOMLocatorImpl</name>
                </type>
                <name>createDOMLocator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLParseException</name>
                            </type>
                            <name>exception</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// assuming DOMLocator wants the *expanded*, not the literal, URI of the doc...
                        - neilg
                    </comment>
                    <return>return
                        <expr>new
                            <call>
                                <name>DOMLocatorImpl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>exception</name>.
                                                    <name>getLineNumber</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>exception</name>.
                                                    <name>getColumnNumber</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>exception</name>.
                                                    <name>getCharacterOffset</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>exception</name>.
                                                    <name>getExpandedSystemId</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// createDOMLocator()</comment>


            <comment type="javadoc">/**
                * The related platform dependent exception if any.exception is a reserved
                * word, we need to rename it.Change to "relatedException". (F2F 26 Sep
                * 2001)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Object</name>
                </type>
                <name>getRelatedException</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fException</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>reset</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fSeverity</name>
                            =
                            <name><name>DOMError</name>.
                                <name>SEVERITY_WARNING</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fException</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getType</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fType</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Object</name>
                </type>
                <name>getRelatedData</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fRelatedData</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            }
        </block>
    </class>
    <comment type="line">// class DOMErrorImpl</comment>
</unit>
