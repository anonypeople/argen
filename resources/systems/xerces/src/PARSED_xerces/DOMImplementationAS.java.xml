<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\dom3\as\DOMImplementationAS.java">
    <comment type="block">/*
        * Copyright (c) 2001 World Wide Web Consortium,
        * (Massachusetts Institute of Technology, Institut National de
        * Recherche en Informatique et en Automatique, Keio University). All
        * Rights Reserved. This program is distributed under the W3C's Software
        * Intellectual Property License. This program is distributed in the
        * hope that it will be useful, but WITHOUT ANY WARRANTY; without even
        * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
        * PURPOSE.
        * See W3C License http://www.w3.org/Consortium/Legal/ for more details.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>dom3</name>.
            <name>as</name>
        </name>
        ;
    </package>

    <comment type="javadoc">/**
        * @deprecated
        * This interface allows creation of an &lt;code&gt;ASModel&lt;/code&gt;. The expectation
        * is that an instance of the &lt;code&gt;DOMImplementationAS&lt;/code&gt; interface can
        * be obtained by using binding-specific casting methods on an instance of
        * the &lt;code&gt;DOMImplementation&lt;/code&gt; interface when the DOM implementation
        * supports the feature "&lt;code&gt;AS-EDIT&lt;/code&gt;".
        * &lt;p&gt;See also the &lt;a href='http://www.w3.org/TR/2001/WD-DOM-Level-3-ASLS-20011025'&gt;Document Object
        Model (DOM) Level 3 Abstract Schemas and Load
        and Save Specification&lt;/a&gt;.
        */
    </comment>
    <class type="interface">
        <specifier>public</specifier>
        interface <name>DOMImplementationAS</name>
        <block>{
            <comment type="javadoc">/**
                * Creates an ASModel.
                * @param isNamespaceAware Allow creation of &lt;code&gt;ASModel&lt;/code&gt; with
                * this attribute set to a specific value.
                * @return A &lt;code&gt;null&lt;/code&gt; return indicates failure.what is a
                * failure? Could be a system error.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>ASModel</name>
                </type>
                <name>createAS</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>isNamespaceAware</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Creates an &lt;code&gt;DOMASBuilder&lt;/code&gt;.Do we need the method since we
                * already have &lt;code&gt;DOMImplementationLS.createDOMParser&lt;/code&gt;?
                * @return a DOMASBuilder
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>DOMASBuilder</name>
                </type>
                <name>createDOMASBuilder</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Creates an &lt;code&gt;DOMASWriter&lt;/code&gt;.
                * @return a DOMASWriter
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>DOMASWriter</name>
                </type>
                <name>createDOMASWriter</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            }
        </block>
    </class>
</unit>
