<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\parsers\DTDConfiguration.java">
    <comment type="block">/*
        * Copyright 2001-2004 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.
            <name>parsers</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>IOException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Locale</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.
            <name>Constants</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.
            <name>XMLDTDScannerImpl</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.
            <name>XMLDocumentScannerImpl</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.
            <name>XMLEntityManager</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.
            <name>XMLErrorReporter</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.
            <name>XMLNamespaceBinder</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>dtd</name>.
            <name>XMLDTDProcessor</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>dtd</name>.
            <name>XMLDTDValidator</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>dv</name>.
            <name>DTDDVFactory</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>msg</name>.
            <name>XMLMessageFormatter</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>validation</name>.
            <name>ValidationManager</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>SymbolTable</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XMLLocator</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XNIException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>grammars</name>.
            <name>XMLGrammarPool</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLComponent</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLComponentManager</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLConfigurationException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLDTDScanner</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLDocumentScanner</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLInputSource</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLPullParserConfiguration</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * This is the DTD-only parser configuration. It extends the basic
        * configuration with a standard set of parser components appropriate
        * to DTD-centric validation. Since
        * the Xerces2 reference implementation document and DTD scanner
        * implementations are capable of acting as pull parsers, this
        * configuration implements the
        * &lt;code&gt;XMLPullParserConfiguration&lt;/code&gt; interface.
        * &lt;p&gt;
        * In addition to the features and properties recognized by the base
        * parser configuration, this class recognizes these additional
        * features and properties:
        * &lt;ul&gt;
        * &lt;li&gt;Features
        * &lt;ul&gt;
        * &lt;li&gt;http://apache.org/xml/features/validation/warn-on-duplicate-attdef&lt;/li&gt;
        * &lt;li&gt;http://apache.org/xml/features/validation/warn-on-undeclared-elemdef&lt;/li&gt;
        * &lt;li&gt;http://apache.org/xml/features/allow-java-encodings&lt;/li&gt;
        * &lt;li&gt;http://apache.org/xml/features/continue-after-fatal-error&lt;/li&gt;
        * &lt;li&gt;http://apache.org/xml/features/load-external-dtd&lt;/li&gt;
        * &lt;/ul&gt;
        * &lt;li&gt;Properties
        * &lt;ul&gt;
        * &lt;li&gt;http://apache.org/xml/properties/internal/error-reporter&lt;/li&gt;
        * &lt;li&gt;http://apache.org/xml/properties/internal/entity-manager&lt;/li&gt;
        * &lt;li&gt;http://apache.org/xml/properties/internal/document-scanner&lt;/li&gt;
        * &lt;li&gt;http://apache.org/xml/properties/internal/dtd-scanner&lt;/li&gt;
        * &lt;li&gt;http://apache.org/xml/properties/internal/grammar-pool&lt;/li&gt;
        * &lt;li&gt;http://apache.org/xml/properties/internal/validator/dtd&lt;/li&gt;
        * &lt;li&gt;http://apache.org/xml/properties/internal/datatype-validator-factory&lt;/li&gt;
        * &lt;/ul&gt;
        * &lt;/ul&gt;
        *
        * @author Arnaud Le Hors, IBM
        * @author Andy Clark, IBM
        * @author Neil Graham, IBM
        *
        * @version $Id: DTDConfiguration.java,v 1.18 2004/02/24 23:15:57 mrglavas Exp $
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class
        <name>DTDConfiguration</name>
        <super>
            <extends>extends
                <name>BasicParserConfiguration</name>
            </extends>
            <implements>implements
                <name>XMLPullParserConfiguration</name>
            </implements>
        </super>
        <block>{

            <comment type="line">//</comment>
            <comment type="line">// Constants</comment>
            <comment type="line">//</comment>

            <comment type="line">// feature identifiers</comment>

            <comment type="javadoc">/** Feature identifier: warn on duplicate attribute definition. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>WARN_ON_DUPLICATE_ATTDEF</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_FEATURE_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>WARN_ON_DUPLICATE_ATTDEF_FEATURE</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Feature identifier: warn on duplicate entity definition. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>WARN_ON_DUPLICATE_ENTITYDEF</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_FEATURE_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>WARN_ON_DUPLICATE_ENTITYDEF_FEATURE</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Feature identifier: warn on undeclared element definition. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>WARN_ON_UNDECLARED_ELEMDEF</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_FEATURE_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>WARN_ON_UNDECLARED_ELEMDEF_FEATURE</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Feature identifier: allow Java encodings. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>ALLOW_JAVA_ENCODINGS</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_FEATURE_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>ALLOW_JAVA_ENCODINGS_FEATURE</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Feature identifier: continue after fatal error. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>CONTINUE_AFTER_FATAL_ERROR</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_FEATURE_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>CONTINUE_AFTER_FATAL_ERROR_FEATURE</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Feature identifier: load external DTD. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>LOAD_EXTERNAL_DTD</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_FEATURE_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>LOAD_EXTERNAL_DTD_FEATURE</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Feature identifier: notify built-in refereces. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>NOTIFY_BUILTIN_REFS</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_FEATURE_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>NOTIFY_BUILTIN_REFS_FEATURE</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Feature identifier: notify character refereces. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>NOTIFY_CHAR_REFS</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_FEATURE_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>NOTIFY_CHAR_REFS_FEATURE</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>


            <comment type="line">// property identifiers</comment>

            <comment type="javadoc">/** Property identifier: error reporter. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>ERROR_REPORTER</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_PROPERTY_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>ERROR_REPORTER_PROPERTY</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Property identifier: entity manager. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>ENTITY_MANAGER</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_PROPERTY_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>ENTITY_MANAGER_PROPERTY</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Property identifier document scanner: */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>DOCUMENT_SCANNER</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_PROPERTY_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>DOCUMENT_SCANNER_PROPERTY</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Property identifier: DTD scanner. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>DTD_SCANNER</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_PROPERTY_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>DTD_SCANNER_PROPERTY</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Property identifier: grammar pool. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>XMLGRAMMAR_POOL</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_PROPERTY_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>XMLGRAMMAR_POOL_PROPERTY</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Property identifier: DTD loader. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>DTD_PROCESSOR</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_PROPERTY_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>DTD_PROCESSOR_PROPERTY</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Property identifier: DTD validator. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>DTD_VALIDATOR</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_PROPERTY_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>DTD_VALIDATOR_PROPERTY</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Property identifier: namespace binder. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>NAMESPACE_BINDER</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_PROPERTY_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>NAMESPACE_BINDER_PROPERTY</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Property identifier: datatype validator factory. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>DATATYPE_VALIDATOR_FACTORY</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_PROPERTY_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>DATATYPE_VALIDATOR_FACTORY_PROPERTY</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>VALIDATION_MANAGER</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_PROPERTY_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>VALIDATION_MANAGER_PROPERTY</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Property identifier: JAXP schema language / DOM schema-type. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>JAXP_SCHEMA_LANGUAGE</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>JAXP_PROPERTY_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>SCHEMA_LANGUAGE</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Property identifier: JAXP schema source/ DOM schema-location. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>JAXP_SCHEMA_SOURCE</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>JAXP_PROPERTY_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>SCHEMA_SOURCE</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>


            <comment type="line">// debugging</comment>

            <comment type="javadoc">/** Set to true and recompile to print exception stack trace. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>boolean</name>
                    </type>
                    <name>PRINT_EXCEPTION_STACK_TRACE</name> =
                    <init>
                        <expr>false</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">//</comment>
            <comment type="line">// Data</comment>
            <comment type="line">//</comment>

            <comment type="line">// components (non-configurable)</comment>

            <comment type="javadoc">/** Grammar pool. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XMLGrammarPool</name>
                    </type>
                    <name>fGrammarPool</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Datatype validator factory. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>DTDDVFactory</name>
                    </type>
                    <name>fDatatypeValidatorFactory</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// components (configurable)</comment>

            <comment type="javadoc">/** Error reporter. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XMLErrorReporter</name>
                    </type>
                    <name>fErrorReporter</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Entity manager. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XMLEntityManager</name>
                    </type>
                    <name>fEntityManager</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Document scanner. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XMLDocumentScanner</name>
                    </type>
                    <name>fScanner</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Input Source */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XMLInputSource</name>
                    </type>
                    <name>fInputSource</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** DTD scanner. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XMLDTDScanner</name>
                    </type>
                    <name>fDTDScanner</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** DTD Processor . */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XMLDTDProcessor</name>
                    </type>
                    <name>fDTDProcessor</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** DTD Validator. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XMLDTDValidator</name>
                    </type>
                    <name>fDTDValidator</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Namespace binder. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XMLNamespaceBinder</name>
                    </type>
                    <name>fNamespaceBinder</name>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>ValidationManager</name>
                    </type>
                    <name>fValidationManager</name>
                </decl>
                ;
            </decl_stmt>
            <comment type="line">// state</comment>

            <comment type="javadoc">/** Locator */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XMLLocator</name>
                    </type>
                    <name>fLocator</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * True if a parse is in progress. This state is needed because
                * some features/properties cannot be set while parsing (e.g.
                * validation and namespaces).
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fParseInProgress</name> =
                    <init>
                        <expr>false</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">//</comment>
            <comment type="line">// Constructors</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/** Default constructor. */</comment>
            <constructor>
                <specifier>public</specifier>
                <name>DTDConfiguration</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>this</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>
            <comment type="line">// &lt;init&gt;()</comment>

            <comment type="javadoc">/**
                * Constructs a parser configuration using the specified symbol table.
                *
                * @param symbolTable The symbol table to use.
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>DTDConfiguration</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>SymbolTable</name>
                            </type>
                            <name>symbolTable</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>this</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>symbolTable</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>
            <comment type="line">// &lt;init&gt;(SymbolTable)</comment>

            <comment type="javadoc">/**
                * Constructs a parser configuration using the specified symbol table and
                * grammar pool.
                * &lt;p&gt;
                * &lt;strong&gt;REVISIT:&lt;/strong&gt;
                * Grammar pool will be updated when the new validation engine is
                * implemented.
                *
                * @param symbolTable The symbol table to use.
                * @param grammarPool The grammar pool to use.
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>DTDConfiguration</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>SymbolTable</name>
                            </type>
                            <name>symbolTable</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLGrammarPool</name>
                            </type>
                            <name>grammarPool</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>this</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>symbolTable</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>grammarPool</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>
            <comment type="line">// &lt;init&gt;(SymbolTable,XMLGrammarPool)</comment>

            <comment type="javadoc">/**
                * Constructs a parser configuration using the specified symbol table,
                * grammar pool, and parent settings.
                * &lt;p&gt;
                * &lt;strong&gt;REVISIT:&lt;/strong&gt;
                * Grammar pool will be updated when the new validation engine is
                * implemented.
                *
                * @param symbolTable The symbol table to use.
                * @param grammarPool The grammar pool to use.
                * @param parentSettings The parent settings.
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>DTDConfiguration</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>SymbolTable</name>
                            </type>
                            <name>symbolTable</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLGrammarPool</name>
                            </type>
                            <name>grammarPool</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLComponentManager</name>
                            </type>
                            <name>parentSettings</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>super</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>symbolTable</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>parentSettings</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// add default recognized features</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>String</name>
                                <index>[]</index>
                            </type>
                            <name>recognizedFeatures</name> =
                            <init>
                                <expr>
                                    <block>{
                                        <comment type="line">//WARN_ON_DUPLICATE_ATTDEF, // from XMLDTDScannerImpl
                                        </comment>
                                        <comment type="line">//WARN_ON_UNDECLARED_ELEMDEF, // from XMLDTDScannerImpl
                                        </comment>
                                        <comment type="line">//ALLOW_JAVA_ENCODINGS, // from XMLEntityManager</comment>
                                        <expr>
                                            <name>CONTINUE_AFTER_FATAL_ERROR</name>
                                        </expr>
                                        ,
                                        <expr>
                                            <name>LOAD_EXTERNAL_DTD</name>
                                        </expr>
                                        ,
                                        <comment type="line">// from XMLDTDScannerImpl</comment>
                                        <comment type="line">//NOTIFY_BUILTIN_REFS, // from
                                            XMLDocumentFragmentScannerImpl
                                        </comment>
                                        <comment type="line">//NOTIFY_CHAR_REFS, // from
                                            XMLDocumentFragmentScannerImpl
                                        </comment>
                                        <comment type="line">//WARN_ON_DUPLICATE_ENTITYDEF, // from XMLEntityManager
                                        </comment>
                                        }
                                    </block>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>addRecognizedFeatures</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>recognizedFeatures</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// set state for default features</comment>
                    <comment type="line">//setFeature(WARN_ON_DUPLICATE_ATTDEF, false); // from XMLDTDScannerImpl
                    </comment>
                    <comment type="line">//setFeature(WARN_ON_UNDECLARED_ELEMDEF, false); // from XMLDTDScannerImpl
                    </comment>
                    <comment type="line">//setFeature(ALLOW_JAVA_ENCODINGS, false); // from XMLEntityManager</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setFeature</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>CONTINUE_AFTER_FATAL_ERROR</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setFeature</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>LOAD_EXTERNAL_DTD</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// from XMLDTDScannerImpl</comment>
                    <comment type="line">//setFeature(NOTIFY_BUILTIN_REFS, false); // from
                        XMLDocumentFragmentScannerImpl
                    </comment>
                    <comment type="line">//setFeature(NOTIFY_CHAR_REFS, false); // from XMLDocumentFragmentScannerImpl
                    </comment>
                    <comment type="line">//setFeature(WARN_ON_DUPLICATE_ENTITYDEF, false); // from XMLEntityManager
                    </comment>

                    <comment type="line">// add default recognized properties</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>String</name>
                                <index>[]</index>
                            </type>
                            <name>recognizedProperties</name> =
                            <init>
                                <expr>
                                    <block>{
                                        <expr>
                                            <name>ERROR_REPORTER</name>
                                        </expr>
                                        ,
                                        <expr>
                                            <name>ENTITY_MANAGER</name>
                                        </expr>
                                        ,
                                        <expr>
                                            <name>DOCUMENT_SCANNER</name>
                                        </expr>
                                        ,
                                        <expr>
                                            <name>DTD_SCANNER</name>
                                        </expr>
                                        ,
                                        <expr>
                                            <name>DTD_PROCESSOR</name>
                                        </expr>
                                        ,
                                        <expr>
                                            <name>DTD_VALIDATOR</name>
                                        </expr>
                                        ,
                                        <expr>
                                            <name>NAMESPACE_BINDER</name>
                                        </expr>
                                        ,
                                        <expr>
                                            <name>XMLGRAMMAR_POOL</name>
                                        </expr>
                                        ,
                                        <expr>
                                            <name>DATATYPE_VALIDATOR_FACTORY</name>
                                        </expr>
                                        ,
                                        <expr>
                                            <name>VALIDATION_MANAGER</name>
                                        </expr>
                                        ,
                                        <expr>
                                            <name>JAXP_SCHEMA_SOURCE</name>
                                        </expr>
                                        ,
                                        <expr>
                                            <name>JAXP_SCHEMA_LANGUAGE</name>
                                        </expr>
                                        }
                                    </block>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>addRecognizedProperties</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>recognizedProperties</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name>fGrammarPool</name>
                            =
                            <name>grammarPool</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fGrammarPool</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>setProperty</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>XMLGRAMMAR_POOL</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>fGrammarPool</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <expr_stmt>
                        <expr>
                            <name>fEntityManager</name>
                            =
                            <call>
                                <name>createEntityManager</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setProperty</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>ENTITY_MANAGER</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fEntityManager</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>addComponent</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>fEntityManager</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name>fErrorReporter</name>
                            =
                            <call>
                                <name>createErrorReporter</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fErrorReporter</name>.
                                    <name>setDocumentLocator</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>fEntityManager</name>.
                                                    <name>getEntityScanner</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setProperty</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>ERROR_REPORTER</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fErrorReporter</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>addComponent</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>fErrorReporter</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name>fScanner</name>
                            =
                            <call>
                                <name>createDocumentScanner</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setProperty</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>DOCUMENT_SCANNER</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fScanner</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fScanner</name>
                                <name>instanceof</name>
                                <name>XMLComponent</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>addComponent</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>(<name>XMLComponent</name>)
                                                        <name>fScanner</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <expr_stmt>
                        <expr>
                            <name>fDTDScanner</name>
                            =
                            <call>
                                <name>createDTDScanner</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDScanner</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>setProperty</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>DTD_SCANNER</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>fDTDScanner</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fDTDScanner</name>
                                            <name>instanceof</name>
                                            <name>XMLComponent</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>addComponent</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>(<name>XMLComponent</name>)
                                                                    <name>fDTDScanner</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <expr_stmt>
                        <expr>
                            <name>fDTDProcessor</name>
                            =
                            <call>
                                <name>createDTDProcessor</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDProcessor</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>setProperty</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>DTD_PROCESSOR</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>fDTDProcessor</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fDTDProcessor</name>
                                            <name>instanceof</name>
                                            <name>XMLComponent</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>addComponent</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>(<name>XMLComponent</name>)
                                                                    <name>fDTDProcessor</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <expr_stmt>
                        <expr>
                            <name>fDTDValidator</name>
                            =
                            <call>
                                <name>createDTDValidator</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDValidator</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>setProperty</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>DTD_VALIDATOR</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>fDTDValidator</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>addComponent</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fDTDValidator</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <expr_stmt>
                        <expr>
                            <name>fNamespaceBinder</name>
                            =
                            <call>
                                <name>createNamespaceBinder</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fNamespaceBinder</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>setProperty</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>NAMESPACE_BINDER</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>fNamespaceBinder</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>addComponent</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fNamespaceBinder</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <expr_stmt>
                        <expr>
                            <name>fDatatypeValidatorFactory</name>
                            =
                            <call>
                                <name>createDatatypeValidatorFactory</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDatatypeValidatorFactory</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>setProperty</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>DATATYPE_VALIDATOR_FACTORY</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>fDatatypeValidatorFactory</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name>fValidationManager</name>
                            =
                            <call>
                                <name>createValidationManager</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <name>fValidationManager</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>setProperty</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>VALIDATION_MANAGER</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>fValidationManager</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">// add message formatters</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>fErrorReporter</name>.
                                        <name>getMessageFormatter</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>XMLMessageFormatter</name>.
                                                    <name>XML_DOMAIN</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>XMLMessageFormatter</name>
                                        </type>
                                        <name>xmft</name> =
                                        <init>
                                            <expr>new
                                                <call>
                                                    <name>XMLMessageFormatter</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fErrorReporter</name>.
                                                <name>putMessageFormatter</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>XMLMessageFormatter</name>.
                                                            <name>XML_DOMAIN</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>xmft</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fErrorReporter</name>.
                                                <name>putMessageFormatter</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>XMLMessageFormatter</name>.
                                                            <name>XMLNS_DOMAIN</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>xmft</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// set locale</comment>
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>setLocale</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>Locale</name>.
                                                            <name>getDefault</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XNIException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <comment type="line">// do nothing</comment>
                                <comment type="line">// REVISIT: What is the right thing to do? -Ac</comment>
                                }
                            </block>
                        </catch>
                    </try>

                    }
                </block>
            </constructor>
            <comment type="line">// &lt;init&gt;(SymbolTable,XMLGrammarPool)</comment>

            <comment type="line">//</comment>
            <comment type="line">// Public methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * Set the locale to use for messages.
                *
                * @param locale The locale object to use for localization of messages.
                *
                * @exception XNIException Thrown if the parser does not support the
                * specified locale.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setLocale</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Locale</name>
                            </type>
                            <name>locale</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>super</name>.
                                    <name>setLocale</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>locale</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fErrorReporter</name>.
                                    <name>setLocale</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>locale</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="line">// setLocale(Locale)</comment>

            <comment type="line">//</comment>
            <comment type="line">// XMLPullParserConfiguration methods</comment>
            <comment type="line">//</comment>

            <comment type="line">// parsing</comment>

            <comment type="javadoc">/**
                * Sets the input source for the document to parse.
                *
                * @param inputSource The document's input source.
                *
                * @exception XMLConfigurationException Thrown if there is a
                * configuration error when initializing the
                * parser.
                * @exception IOException Thrown on I/O error.
                *
                * @see #parse(boolean)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setInputSource</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLInputSource</name>
                            </type>
                            <name>inputSource</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XMLConfigurationException</name>
                        </expr>
                    </argument>
                    ,
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// REVISIT: this method used to reset all the components and</comment>
                    <comment type="line">// construct the pipeline. Now reset() is called</comment>
                    <comment type="line">// in parse (boolean) just before we parse the document</comment>
                    <comment type="line">// Should this method still throw exceptions..?</comment>

                    <expr_stmt>
                        <expr>
                            <name>fInputSource</name>
                            =
                            <name>inputSource</name>
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </function>
            <comment type="line">// setInputSource(XMLInputSource)</comment>

            <comment type="javadoc">/**
                * Parses the document in a pull parsing fashion.
                *
                * @param complete True if the pull parser should parse the
                * remaining document completely.
                *
                * @return True if there is more document to parse.
                *
                * @exception XNIException Any XNI exception, possibly wrapping
                * another exception.
                * @exception IOException An IO exception from the parser, possibly
                * from a byte stream or character stream
                * supplied by the parser.
                *
                * @see #setInputSource
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>parse</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>complete</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                    ,
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <comment type="line">//</comment>
                    <comment type="line">// reset and configure pipeline and set InputSource.</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fInputSource</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <try>try
                                    <block>{
                                        <comment type="line">// resets and sets the pipeline.</comment>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>reset</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fScanner</name>.
                                                        <name>setInputSource</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>fInputSource</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>fInputSource</name>
                                                =
                                                <name>null</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                    <catch>catch (
                                        <param>
                                            <decl>
                                                <type>
                                                    <name>XNIException</name>
                                                </type>
                                                <name>ex</name>
                                            </decl>
                                        </param>
                                        )
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>PRINT_EXCEPTION_STACK_TRACE</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>ex</name>.
                                                                    <name>printStackTrace</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                </then>
                                            </if>
                                            <throw>throw
                                                <expr>
                                                    <name>ex</name>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </catch>
                                    <catch>catch (
                                        <param>
                                            <decl>
                                                <type>
                                                    <name>IOException</name>
                                                </type>
                                                <name>ex</name>
                                            </decl>
                                        </param>
                                        )
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>PRINT_EXCEPTION_STACK_TRACE</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>ex</name>.
                                                                    <name>printStackTrace</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                </then>
                                            </if>
                                            <throw>throw
                                                <expr>
                                                    <name>ex</name>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </catch>
                                    <catch>catch (
                                        <param>
                                            <decl>
                                                <type>
                                                    <name>RuntimeException</name>
                                                </type>
                                                <name>ex</name>
                                            </decl>
                                        </param>
                                        )
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>PRINT_EXCEPTION_STACK_TRACE</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>ex</name>.
                                                                    <name>printStackTrace</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                </then>
                                            </if>
                                            <throw>throw
                                                <expr>
                                                    <name>ex</name>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </catch>
                                    <catch>catch (
                                        <param>
                                            <decl>
                                                <type>
                                                    <name>Exception</name>
                                                </type>
                                                <name>ex</name>
                                            </decl>
                                        </param>
                                        )
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>PRINT_EXCEPTION_STACK_TRACE</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>ex</name>.
                                                                    <name>printStackTrace</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                </then>
                                            </if>
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>XNIException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>ex</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </catch>
                                </try>
                                }
                            </block>
                        </then>
                    </if>

                    <try>try
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>fScanner</name>.
                                            <name>scanDocument</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>complete</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XNIException</name>
                                    </type>
                                    <name>ex</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>PRINT_EXCEPTION_STACK_TRACE</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>ex</name>.
                                                        <name>printStackTrace</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                    </then>
                                </if>
                                <throw>throw
                                    <expr>
                                        <name>ex</name>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>IOException</name>
                                    </type>
                                    <name>ex</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>PRINT_EXCEPTION_STACK_TRACE</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>ex</name>.
                                                        <name>printStackTrace</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                    </then>
                                </if>
                                <throw>throw
                                    <expr>
                                        <name>ex</name>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>RuntimeException</name>
                                    </type>
                                    <name>ex</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>PRINT_EXCEPTION_STACK_TRACE</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>ex</name>.
                                                        <name>printStackTrace</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                    </then>
                                </if>
                                <throw>throw
                                    <expr>
                                        <name>ex</name>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>Exception</name>
                                    </type>
                                    <name>ex</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>PRINT_EXCEPTION_STACK_TRACE</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>ex</name>.
                                                        <name>printStackTrace</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                    </then>
                                </if>
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>XNIException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>ex</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>

                    }
                </block>
            </function>
            <comment type="line">// parse(boolean):boolean</comment>

            <comment type="javadoc">/**
                * If the application decides to terminate parsing before the xml document
                * is fully parsed, the application should call this method to free any
                * resource allocated during parsing. For example, close all opened streams.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>cleanup</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fEntityManager</name>.
                                    <name>closeReaders</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="line">//</comment>
            <comment type="line">// XMLParserConfiguration methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * Parses the specified input source.
                *
                * @param source The input source.
                *
                * @exception XNIException Throws exception on XNI error.
                * @exception java.io.IOException Throws exception on i/o error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>parse</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLInputSource</name>
                            </type>
                            <name>source</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                    ,
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name>fParseInProgress</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// REVISIT - need to add new error message</comment>
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>XNIException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"FWK005 parse may not be called while parsing."</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name>fParseInProgress</name>
                            = true
                        </expr>
                        ;
                    </expr_stmt>

                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>setInputSource</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>source</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>parse</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>true</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XNIException</name>
                                    </type>
                                    <name>ex</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>PRINT_EXCEPTION_STACK_TRACE</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>ex</name>.
                                                        <name>printStackTrace</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                    </then>
                                </if>
                                <throw>throw
                                    <expr>
                                        <name>ex</name>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>IOException</name>
                                    </type>
                                    <name>ex</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>PRINT_EXCEPTION_STACK_TRACE</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>ex</name>.
                                                        <name>printStackTrace</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                    </then>
                                </if>
                                <throw>throw
                                    <expr>
                                        <name>ex</name>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>RuntimeException</name>
                                    </type>
                                    <name>ex</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>PRINT_EXCEPTION_STACK_TRACE</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>ex</name>.
                                                        <name>printStackTrace</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                    </then>
                                </if>
                                <throw>throw
                                    <expr>
                                        <name>ex</name>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>Exception</name>
                                    </type>
                                    <name>ex</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>PRINT_EXCEPTION_STACK_TRACE</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>ex</name>.
                                                        <name>printStackTrace</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                    </then>
                                </if>
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>XNIException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>ex</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                        <finally>finally
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fParseInProgress</name>
                                        = false
                                    </expr>
                                    ;
                                </expr_stmt>
                                <comment type="line">// close all streams opened by xerces</comment>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>this</name>.
                                                <name>cleanup</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </finally>
                    </try>

                    }
                </block>
            </function>
            <comment type="line">// parse(InputSource)</comment>

            <comment type="line">//</comment>
            <comment type="line">// Protected methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * Reset all components before parsing.
                *
                * @throws XNIException Thrown if an error occurs during initialization.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>reset</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name>fValidationManager</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fValidationManager</name>.
                                            <name>reset</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <comment type="line">// configure the pipeline and initialize the components</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>configurePipeline</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>super</name>.
                                    <name>reset</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="line">// reset()</comment>

            <comment type="javadoc">/** Configures the pipeline. */</comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>configurePipeline</name>
                <parameter_list>()</parameter_list>
                <block>{

                    <comment type="line">// REVISIT: This should be better designed. In other words, we</comment>
                    <comment type="line">// need to figure out what is the best way for people to</comment>
                    <comment type="line">// re-use *most* of the standard configuration but do</comment>
                    <comment type="line">// things common things such as remove a component (e.g.</comment>
                    <comment type="line">// the validator), insert a new component (e.g. XInclude),</comment>
                    <comment type="line">// etc... -Ac</comment>

                    <comment type="line">// setup document pipeline</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDValidator</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fScanner</name>.
                                                <name>setDocumentHandler</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fDTDValidator</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>fFeatures</name>.
                                                    <name>get</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>NAMESPACES</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            ==
                                            <name><name>Boolean</name>.
                                                <name>TRUE</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{

                                            <comment type="line">// filters</comment>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fDTDValidator</name>.
                                                            <name>setDocumentHandler</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>fNamespaceBinder</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fDTDValidator</name>.
                                                            <name>setDocumentSource</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>fScanner</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fNamespaceBinder</name>.
                                                            <name>setDocumentHandler</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>fDocumentHandler</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fNamespaceBinder</name>.
                                                            <name>setDocumentSource</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>fDTDValidator</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>fLastComponent</name>
                                                    =
                                                    <name>fNamespaceBinder</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fDTDValidator</name>.
                                                            <name>setDocumentHandler</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>fDocumentHandler</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fDTDValidator</name>.
                                                            <name>setDocumentSource</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>fScanner</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>fLastComponent</name>
                                                    =
                                                    <name>fDTDValidator</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>fFeatures</name>.
                                                    <name>get</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>NAMESPACES</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            ==
                                            <name><name>Boolean</name>.
                                                <name>TRUE</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fScanner</name>.
                                                            <name>setDocumentHandler</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>fNamespaceBinder</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fNamespaceBinder</name>.
                                                            <name>setDocumentHandler</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>fDocumentHandler</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fNamespaceBinder</name>.
                                                            <name>setDocumentSource</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>fScanner</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>fLastComponent</name>
                                                    =
                                                    <name>fNamespaceBinder</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fScanner</name>.
                                                            <name>setDocumentHandler</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>fDocumentHandler</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>fLastComponent</name>
                                                    =
                                                    <name>fScanner</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </else>
                    </if>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name>configureDTDPipeline</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="line">// configurePipeline()</comment>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>configureDTDPipeline</name>
                <parameter_list>()</parameter_list>
                <block>{

                    <comment type="line">// setup dtd pipeline</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDScanner</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fProperties</name>.
                                                <name>put</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>DTD_SCANNER</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>fDTDScanner</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fDTDProcessor</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fProperties</name>.
                                                            <name>put</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>DTD_PROCESSOR</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>fDTDProcessor</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fDTDScanner</name>.
                                                            <name>setDTDHandler</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>fDTDProcessor</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fDTDProcessor</name>.
                                                            <name>setDTDSource</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>fDTDScanner</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fDTDProcessor</name>.
                                                            <name>setDTDHandler</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>fDTDHandler</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>fDTDHandler</name>
                                                        !=
                                                        <name>null</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>fDTDHandler</name>.
                                                                        <name>setDTDSource</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>fDTDProcessor</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>

                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fDTDScanner</name>.
                                                            <name>setDTDContentModelHandler</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>fDTDProcessor</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fDTDProcessor</name>.
                                                            <name>setDTDContentModelSource</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>fDTDScanner</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fDTDProcessor</name>.
                                                            <name>setDTDContentModelHandler</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>fDTDContentModelHandler</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>fDTDContentModelHandler</name>
                                                        !=
                                                        <name>null</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>fDTDContentModelHandler</name>.
                                                                        <name>setDTDContentModelSource</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>fDTDProcessor</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fDTDScanner</name>.
                                                            <name>setDTDHandler</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>fDTDHandler</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>fDTDHandler</name>
                                                        !=
                                                        <name>null</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>fDTDHandler</name>.
                                                                        <name>setDTDSource</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>fDTDScanner</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fDTDScanner</name>.
                                                            <name>setDTDContentModelHandler</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>fDTDContentModelHandler</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>fDTDContentModelHandler</name>
                                                        !=
                                                        <name>null</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>fDTDContentModelHandler</name>.
                                                                        <name>setDTDContentModelSource</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>fDTDScanner</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>


                    }
                </block>
            </function>

            <comment type="line">// features and properties</comment>

            <comment type="javadoc">/**
                * Check a feature. If feature is know and supported, this method simply
                * returns. Otherwise, the appropriate exception is thrown.
                *
                * @param featureId The unique identifier (URI) of the feature.
                *
                * @throws XMLConfigurationException Thrown for configuration error.
                * In general, components should
                * only throw this exception if
                * it is &lt;strong&gt;really&lt;/strong&gt;
                * a critical error.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>checkFeature</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>featureId</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XMLConfigurationException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">//</comment>
                    <comment type="line">// Xerces Features</comment>
                    <comment type="line">//</comment>

                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>featureId</name>.
                                        <name>startsWith</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>Constants</name>.
                                                    <name>XERCES_FEATURE_PREFIX</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <specifier>final</specifier>
                                            <name>int</name>
                                        </type>
                                        <name>suffixLength</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>featureId</name>.
                                                        <name>length</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                -
                                                <call>
                                                    <name><name>Constants</name>.<name>XERCES_FEATURE_PREFIX</name>.
                                                        <name>length</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>

                                <comment type="line">//</comment>
                                <comment type="line">// http://apache.org/xml/features/validation/dynamic</comment>
                                <comment type="line">// Allows the parser to validate a document only when it</comment>
                                <comment type="line">// contains a grammar. Validation is turned on/off based</comment>
                                <comment type="line">// on each document instance, automatically.</comment>
                                <comment type="line">//</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>suffixLength</name>
                                            ==
                                            <call>
                                                <name><name>Constants</name>.<name>DYNAMIC_VALIDATION_FEATURE</name>.
                                                    <name>length</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            &amp;&amp;
                                            <call>
                                                <name><name>featureId</name>.
                                                    <name>endsWith</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>Constants</name>.
                                                                <name>DYNAMIC_VALIDATION_FEATURE</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <return>return;</return>
                                            }
                                        </block>
                                    </then>
                                </if>

                                <comment type="line">//</comment>
                                <comment type="line">//
                                    http://apache.org/xml/features/validation/default-attribute-values
                                </comment>
                                <comment type="line">//</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>suffixLength</name>
                                            ==
                                            <call>
                                                <name><name>Constants</name>.<name>
                                                    DEFAULT_ATTRIBUTE_VALUES_FEATURE</name>.
                                                    <name>length</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            &amp;&amp;
                                            <call>
                                                <name><name>featureId</name>.
                                                    <name>endsWith</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>Constants</name>.
                                                                <name>DEFAULT_ATTRIBUTE_VALUES_FEATURE</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <comment type="line">// REVISIT</comment>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>short</name>
                                                    </type>
                                                    <name>type</name> =
                                                    <init>
                                                        <expr>
                                                            <name><name>XMLConfigurationException</name>.
                                                                <name>NOT_SUPPORTED</name>
                                                            </name>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>XMLConfigurationException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>type</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>featureId</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <comment type="line">//</comment>
                                <comment type="line">//
                                    http://apache.org/xml/features/validation/default-attribute-values
                                </comment>
                                <comment type="line">//</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>suffixLength</name>
                                            ==
                                            <call>
                                                <name><name>Constants</name>.<name>
                                                    VALIDATE_CONTENT_MODELS_FEATURE</name>.
                                                    <name>length</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            &amp;&amp;
                                            <call>
                                                <name><name>featureId</name>.
                                                    <name>endsWith</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>Constants</name>.
                                                                <name>VALIDATE_CONTENT_MODELS_FEATURE</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <comment type="line">// REVISIT</comment>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>short</name>
                                                    </type>
                                                    <name>type</name> =
                                                    <init>
                                                        <expr>
                                                            <name><name>XMLConfigurationException</name>.
                                                                <name>NOT_SUPPORTED</name>
                                                            </name>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>XMLConfigurationException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>type</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>featureId</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <comment type="line">//</comment>
                                <comment type="line">//
                                    http://apache.org/xml/features/validation/nonvalidating/load-dtd-grammar
                                </comment>
                                <comment type="line">//</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>suffixLength</name>
                                            ==
                                            <call>
                                                <name><name>Constants</name>.<name>LOAD_DTD_GRAMMAR_FEATURE</name>.
                                                    <name>length</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            &amp;&amp;
                                            <call>
                                                <name><name>featureId</name>.
                                                    <name>endsWith</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>Constants</name>.
                                                                <name>LOAD_DTD_GRAMMAR_FEATURE</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <return>return;</return>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <comment type="line">//</comment>
                                <comment type="line">//
                                    http://apache.org/xml/features/validation/nonvalidating/load-external-dtd
                                </comment>
                                <comment type="line">//</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>suffixLength</name>
                                            ==
                                            <call>
                                                <name><name>Constants</name>.<name>LOAD_EXTERNAL_DTD_FEATURE</name>.
                                                    <name>length</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            &amp;&amp;
                                            <call>
                                                <name><name>featureId</name>.
                                                    <name>endsWith</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>Constants</name>.
                                                                <name>LOAD_EXTERNAL_DTD_FEATURE</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <return>return;</return>
                                            }
                                        </block>
                                    </then>
                                </if>

                                <comment type="line">//</comment>
                                <comment type="line">//
                                    http://apache.org/xml/features/validation/default-attribute-values
                                </comment>
                                <comment type="line">//</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>suffixLength</name>
                                            ==
                                            <call>
                                                <name><name>Constants</name>.<name>VALIDATE_DATATYPES_FEATURE</name>.
                                                    <name>length</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            &amp;&amp;
                                            <call>
                                                <name><name>featureId</name>.
                                                    <name>endsWith</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>Constants</name>.
                                                                <name>VALIDATE_DATATYPES_FEATURE</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>short</name>
                                                    </type>
                                                    <name>type</name> =
                                                    <init>
                                                        <expr>
                                                            <name><name>XMLConfigurationException</name>.
                                                                <name>NOT_SUPPORTED</name>
                                                            </name>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>XMLConfigurationException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>type</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>featureId</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">//</comment>
                    <comment type="line">// Not recognized</comment>
                    <comment type="line">//</comment>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>super</name>.
                                    <name>checkFeature</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>featureId</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </function>
            <comment type="line">// checkFeature(String)</comment>

            <comment type="javadoc">/**
                * Check a property. If the property is know and supported, this method
                * simply returns. Otherwise, the appropriate exception is thrown.
                *
                * @param propertyId The unique identifier (URI) of the property
                * being set.
                *
                * @throws XMLConfigurationException Thrown for configuration error.
                * In general, components should
                * only throw this exception if
                * it is &lt;strong&gt;really&lt;/strong&gt;
                * a critical error.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>checkProperty</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>propertyId</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XMLConfigurationException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">//</comment>
                    <comment type="line">// Xerces Properties</comment>
                    <comment type="line">//</comment>

                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>propertyId</name>.
                                        <name>startsWith</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>Constants</name>.
                                                    <name>XERCES_PROPERTY_PREFIX</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <specifier>final</specifier>
                                            <name>int</name>
                                        </type>
                                        <name>suffixLength</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>propertyId</name>.
                                                        <name>length</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                -
                                                <call>
                                                    <name><name>Constants</name>.<name>XERCES_PROPERTY_PREFIX</name>.
                                                        <name>length</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>

                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>suffixLength</name>
                                            ==
                                            <call>
                                                <name><name>Constants</name>.<name>DTD_SCANNER_PROPERTY</name>.
                                                    <name>length</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            &amp;&amp;
                                            <call>
                                                <name><name>propertyId</name>.
                                                    <name>endsWith</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>Constants</name>.
                                                                <name>DTD_SCANNER_PROPERTY</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <return>return;</return>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">//</comment>
                    <comment type="line">// Not recognized</comment>
                    <comment type="line">//</comment>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>super</name>.
                                    <name>checkProperty</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>propertyId</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </function>
            <comment type="line">// checkProperty(String)</comment>

            <comment type="line">// factory methods</comment>

            <comment type="javadoc">/** Creates an entity manager. */</comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>XMLEntityManager</name>
                </type>
                <name>createEntityManager</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>XMLEntityManager</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// createEntityManager():XMLEntityManager</comment>

            <comment type="javadoc">/** Creates an error reporter. */</comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>XMLErrorReporter</name>
                </type>
                <name>createErrorReporter</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>XMLErrorReporter</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// createErrorReporter():XMLErrorReporter</comment>

            <comment type="javadoc">/** Create a document scanner. */</comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>XMLDocumentScanner</name>
                </type>
                <name>createDocumentScanner</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>XMLDocumentScannerImpl</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// createDocumentScanner():XMLDocumentScanner</comment>

            <comment type="javadoc">/** Create a DTD scanner. */</comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>XMLDTDScanner</name>
                </type>
                <name>createDTDScanner</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>XMLDTDScannerImpl</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// createDTDScanner():XMLDTDScanner</comment>

            <comment type="javadoc">/** Create a DTD loader . */</comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>XMLDTDProcessor</name>
                </type>
                <name>createDTDProcessor</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>XMLDTDProcessor</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// createDTDProcessor():XMLDTDProcessor</comment>

            <comment type="javadoc">/** Create a DTD validator. */</comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>XMLDTDValidator</name>
                </type>
                <name>createDTDValidator</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>XMLDTDValidator</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// createDTDValidator():XMLDTDValidator</comment>

            <comment type="javadoc">/** Create a namespace binder. */</comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>XMLNamespaceBinder</name>
                </type>
                <name>createNamespaceBinder</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>XMLNamespaceBinder</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// createNamespaceBinder():XMLNamespaceBinder</comment>

            <comment type="javadoc">/** Create a datatype validator factory. */</comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>DTDDVFactory</name>
                </type>
                <name>createDatatypeValidatorFactory</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>DTDDVFactory</name>.
                                    <name>getInstance</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// createDatatypeValidatorFactory():DatatypeValidatorFactory</comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>ValidationManager</name>
                </type>
                <name>createValidationManager</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>ValidationManager</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            }
        </block>
    </class>
    <comment type="line">// class DTDConfiguration</comment>
</unit>
