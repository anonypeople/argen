<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\impl\dtd\DTDGrammar.java">
    <comment type="block">/*
        * Copyright 1999-2002,2004,2005 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.
            <name>dtd</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Hashtable</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Vector</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>dtd</name>.<name>
            models</name>.
            <name>CMAny</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>dtd</name>.<name>
            models</name>.
            <name>CMBinOp</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>dtd</name>.<name>
            models</name>.
            <name>CMLeaf</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>dtd</name>.<name>
            models</name>.
            <name>CMNode</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>dtd</name>.<name>
            models</name>.
            <name>CMUniOp</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>dtd</name>.<name>
            models</name>.
            <name>ContentModelValidator</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>dtd</name>.<name>
            models</name>.
            <name>DFAContentModel</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>dtd</name>.<name>
            models</name>.
            <name>MixedContentModel</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>dtd</name>.<name>
            models</name>.
            <name>SimpleContentModel</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>dv</name>.
            <name>DatatypeValidator</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>validation</name>.
            <name>EntityState</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>SymbolTable</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>Augmentations</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>QName</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XMLDTDContentModelHandler</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XMLDTDHandler</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XMLLocator</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XMLResourceIdentifier</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XMLString</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XNIException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>grammars</name>.
            <name>Grammar</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>grammars</name>.
            <name>XMLGrammarDescription</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLDTDContentModelSource</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLDTDSource</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * A DTD grammar. This class implements the XNI handler interfaces
        * for DTD information so that it can build the approprate validation
        * structures automatically from the callbacks.
        *
        * @xerces.internal
        *
        * @author Eric Ye, IBM
        * @author Jeffrey Rodriguez, IBM
        * @author Andy Clark, IBM
        * @author Neil Graham, IBM
        *
        * @version $Id: DTDGrammar.java,v 1.32 2005/03/07 23:28:41 mrglavas Exp $
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class
        <name>DTDGrammar</name>
        <super>
            <implements>implements <name>XMLDTDHandler</name>, <name>XMLDTDContentModelHandler</name>, <name>
                EntityState</name>,
                <name>Grammar</name>
            </implements>
        </super>
        <block>{

            <comment type="line">//</comment>
            <comment type="line">// Constants</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/** Top level scope (-1). */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>TOP_LEVEL_SCOPE</name> =
                    <init>
                        <expr>-1</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// private</comment>

            <comment type="javadoc">/** Chunk shift (8). */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>CHUNK_SHIFT</name> =
                    <init>
                        <expr>8</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="line">// 2^8 = 256</comment>

            <comment type="javadoc">/** Chunk size (1 &lt;&lt; CHUNK_SHIFT). */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>CHUNK_SIZE</name> =
                    <init>
                        <expr>(1 &lt;&lt; <name>CHUNK_SHIFT</name>)
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Chunk mask (CHUNK_SIZE - 1). */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>CHUNK_MASK</name> =
                    <init>
                        <expr>
                            <name>CHUNK_SIZE</name>
                            - 1
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Initial chunk count (1 &lt;&lt; (10 - CHUNK_SHIFT)). */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>INITIAL_CHUNK_COUNT</name> =
                    <init>
                        <expr>(1 &lt;&lt; (10 - <name>CHUNK_SHIFT</name>))
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="line">// 2^10 = 1k</comment>

            <comment type="javadoc">/** List flag (0x80). */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>LIST_FLAG</name> =
                    <init>
                        <expr>0x80</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** List mask (~LIST_FLAG). */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>LIST_MASK</name> =
                    <init>
                        <expr>~
                            <name>LIST_FLAG</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// debugging</comment>

            <comment type="javadoc">/** Debug DTDGrammar. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>boolean</name>
                    </type>
                    <name>DEBUG</name> =
                    <init>
                        <expr>false</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">//</comment>
            <comment type="line">// Data</comment>
            <comment type="line">//</comment>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XMLDTDSource</name>
                    </type>
                    <name>fDTDSource</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XMLDTDContentModelSource</name>
                    </type>
                    <name>fDTDContentModelSource</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Current element index. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>int</name>
                    </type>
                    <name>fCurrentElementIndex</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Current attribute index. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>int</name>
                    </type>
                    <name>fCurrentAttributeIndex</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** fReadingExternalDTD */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fReadingExternalDTD</name> =
                    <init>
                        <expr>false</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Symbol table. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>SymbolTable</name>
                    </type>
                    <name>fSymbolTable</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// The XMLDTDDescription with which this Grammar is associated</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XMLDTDDescription</name>
                    </type>
                    <name>fGrammarDescription</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// element declarations</comment>

            <comment type="javadoc">/** Number of element declarations. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>fElementDeclCount</name> =
                    <init>
                        <expr>0</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Element declaration name. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>QName</name>
                    </type>
                    <name>
                        <name>fElementDeclName</name>
                        <index>[]</index>
                        <index>[]</index>
                    </name>
                    =
                    <init>
                        <expr>new
                            <name>
                                <name>QName</name>
                                <index>[
                                    <expr>
                                        <name>INITIAL_CHUNK_COUNT</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[]</index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Element declaration type.
                * @see XMLElementDecl
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>short</name>
                    </type>
                    <name>
                        <name>fElementDeclType</name>
                        <index>[]</index>
                        <index>[]</index>
                    </name>
                    =
                    <init>
                        <expr>new
                            <name>
                                <name>short</name>
                                <index>[
                                    <expr>
                                        <name>INITIAL_CHUNK_COUNT</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[]</index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Element declaration content spec index. This index value is used
                * to refer to the content spec information tables.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>
                        <name>fElementDeclContentSpecIndex</name>
                        <index>[]</index>
                        <index>[]</index>
                    </name>
                    =
                    <init>
                        <expr>new
                            <name>
                                <name>int</name>
                                <index>[
                                    <expr>
                                        <name>INITIAL_CHUNK_COUNT</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[]</index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Element declaration content model validator. This validator is
                * constructed from the content spec nodes.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>ContentModelValidator</name>
                    </type>
                    <name>
                        <name>fElementDeclContentModelValidator</name>
                        <index>[]</index>
                        <index>[]</index>
                    </name>
                    =
                    <init>
                        <expr>new
                            <name>
                                <name>ContentModelValidator</name>
                                <index>[
                                    <expr>
                                        <name>INITIAL_CHUNK_COUNT</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[]</index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** First attribute declaration of an element declaration. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>
                        <name>fElementDeclFirstAttributeDeclIndex</name>
                        <index>[]</index>
                        <index>[]</index>
                    </name>
                    =
                    <init>
                        <expr>new
                            <name>
                                <name>int</name>
                                <index>[
                                    <expr>
                                        <name>INITIAL_CHUNK_COUNT</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[]</index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Last attribute declaration of an element declaration. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>
                        <name>fElementDeclLastAttributeDeclIndex</name>
                        <index>[]</index>
                        <index>[]</index>
                    </name>
                    =
                    <init>
                        <expr>new
                            <name>
                                <name>int</name>
                                <index>[
                                    <expr>
                                        <name>INITIAL_CHUNK_COUNT</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[]</index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// attribute declarations</comment>

            <comment type="javadoc">/** Number of attribute declarations. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>fAttributeDeclCount</name> =
                    <init>
                        <expr>0</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Attribute declaration name. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>QName</name>
                    </type>
                    <name>
                        <name>fAttributeDeclName</name>
                        <index>[]</index>
                        <index>[]</index>
                    </name>
                    =
                    <init>
                        <expr>new
                            <name>
                                <name>QName</name>
                                <index>[
                                    <expr>
                                        <name>INITIAL_CHUNK_COUNT</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[]</index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// is this grammar immutable? (fully constructed and not changeable)</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fIsImmutable</name> =
                    <init>
                        <expr>false</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Attribute declaration type.
                * @see XMLAttributeDecl
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>short</name>
                    </type>
                    <name>
                        <name>fAttributeDeclType</name>
                        <index>[]</index>
                        <index>[]</index>
                    </name>
                    =
                    <init>
                        <expr>new
                            <name>
                                <name>short</name>
                                <index>[
                                    <expr>
                                        <name>INITIAL_CHUNK_COUNT</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[]</index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Attribute declaration enumeration values. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>String</name>
                        <index>[]</index>
                    </type>
                    <name>
                        <name>fAttributeDeclEnumeration</name>
                        <index>[]</index>
                        <index>[]</index>
                    </name>
                    =
                    <init>
                        <expr>new
                            <name>
                                <name>String</name>
                                <index>[
                                    <expr>
                                        <name>INITIAL_CHUNK_COUNT</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[]</index>
                                <index>[]</index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>short</name>
                    </type>
                    <name>
                        <name>fAttributeDeclDefaultType</name>
                        <index>[]</index>
                        <index>[]</index>
                    </name>
                    =
                    <init>
                        <expr>new
                            <name>
                                <name>short</name>
                                <index>[
                                    <expr>
                                        <name>INITIAL_CHUNK_COUNT</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[]</index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>DatatypeValidator</name>
                    </type>
                    <name>
                        <name>fAttributeDeclDatatypeValidator</name>
                        <index>[]</index>
                        <index>[]</index>
                    </name>
                    =
                    <init>
                        <expr>new
                            <name>
                                <name>DatatypeValidator</name>
                                <index>[
                                    <expr>
                                        <name>INITIAL_CHUNK_COUNT</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[]</index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>String</name>
                    </type>
                    <name>
                        <name>fAttributeDeclDefaultValue</name>
                        <index>[]</index>
                        <index>[]</index>
                    </name>
                    =
                    <init>
                        <expr>new
                            <name>
                                <name>String</name>
                                <index>[
                                    <expr>
                                        <name>INITIAL_CHUNK_COUNT</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[]</index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>String</name>
                    </type>
                    <name>
                        <name>fAttributeDeclNonNormalizedDefaultValue</name>
                        <index>[]</index>
                        <index>[]</index>
                    </name>
                    =
                    <init>
                        <expr>new
                            <name>
                                <name>String</name>
                                <index>[
                                    <expr>
                                        <name>INITIAL_CHUNK_COUNT</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[]</index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>
                        <name>fAttributeDeclNextAttributeDeclIndex</name>
                        <index>[]</index>
                        <index>[]</index>
                    </name>
                    =
                    <init>
                        <expr>new
                            <name>
                                <name>int</name>
                                <index>[
                                    <expr>
                                        <name>INITIAL_CHUNK_COUNT</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[]</index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// content specs</comment>

            <comment type="line">// here saves the content spec binary trees for element decls,</comment>
            <comment type="line">// each element with a content model will hold a pointer which is</comment>
            <comment type="line">// the index of the head node of the content spec tree.</comment>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>fContentSpecCount</name> =
                    <init>
                        <expr>0</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>short</name>
                    </type>
                    <name>
                        <name>fContentSpecType</name>
                        <index>[]</index>
                        <index>[]</index>
                    </name>
                    =
                    <init>
                        <expr>new
                            <name>
                                <name>short</name>
                                <index>[
                                    <expr>
                                        <name>INITIAL_CHUNK_COUNT</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[]</index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Object</name>
                    </type>
                    <name>
                        <name>fContentSpecValue</name>
                        <index>[]</index>
                        <index>[]</index>
                    </name>
                    =
                    <init>
                        <expr>new
                            <name>
                                <name>Object</name>
                                <index>[
                                    <expr>
                                        <name>INITIAL_CHUNK_COUNT</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[]</index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Object</name>
                    </type>
                    <name>
                        <name>fContentSpecOtherValue</name>
                        <index>[]</index>
                        <index>[]</index>
                    </name>
                    =
                    <init>
                        <expr>new
                            <name>
                                <name>Object</name>
                                <index>[
                                    <expr>
                                        <name>INITIAL_CHUNK_COUNT</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[]</index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// entities</comment>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>fEntityCount</name> =
                    <init>
                        <expr>0</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>String</name>
                    </type>
                    <name>
                        <name>fEntityName</name>
                        <index>[]</index>
                        <index>[]</index>
                    </name>
                    =
                    <init>
                        <expr>new
                            <name>
                                <name>String</name>
                                <index>[
                                    <expr>
                                        <name>INITIAL_CHUNK_COUNT</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[]</index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>String</name>
                        <index>[]</index>
                        <index>[]</index>
                    </type>
                    <name>fEntityValue</name> =
                    <init>
                        <expr>new
                            <name>
                                <name>String</name>
                                <index>[
                                    <expr>
                                        <name>INITIAL_CHUNK_COUNT</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[]</index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>String</name>
                        <index>[]</index>
                        <index>[]</index>
                    </type>
                    <name>fEntityPublicId</name> =
                    <init>
                        <expr>new
                            <name>
                                <name>String</name>
                                <index>[
                                    <expr>
                                        <name>INITIAL_CHUNK_COUNT</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[]</index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>String</name>
                        <index>[]</index>
                        <index>[]</index>
                    </type>
                    <name>fEntitySystemId</name> =
                    <init>
                        <expr>new
                            <name>
                                <name>String</name>
                                <index>[
                                    <expr>
                                        <name>INITIAL_CHUNK_COUNT</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[]</index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>String</name>
                        <index>[]</index>
                        <index>[]</index>
                    </type>
                    <name>fEntityBaseSystemId</name> =
                    <init>
                        <expr>new
                            <name>
                                <name>String</name>
                                <index>[
                                    <expr>
                                        <name>INITIAL_CHUNK_COUNT</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[]</index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>String</name>
                        <index>[]</index>
                        <index>[]</index>
                    </type>
                    <name>fEntityNotation</name> =
                    <init>
                        <expr>new
                            <name>
                                <name>String</name>
                                <index>[
                                    <expr>
                                        <name>INITIAL_CHUNK_COUNT</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[]</index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>byte</name>
                        <index>[]</index>
                        <index>[]</index>
                    </type>
                    <name>fEntityIsPE</name> =
                    <init>
                        <expr>new
                            <name>
                                <name>byte</name>
                                <index>[
                                    <expr>
                                        <name>INITIAL_CHUNK_COUNT</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[]</index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>byte</name>
                        <index>[]</index>
                        <index>[]</index>
                    </type>
                    <name>fEntityInExternal</name> =
                    <init>
                        <expr>new
                            <name>
                                <name>byte</name>
                                <index>[
                                    <expr>
                                        <name>INITIAL_CHUNK_COUNT</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[]</index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// notations</comment>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>fNotationCount</name> =
                    <init>
                        <expr>0</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>String</name>
                    </type>
                    <name>
                        <name>fNotationName</name>
                        <index>[]</index>
                        <index>[]</index>
                    </name>
                    =
                    <init>
                        <expr>new
                            <name>
                                <name>String</name>
                                <index>[
                                    <expr>
                                        <name>INITIAL_CHUNK_COUNT</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[]</index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>String</name>
                        <index>[]</index>
                        <index>[]</index>
                    </type>
                    <name>fNotationPublicId</name> =
                    <init>
                        <expr>new
                            <name>
                                <name>String</name>
                                <index>[
                                    <expr>
                                        <name>INITIAL_CHUNK_COUNT</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[]</index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>String</name>
                        <index>[]</index>
                        <index>[]</index>
                    </type>
                    <name>fNotationSystemId</name> =
                    <init>
                        <expr>new
                            <name>
                                <name>String</name>
                                <index>[
                                    <expr>
                                        <name>INITIAL_CHUNK_COUNT</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[]</index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>String</name>
                        <index>[]</index>
                        <index>[]</index>
                    </type>
                    <name>fNotationBaseSystemId</name> =
                    <init>
                        <expr>new
                            <name>
                                <name>String</name>
                                <index>[
                                    <expr>
                                        <name>INITIAL_CHUNK_COUNT</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[]</index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// other information</comment>

            <comment type="javadoc">/** Element index mapping table. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>QNameHashtable</name>
                    </type>
                    <name>fElementIndexMap</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>QNameHashtable</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Entity index mapping table. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>QNameHashtable</name>
                    </type>
                    <name>fEntityIndexMap</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>QNameHashtable</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Notation index mapping table. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>QNameHashtable</name>
                    </type>
                    <name>fNotationIndexMap</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>QNameHashtable</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// temp variables</comment>

            <comment type="javadoc">/** Mixed. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fMixed</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Temporary qualified name. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>QName</name>
                    </type>
                    <name>fQName</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>QName</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Temporary qualified name. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>QName</name>
                    </type>
                    <name>fQName2</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>QName</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Temporary Attribute decl. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XMLAttributeDecl</name>
                    </type>
                    <name>fAttributeDecl</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>XMLAttributeDecl</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// for buildSyntaxTree method</comment>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>fLeafCount</name> =
                    <init>
                        <expr>0</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>fEpsilonIndex</name> =
                    <init>
                        <expr>-1</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Element declaration. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>XMLElementDecl</name>
                    </type>
                    <name>fElementDecl</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>XMLElementDecl</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Entity declaration. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>XMLEntityDecl</name>
                    </type>
                    <name>fEntityDecl</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>XMLEntityDecl</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Simple type. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>XMLSimpleType</name>
                    </type>
                    <name>fSimpleType</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>XMLSimpleType</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Content spec node. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>XMLContentSpec</name>
                    </type>
                    <name>fContentSpec</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>XMLContentSpec</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** table of XMLElementDecl */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <name>Hashtable</name>
                    </type>
                    <name>fElementDeclTab</name>     =
                    <init>
                        <expr>new
                            <call>
                                <name>Hashtable</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Children content model operation stack. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>short</name>
                        <index>[]</index>
                    </type>
                    <name>fOpStack</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Children content model index stack. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                        <index>[]</index>
                    </type>
                    <name>fNodeIndexStack</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Children content model previous node index stack. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                        <index>[]</index>
                    </type>
                    <name>fPrevNodeIndexStack</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Stack depth */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>fDepth</name> =
                    <init>
                        <expr>0</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Entity stack. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>boolean</name>
                        <index>[]</index>
                    </type>
                    <name>fPEntityStack</name> =
                    <init>
                        <expr>new
                            <name>
                                <name>boolean</name>
                                <index>[<expr>4</expr>]
                                </index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>fPEDepth</name> =
                    <init>
                        <expr>0</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// additional fields(columns) for the element Decl pool in the Grammar</comment>

            <comment type="javadoc">/** flag if the elementDecl is External. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>
                        <name>fElementDeclIsExternal</name>
                        <index>[]</index>
                        <index>[]</index>
                    </name>
                    =
                    <init>
                        <expr>new
                            <name>
                                <name>int</name>
                                <index>[
                                    <expr>
                                        <name>INITIAL_CHUNK_COUNT</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[]</index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>


            <comment type="line">// additional fields(columns) for the attribute Decl pool in the Grammar</comment>

            <comment type="javadoc">/** flag if the AttributeDecl is External. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>
                        <name>fAttributeDeclIsExternal</name>
                        <index>[]</index>
                        <index>[]</index>
                    </name>
                    =
                    <init>
                        <expr>new
                            <name>
                                <name>int</name>
                                <index>[
                                    <expr>
                                        <name>INITIAL_CHUNK_COUNT</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[]</index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// for mixedElement method</comment>

            <decl_stmt>
                <decl>
                    <type>
                        <name>int</name>
                    </type>
                    <name>valueIndex</name>            =
                    <init>
                        <expr>-1</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <name>int</name>
                    </type>
                    <name>prevNodeIndex</name>         =
                    <init>
                        <expr>-1</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <name>int</name>
                    </type>
                    <name>nodeIndex</name>             =
                    <init>
                        <expr>-1</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">//</comment>
            <comment type="line">// Constructors</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/** Default constructor. */</comment>
            <constructor>
                <specifier>public</specifier>
                <name>DTDGrammar</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>SymbolTable</name>
                            </type>
                            <name>symbolTable</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLDTDDescription</name>
                            </type>
                            <name>desc</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fSymbolTable</name>
                            =
                            <name>symbolTable</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fGrammarDescription</name>
                            =
                            <name>desc</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>
            <comment type="line">// &lt;init&gt;(SymbolTable)</comment>

            <comment type="line">// Grammar methods</comment>

            <comment type="line">// return the XMLDTDDescription object with which this is associated</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>XMLGrammarDescription</name>
                </type>
                <name>getGrammarDescription</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fGrammarDescription</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getGrammarDescription(): XMLGrammarDescription</comment>

            <comment type="line">//</comment>
            <comment type="line">// Public methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * Returns true if the specified element declaration is external.
                *
                * @param elementDeclIndex The element declaration index.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>getElementDeclIsExternal</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>elementDeclIndex</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name>elementDeclIndex</name>
                                &lt; 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>chunk</name> =
                            <init>
                                <expr>
                                    <name>elementDeclIndex</name>
                                    &gt;&gt;
                                    <name>CHUNK_SHIFT</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name> =
                            <init>
                                <expr>
                                    <name>elementDeclIndex</name>
                                    &amp;
                                    <name>CHUNK_MASK</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>(
                            <name>
                                <name>fElementDeclIsExternal</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            != 0)
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// getElementDeclIsExternal(int):boolean</comment>

            <comment type="javadoc">/**
                * Returns true if the specified attribute declaration is external.
                *
                * @param attributeDeclIndex Attribute declaration index.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>getAttributeDeclIsExternal</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>attributeDeclIndex</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name>attributeDeclIndex</name>
                                &lt; 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>chunk</name> =
                            <init>
                                <expr>
                                    <name>attributeDeclIndex</name>
                                    &gt;&gt;
                                    <name>CHUNK_SHIFT</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name> =
                            <init>
                                <expr>
                                    <name>attributeDeclIndex</name>
                                    &amp;
                                    <name>CHUNK_MASK</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>(
                            <name>
                                <name>fAttributeDeclIsExternal</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            != 0)
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getAttributeDeclIndex</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>elementDeclIndex</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>attributeDeclName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>elementDeclIndex</name>
                                == -1
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>-1</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>attDefIndex</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getFirstAttributeDeclIndex</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>elementDeclIndex</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <while>while
                        <condition>(
                            <expr>
                                <name>attDefIndex</name>
                                != -1
                            </expr>
                            )
                        </condition>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>getAttributeDecl</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>attDefIndex</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>fAttributeDecl</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>

                            <if>if
                                <condition>(
                                    <expr>
                                        <name><name>fAttributeDecl</name>.<name>name</name>.
                                            <name>rawname</name>
                                        </name>
                                        ==
                                        <name>attributeDeclName</name>
                                        ||
                                        <call>
                                            <name><name>attributeDeclName</name>.
                                                <name>equals</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>fAttributeDecl</name>.<name>name</name>.
                                                            <name>rawname</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>
                                                <name>attDefIndex</name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <expr_stmt>
                                <expr>
                                    <name>attDefIndex</name>
                                    =
                                    <call>
                                        <name>getNextAttributeDeclIndex</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>attDefIndex</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </while>
                    <return>return <expr>-1</expr>;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getAttributeDeclIndex (int,QName)</comment>

            <comment type="line">//</comment>
            <comment type="line">// XMLDTDHandler methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * The start of the DTD.
                *
                * @param locator The document locator, or null if the document
                * location cannot be reported during the parsing of
                * the document DTD. However, it is &lt;em&gt;strongly&lt;/em&gt;
                * recommended that a locator be supplied that can
                * at least report the base system identifier of the
                * DTD.
                *
                * @param augs Additional information that may include infoset
                * augmentations.
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>startDTD</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLLocator</name>
                            </type>
                            <name>locator</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <comment type="line">//Initialize stack</comment>
                    <expr_stmt>
                        <expr>
                            <name>fOpStack</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fNodeIndexStack</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fPrevNodeIndexStack</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="line">// startDTD(XMLLocator)</comment>

            <comment type="javadoc">/**
                * This method notifies of the start of an entity. The DTD has the
                * pseudo-name of "[dtd]" and parameter entity names start with '%'.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; Since the DTD is an entity, the handler
                * will be notified of the start of the DTD entity by calling the
                * startParameterEntity method with the entity name "[dtd]" &lt;em&gt;before&lt;/em&gt; calling
                * the startDTD method.
                *
                * @param name The name of the parameter entity.
                * @param identifier The resource identifier.
                * @param encoding The auto-detected IANA encoding name of the entity
                * stream. This value will be null in those situations
                * where the entity encoding is not auto-detected (e.g.
                * internal parameter entities).
                * @param augs Additional information that may include infoset
                * augmentations.
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>startParameterEntity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLResourceIdentifier</name>
                            </type>
                            <name>identifier</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>encoding</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// keep track of this entity before fEntityDepth is increased</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fPEDepth</name>
                                ==
                                <name><name>fPEntityStack</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>boolean</name>
                                            <index>[]</index>
                                        </type>
                                        <name>entityarray</name> =
                                        <init>
                                            <expr>new
                                                <name>
                                                    <name>boolean</name>
                                                    <index>[
                                                        <expr>
                                                            <name><name>fPEntityStack</name>.
                                                                <name>length</name>
                                                            </name>
                                                            * 2
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.
                                                <name>arraycopy</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fPEntityStack</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>0</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>entityarray</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>0</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>fPEntityStack</name>.
                                                            <name>length</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fPEntityStack</name>
                                        =
                                        <name>entityarray</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fPEntityStack</name>
                                <index>[
                                    <expr>
                                        <name>fPEDepth</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <name>fReadingExternalDTD</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr><name>fPEDepth</name>++
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </function>
            <comment type="line">// startParameterEntity(String,XMLResourceIdentifier,String,Augmentations)</comment>

            <comment type="javadoc">/**
                * The start of the DTD external subset.
                *
                * @param augs Additional information that may include infoset
                * augmentations.
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>startExternalSubset</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLResourceIdentifier</name>
                            </type>
                            <name>identifier</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fReadingExternalDTD</name>
                            = true
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="line">// startExternalSubset(Augmentations)</comment>

            <comment type="javadoc">/**
                * This method notifies the end of an entity. The DTD has the pseudo-name
                * of "[dtd]" and parameter entity names start with '%'.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; Since the DTD is an entity, the handler
                * will be notified of the end of the DTD entity by calling the
                * endEntity method with the entity name "[dtd]" &lt;em&gt;after&lt;/em&gt; calling
                * the endDTD method.
                *
                * @param name The name of the entity.
                * @param augs Additional information that may include infoset
                * augmentations.
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>endParameterEntity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <expr_stmt>
                        <expr><name>fPEDepth</name>--
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fReadingExternalDTD</name>
                            =
                            <name>
                                <name>fPEntityStack</name>
                                <index>[
                                    <expr>
                                        <name>fPEDepth</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </function>
            <comment type="line">// endParameterEntity(String,Augmentations)</comment>

            <comment type="javadoc">/**
                * The end of the DTD external subset.
                *
                * @param augs Additional information that may include infoset
                * augmentations.
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>endExternalSubset</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fReadingExternalDTD</name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="line">// endExternalSubset(Augmentations)</comment>

            <comment type="javadoc">/**
                * An element declaration.
                *
                * @param name The name of the element.
                * @param contentModel The element content model.
                * @param augs Additional information that may include infoset
                * augmentations.
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>elementDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>contentModel</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XMLElementDecl</name>
                            </type>
                            <name>tmpElementDecl</name> =
                            <init>
                                <expr>(<name>XMLElementDecl</name>)
                                    <call>
                                        <name><name>fElementDeclTab</name>.
                                            <name>get</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>name</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// check if it is already defined</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>tmpElementDecl</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>tmpElementDecl</name>.
                                                <name>type</name>
                                            </name>
                                            == -1
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>fCurrentElementIndex</name>
                                                    =
                                                    <call>
                                                        <name>getElementDeclIndex</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>name</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <comment type="line">// duplicate element, ignored.</comment>
                                            <return>return;</return>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fCurrentElementIndex</name>
                                        =
                                        <call>
                                            <name>createElementDecl</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <comment type="line">//create element decl</comment>
                                }
                            </block>
                        </else>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XMLElementDecl</name>
                            </type>
                            <name>elementDecl</name>       =
                            <init>
                                <expr>new
                                    <call>
                                        <name>XMLElementDecl</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fQName</name>.
                                    <name>setValues</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>name</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>name</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>elementDecl</name>.<name>name</name>.
                                    <name>setValues</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>fQName</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name><name>elementDecl</name>.
                                <name>contentModelValidator</name>
                            </name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>elementDecl</name>.
                                <name>scope</name>
                            </name>
                            = -1
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>contentModel</name>.
                                        <name>equals</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>"EMPTY"</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>elementDecl</name>.
                                            <name>type</name>
                                        </name>
                                        =
                                        <name><name>XMLElementDecl</name>.
                                            <name>TYPE_EMPTY</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>contentModel</name>.
                                                <name>equals</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"ANY"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name><name>elementDecl</name>.
                                                    <name>type</name>
                                                </name>
                                                =
                                                <name><name>XMLElementDecl</name>.
                                                    <name>TYPE_ANY</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <call>
                                                    <name><name>contentModel</name>.
                                                        <name>startsWith</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"("</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <call>
                                                                <name><name>contentModel</name>.
                                                                    <name>indexOf</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"#PCDATA"</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                            &gt; 0
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name><name>elementDecl</name>.
                                                                        <name>type</name>
                                                                    </name>
                                                                    =
                                                                    <name><name>XMLElementDecl</name>.
                                                                        <name>TYPE_MIXED</name>
                                                                    </name>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                    <else>else
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name><name>elementDecl</name>.
                                                                        <name>type</name>
                                                                    </name>
                                                                    =
                                                                    <name><name>XMLElementDecl</name>.
                                                                        <name>TYPE_CHILDREN</name>
                                                                    </name>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </else>
                                                </if>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                </else>
                            </if>
                        </else>
                    </if>


                    <comment type="line">//add(or set) this elementDecl to the local cache</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>this</name>.<name>fElementDeclTab</name>.
                                    <name>put</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>name</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>elementDecl</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name>fElementDecl</name>
                            =
                            <name>elementDecl</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <if>if
                        <condition>(
                            <expr>(<name>fDepth</name> == 0 ||
                                (<name>fDepth</name> == 1 &amp;&amp;
                                <name><name>elementDecl</name>.
                                    <name>type</name>
                                </name>
                                ==
                                <name><name>XMLElementDecl</name>.
                                    <name>TYPE_MIXED</name>
                                </name>
                                )) &amp;&amp;
                                <name>fNodeIndexStack</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>elementDecl</name>.
                                                <name>type</name>
                                            </name>
                                            ==
                                            <name><name>XMLElementDecl</name>.
                                                <name>TYPE_MIXED</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>int</name>
                                                    </type>
                                                    <name>pcdata</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name>addUniqueLeafNode</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>null</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>
                                                            <name>fNodeIndexStack</name>
                                                            <index>[<expr>0</expr>]
                                                            </index>
                                                        </name>
                                                        == -1
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>
                                                                    <name>fNodeIndexStack</name>
                                                                    <index>[<expr>0</expr>]
                                                                    </index>
                                                                </name>
                                                                =
                                                                <name>pcdata</name>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                                <else>else
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>
                                                                    <name>fNodeIndexStack</name>
                                                                    <index>[<expr>0</expr>]
                                                                    </index>
                                                                </name>
                                                                =
                                                                <call>
                                                                    <name>addContentSpecNode</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>XMLContentSpec</name>.
                                                                                    <name>CONTENTSPECNODE_CHOICE</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>pcdata</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>
                                                                                    <name>fNodeIndexStack</name>
                                                                                    <index>[<expr>0</expr>]
                                                                                    </index>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </else>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>setContentSpecIndex</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fCurrentElementIndex</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>
                                                            <name>fNodeIndexStack</name>
                                                            <index>[
                                                                <expr>
                                                                    <name>fDepth</name>
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>DEBUG</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>println</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"name = " +
                                                        <name><name>fElementDecl</name>.<name>name</name>.
                                                            <name>localpart</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>println</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Type = " +
                                                        <name><name>fElementDecl</name>.
                                                            <name>type</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setElementDecl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>fCurrentElementIndex</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fElementDecl</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">//set internal structure</comment>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>chunk</name> =
                            <init>
                                <expr>
                                    <name>fCurrentElementIndex</name>
                                    &gt;&gt;
                                    <name>CHUNK_SHIFT</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name> =
                            <init>
                                <expr>
                                    <name>fCurrentElementIndex</name>
                                    &amp;
                                    <name>CHUNK_MASK</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>ensureElementDeclCapacity</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>chunk</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fElementDeclIsExternal</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = <name>fReadingExternalDTD</name>? 1 : 0
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </function>
            <comment type="line">// elementDecl(String,String)</comment>

            <comment type="javadoc">/**
                * An attribute declaration.
                *
                * @param elementName The name of the element that this attribute
                * is associated with.
                * @param attributeName The name of the attribute.
                * @param type The attribute type. This value will be one of
                * the following: "CDATA", "ENTITY", "ENTITIES",
                * "ENUMERATION", "ID", "IDREF", "IDREFS",
                * "NMTOKEN", "NMTOKENS", or "NOTATION".
                * @param enumeration If the type has the value "ENUMERATION", this
                * array holds the allowed attribute values;
                * otherwise, this array is null.
                * @param defaultType The attribute default type. This value will be
                * one of the following: "#FIXED", "#IMPLIED",
                * "#REQUIRED", or null.
                * @param defaultValue The attribute default value, or null if no
                * default value is specified.
                * @param nonNormalizedDefaultValue The attribute default value with no normalization
                * performed, or null if no default value is specified.
                *
                * @param augs Additional information that may include infoset
                * augmentations.
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>attributeDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>elementName</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>attributeName</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>String</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>enumeration</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>defaultType</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLString</name>
                            </type>
                            <name>defaultValue</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLString</name>
                            </type>
                            <name>nonNormalizedDefaultValue</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>this</name>.<name>fElementDeclTab</name>.
                                        <name>containsKey</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>(<name>String</name>)
                                                <name>elementName</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">//if ElementDecl has already being created in the Grammar then
                                    remove from table,
                                </comment>
                                <comment type="line">//this.fElementDeclTab.remove( (String) elementName );</comment>
                                }
                            </block>
                        </then>
                        <comment type="line">// then it is forward reference to a element decl, create the elementDecl
                            first.
                        </comment>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fCurrentElementIndex</name>
                                        =
                                        <call>
                                            <name>createElementDecl</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <comment type="line">//create element decl</comment>

                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>XMLElementDecl</name>
                                        </type>
                                        <name>elementDecl</name>       =
                                        <init>
                                            <expr>new
                                                <call>
                                                    <name>XMLElementDecl</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>elementDecl</name>.<name>name</name>.
                                                <name>setValues</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>elementName</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>elementName</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>

                                <expr_stmt>
                                    <expr>
                                        <name><name>elementDecl</name>.
                                            <name>scope</name>
                                        </name>
                                        = -1
                                    </expr>
                                    ;
                                </expr_stmt>

                                <comment type="line">//add(or set) this elementDecl to the local cache</comment>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>this</name>.<name>fElementDeclTab</name>.
                                                <name>put</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>elementName</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>elementDecl</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>

                                <comment type="line">//set internal structure</comment>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>setElementDecl</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fCurrentElementIndex</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>elementDecl</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>

                    <comment type="line">//Get Grammar index to grammar array</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>elementIndex</name>       =
                            <init>
                                <expr>
                                    <call>
                                        <name>getElementDeclIndex</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>elementName</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">//return, when more than one definition is provided for the same attribute of
                        given element type
                    </comment>
                    <comment type="line">//only the first declaration is binding and later declarations are ignored
                    </comment>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>getAttributeDeclIndex</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>elementIndex</name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>attributeName</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                != -1
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>

                    <expr_stmt>
                        <expr>
                            <name>fCurrentAttributeIndex</name>
                            =
                            <call>
                                <name>createAttributeDecl</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// Create current Attribute Decl</comment>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fSimpleType</name>.
                                    <name>clear</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>defaultType</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>defaultType</name>.
                                                    <name>equals</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>"#FIXED"</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name><name>fSimpleType</name>.
                                                        <name>defaultType</name>
                                                    </name>
                                                    =
                                                    <name><name>XMLSimpleType</name>.
                                                        <name>DEFAULT_TYPE_FIXED</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>defaultType</name>.
                                                            <name>equals</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"#IMPLIED"</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name><name>fSimpleType</name>.
                                                                <name>defaultType</name>
                                                            </name>
                                                            =
                                                            <name><name>XMLSimpleType</name>.
                                                                <name>DEFAULT_TYPE_IMPLIED</name>
                                                            </name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <call>
                                                                <name><name>defaultType</name>.
                                                                    <name>equals</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"#REQUIRED"</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name><name>fSimpleType</name>.
                                                                        <name>defaultType</name>
                                                                    </name>
                                                                    =
                                                                    <name><name>XMLSimpleType</name>.
                                                                        <name>DEFAULT_TYPE_REQUIRED</name>
                                                                    </name>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                            </else>
                                        </if>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>DEBUG</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>println</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"defaultvalue = " +
                                                        <call>
                                                            <name><name>defaultValue</name>.
                                                                <name>toString</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name><name>fSimpleType</name>.
                                <name>defaultValue</name>
                            </name>
                            = <name>defaultValue</name>!=<name>null</name> ?
                            <call>
                                <name><name>defaultValue</name>.
                                    <name>toString</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            :
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>fSimpleType</name>.
                                <name>nonNormalizedDefaultValue</name>
                            </name>
                            = <name>nonNormalizedDefaultValue</name>!=<name>null</name> ?
                            <call>
                                <name><name>nonNormalizedDefaultValue</name>.
                                    <name>toString</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            :
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>fSimpleType</name>.
                                <name>enumeration</name>
                            </name>
                            =
                            <name>enumeration</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>type</name>.
                                        <name>equals</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>"CDATA"</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>fSimpleType</name>.
                                            <name>type</name>
                                        </name>
                                        =
                                        <name><name>XMLSimpleType</name>.
                                            <name>TYPE_CDATA</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>type</name>.
                                                <name>equals</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"ID"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name><name>fSimpleType</name>.
                                                    <name>type</name>
                                                </name>
                                                =
                                                <name><name>XMLSimpleType</name>.
                                                    <name>TYPE_ID</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <call>
                                                    <name><name>type</name>.
                                                        <name>startsWith</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"IDREF"</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name><name>fSimpleType</name>.
                                                            <name>type</name>
                                                        </name>
                                                        =
                                                        <name><name>XMLSimpleType</name>.
                                                            <name>TYPE_IDREF</name>
                                                        </name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <call>
                                                                <name><name>type</name>.
                                                                    <name>indexOf</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"S"</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                            &gt; 0
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name><name>fSimpleType</name>.
                                                                        <name>list</name>
                                                                    </name>
                                                                    = true
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name><name>type</name>.
                                                                <name>equals</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"ENTITIES"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <name><name>fSimpleType</name>.
                                                                    <name>type</name>
                                                                </name>
                                                                =
                                                                <name><name>XMLSimpleType</name>.
                                                                    <name>TYPE_ENTITY</name>
                                                                </name>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name><name>fSimpleType</name>.
                                                                    <name>list</name>
                                                                </name>
                                                                = true
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                                <else>else
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <call>
                                                                    <name><name>type</name>.
                                                                        <name>equals</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"ENTITY"</expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name><name>fSimpleType</name>.
                                                                            <name>type</name>
                                                                        </name>
                                                                        =
                                                                        <name><name>XMLSimpleType</name>.
                                                                            <name>TYPE_ENTITY</name>
                                                                        </name>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </then>
                                                        <else>else
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>type</name>.
                                                                                <name>equals</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>"NMTOKENS"</expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name><name>fSimpleType</name>.
                                                                                    <name>type</name>
                                                                                </name>
                                                                                =
                                                                                <name><name>XMLSimpleType</name>.
                                                                                    <name>TYPE_NMTOKEN</name>
                                                                                </name>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name><name>fSimpleType</name>.
                                                                                    <name>list</name>
                                                                                </name>
                                                                                = true
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </then>
                                                                <else>else
                                                                    <if>if
                                                                        <condition>(
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>type</name>.
                                                                                        <name>equals</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>"NMTOKEN"</expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            )
                                                                        </condition>
                                                                        <then>
                                                                            <block>{
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <name><name>fSimpleType</name>.
                                                                                            <name>type</name>
                                                                                        </name>
                                                                                        =
                                                                                        <name><name>XMLSimpleType</name>
                                                                                            .
                                                                                            <name>TYPE_NMTOKEN</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                }
                                                                            </block>
                                                                        </then>
                                                                        <else>else
                                                                            <if>if
                                                                                <condition>(
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>type</name>.
                                                                                                <name>startsWith</name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>"NOTATION"
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    )
                                                                                </condition>
                                                                                <then>
                                                                                    <block>{
                                                                                        <expr_stmt>
                                                                                            <expr>
                                                                                                <name><name>
                                                                                                    fSimpleType</name>.
                                                                                                    <name>type</name>
                                                                                                </name>
                                                                                                =
                                                                                                <name><name>
                                                                                                    XMLSimpleType</name>
                                                                                                    .
                                                                                                    <name>
                                                                                                        TYPE_NOTATION
                                                                                                    </name>
                                                                                                </name>
                                                                                            </expr>
                                                                                            ;
                                                                                        </expr_stmt>
                                                                                        }
                                                                                    </block>
                                                                                </then>
                                                                                <else>else
                                                                                    <if>if
                                                                                        <condition>(
                                                                                            <expr>
                                                                                                <call>
                                                                                                    <name><name>
                                                                                                        type</name>.
                                                                                                        <name>
                                                                                                            startsWith
                                                                                                        </name>
                                                                                                    </name>
                                                                                                    <argument_list>(
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                "ENUMERATION"
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        )
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                            )
                                                                                        </condition>
                                                                                        <then>
                                                                                            <block>{
                                                                                                <expr_stmt>
                                                                                                    <expr>
                                                                                                        <name><name>
                                                                                                            fSimpleType</name>
                                                                                                            .
                                                                                                            <name>type
                                                                                                            </name>
                                                                                                        </name>
                                                                                                        =
                                                                                                        <name><name>
                                                                                                            XMLSimpleType</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                TYPE_ENUMERATION
                                                                                                            </name>
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                    ;
                                                                                                </expr_stmt>
                                                                                                }
                                                                                            </block>
                                                                                        </then>
                                                                                        <else>else
                                                                                            <block>{
                                                                                                <comment type="line">//
                                                                                                    REVISIT: Report
                                                                                                    error message. -Ac
                                                                                                </comment>
                                                                                                <expr_stmt>
                                                                                                    <expr>
                                                                                                        <call>
                                                                                                            <name><name>
                                                                                                                System</name>
                                                                                                                .<name>
                                                                                                                    err</name>.
                                                                                                                <name>
                                                                                                                    println
                                                                                                                </name>
                                                                                                            </name>
                                                                                                            <argument_list>
                                                                                                                (
                                                                                                                <argument>
                                                                                                                    <expr>
                                                                                                                        "!!!
                                                                                                                        unknown
                                                                                                                        attribute
                                                                                                                        type
                                                                                                                        "+
                                                                                                                        <name>
                                                                                                                            type
                                                                                                                        </name>
                                                                                                                    </expr>
                                                                                                                </argument>
                                                                                                                )
                                                                                                            </argument_list>
                                                                                                        </call>
                                                                                                    </expr>
                                                                                                    ;
                                                                                                </expr_stmt>
                                                                                                }
                                                                                            </block>
                                                                                        </else>
                                                                                    </if>
                                                                                </else>
                                                                            </if>
                                                                        </else>
                                                                    </if>
                                                                </else>
                                                            </if>
                                                        </else>
                                                    </if>
                                                </else>
                                            </if>
                                        </else>
                                    </if>
                                </else>
                            </if>
                        </else>
                    </if>
                    <comment type="line">// REVISIT: The datatype should be stored with the attribute value</comment>
                    <comment type="line">// and not special-cased in the XMLValidator. -Ac</comment>
                    <comment type="line">//fSimpleType.datatypeValidator =
                        fDatatypeValidatorFactory.createDatatypeValidator(type, null, facets, fSimpleType.list);
                    </comment>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fQName</name>.
                                    <name>setValues</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>attributeName</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>attributeName</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fAttributeDecl</name>.
                                    <name>setValues</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>fQName</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fSimpleType</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setAttributeDecl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>elementIndex</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fCurrentAttributeIndex</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fAttributeDecl</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>chunk</name> =
                            <init>
                                <expr>
                                    <name>fCurrentAttributeIndex</name>
                                    &gt;&gt;
                                    <name>CHUNK_SHIFT</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name> =
                            <init>
                                <expr>
                                    <name>fCurrentAttributeIndex</name>
                                    &amp;
                                    <name>CHUNK_MASK</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>ensureAttributeDeclCapacity</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>chunk</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fAttributeDeclIsExternal</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = <name>fReadingExternalDTD</name> ? 1 : 0
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </function>
            <comment type="line">// attributeDecl(String,String,String,String[],String,XMLString,XMLString,
                Augmentations)
            </comment>

            <comment type="javadoc">/**
                * An internal entity declaration.
                *
                * @param name The name of the entity. Parameter entity names start with
                * '%', whereas the name of a general entity is just the
                * entity name.
                * @param text The value of the entity.
                * @param nonNormalizedText The non-normalized value of the entity. This
                * value contains the same sequence of characters that was in
                * the internal entity declaration, without any entity
                * references expanded.
                * @param augs Additional information that may include infoset
                * augmentations.
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>internalEntityDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLString</name>
                            </type>
                            <name>text</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLString</name>
                            </type>
                            <name>nonNormalizedText</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>entityIndex</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getEntityDeclIndex</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>name</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>entityIndex</name>
                                == -1
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>entityIndex</name>
                                        =
                                        <call>
                                            <name>createEntityDecl</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>boolean</name>
                                        </type>
                                        <name>isPE</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>name</name>.
                                                        <name>startsWith</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"%"</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>boolean</name>
                                        </type>
                                        <name>inExternal</name> =
                                        <init>
                                            <expr>
                                                <name>fReadingExternalDTD</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>XMLEntityDecl</name>
                                        </type>
                                        <name>entityDecl</name> =
                                        <init>
                                            <expr>new
                                                <call>
                                                    <name>XMLEntityDecl</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>entityDecl</name>.
                                                <name>setValues</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>name</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>text</name>.
                                                                <name>toString</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>isPE</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>inExternal</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>

                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>setEntityDecl</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>entityIndex</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>entityDecl</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// internalEntityDecl(String,XMLString,XMLString)</comment>

            <comment type="javadoc">/**
                * An external entity declaration.
                *
                * @param name The name of the entity. Parameter entity names start
                * with '%', whereas the name of a general entity is just
                * the entity name.
                * @param identifier An object containing all location information
                * pertinent to this external entity declaration.
                * @param augs Additional information that may include infoset
                * augmentations.
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>externalEntityDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLResourceIdentifier</name>
                            </type>
                            <name>identifier</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>entityIndex</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getEntityDeclIndex</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>name</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>entityIndex</name>
                                == -1
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>entityIndex</name>
                                        =
                                        <call>
                                            <name>createEntityDecl</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>boolean</name>
                                        </type>
                                        <name>isPE</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>name</name>.
                                                        <name>startsWith</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"%"</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>boolean</name>
                                        </type>
                                        <name>inExternal</name> =
                                        <init>
                                            <expr>
                                                <name>fReadingExternalDTD</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>

                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>XMLEntityDecl</name>
                                        </type>
                                        <name>entityDecl</name> =
                                        <init>
                                            <expr>new
                                                <call>
                                                    <name>XMLEntityDecl</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>entityDecl</name>.
                                                <name>setValues</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>name</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>identifier</name>.
                                                                <name>getPublicId</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>identifier</name>.
                                                                <name>getLiteralSystemId</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>identifier</name>.
                                                                <name>getBaseSystemId</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>isPE</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>inExternal</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>

                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>setEntityDecl</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>entityIndex</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>entityDecl</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>
            <comment type="line">// externalEntityDecl(String, XMLResourceIdentifier, Augmentations)</comment>

            <comment type="javadoc">/**
                * An unparsed entity declaration.
                *
                * @param name The name of the entity.
                * @param identifier An object containing all location information
                * pertinent to this entity.
                * @param notation The name of the notation.
                * @param augs Additional information that may include infoset
                * augmentations.
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>unparsedEntityDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLResourceIdentifier</name>
                            </type>
                            <name>identifier</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>notation</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XMLEntityDecl</name>
                            </type>
                            <name>entityDecl</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>XMLEntityDecl</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>isPE</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>name</name>.
                                            <name>startsWith</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"%"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>inExternal</name> =
                            <init>
                                <expr>
                                    <name>fReadingExternalDTD</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>entityDecl</name>.
                                    <name>setValues</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>name</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>identifier</name>.
                                                    <name>getPublicId</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>identifier</name>.
                                                    <name>getLiteralSystemId</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>identifier</name>.
                                                    <name>getBaseSystemId</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>notation</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>isPE</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>inExternal</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>entityIndex</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getEntityDeclIndex</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>name</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>entityIndex</name>
                                == -1
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>entityIndex</name>
                                        =
                                        <call>
                                            <name>createEntityDecl</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>setEntityDecl</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>entityIndex</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>entityDecl</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// unparsedEntityDecl(String,StringXMLResourceIdentifier,Augmentations)</comment>

            <comment type="javadoc">/**
                * A notation declaration
                *
                * @param name The name of the notation.
                * @param identifier An object containing all location information
                * pertinent to this notation.
                * @param augs Additional information that may include infoset
                * augmentations.
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>notationDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLResourceIdentifier</name>
                            </type>
                            <name>identifier</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XMLNotationDecl</name>
                            </type>
                            <name>notationDecl</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>XMLNotationDecl</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>notationDecl</name>.
                                    <name>setValues</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>name</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>identifier</name>.
                                                    <name>getPublicId</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>identifier</name>.
                                                    <name>getLiteralSystemId</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>identifier</name>.
                                                    <name>getBaseSystemId</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>notationIndex</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getNotationDeclIndex</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>name</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>notationIndex</name>
                                == -1
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>notationIndex</name>
                                        =
                                        <call>
                                            <name>createNotationDecl</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>setNotationDecl</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>notationIndex</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>notationDecl</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// notationDecl(String,XMLResourceIdentifier,Augmentations)</comment>

            <comment type="javadoc">/**
                * The end of the DTD.
                *
                * @param augs Additional information that may include infoset
                * augmentations.
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>endDTD</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fIsImmutable</name>
                            = true
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// make sure our description contains useful stuff...</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>fGrammarDescription</name>.
                                        <name>getRootName</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// we don't know what the root is; so use possibleRoots...
                                </comment>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>chunk</name>, <name>index</name> =
                                        <init>
                                            <expr>0</expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                        </type>
                                        <name>currName</name> =
                                        <init>
                                            <expr>
                                                <name>null</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Vector</name>
                                        </type>
                                        <name>elements</name> =
                                        <init>
                                            <expr>new
                                                <call>
                                                    <name>Vector</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <for>for (
                                    <init>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>i</name>=
                                            <init>
                                                <expr>0</expr>
                                            </init>
                                        </decl>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            &lt;
                                            <name>fElementDeclCount</name>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr><name>i</name>++
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>chunk</name>
                                                = <name>i</name> &gt;&gt;
                                                <name>CHUNK_SHIFT</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>index</name>
                                                = <name>i</name> &amp;
                                                <name>CHUNK_MASK</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>currName</name>
                                                =
                                                <name>
                                                    <name>fElementDeclName</name>
                                                    <index>[
                                                        <expr>
                                                            <name>chunk</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                    <index>[
                                                        <expr>
                                                            <name>index</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                .
                                                <name>rawname</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>elements</name>.
                                                        <name>addElement</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>currName</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </for>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fGrammarDescription</name>.
                                                <name>setPossibleRoots</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>elements</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>
            <comment type="line">// endDTD()</comment>

            <comment type="line">// sets the source of this handler</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setDTDSource</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLDTDSource</name>
                            </type>
                            <name>source</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fDTDSource</name>
                            =
                            <name>source</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="line">// setDTDSource(XMLDTDSource)</comment>

            <comment type="line">// returns the source of this handler</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>XMLDTDSource</name>
                </type>
                <name>getDTDSource</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fDTDSource</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getDTDSource(): XMLDTDSource</comment>

            <comment type="line">// no-op methods</comment>

            <comment type="javadoc">/**
                * Notifies of the presence of a TextDecl line in an entity. If present,
                * this method will be called immediately following the startEntity call.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; This method is only called for external
                * parameter entities referenced in the DTD.
                *
                * @param version The XML version, or null if not specified.
                * @param encoding The IANA encoding name of the entity.
                *
                * @param augs Additional information that may include infoset
                * augmentations.
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>textDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>version</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>encoding</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{}</block>
            </function>

            <comment type="javadoc">/**
                * A comment.
                *
                * @param text The text in the comment.
                * @param augs Additional information that may include infoset
                * augmentations.
                * @throws XNIException Thrown by application to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>comment</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLString</name>
                            </type>
                            <name>text</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{}</block>
            </function>

            <comment type="javadoc">/**
                * A processing instruction. Processing instructions consist of a
                * target name and, optionally, text data. The data is only meaningful
                * to the application.
                * &lt;p&gt;
                * Typically, a processing instruction's data will contain a series
                * of pseudo-attributes. These pseudo-attributes follow the form of
                * element attributes but are &lt;strong&gt;not&lt;/strong&gt; parsed or presented
                * to the application as anything other than text. The application is
                * responsible for parsing the data.
                *
                * @param target The target.
                * @param data The data or null if none specified.
                * @param augs Additional information that may include infoset
                * augmentations.
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>processingInstruction</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>target</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLString</name>
                            </type>
                            <name>data</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{}</block>
            </function>

            <comment type="javadoc">/**
                * The start of an attribute list.
                *
                * @param elementName The name of the element that this attribute
                * list is associated with.
                * @param augs Additional information that may include infoset
                * augmentations.
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>startAttlist</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>elementName</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{}</block>
            </function>

            <comment type="javadoc">/**
                * The end of an attribute list.
                * @param augs Additional information that may include infoset
                * augmentations.
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>endAttlist</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{}</block>
            </function>

            <comment type="javadoc">/**
                * The start of a conditional section.
                *
                * @param type The type of the conditional section. This value will
                * either be CONDITIONAL_INCLUDE or CONDITIONAL_IGNORE.
                * @param augs Additional information that may include infoset
                * augmentations.
                * @throws XNIException Thrown by handler to signal an error.
                *
                * @see XMLDTDHandler#CONDITIONAL_INCLUDE
                * @see XMLDTDHandler#CONDITIONAL_IGNORE
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>startConditional</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{}</block>
            </function>

            <comment type="javadoc">/**
                * Characters within an IGNORE conditional section.
                *
                * @param text The ignored text.
                * @param augs Additional information that may include infoset
                * augmentations.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>ignoredCharacters</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLString</name>
                            </type>
                            <name>text</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{}</block>
            </function>

            <comment type="javadoc">/**
                * The end of a conditional section.
                * @param augs Additional information that may include infoset
                * augmentations.
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>endConditional</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{}</block>
            </function>

            <comment type="line">//</comment>
            <comment type="line">// XMLDTDContentModelHandler methods</comment>
            <comment type="line">//</comment>

            <comment type="line">// set content model source</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setDTDContentModelSource</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLDTDContentModelSource</name>
                            </type>
                            <name>source</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fDTDContentModelSource</name>
                            =
                            <name>source</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="line">// get content model source</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>XMLDTDContentModelSource</name>
                </type>
                <name>getDTDContentModelSource</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fDTDContentModelSource</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * The start of a content model. Depending on the type of the content
                * model, specific methods may be called between the call to the
                * startContentModel method and the call to the endContentModel method.
                *
                * @param elementName The name of the element.
                * @param augs Additional information that may include infoset
                * augmentations.
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>startContentModel</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>elementName</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XMLElementDecl</name>
                            </type>
                            <name>elementDecl</name> =
                            <init>
                                <expr>(<name>XMLElementDecl</name>)
                                    <call>
                                        <name><name>this</name>.<name>fElementDeclTab</name>.
                                            <name>get</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>elementName</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>elementDecl</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fElementDecl</name>
                                        =
                                        <name>elementDecl</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name>fDepth</name>
                            = 0
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>initializeContentModelStack</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </function>
            <comment type="line">// startContentModel(String)</comment>

            <comment type="javadoc">/**
                * A start of either a mixed or children content model. A mixed
                * content model will immediately be followed by a call to the
                * &lt;code&gt;pcdata()&lt;/code&gt; method. A children content model will
                * contain additional groups and/or elements.
                *
                * @param augs Additional information that may include infoset
                * augmentations.
                * @throws XNIException Thrown by handler to signal an error.
                *
                * @see #any
                * @see #empty
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>startGroup</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr><name>fDepth</name>++
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>initializeContentModelStack</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fMixed</name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="line">// startGroup()</comment>

            <comment type="javadoc">/**
                * The appearance of "#PCDATA" within a group signifying a
                * mixed content model. This method will be the first called
                * following the content model's &lt;code&gt;startGroup()&lt;/code&gt;.
                *
                *@param augs Additional information that may include infoset
                * augmentations.
                *
                * @throws XNIException Thrown by handler to signal an error.
                *
                * @see #startGroup
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>pcdata</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fMixed</name>
                            = true
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="line">// pcdata()</comment>

            <comment type="javadoc">/**
                * A referenced element in a mixed or children content model.
                *
                * @param elementName The name of the referenced element.
                * @param augs Additional information that may include infoset
                * augmentations.
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>element</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>elementName</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fMixed</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>
                                                <name>fNodeIndexStack</name>
                                                <index>[
                                                    <expr>
                                                        <name>fDepth</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                            == -1
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>
                                                        <name>fNodeIndexStack</name>
                                                        <index>[
                                                            <expr>
                                                                <name>fDepth</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    =
                                                    <call>
                                                        <name>addUniqueLeafNode</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>elementName</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>
                                                        <name>fNodeIndexStack</name>
                                                        <index>[
                                                            <expr>
                                                                <name>fDepth</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    =
                                                    <call>
                                                        <name>addContentSpecNode</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>XMLContentSpec</name>.
                                                                        <name>CONTENTSPECNODE_CHOICE</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>
                                                                        <name>fNodeIndexStack</name>
                                                                        <index>[
                                                                            <expr>
                                                                                <name>fDepth</name>
                                                                            </expr>
                                                                            ]
                                                                        </index>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name>addUniqueLeafNode</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>elementName</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>
                                            <name>fNodeIndexStack</name>
                                            <index>[
                                                <expr>
                                                    <name>fDepth</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        =
                                        <call>
                                            <name>addContentSpecNode</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>XMLContentSpec</name>.
                                                            <name>CONTENTSPECNODE_LEAF</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>elementName</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>
            <comment type="line">// element(String)</comment>

            <comment type="javadoc">/**
                * The separator between choices or sequences of a mixed or children
                * content model.
                *
                * @param separator The type of children separator.
                * @param augs Additional information that may include infoset
                * augmentations.
                * @throws XNIException Thrown by handler to signal an error.
                *
                * @see org.apache.xerces.xni.XMLDTDContentModelHandler#SEPARATOR_CHOICE
                * @see org.apache.xerces.xni.XMLDTDContentModelHandler#SEPARATOR_SEQUENCE
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>separator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>separator</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <if>if
                        <condition>(
                            <expr>!
                                <name>fMixed</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>
                                                <name>fOpStack</name>
                                                <index>[
                                                    <expr>
                                                        <name>fDepth</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                            !=
                                            <name><name>XMLContentSpec</name>.
                                                <name>CONTENTSPECNODE_SEQ</name>
                                            </name>
                                            &amp;&amp; <name>separator</name> ==
                                            <name><name>XMLDTDContentModelHandler</name>.
                                                <name>SEPARATOR_CHOICE</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>
                                                            <name>fPrevNodeIndexStack</name>
                                                            <index>[
                                                                <expr>
                                                                    <name>fDepth</name>
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                        != -1
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>
                                                                    <name>fNodeIndexStack</name>
                                                                    <index>[
                                                                        <expr>
                                                                            <name>fDepth</name>
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                                =
                                                                <call>
                                                                    <name>addContentSpecNode</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>
                                                                                    <name>fOpStack</name>
                                                                                    <index>[
                                                                                        <expr>
                                                                                            <name>fDepth</name>
                                                                                        </expr>
                                                                                        ]
                                                                                    </index>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>
                                                                                    <name>fPrevNodeIndexStack</name>
                                                                                    <index>[
                                                                                        <expr>
                                                                                            <name>fDepth</name>
                                                                                        </expr>
                                                                                        ]
                                                                                    </index>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>
                                                                                    <name>fNodeIndexStack</name>
                                                                                    <index>[
                                                                                        <expr>
                                                                                            <name>fDepth</name>
                                                                                        </expr>
                                                                                        ]
                                                                                    </index>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <expr_stmt>
                                                <expr>
                                                    <name>
                                                        <name>fPrevNodeIndexStack</name>
                                                        <index>[
                                                            <expr>
                                                                <name>fDepth</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    =
                                                    <name>
                                                        <name>fNodeIndexStack</name>
                                                        <index>[
                                                            <expr>
                                                                <name>fDepth</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>
                                                        <name>fOpStack</name>
                                                        <index>[
                                                            <expr>
                                                                <name>fDepth</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    =
                                                    <name><name>XMLContentSpec</name>.
                                                        <name>CONTENTSPECNODE_CHOICE</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>
                                                        <name>fOpStack</name>
                                                        <index>[
                                                            <expr>
                                                                <name>fDepth</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    !=
                                                    <name><name>XMLContentSpec</name>.
                                                        <name>CONTENTSPECNODE_CHOICE</name>
                                                    </name>
                                                    &amp;&amp; <name>separator</name> ==
                                                    <name><name>XMLDTDContentModelHandler</name>.
                                                        <name>SEPARATOR_SEQUENCE</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>
                                                                    <name>fPrevNodeIndexStack</name>
                                                                    <index>[
                                                                        <expr>
                                                                            <name>fDepth</name>
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                                != -1
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>
                                                                            <name>fNodeIndexStack</name>
                                                                            <index>[
                                                                                <expr>
                                                                                    <name>fDepth</name>
                                                                                </expr>
                                                                                ]
                                                                            </index>
                                                                        </name>
                                                                        =
                                                                        <call>
                                                                            <name>addContentSpecNode</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>
                                                                                            <name>fOpStack</name>
                                                                                            <index>[
                                                                                                <expr>
                                                                                                    <name>fDepth</name>
                                                                                                </expr>
                                                                                                ]
                                                                                            </index>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>
                                                                                            <name>fPrevNodeIndexStack
                                                                                            </name>
                                                                                            <index>[
                                                                                                <expr>
                                                                                                    <name>fDepth</name>
                                                                                                </expr>
                                                                                                ]
                                                                                            </index>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>
                                                                                            <name>fNodeIndexStack</name>
                                                                                            <index>[
                                                                                                <expr>
                                                                                                    <name>fDepth</name>
                                                                                                </expr>
                                                                                                ]
                                                                                            </index>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>
                                                                <name>fPrevNodeIndexStack</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>fDepth</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            =
                                                            <name>
                                                                <name>fNodeIndexStack</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>fDepth</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>
                                                                <name>fOpStack</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>fDepth</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            =
                                                            <name><name>XMLContentSpec</name>.
                                                                <name>CONTENTSPECNODE_SEQ</name>
                                                            </name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// separator(short)</comment>

            <comment type="javadoc">/**
                * The occurrence count for a child in a children content model or
                * for the mixed content model group.
                *
                * @param occurrence The occurrence count for the last element
                * or group.
                * @param augs Additional information that may include infoset
                * augmentations.
                * @throws XNIException Thrown by handler to signal an error.
                *
                * @see org.apache.xerces.xni.XMLDTDContentModelHandler#OCCURS_ZERO_OR_ONE
                * @see org.apache.xerces.xni.XMLDTDContentModelHandler#OCCURS_ZERO_OR_MORE
                * @see org.apache.xerces.xni.XMLDTDContentModelHandler#OCCURS_ONE_OR_MORE
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>occurrence</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>occurrence</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <if>if
                        <condition>(
                            <expr>!
                                <name>fMixed</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>occurrence</name>
                                            ==
                                            <name><name>XMLDTDContentModelHandler</name>.
                                                <name>OCCURS_ZERO_OR_ONE</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>
                                                        <name>fNodeIndexStack</name>
                                                        <index>[
                                                            <expr>
                                                                <name>fDepth</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    =
                                                    <call>
                                                        <name>addContentSpecNode</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>XMLContentSpec</name>.
                                                                        <name>CONTENTSPECNODE_ZERO_OR_ONE</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>
                                                                        <name>fNodeIndexStack</name>
                                                                        <index>[
                                                                            <expr>
                                                                                <name>fDepth</name>
                                                                            </expr>
                                                                            ]
                                                                        </index>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>-1</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>occurrence</name>
                                                    ==
                                                    <name><name>XMLDTDContentModelHandler</name>.
                                                        <name>OCCURS_ZERO_OR_MORE</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>
                                                                <name>fNodeIndexStack</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>fDepth</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            =
                                                            <call>
                                                                <name>addContentSpecNode</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>XMLContentSpec</name>.
                                                                                <name>CONTENTSPECNODE_ZERO_OR_MORE
                                                                                </name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>
                                                                                <name>fNodeIndexStack</name>
                                                                                <index>[
                                                                                    <expr>
                                                                                        <name>fDepth</name>
                                                                                    </expr>
                                                                                    ]
                                                                                </index>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>-1</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>occurrence</name>
                                                            ==
                                                            <name><name>XMLDTDContentModelHandler</name>.
                                                                <name>OCCURS_ONE_OR_MORE</name>
                                                            </name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>
                                                                        <name>fNodeIndexStack</name>
                                                                        <index>[
                                                                            <expr>
                                                                                <name>fDepth</name>
                                                                            </expr>
                                                                            ]
                                                                        </index>
                                                                    </name>
                                                                    =
                                                                    <call>
                                                                        <name>addContentSpecNode</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name><name>XMLContentSpec</name>.
                                                                                        <name>
                                                                                            CONTENTSPECNODE_ONE_OR_MORE
                                                                                        </name>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>
                                                                                        <name>fNodeIndexStack</name>
                                                                                        <index>[
                                                                                            <expr>
                                                                                                <name>fDepth</name>
                                                                                            </expr>
                                                                                            ]
                                                                                        </index>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>-1</expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                            </else>
                                        </if>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// occurrence(short)</comment>

            <comment type="javadoc">/**
                * The end of a group for mixed or children content models.
                *
                * @param augs Additional information that may include infoset
                * augmentations.
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>endGroup</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <if>if
                        <condition>(
                            <expr>!
                                <name>fMixed</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>
                                                <name>fPrevNodeIndexStack</name>
                                                <index>[
                                                    <expr>
                                                        <name>fDepth</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                            != -1
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>
                                                        <name>fNodeIndexStack</name>
                                                        <index>[
                                                            <expr>
                                                                <name>fDepth</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    =
                                                    <call>
                                                        <name>addContentSpecNode</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>
                                                                        <name>fOpStack</name>
                                                                        <index>[
                                                                            <expr>
                                                                                <name>fDepth</name>
                                                                            </expr>
                                                                            ]
                                                                        </index>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>
                                                                        <name>fPrevNodeIndexStack</name>
                                                                        <index>[
                                                                            <expr>
                                                                                <name>fDepth</name>
                                                                            </expr>
                                                                            ]
                                                                        </index>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>
                                                                        <name>fNodeIndexStack</name>
                                                                        <index>[
                                                                            <expr>
                                                                                <name>fDepth</name>
                                                                            </expr>
                                                                            ]
                                                                        </index>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>nodeIndex</name> =
                                        <init>
                                            <expr>
                                                <name>
                                                    <name>fNodeIndexStack</name>
                                                    <index>[
                                                        <expr><name>fDepth</name>--
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>
                                            <name>fNodeIndexStack</name>
                                            <index>[
                                                <expr>
                                                    <name>fDepth</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        =
                                        <name>nodeIndex</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// endGroup()</comment>

            <comment type="line">// no-op methods</comment>

            <comment type="javadoc">/**
                * A content model of ANY.
                *
                * @param augs Additional information that may include infoset
                * augmentations.
                * @throws XNIException Thrown by handler to signal an error.
                *
                * @see #empty
                * @see #startGroup
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>any</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{}</block>
            </function>

            <comment type="javadoc">/**
                * A content model of EMPTY.
                *
                * @param augs Additional information that may include infoset
                * augmentations.
                * @throws XNIException Thrown by handler to signal an error.
                *
                * @see #any
                * @see #startGroup
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>empty</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{}</block>
            </function>

            <comment type="javadoc">/**
                * The end of a content model.
                * @param augs Additional information that may include infoset
                * augmentations.
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>endContentModel</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{}</block>
            </function>

            <comment type="line">//</comment>
            <comment type="line">// Grammar methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/** Returns true if this grammar is namespace aware. */</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isNamespaceAware</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return <expr>false</expr>;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// isNamespaceAware():boolean</comment>

            <comment type="javadoc">/** Returns the symbol table. */</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>SymbolTable</name>
                </type>
                <name>getSymbolTable</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fSymbolTable</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getSymbolTable():SymbolTable</comment>

            <comment type="javadoc">/**
                * Returns the index of the first element declaration. This index
                * is then used to query more information about the element declaration.
                *
                * @see #getNextElementDeclIndex
                * @see #getElementDecl
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getFirstElementDeclIndex</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fElementDeclCount</name>
                            &gt;= 0 ? 0 : -1
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getFirstElementDeclIndex():int</comment>

            <comment type="javadoc">/**
                * Returns the next index of the element declaration following the
                * specified element declaration.
                *
                * @param elementDeclIndex The element declaration index.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getNextElementDeclIndex</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>elementDeclIndex</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>elementDeclIndex</name>
                            &lt; <name>fElementDeclCount</name> - 1
                            ? <name>elementDeclIndex</name> + 1 : -1
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getNextElementDeclIndex(int):int</comment>

            <comment type="javadoc">/**
                * getElementDeclIndex
                *
                * @param elementDeclName
                *
                * @return index of the elementDeclName in scope
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getElementDeclIndex</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>elementDeclName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>mapping</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>fElementIndexMap</name>.
                                            <name>get</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>elementDeclName</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">//System.out.println("getElementDeclIndex("+elementDeclName+") -&gt;
                        "+mapping);
                    </comment>
                    <return>return
                        <expr>
                            <name>mapping</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getElementDeclIndex(String):int</comment>

            <comment type="javadoc">/** Returns the element decl index.
                * @param elementDeclQName qualilfied name of the element
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getElementDeclIndex</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>elementDeclQName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getElementDeclIndex</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>elementDeclQName</name>.
                                                <name>rawname</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getElementDeclIndex(QName):int</comment>

            <comment type="javadoc">/** make separate function for getting contentSpecType of element.
                * we can avoid setting of the element values.
                */
            </comment>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>short</name>
                </type>
                <name>getContentSpecType</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>elementIndex</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>elementIndex</name>
                                &lt; 0 || <name>elementIndex</name> &gt;=
                                <name>fElementDeclCount</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>-1</expr> ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>chunk</name> =
                            <init>
                                <expr>
                                    <name>elementIndex</name>
                                    &gt;&gt;
                                    <name>CHUNK_SHIFT</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name> =
                            <init>
                                <expr>
                                    <name>elementIndex</name>
                                    &amp;
                                    <name>CHUNK_MASK</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <name>
                                    <name>fElementDeclType</name>
                                    <index>[
                                        <expr>
                                            <name>chunk</name>
                                        </expr>
                                        ]
                                    </index>
                                    <index>[
                                        <expr>
                                            <name>index</name>
                                        </expr>
                                        ]
                                    </index>
                                </name>
                                == -1
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>-1</expr> ;
                                </return>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <return>return
                                    <expr>
                                        <call>(<name>short</name>)
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>
                                                            <name>fElementDeclType</name>
                                                            <index>[
                                                                <expr>
                                                                    <name>chunk</name>
                                                                </expr>
                                                                ]
                                                            </index>
                                                            <index>[
                                                                <expr>
                                                                    <name>index</name>
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                        &amp;
                                                        <name>LIST_MASK</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </else>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">//getContentSpecType</comment>

            <comment type="javadoc">/**
                * getElementDecl
                *
                * @param elementDeclIndex
                * @param elementDecl The values of this structure are set by this call.
                *
                * @return True if find the element, False otherwise.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>getElementDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>elementDeclIndex</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLElementDecl</name>
                            </type>
                            <name>elementDecl</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name>elementDeclIndex</name>
                                &lt; 0 || <name>elementDeclIndex</name> &gt;=
                                <name>fElementDeclCount</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>chunk</name> =
                            <init>
                                <expr>
                                    <name>elementDeclIndex</name>
                                    &gt;&gt;
                                    <name>CHUNK_SHIFT</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name> =
                            <init>
                                <expr>
                                    <name>elementDeclIndex</name>
                                    &amp;
                                    <name>CHUNK_MASK</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>elementDecl</name>.<name>name</name>.
                                    <name>setValues</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>fElementDeclName</name>
                                                <index>[
                                                    <expr>
                                                        <name>chunk</name>
                                                    </expr>
                                                    ]
                                                </index>
                                                <index>[
                                                    <expr>
                                                        <name>index</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <name>
                                    <name>fElementDeclType</name>
                                    <index>[
                                        <expr>
                                            <name>chunk</name>
                                        </expr>
                                        ]
                                    </index>
                                    <index>[
                                        <expr>
                                            <name>index</name>
                                        </expr>
                                        ]
                                    </index>
                                </name>
                                == -1
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>elementDecl</name>.
                                            <name>type</name>
                                        </name>
                                        = -1
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>elementDecl</name>.<name>simpleType</name>.
                                            <name>list</name>
                                        </name>
                                        = false
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>elementDecl</name>.
                                            <name>type</name>
                                        </name>
                                        =
                                        <call>(<name>short</name>)
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>
                                                            <name>fElementDeclType</name>
                                                            <index>[
                                                                <expr>
                                                                    <name>chunk</name>
                                                                </expr>
                                                                ]
                                                            </index>
                                                            <index>[
                                                                <expr>
                                                                    <name>index</name>
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                        &amp;
                                                        <name>LIST_MASK</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>elementDecl</name>.<name>simpleType</name>.
                                            <name>list</name>
                                        </name>
                                        = (
                                        <name>
                                            <name>fElementDeclType</name>
                                            <index>[
                                                <expr>
                                                    <name>chunk</name>
                                                </expr>
                                                ]
                                            </index>
                                            <index>[
                                                <expr>
                                                    <name>index</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        &amp; <name>LIST_FLAG</name>) != 0
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>

                    <comment type="block">/* Validators are null until we add that code */</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>elementDecl</name>.
                                    <name>type</name>
                                </name>
                                ==
                                <name><name>XMLElementDecl</name>.
                                    <name>TYPE_CHILDREN</name>
                                </name>
                                ||
                                <name><name>elementDecl</name>.
                                    <name>type</name>
                                </name>
                                ==
                                <name><name>XMLElementDecl</name>.
                                    <name>TYPE_MIXED</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>elementDecl</name>.
                                            <name>contentModelValidator</name>
                                        </name>
                                        =
                                        <call>
                                            <name>getElementContentModelValidator</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>elementDeclIndex</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <expr_stmt>
                        <expr>
                            <name><name>elementDecl</name>.<name>simpleType</name>.
                                <name>datatypeValidator</name>
                            </name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>elementDecl</name>.<name>simpleType</name>.
                                <name>defaultType</name>
                            </name>
                            = -1
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>elementDecl</name>.<name>simpleType</name>.
                                <name>defaultValue</name>
                            </name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <return>return <expr>true</expr>;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// getElementDecl(int,XMLElementDecl):boolean</comment>

            <comment type="line">// REVISIT: Make this getAttributeDeclCount/getAttributeDeclAt. -Ac</comment>

            <comment type="javadoc">/**
                * getFirstAttributeDeclIndex
                *
                * @param elementDeclIndex
                *
                * @return index of the first attribute for element declaration elementDeclIndex
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getFirstAttributeDeclIndex</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>elementDeclIndex</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>chunk</name> =
                            <init>
                                <expr>
                                    <name>elementDeclIndex</name>
                                    &gt;&gt;
                                    <name>CHUNK_SHIFT</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name> =
                            <init>
                                <expr>
                                    <name>elementDeclIndex</name>
                                    &amp;
                                    <name>CHUNK_MASK</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <return>return
                        <expr>
                            <name>
                                <name>fElementDeclFirstAttributeDeclIndex</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getFirstAttributeDeclIndex</comment>

            <comment type="javadoc">/**
                * getNextAttributeDeclIndex
                *
                * @param attributeDeclIndex
                *
                * @return index of the next attribute of the attribute at attributeDeclIndex
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getNextAttributeDeclIndex</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>attributeDeclIndex</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>chunk</name> =
                            <init>
                                <expr>
                                    <name>attributeDeclIndex</name>
                                    &gt;&gt;
                                    <name>CHUNK_SHIFT</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name> =
                            <init>
                                <expr>
                                    <name>attributeDeclIndex</name>
                                    &amp;
                                    <name>CHUNK_MASK</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <return>return
                        <expr>
                            <name>
                                <name>fAttributeDeclNextAttributeDeclIndex</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getNextAttributeDeclIndex</comment>

            <comment type="javadoc">/**
                * getAttributeDecl
                *
                * @param attributeDeclIndex
                * @param attributeDecl The values of this structure are set by this call.
                *
                * @return true if getAttributeDecl was able to fill in the value of attributeDecl
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>getAttributeDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>attributeDeclIndex</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLAttributeDecl</name>
                            </type>
                            <name>attributeDecl</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>attributeDeclIndex</name>
                                &lt; 0 || <name>attributeDeclIndex</name> &gt;=
                                <name>fAttributeDeclCount</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>chunk</name> =
                            <init>
                                <expr>
                                    <name>attributeDeclIndex</name>
                                    &gt;&gt;
                                    <name>CHUNK_SHIFT</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name> =
                            <init>
                                <expr>
                                    <name>attributeDeclIndex</name>
                                    &amp;
                                    <name>CHUNK_MASK</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>attributeDecl</name>.<name>name</name>.
                                    <name>setValues</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>fAttributeDeclName</name>
                                                <index>[
                                                    <expr>
                                                        <name>chunk</name>
                                                    </expr>
                                                    ]
                                                </index>
                                                <index>[
                                                    <expr>
                                                        <name>index</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>attributeType</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>isList</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <name>
                                    <name>fAttributeDeclType</name>
                                    <index>[
                                        <expr>
                                            <name>chunk</name>
                                        </expr>
                                        ]
                                    </index>
                                    <index>[
                                        <expr>
                                            <name>index</name>
                                        </expr>
                                        ]
                                    </index>
                                </name>
                                == -1
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{

                                <expr_stmt>
                                    <expr>
                                        <name>attributeType</name>
                                        = -1
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>isList</name>
                                        = false
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>attributeType</name>
                                        =
                                        <call>(<name>short</name>)
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>
                                                            <name>fAttributeDeclType</name>
                                                            <index>[
                                                                <expr>
                                                                    <name>chunk</name>
                                                                </expr>
                                                                ]
                                                            </index>
                                                            <index>[
                                                                <expr>
                                                                    <name>index</name>
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                        &amp;
                                                        <name>LIST_MASK</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>isList</name>
                                        = (
                                        <name>
                                            <name>fAttributeDeclType</name>
                                            <index>[
                                                <expr>
                                                    <name>chunk</name>
                                                </expr>
                                                ]
                                            </index>
                                            <index>[
                                                <expr>
                                                    <name>index</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        &amp; <name>LIST_FLAG</name>) != 0
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>attributeDecl</name>.<name>simpleType</name>.
                                    <name>setValues</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>attributeType</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>fAttributeDeclName</name>
                                                <index>[
                                                    <expr>
                                                        <name>chunk</name>
                                                    </expr>
                                                    ]
                                                </index>
                                                <index>[
                                                    <expr>
                                                        <name>index</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                            .
                                            <name>localpart</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>fAttributeDeclEnumeration</name>
                                                <index>[
                                                    <expr>
                                                        <name>chunk</name>
                                                    </expr>
                                                    ]
                                                </index>
                                                <index>[
                                                    <expr>
                                                        <name>index</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>isList</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>fAttributeDeclDefaultType</name>
                                                <index>[
                                                    <expr>
                                                        <name>chunk</name>
                                                    </expr>
                                                    ]
                                                </index>
                                                <index>[
                                                    <expr>
                                                        <name>index</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>fAttributeDeclDefaultValue</name>
                                                <index>[
                                                    <expr>
                                                        <name>chunk</name>
                                                    </expr>
                                                    ]
                                                </index>
                                                <index>[
                                                    <expr>
                                                        <name>index</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>fAttributeDeclNonNormalizedDefaultValue</name>
                                                <index>[
                                                    <expr>
                                                        <name>chunk</name>
                                                    </expr>
                                                    ]
                                                </index>
                                                <index>[
                                                    <expr>
                                                        <name>index</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>fAttributeDeclDatatypeValidator</name>
                                                <index>[
                                                    <expr>
                                                        <name>chunk</name>
                                                    </expr>
                                                    ]
                                                </index>
                                                <index>[
                                                    <expr>
                                                        <name>index</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return <expr>true</expr>;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// getAttributeDecl</comment>


            <comment type="javadoc">/**
                * Returns whether the given attribute is of type CDATA or not
                *
                * @param elName The element name.
                * @param atName The attribute name.
                *
                * @return true if the attribute is of type CDATA
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isCDATAAttribute</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>elName</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>atName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>elDeclIdx</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getElementDeclIndex</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>elName</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>getAttributeDecl</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>elDeclIdx</name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>fAttributeDecl</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                &amp;&amp;
                                <name><name>fAttributeDecl</name>.<name>simpleType</name>.
                                    <name>type</name>
                                </name>
                                !=
                                <name><name>XMLSimpleType</name>.
                                    <name>TYPE_CDATA</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return <expr>true</expr>;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * getEntityDeclIndex
                *
                * @param entityDeclName
                *
                * @return the index of the EntityDecl
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getEntityDeclIndex</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>entityDeclName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>entityDeclName</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>-1</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <return>return
                        <expr>
                            <call>
                                <name><name>fEntityIndexMap</name>.
                                    <name>get</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>entityDeclName</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getEntityDeclIndex</comment>

            <comment type="javadoc">/**
                * getEntityDecl
                *
                * @param entityDeclIndex
                * @param entityDecl
                *
                * @return true if getEntityDecl was able to fill entityDecl with the contents of the entity
                * with index entityDeclIndex
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>getEntityDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>entityDeclIndex</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLEntityDecl</name>
                            </type>
                            <name>entityDecl</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>entityDeclIndex</name>
                                &lt; 0 || <name>entityDeclIndex</name> &gt;=
                                <name>fEntityCount</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>chunk</name> =
                            <init>
                                <expr>
                                    <name>entityDeclIndex</name>
                                    &gt;&gt;
                                    <name>CHUNK_SHIFT</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name> =
                            <init>
                                <expr>
                                    <name>entityDeclIndex</name>
                                    &amp;
                                    <name>CHUNK_MASK</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>entityDecl</name>.
                                    <name>setValues</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>fEntityName</name>
                                                <index>[
                                                    <expr>
                                                        <name>chunk</name>
                                                    </expr>
                                                    ]
                                                </index>
                                                <index>[
                                                    <expr>
                                                        <name>index</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>fEntityPublicId</name>
                                                <index>[
                                                    <expr>
                                                        <name>chunk</name>
                                                    </expr>
                                                    ]
                                                </index>
                                                <index>[
                                                    <expr>
                                                        <name>index</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>fEntitySystemId</name>
                                                <index>[
                                                    <expr>
                                                        <name>chunk</name>
                                                    </expr>
                                                    ]
                                                </index>
                                                <index>[
                                                    <expr>
                                                        <name>index</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>fEntityBaseSystemId</name>
                                                <index>[
                                                    <expr>
                                                        <name>chunk</name>
                                                    </expr>
                                                    ]
                                                </index>
                                                <index>[
                                                    <expr>
                                                        <name>index</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>fEntityNotation</name>
                                                <index>[
                                                    <expr>
                                                        <name>chunk</name>
                                                    </expr>
                                                    ]
                                                </index>
                                                <index>[
                                                    <expr>
                                                        <name>index</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>fEntityValue</name>
                                                <index>[
                                                    <expr>
                                                        <name>chunk</name>
                                                    </expr>
                                                    ]
                                                </index>
                                                <index>[
                                                    <expr>
                                                        <name>index</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>fEntityIsPE</name>
                                                <index>[
                                                    <expr>
                                                        <name>chunk</name>
                                                    </expr>
                                                    ]
                                                </index>
                                                <index>[
                                                    <expr>
                                                        <name>index</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                            == 0 ? false : true
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>fEntityInExternal</name>
                                                <index>[
                                                    <expr>
                                                        <name>chunk</name>
                                                    </expr>
                                                    ]
                                                </index>
                                                <index>[
                                                    <expr>
                                                        <name>index</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                            == 0 ? false : true
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <return>return <expr>true</expr>;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getEntityDecl</comment>

            <comment type="javadoc">/**
                * getNotationDeclIndex
                *
                * @param notationDeclName
                *
                * @return the index if found a notation with the name, otherwise -1.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getNotationDeclIndex</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>notationDeclName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>notationDeclName</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>-1</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <return>return
                        <expr>
                            <call>
                                <name><name>fNotationIndexMap</name>.
                                    <name>get</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>notationDeclName</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getNotationDeclIndex</comment>

            <comment type="javadoc">/**
                * getNotationDecl
                *
                * @param notationDeclIndex
                * @param notationDecl
                *
                * @return return true of getNotationDecl can fill notationDecl with information about
                * the notation at notationDeclIndex.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>getNotationDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>notationDeclIndex</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLNotationDecl</name>
                            </type>
                            <name>notationDecl</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>notationDeclIndex</name>
                                &lt; 0 || <name>notationDeclIndex</name> &gt;=
                                <name>fNotationCount</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>chunk</name> =
                            <init>
                                <expr>
                                    <name>notationDeclIndex</name>
                                    &gt;&gt;
                                    <name>CHUNK_SHIFT</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name> =
                            <init>
                                <expr>
                                    <name>notationDeclIndex</name>
                                    &amp;
                                    <name>CHUNK_MASK</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>notationDecl</name>.
                                    <name>setValues</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>fNotationName</name>
                                                <index>[
                                                    <expr>
                                                        <name>chunk</name>
                                                    </expr>
                                                    ]
                                                </index>
                                                <index>[
                                                    <expr>
                                                        <name>index</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>fNotationPublicId</name>
                                                <index>[
                                                    <expr>
                                                        <name>chunk</name>
                                                    </expr>
                                                    ]
                                                </index>
                                                <index>[
                                                    <expr>
                                                        <name>index</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>fNotationSystemId</name>
                                                <index>[
                                                    <expr>
                                                        <name>chunk</name>
                                                    </expr>
                                                    ]
                                                </index>
                                                <index>[
                                                    <expr>
                                                        <name>index</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>fNotationBaseSystemId</name>
                                                <index>[
                                                    <expr>
                                                        <name>chunk</name>
                                                    </expr>
                                                    ]
                                                </index>
                                                <index>[
                                                    <expr>
                                                        <name>index</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <return>return <expr>true</expr>;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// getNotationDecl</comment>

            <comment type="javadoc">/**
                * getContentSpec
                *
                * @param contentSpecIndex
                * @param contentSpec
                *
                * @return true if find the requested contentSpec node, false otherwise
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>getContentSpec</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>contentSpecIndex</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLContentSpec</name>
                            </type>
                            <name>contentSpec</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>contentSpecIndex</name>
                                &lt; 0 || <name>contentSpecIndex</name> &gt;=
                                <name>fContentSpecCount</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return <expr>false</expr>;
                            </return>
                        </then>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>chunk</name> =
                            <init>
                                <expr>
                                    <name>contentSpecIndex</name>
                                    &gt;&gt;
                                    <name>CHUNK_SHIFT</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name> =
                            <init>
                                <expr>
                                    <name>contentSpecIndex</name>
                                    &amp;
                                    <name>CHUNK_MASK</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <name><name>contentSpec</name>.
                                <name>type</name>
                            </name>
                            =
                            <name>
                                <name>fContentSpecType</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>contentSpec</name>.
                                <name>value</name>
                            </name>
                            =
                            <name>
                                <name>fContentSpecValue</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>contentSpec</name>.
                                <name>otherValue</name>
                            </name>
                            =
                            <name>
                                <name>fContentSpecOtherValue</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return <expr>true</expr>;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * getContentSpecAsString
                *
                * @param elementDeclIndex
                *
                * @return String
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getContentSpecAsString</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>elementDeclIndex</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name>elementDeclIndex</name>
                                &lt; 0 || <name>elementDeclIndex</name> &gt;=
                                <name>fElementDeclCount</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>chunk</name> =
                            <init>
                                <expr>
                                    <name>elementDeclIndex</name>
                                    &gt;&gt;
                                    <name>CHUNK_SHIFT</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name> =
                            <init>
                                <expr>
                                    <name>elementDeclIndex</name>
                                    &amp;
                                    <name>CHUNK_MASK</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>contentSpecIndex</name> =
                            <init>
                                <expr>
                                    <name>
                                        <name>fElementDeclContentSpecIndex</name>
                                        <index>[
                                            <expr>
                                                <name>chunk</name>
                                            </expr>
                                            ]
                                        </index>
                                        <index>[
                                            <expr>
                                                <name>index</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// lookup content spec node</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XMLContentSpec</name>
                            </type>
                            <name>contentSpec</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>XMLContentSpec</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>getContentSpec</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>contentSpecIndex</name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>contentSpec</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{

                                <comment type="line">// build string</comment>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>StringBuffer</name>
                                        </type>
                                        <name>str</name> =
                                        <init>
                                            <expr>new
                                                <call>
                                                    <name>StringBuffer</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>parentContentSpecType</name> =
                                        <init>
                                            <expr>
                                                <name><name>contentSpec</name>.
                                                    <name>type</name>
                                                </name>
                                                &amp; 0x0f
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>nextContentSpec</name>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <switch>switch
                                    <condition>(
                                        <expr>
                                            <name>parentContentSpecType</name>
                                        </expr>
                                        )
                                    </condition>
                                    <block>{
                                        <case>case
                                            <expr>
                                                <name><name>XMLContentSpec</name>.
                                                    <name>CONTENTSPECNODE_LEAF</name>
                                                </name>
                                            </expr>
                                            :
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>str</name>.
                                                                <name>append</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>'('</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name><name>contentSpec</name>.
                                                                <name>value</name>
                                                            </name>
                                                            == <name>null</name> &amp;&amp;
                                                            <name><name>contentSpec</name>.
                                                                <name>otherValue</name>
                                                            </name>
                                                            ==
                                                            <name>null</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>str</name>.
                                                                            <name>append</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>"#PCDATA"</expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                    <else>else
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>str</name>.
                                                                            <name>append</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name><name>contentSpec</name>.
                                                                                        <name>value</name>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </else>
                                                </if>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>str</name>.
                                                                <name>append</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>')'</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                                }
                                            </block>
                                        </case>
                                        <case>case
                                            <expr>
                                                <name><name>XMLContentSpec</name>.
                                                    <name>CONTENTSPECNODE_ZERO_OR_ONE</name>
                                                </name>
                                            </expr>
                                            :
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>getContentSpec</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>((
                                                                        <name>
                                                                            <name>int</name>
                                                                            <index>[]</index>
                                                                        </name>
                                                                        )
                                                                        <name><name>contentSpec</name>.
                                                                            <name>value</name>
                                                                        </name>
                                                                        )
                                                                        <index>[<expr>0</expr>]
                                                                        </index>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>contentSpec</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>nextContentSpec</name>
                                                        =
                                                        <name><name>contentSpec</name>.
                                                            <name>type</name>
                                                        </name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>

                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>nextContentSpec</name>
                                                            ==
                                                            <name><name>XMLContentSpec</name>.
                                                                <name>CONTENTSPECNODE_LEAF</name>
                                                            </name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>str</name>.
                                                                            <name>append</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>'('</expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>str</name>.
                                                                            <name>append</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name><name>contentSpec</name>.
                                                                                        <name>value</name>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>str</name>.
                                                                            <name>append</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>')'</expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                    <else>else
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>nextContentSpec</name>
                                                                    ==
                                                                    <name><name>XMLContentSpec</name>.
                                                                        <name>CONTENTSPECNODE_ONE_OR_MORE</name>
                                                                    </name>
                                                                    ||
                                                                    <name>nextContentSpec</name>
                                                                    ==
                                                                    <name><name>XMLContentSpec</name>.
                                                                        <name>CONTENTSPECNODE_ZERO_OR_MORE</name>
                                                                    </name>
                                                                    ||
                                                                    <name>nextContentSpec</name>
                                                                    ==
                                                                    <name><name>XMLContentSpec</name>.
                                                                        <name>CONTENTSPECNODE_ZERO_OR_ONE</name>
                                                                    </name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>str</name>.
                                                                                    <name>append</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>'('</expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name>appendContentSpec</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>contentSpec</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>str</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>true</expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>
                                                                                                parentContentSpecType
                                                                                            </name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>str</name>.
                                                                                    <name>append</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>')'</expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                            <else>else
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name>appendContentSpec</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>contentSpec</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>str</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>true</expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>
                                                                                                parentContentSpecType
                                                                                            </name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </else>
                                                        </if>
                                                    </else>
                                                </if>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>str</name>.
                                                                <name>append</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>'?'</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                                }
                                            </block>
                                        </case>
                                        <case>case
                                            <expr>
                                                <name><name>XMLContentSpec</name>.
                                                    <name>CONTENTSPECNODE_ZERO_OR_MORE</name>
                                                </name>
                                            </expr>
                                            :
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>getContentSpec</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>((
                                                                        <name>
                                                                            <name>int</name>
                                                                            <index>[]</index>
                                                                        </name>
                                                                        )
                                                                        <name><name>contentSpec</name>.
                                                                            <name>value</name>
                                                                        </name>
                                                                        )
                                                                        <index>[<expr>0</expr>]
                                                                        </index>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>contentSpec</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>nextContentSpec</name>
                                                        =
                                                        <name><name>contentSpec</name>.
                                                            <name>type</name>
                                                        </name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>

                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>nextContentSpec</name>
                                                            ==
                                                            <name><name>XMLContentSpec</name>.
                                                                <name>CONTENTSPECNODE_LEAF</name>
                                                            </name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>str</name>.
                                                                            <name>append</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>'('</expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name><name>contentSpec</name>.
                                                                            <name>value</name>
                                                                        </name>
                                                                        == <name>null</name> &amp;&amp;
                                                                        <name><name>contentSpec</name>.
                                                                            <name>otherValue</name>
                                                                        </name>
                                                                        ==
                                                                        <name>null</name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>str</name>.
                                                                                        <name>append</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>"#PCDATA"</expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </then>
                                                                <else>else
                                                                    <if>if
                                                                        <condition>(
                                                                            <expr>
                                                                                <name><name>contentSpec</name>.
                                                                                    <name>otherValue</name>
                                                                                </name>
                                                                                !=
                                                                                <name>null</name>
                                                                            </expr>
                                                                            )
                                                                        </condition>
                                                                        <then>
                                                                            <block>{
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>str</name>.
                                                                                                <name>append</name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>"##any:uri="+
                                                                                                        <name><name>
                                                                                                            contentSpec</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                otherValue
                                                                                                            </name>
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                }
                                                                            </block>
                                                                        </then>
                                                                        <else>else
                                                                            <if>if
                                                                                <condition>(
                                                                                    <expr>
                                                                                        <name><name>contentSpec</name>.
                                                                                            <name>value</name>
                                                                                        </name>
                                                                                        ==
                                                                                        <name>null</name>
                                                                                    </expr>
                                                                                    )
                                                                                </condition>
                                                                                <then>
                                                                                    <block>{
                                                                                        <expr_stmt>
                                                                                            <expr>
                                                                                                <call>
                                                                                                    <name><name>
                                                                                                        str</name>.
                                                                                                        <name>append
                                                                                                        </name>
                                                                                                    </name>
                                                                                                    <argument_list>(
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                "##any"
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        )
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                            ;
                                                                                        </expr_stmt>
                                                                                        }
                                                                                    </block>
                                                                                </then>
                                                                                <else>else
                                                                                    <block>{
                                                                                        <expr_stmt>
                                                                                            <expr>
                                                                                                <call>
                                                                                                    <name>
                                                                                                        appendContentSpec
                                                                                                    </name>
                                                                                                    <argument_list>(
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    contentSpec
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        ,
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    str
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        ,
                                                                                                        <argument>
                                                                                                            <expr>true
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        ,
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    parentContentSpecType
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        )
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                            ;
                                                                                        </expr_stmt>
                                                                                        }
                                                                                    </block>
                                                                                </else>
                                                                            </if>
                                                                        </else>
                                                                    </if>
                                                                </else>
                                                            </if>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>str</name>.
                                                                            <name>append</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>')'</expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                    <else>else
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>nextContentSpec</name>
                                                                    ==
                                                                    <name><name>XMLContentSpec</name>.
                                                                        <name>CONTENTSPECNODE_ONE_OR_MORE</name>
                                                                    </name>
                                                                    ||
                                                                    <name>nextContentSpec</name>
                                                                    ==
                                                                    <name><name>XMLContentSpec</name>.
                                                                        <name>CONTENTSPECNODE_ZERO_OR_MORE</name>
                                                                    </name>
                                                                    ||
                                                                    <name>nextContentSpec</name>
                                                                    ==
                                                                    <name><name>XMLContentSpec</name>.
                                                                        <name>CONTENTSPECNODE_ZERO_OR_ONE</name>
                                                                    </name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>str</name>.
                                                                                    <name>append</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>'('</expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name>appendContentSpec</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>contentSpec</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>str</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>true</expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>
                                                                                                parentContentSpecType
                                                                                            </name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>str</name>.
                                                                                    <name>append</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>')'</expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                            <else>else
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name>appendContentSpec</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>contentSpec</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>str</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>true</expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>
                                                                                                parentContentSpecType
                                                                                            </name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </else>
                                                        </if>
                                                    </else>
                                                </if>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>str</name>.
                                                                <name>append</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>'*'</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                                }
                                            </block>
                                        </case>
                                        <case>case
                                            <expr>
                                                <name><name>XMLContentSpec</name>.
                                                    <name>CONTENTSPECNODE_ONE_OR_MORE</name>
                                                </name>
                                            </expr>
                                            :
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>getContentSpec</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>((
                                                                        <name>
                                                                            <name>int</name>
                                                                            <index>[]</index>
                                                                        </name>
                                                                        )
                                                                        <name><name>contentSpec</name>.
                                                                            <name>value</name>
                                                                        </name>
                                                                        )
                                                                        <index>[<expr>0</expr>]
                                                                        </index>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>contentSpec</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>nextContentSpec</name>
                                                        =
                                                        <name><name>contentSpec</name>.
                                                            <name>type</name>
                                                        </name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>

                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>nextContentSpec</name>
                                                            ==
                                                            <name><name>XMLContentSpec</name>.
                                                                <name>CONTENTSPECNODE_LEAF</name>
                                                            </name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>str</name>.
                                                                            <name>append</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>'('</expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name><name>contentSpec</name>.
                                                                            <name>value</name>
                                                                        </name>
                                                                        == <name>null</name> &amp;&amp;
                                                                        <name><name>contentSpec</name>.
                                                                            <name>otherValue</name>
                                                                        </name>
                                                                        ==
                                                                        <name>null</name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>str</name>.
                                                                                        <name>append</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>"#PCDATA"</expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </then>
                                                                <else>else
                                                                    <if>if
                                                                        <condition>(
                                                                            <expr>
                                                                                <name><name>contentSpec</name>.
                                                                                    <name>otherValue</name>
                                                                                </name>
                                                                                !=
                                                                                <name>null</name>
                                                                            </expr>
                                                                            )
                                                                        </condition>
                                                                        <then>
                                                                            <block>{
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>str</name>.
                                                                                                <name>append</name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>"##any:uri="+
                                                                                                        <name><name>
                                                                                                            contentSpec</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                otherValue
                                                                                                            </name>
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                }
                                                                            </block>
                                                                        </then>
                                                                        <else>else
                                                                            <if>if
                                                                                <condition>(
                                                                                    <expr>
                                                                                        <name><name>contentSpec</name>.
                                                                                            <name>value</name>
                                                                                        </name>
                                                                                        ==
                                                                                        <name>null</name>
                                                                                    </expr>
                                                                                    )
                                                                                </condition>
                                                                                <then>
                                                                                    <block>{
                                                                                        <expr_stmt>
                                                                                            <expr>
                                                                                                <call>
                                                                                                    <name><name>
                                                                                                        str</name>.
                                                                                                        <name>append
                                                                                                        </name>
                                                                                                    </name>
                                                                                                    <argument_list>(
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                "##any"
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        )
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                            ;
                                                                                        </expr_stmt>
                                                                                        }
                                                                                    </block>
                                                                                </then>
                                                                                <else>else
                                                                                    <block>{
                                                                                        <expr_stmt>
                                                                                            <expr>
                                                                                                <call>
                                                                                                    <name><name>
                                                                                                        str</name>.
                                                                                                        <name>append
                                                                                                        </name>
                                                                                                    </name>
                                                                                                    <argument_list>(
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    <name>
                                                                                                                        contentSpec</name>
                                                                                                                    .
                                                                                                                    <name>
                                                                                                                        value
                                                                                                                    </name>
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        )
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                            ;
                                                                                        </expr_stmt>
                                                                                        }
                                                                                    </block>
                                                                                </else>
                                                                            </if>
                                                                        </else>
                                                                    </if>
                                                                </else>
                                                            </if>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>str</name>.
                                                                            <name>append</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>')'</expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                    <else>else
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>nextContentSpec</name>
                                                                    ==
                                                                    <name><name>XMLContentSpec</name>.
                                                                        <name>CONTENTSPECNODE_ONE_OR_MORE</name>
                                                                    </name>
                                                                    ||
                                                                    <name>nextContentSpec</name>
                                                                    ==
                                                                    <name><name>XMLContentSpec</name>.
                                                                        <name>CONTENTSPECNODE_ZERO_OR_MORE</name>
                                                                    </name>
                                                                    ||
                                                                    <name>nextContentSpec</name>
                                                                    ==
                                                                    <name><name>XMLContentSpec</name>.
                                                                        <name>CONTENTSPECNODE_ZERO_OR_ONE</name>
                                                                    </name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>str</name>.
                                                                                    <name>append</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>'('</expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name>appendContentSpec</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>contentSpec</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>str</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>true</expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>
                                                                                                parentContentSpecType
                                                                                            </name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>str</name>.
                                                                                    <name>append</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>')'</expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                            <else>else
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name>appendContentSpec</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>contentSpec</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>str</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>true</expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>
                                                                                                parentContentSpecType
                                                                                            </name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </else>
                                                        </if>
                                                    </else>
                                                </if>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>str</name>.
                                                                <name>append</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>'+'</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                                }
                                            </block>
                                        </case>
                                        <case>case
                                            <expr>
                                                <name><name>XMLContentSpec</name>.
                                                    <name>CONTENTSPECNODE_CHOICE</name>
                                                </name>
                                            </expr>
                                            :
                                        </case>
                                        <case>case
                                            <expr>
                                                <name><name>XMLContentSpec</name>.
                                                    <name>CONTENTSPECNODE_SEQ</name>
                                                </name>
                                            </expr>
                                            :
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>appendContentSpec</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>contentSpec</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>str</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>true</expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>parentContentSpecType</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                                }
                                            </block>
                                        </case>
                                        <case>case
                                            <expr>
                                                <name><name>XMLContentSpec</name>.
                                                    <name>CONTENTSPECNODE_ANY</name>
                                                </name>
                                            </expr>
                                            :
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>str</name>.
                                                                <name>append</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"##any"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name><name>contentSpec</name>.
                                                                <name>otherValue</name>
                                                            </name>
                                                            !=
                                                            <name>null</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>str</name>.
                                                                            <name>append</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>":uri="</expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>str</name>.
                                                                            <name>append</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name><name>contentSpec</name>.
                                                                                        <name>otherValue</name>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                <break>break;</break>
                                                }
                                            </block>
                                        </case>
                                        <case>case
                                            <expr>
                                                <name><name>XMLContentSpec</name>.
                                                    <name>CONTENTSPECNODE_ANY_OTHER</name>
                                                </name>
                                            </expr>
                                            :
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>str</name>.
                                                                <name>append</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"##other:uri="</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>str</name>.
                                                                <name>append</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>contentSpec</name>.
                                                                            <name>otherValue</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                                }
                                            </block>
                                        </case>
                                        <case>case
                                            <expr>
                                                <name><name>XMLContentSpec</name>.
                                                    <name>CONTENTSPECNODE_ANY_LOCAL</name>
                                                </name>
                                            </expr>
                                            :
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>str</name>.
                                                                <name>append</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"##local"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                                }
                                            </block>
                                        </case>
                                        <default>default:
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>str</name>.
                                                                <name>append</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"???"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>

                                        </default>
                                        }
                                    </block>
                                </switch>
                                <comment type="line">// switch type</comment>

                                <comment type="line">// return string</comment>
                                <return>return
                                    <expr>
                                        <call>
                                            <name><name>str</name>.
                                                <name>toString</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// not found</comment>
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// getContentSpecAsString(int):String</comment>

            <comment type="line">// debugging</comment>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>printElements</name>
                <parameter_list>( )</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>elementDeclIndex</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XMLElementDecl</name>
                            </type>
                            <name>elementDecl</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>XMLElementDecl</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <while>while
                        <condition>(
                            <expr>
                                <call>
                                    <name>getElementDecl</name>
                                    <argument_list>(
                                        <argument>
                                            <expr><name>elementDeclIndex</name>++
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>elementDecl</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <block>{

                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>System</name>.<name>out</name>.
                                            <name>println</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"element decl: "+
                                                    <name><name>elementDecl</name>.
                                                        <name>name</name>
                                                    </name>
                                                    +
                                                    ", "+
                                                    <name><name>elementDecl</name>.<name>name</name>.
                                                        <name>rawname</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>

                            <comment type="line">// ", "+ elementDecl.contentModelValidator.toString());</comment>
                            }
                        </block>
                    </while>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>printAttributes</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>elementDeclIndex</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>attributeDeclIndex</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getFirstAttributeDeclIndex</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>elementDeclIndex</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>System</name>.<name>out</name>.
                                    <name>print</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>elementDeclIndex</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>System</name>.<name>out</name>.
                                    <name>print</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>" ["</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <while>while
                        <condition>(
                            <expr>
                                <name>attributeDeclIndex</name>
                                != -1
                            </expr>
                            )
                        </condition>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>System</name>.<name>out</name>.
                                            <name>print</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>' '</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>System</name>.<name>out</name>.
                                            <name>print</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>attributeDeclIndex</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>printAttribute</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>attributeDeclIndex</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>attributeDeclIndex</name>
                                    =
                                    <call>
                                        <name>getNextAttributeDeclIndex</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>attributeDeclIndex</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>attributeDeclIndex</name>
                                        != -1
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>System</name>.<name>out</name>.
                                                        <name>print</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>","</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </while>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>System</name>.<name>out</name>.
                                    <name>println</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>" ]"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="line">//</comment>
            <comment type="line">// Protected methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * getElementContentModelValidator
                *
                * @param elementDeclIndex
                *
                * @return its ContentModelValidator if any.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>ContentModelValidator</name>
                </type>
                <name>getElementContentModelValidator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>elementDeclIndex</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>chunk</name> =
                            <init>
                                <expr>
                                    <name>elementDeclIndex</name>
                                    &gt;&gt;
                                    <name>CHUNK_SHIFT</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name> =
                            <init>
                                <expr>
                                    <name>elementDeclIndex</name>
                                    &amp;
                                    <name>CHUNK_MASK</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ContentModelValidator</name>
                            </type>
                            <name>contentModel</name>    =
                            <init>
                                <expr>
                                    <name>
                                        <name>fElementDeclContentModelValidator</name>
                                        <index>[
                                            <expr>
                                                <name>chunk</name>
                                            </expr>
                                            ]
                                        </index>
                                        <index>[
                                            <expr>
                                                <name>index</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// If we have one, just return that. Otherwise, gotta create one</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>contentModel</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>contentModel</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>contentType</name> =
                            <init>
                                <expr>
                                    <name>
                                        <name>fElementDeclType</name>
                                        <index>[
                                            <expr>
                                                <name>chunk</name>
                                            </expr>
                                            ]
                                        </index>
                                        <index>[
                                            <expr>
                                                <name>index</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>contentType</name>
                                ==
                                <name><name>XMLElementDecl</name>.
                                    <name>TYPE_SIMPLE</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// Get the type of content this element has</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>contentSpecIndex</name> =
                            <init>
                                <expr>
                                    <name>
                                        <name>fElementDeclContentSpecIndex</name>
                                        <index>[
                                            <expr>
                                                <name>chunk</name>
                                            </expr>
                                            ]
                                        </index>
                                        <index>[
                                            <expr>
                                                <name>index</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="javadoc">/***
                        if ( contentSpecIndex == -1 )
                        return null;
                        /***/
                    </comment>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XMLContentSpec</name>
                            </type>
                            <name>contentSpec</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>XMLContentSpec</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>getContentSpec</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>contentSpecIndex</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>contentSpec</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// And create the content model according to the spec type</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>contentType</name>
                                ==
                                <name><name>XMLElementDecl</name>.
                                    <name>TYPE_MIXED</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">//</comment>
                                <comment type="line">// Just create a mixel content model object. This type of</comment>
                                <comment type="line">// content model is optimized for mixed content validation.
                                </comment>
                                <comment type="line">//</comment>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>ChildrenList</name>
                                        </type>
                                        <name>children</name> =
                                        <init>
                                            <expr>new
                                                <call>
                                                    <name>ChildrenList</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>contentSpecTree</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>contentSpecIndex</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>contentSpec</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>children</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>contentModel</name>
                                        = new
                                        <call>
                                            <name>MixedContentModel</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>children</name>.
                                                            <name>qname</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>children</name>.
                                                            <name>type</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>0</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>children</name>.
                                                            <name>length</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>false</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>contentType</name>
                                        ==
                                        <name><name>XMLElementDecl</name>.
                                            <name>TYPE_CHILDREN</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <comment type="line">// This method will create an optimal model for the
                                            complexity
                                        </comment>
                                        <comment type="line">// of the element's defined model. If its simple, it will
                                            create
                                        </comment>
                                        <comment type="line">// a SimpleContentModel object. If its a simple list, it
                                            will
                                        </comment>
                                        <comment type="line">// create a SimpleListContentModel object. If its complex,
                                            it
                                        </comment>
                                        <comment type="line">// will create a DFAContentModel object.</comment>
                                        <comment type="line">//</comment>
                                        <expr_stmt>
                                            <expr>
                                                <name>contentModel</name>
                                                =
                                                <call>
                                                    <name>createChildModel</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>contentSpecIndex</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <throw>throw
                                            <expr>new
                                                <call>
                                                    <name>RuntimeException</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"Unknown content type for a element decl "
                                                                + "in getElementContentModelValidator() in
                                                                AbstractDTDGrammar class"
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </throw>
                                        }
                                    </block>
                                </else>
                            </if>
                        </else>
                    </if>

                    <comment type="line">// Add the new model to the content model for this element</comment>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fElementDeclContentModelValidator</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <name>contentModel</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <return>return
                        <expr>
                            <name>contentModel</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// getElementContentModelValidator(int):ContentModelValidator</comment>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>int</name>
                </type>
                <name>createElementDecl</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>chunk</name> =
                            <init>
                                <expr>
                                    <name>fElementDeclCount</name>
                                    &gt;&gt;
                                    <name>CHUNK_SHIFT</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name> =
                            <init>
                                <expr>
                                    <name>fElementDeclCount</name>
                                    &amp;
                                    <name>CHUNK_MASK</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>ensureElementDeclCapacity</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>chunk</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fElementDeclName</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = new
                            <call>
                                <name>QName</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fElementDeclType</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = -1
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fElementDeclContentModelValidator</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fElementDeclFirstAttributeDeclIndex</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = -1
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fElementDeclLastAttributeDeclIndex</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = -1
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr><name>fElementDeclCount</name>++
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>setElementDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>elementDeclIndex</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLElementDecl</name>
                            </type>
                            <name>elementDecl</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>elementDeclIndex</name>
                                &lt; 0 || <name>elementDeclIndex</name> &gt;=
                                <name>fElementDeclCount</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>chunk</name>       =
                            <init>
                                <expr>
                                    <name>elementDeclIndex</name>
                                    &gt;&gt;
                                    <name>CHUNK_SHIFT</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name>       =
                            <init>
                                <expr>
                                    <name>elementDeclIndex</name>
                                    &amp;
                                    <name>CHUNK_MASK</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fElementDeclName</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            .
                            <call>
                                <name>setValues</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>elementDecl</name>.
                                                <name>name</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fElementDeclType</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <name><name>elementDecl</name>.
                                <name>type</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fElementDeclContentModelValidator</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <name><name>elementDecl</name>.
                                <name>contentModelValidator</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <name><name>elementDecl</name>.<name>simpleType</name>.
                                    <name>list</name>
                                </name>
                                == true
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>
                                            <name>fElementDeclType</name>
                                            <index>[
                                                <expr>
                                                    <name>chunk</name>
                                                </expr>
                                                ]
                                            </index>
                                            <index>[
                                                <expr>
                                                    <name>index</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        |=
                                        <name>LIST_FLAG</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fElementIndexMap</name>.
                                    <name>put</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>elementDecl</name>.<name>name</name>.
                                                <name>rawname</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>elementDeclIndex</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>putElementNameMapping</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>scope</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>elementDeclIndex</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>setFirstAttributeDeclIndex</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>elementDeclIndex</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>newFirstAttrIndex</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name>elementDeclIndex</name>
                                &lt; 0 || <name>elementDeclIndex</name> &gt;=
                                <name>fElementDeclCount</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>chunk</name> =
                            <init>
                                <expr>
                                    <name>elementDeclIndex</name>
                                    &gt;&gt;
                                    <name>CHUNK_SHIFT</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name> =
                            <init>
                                <expr>
                                    <name>elementDeclIndex</name>
                                    &amp;
                                    <name>CHUNK_MASK</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fElementDeclFirstAttributeDeclIndex</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <name>newFirstAttrIndex</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>setContentSpecIndex</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>elementDeclIndex</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>contentSpecIndex</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name>elementDeclIndex</name>
                                &lt; 0 || <name>elementDeclIndex</name> &gt;=
                                <name>fElementDeclCount</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>chunk</name> =
                            <init>
                                <expr>
                                    <name>elementDeclIndex</name>
                                    &gt;&gt;
                                    <name>CHUNK_SHIFT</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name> =
                            <init>
                                <expr>
                                    <name>elementDeclIndex</name>
                                    &amp;
                                    <name>CHUNK_MASK</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fElementDeclContentSpecIndex</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <name>contentSpecIndex</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>int</name>
                </type>
                <name>createAttributeDecl</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>chunk</name> =
                            <init>
                                <expr>
                                    <name>fAttributeDeclCount</name>
                                    &gt;&gt;
                                    <name>CHUNK_SHIFT</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name> =
                            <init>
                                <expr>
                                    <name>fAttributeDeclCount</name>
                                    &amp;
                                    <name>CHUNK_MASK</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name>ensureAttributeDeclCapacity</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>chunk</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fAttributeDeclName</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = new
                            <call>
                                <name>QName</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fAttributeDeclType</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = -1
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fAttributeDeclDatatypeValidator</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fAttributeDeclEnumeration</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fAttributeDeclDefaultType</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <name><name>XMLSimpleType</name>.
                                <name>DEFAULT_TYPE_IMPLIED</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fAttributeDeclDefaultValue</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fAttributeDeclNonNormalizedDefaultValue</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fAttributeDeclNextAttributeDeclIndex</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = -1
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr><name>fAttributeDeclCount</name>++
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>setAttributeDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>elementDeclIndex</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>attributeDeclIndex</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLAttributeDecl</name>
                            </type>
                            <name>attributeDecl</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>attrChunk</name> =
                            <init>
                                <expr>
                                    <name>attributeDeclIndex</name>
                                    &gt;&gt;
                                    <name>CHUNK_SHIFT</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>attrIndex</name> =
                            <init>
                                <expr>
                                    <name>attributeDeclIndex</name>
                                    &amp;
                                    <name>CHUNK_MASK</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fAttributeDeclName</name>
                                <index>[
                                    <expr>
                                        <name>attrChunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>attrIndex</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            .
                            <call>
                                <name>setValues</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>attributeDecl</name>.
                                                <name>name</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fAttributeDeclType</name>
                                <index>[
                                    <expr>
                                        <name>attrChunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>attrIndex</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <name><name>attributeDecl</name>.<name>simpleType</name>.
                                <name>type</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <name><name>attributeDecl</name>.<name>simpleType</name>.
                                    <name>list</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>
                                            <name>fAttributeDeclType</name>
                                            <index>[
                                                <expr>
                                                    <name>attrChunk</name>
                                                </expr>
                                                ]
                                            </index>
                                            <index>[
                                                <expr>
                                                    <name>attrIndex</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        |=
                                        <name>LIST_FLAG</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fAttributeDeclEnumeration</name>
                                <index>[
                                    <expr>
                                        <name>attrChunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>attrIndex</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <name><name>attributeDecl</name>.<name>simpleType</name>.
                                <name>enumeration</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fAttributeDeclDefaultType</name>
                                <index>[
                                    <expr>
                                        <name>attrChunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>attrIndex</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <name><name>attributeDecl</name>.<name>simpleType</name>.
                                <name>defaultType</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fAttributeDeclDatatypeValidator</name>
                                <index>[
                                    <expr>
                                        <name>attrChunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>attrIndex</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <name><name>attributeDecl</name>.<name>simpleType</name>.
                                <name>datatypeValidator</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fAttributeDeclDefaultValue</name>
                                <index>[
                                    <expr>
                                        <name>attrChunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>attrIndex</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <name><name>attributeDecl</name>.<name>simpleType</name>.
                                <name>defaultValue</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fAttributeDeclNonNormalizedDefaultValue</name>
                                <index>[
                                    <expr>
                                        <name>attrChunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>attrIndex</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <name><name>attributeDecl</name>.<name>simpleType</name>.
                                <name>nonNormalizedDefaultValue</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>elemChunk</name>     =
                            <init>
                                <expr>
                                    <name>elementDeclIndex</name>
                                    &gt;&gt;
                                    <name>CHUNK_SHIFT</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>elemIndex</name>     =
                            <init>
                                <expr>
                                    <name>elementDeclIndex</name>
                                    &amp;
                                    <name>CHUNK_MASK</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name>         =
                            <init>
                                <expr>
                                    <name>
                                        <name>fElementDeclFirstAttributeDeclIndex</name>
                                        <index>[
                                            <expr>
                                                <name>elemChunk</name>
                                            </expr>
                                            ]
                                        </index>
                                        <index>[
                                            <expr>
                                                <name>elemIndex</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <while>while
                        <condition>(
                            <expr>
                                <name>index</name>
                                != -1
                            </expr>
                            )
                        </condition>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>index</name>
                                        ==
                                        <name>attributeDeclIndex</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <break>break;</break>
                                        }
                                    </block>
                                </then>
                            </if>
                            <expr_stmt>
                                <expr>
                                    <name>attrChunk</name>
                                    = <name>index</name> &gt;&gt;
                                    <name>CHUNK_SHIFT</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>attrIndex</name>
                                    = <name>index</name> &amp;
                                    <name>CHUNK_MASK</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>index</name>
                                    =
                                    <name>
                                        <name>fAttributeDeclNextAttributeDeclIndex</name>
                                        <index>[
                                            <expr>
                                                <name>attrChunk</name>
                                            </expr>
                                            ]
                                        </index>
                                        <index>[
                                            <expr>
                                                <name>attrIndex</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </while>
                    <if>if
                        <condition>(
                            <expr>
                                <name>index</name>
                                == -1
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>
                                                <name>fElementDeclFirstAttributeDeclIndex</name>
                                                <index>[
                                                    <expr>
                                                        <name>elemChunk</name>
                                                    </expr>
                                                    ]
                                                </index>
                                                <index>[
                                                    <expr>
                                                        <name>elemIndex</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                            == -1
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>
                                                        <name>fElementDeclFirstAttributeDeclIndex</name>
                                                        <index>[
                                                            <expr>
                                                                <name>elemChunk</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                        <index>[
                                                            <expr>
                                                                <name>elemIndex</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    =
                                                    <name>attributeDeclIndex</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>index</name>
                                                    =
                                                    <name>
                                                        <name>fElementDeclLastAttributeDeclIndex</name>
                                                        <index>[
                                                            <expr>
                                                                <name>elemChunk</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                        <index>[
                                                            <expr>
                                                                <name>elemIndex</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>attrChunk</name>
                                                    = <name>index</name> &gt;&gt;
                                                    <name>CHUNK_SHIFT</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>attrIndex</name>
                                                    = <name>index</name> &amp;
                                                    <name>CHUNK_MASK</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>
                                                        <name>fAttributeDeclNextAttributeDeclIndex</name>
                                                        <index>[
                                                            <expr>
                                                                <name>attrChunk</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                        <index>[
                                                            <expr>
                                                                <name>attrIndex</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    =
                                                    <name>attributeDeclIndex</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </else>
                                </if>
                                <expr_stmt>
                                    <expr>
                                        <name>
                                            <name>fElementDeclLastAttributeDeclIndex</name>
                                            <index>[
                                                <expr>
                                                    <name>elemChunk</name>
                                                </expr>
                                                ]
                                            </index>
                                            <index>[
                                                <expr>
                                                    <name>elemIndex</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        =
                                        <name>attributeDeclIndex</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>int</name>
                </type>
                <name>createContentSpec</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>chunk</name> =
                            <init>
                                <expr>
                                    <name>fContentSpecCount</name>
                                    &gt;&gt;
                                    <name>CHUNK_SHIFT</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name> =
                            <init>
                                <expr>
                                    <name>fContentSpecCount</name>
                                    &amp;
                                    <name>CHUNK_MASK</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name>ensureContentSpecCapacity</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>chunk</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fContentSpecType</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = -1
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fContentSpecValue</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fContentSpecOtherValue</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <return>return
                        <expr><name>fContentSpecCount</name>++
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>setContentSpec</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>contentSpecIndex</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLContentSpec</name>
                            </type>
                            <name>contentSpec</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>chunk</name> =
                            <init>
                                <expr>
                                    <name>contentSpecIndex</name>
                                    &gt;&gt;
                                    <name>CHUNK_SHIFT</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name> =
                            <init>
                                <expr>
                                    <name>contentSpecIndex</name>
                                    &amp;
                                    <name>CHUNK_MASK</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fContentSpecType</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <name><name>contentSpec</name>.
                                <name>type</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fContentSpecValue</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <name><name>contentSpec</name>.
                                <name>value</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fContentSpecOtherValue</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <name><name>contentSpec</name>.
                                <name>otherValue</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>int</name>
                </type>
                <name>createEntityDecl</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>chunk</name> =
                            <init>
                                <expr>
                                    <name>fEntityCount</name>
                                    &gt;&gt;
                                    <name>CHUNK_SHIFT</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name> =
                            <init>
                                <expr>
                                    <name>fEntityCount</name>
                                    &amp;
                                    <name>CHUNK_MASK</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name>ensureEntityDeclCapacity</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>chunk</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fEntityIsPE</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = 0
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fEntityInExternal</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = 0
                        </expr>
                        ;
                    </expr_stmt>

                    <return>return
                        <expr><name>fEntityCount</name>++
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>setEntityDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>entityDeclIndex</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLEntityDecl</name>
                            </type>
                            <name>entityDecl</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>chunk</name> =
                            <init>
                                <expr>
                                    <name>entityDeclIndex</name>
                                    &gt;&gt;
                                    <name>CHUNK_SHIFT</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name> =
                            <init>
                                <expr>
                                    <name>entityDeclIndex</name>
                                    &amp;
                                    <name>CHUNK_MASK</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fEntityName</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <name><name>entityDecl</name>.
                                <name>name</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fEntityValue</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <name><name>entityDecl</name>.
                                <name>value</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fEntityPublicId</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <name><name>entityDecl</name>.
                                <name>publicId</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fEntitySystemId</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <name><name>entityDecl</name>.
                                <name>systemId</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fEntityBaseSystemId</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <name><name>entityDecl</name>.
                                <name>baseSystemId</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fEntityNotation</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <name><name>entityDecl</name>.
                                <name>notation</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fEntityIsPE</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <name><name>entityDecl</name>.
                                <name>isPE</name>
                            </name>
                            ? (<name>byte</name>)1 : (<name>byte</name>)0
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fEntityInExternal</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <name><name>entityDecl</name>.
                                <name>inExternal</name>
                            </name>
                            ? (<name>byte</name>)1 : (<name>byte</name>)0
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fEntityIndexMap</name>.
                                    <name>put</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>entityDecl</name>.
                                                <name>name</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>entityDeclIndex</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>int</name>
                </type>
                <name>createNotationDecl</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>chunk</name> =
                            <init>
                                <expr>
                                    <name>fNotationCount</name>
                                    &gt;&gt;
                                    <name>CHUNK_SHIFT</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>ensureNotationDeclCapacity</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>chunk</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr><name>fNotationCount</name>++
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>setNotationDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>notationDeclIndex</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLNotationDecl</name>
                            </type>
                            <name>notationDecl</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>chunk</name> =
                            <init>
                                <expr>
                                    <name>notationDeclIndex</name>
                                    &gt;&gt;
                                    <name>CHUNK_SHIFT</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name> =
                            <init>
                                <expr>
                                    <name>notationDeclIndex</name>
                                    &amp;
                                    <name>CHUNK_MASK</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fNotationName</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <name><name>notationDecl</name>.
                                <name>name</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fNotationPublicId</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <name><name>notationDecl</name>.
                                <name>publicId</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fNotationSystemId</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <name><name>notationDecl</name>.
                                <name>systemId</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fNotationBaseSystemId</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <name><name>notationDecl</name>.
                                <name>baseSystemId</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fNotationIndexMap</name>.
                                    <name>put</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>notationDecl</name>.
                                                <name>name</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>notationDeclIndex</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Create an XMLContentSpec for a single non-leaf
                *
                * @param nodeType the type of XMLContentSpec to create - from XMLContentSpec.CONTENTSPECNODE_*
                * @param nodeValue handle to an XMLContentSpec
                * @return handle to the newly create XMLContentSpec
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>int</name>
                </type>
                <name>addContentSpecNode</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>nodeType</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>nodeValue</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <comment type="line">// create content spec node</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>contentSpecIndex</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>createContentSpec</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// set content spec node values</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fContentSpec</name>.
                                    <name>setValues</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>nodeType</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>nodeValue</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setContentSpec</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>contentSpecIndex</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fContentSpec</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// return index</comment>
                    <return>return
                        <expr>
                            <name>contentSpecIndex</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// addContentSpecNode(short,String):int</comment>

            <comment type="javadoc">/**
                * create an XMLContentSpec for a leaf
                *
                * @param elementName the name (Element) for the node
                * @return handle to the newly create XMLContentSpec
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>int</name>
                </type>
                <name>addUniqueLeafNode</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>elementName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <comment type="line">// create content spec node</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>contentSpecIndex</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>createContentSpec</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// set content spec node values</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fContentSpec</name>.
                                    <name>setValues</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>XMLContentSpec</name>.
                                                <name>CONTENTSPECNODE_LEAF</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>elementName</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setContentSpec</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>contentSpecIndex</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fContentSpec</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// return index</comment>
                    <return>return
                        <expr>
                            <name>contentSpecIndex</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// addUniqueLeafNode(String):int</comment>

            <comment type="javadoc">/**
                * Create an XMLContentSpec for a two child leaf
                *
                * @param nodeType the type of XMLContentSpec to create - from XMLContentSpec.CONTENTSPECNODE_*
                * @param leftNodeIndex handle to an XMLContentSpec
                * @param rightNodeIndex handle to an XMLContentSpec
                * @return handle to the newly create XMLContentSpec
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>int</name>
                </type>
                <name>addContentSpecNode</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>nodeType</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>leftNodeIndex</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>rightNodeIndex</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <comment type="line">// create content spec node</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>contentSpecIndex</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>createContentSpec</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// set content spec node values</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                                <index>[]</index>
                            </type>
                            <name>leftIntArray</name>  =
                            <init>
                                <expr>new
                                    <name>
                                        <name>int</name>
                                        <index>[<expr>1</expr>]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                                <index>[]</index>
                            </type>
                            <name>rightIntArray</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>int</name>
                                        <index>[<expr>1</expr>]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <name>
                                <name>leftIntArray</name>
                                <index>[<expr>0</expr>]
                                </index>
                            </name>
                            =
                            <name>leftNodeIndex</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>rightIntArray</name>
                                <index>[<expr>0</expr>]
                                </index>
                            </name>
                            =
                            <name>rightNodeIndex</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fContentSpec</name>.
                                    <name>setValues</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>nodeType</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>leftIntArray</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>rightIntArray</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setContentSpec</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>contentSpecIndex</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fContentSpec</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// return index</comment>
                    <return>return
                        <expr>
                            <name>contentSpecIndex</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// addContentSpecNode(short,int,int):int</comment>

            <comment type="javadoc">/** Initialize content model stack. */</comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>initializeContentModelStack</name>
                <parameter_list>()</parameter_list>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name>fOpStack</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fOpStack</name>
                                        = new
                                        <name>
                                            <name>short</name>
                                            <index>[<expr>8</expr>]
                                            </index>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fNodeIndexStack</name>
                                        = new
                                        <name>
                                            <name>int</name>
                                            <index>[<expr>8</expr>]
                                            </index>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fPrevNodeIndexStack</name>
                                        = new
                                        <name>
                                            <name>int</name>
                                            <index>[<expr>8</expr>]
                                            </index>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>fDepth</name>
                                        ==
                                        <name><name>fOpStack</name>.
                                            <name>length</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>short</name>
                                                    <index>[]</index>
                                                </type>
                                                <name>newStack</name> =
                                                <init>
                                                    <expr>new
                                                        <name>
                                                            <name>short</name>
                                                            <index>[
                                                                <expr>
                                                                    <name>fDepth</name>
                                                                    * 2
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>System</name>.
                                                        <name>arraycopy</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>fOpStack</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>0</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>newStack</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>0</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>fDepth</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>fOpStack</name>
                                                =
                                                <name>newStack</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>int</name>
                                                    <index>[]</index>
                                                </type>
                                                <name>newIntStack</name> =
                                                <init>
                                                    <expr>new
                                                        <name>
                                                            <name>int</name>
                                                            <index>[
                                                                <expr>
                                                                    <name>fDepth</name>
                                                                    * 2
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>System</name>.
                                                        <name>arraycopy</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>fNodeIndexStack</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>0</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>newIntStack</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>0</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>fDepth</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>fNodeIndexStack</name>
                                                =
                                                <name>newIntStack</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>newIntStack</name>
                                                = new
                                                <name>
                                                    <name>int</name>
                                                    <index>[
                                                        <expr>
                                                            <name>fDepth</name>
                                                            * 2
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>System</name>.
                                                        <name>arraycopy</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>fPrevNodeIndexStack</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>0</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>newIntStack</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>0</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>fDepth</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>fPrevNodeIndexStack</name>
                                                =
                                                <name>newIntStack</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                        </else>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fOpStack</name>
                                <index>[
                                    <expr>
                                        <name>fDepth</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = -1
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fNodeIndexStack</name>
                                <index>[
                                    <expr>
                                        <name>fDepth</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = -1
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fPrevNodeIndexStack</name>
                                <index>[
                                    <expr>
                                        <name>fDepth</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = -1
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </function>
            <comment type="line">// initializeContentModelStack()</comment>

            <function>
                <type>
                    <name>boolean</name>
                </type>
                <name>isImmutable</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fIsImmutable</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">//</comment>
            <comment type="line">// Private methods</comment>
            <comment type="line">//</comment>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name>void</name>
                </type>
                <name>appendContentSpec</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLContentSpec</name>
                            </type>
                            <name>contentSpec</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>StringBuffer</name>
                            </type>
                            <name>str</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>parens</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>parentContentSpecType</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>thisContentSpec</name> =
                            <init>
                                <expr>
                                    <name><name>contentSpec</name>.
                                        <name>type</name>
                                    </name>
                                    &amp; 0x0f
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <switch>switch
                        <condition>(
                            <expr>
                                <name>thisContentSpec</name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <case>case
                                <expr>
                                    <name><name>XMLContentSpec</name>.
                                        <name>CONTENTSPECNODE_LEAF</name>
                                    </name>
                                </expr>
                                :
                                <block>{
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name><name>contentSpec</name>.
                                                    <name>value</name>
                                                </name>
                                                == <name>null</name> &amp;&amp;
                                                <name><name>contentSpec</name>.
                                                    <name>otherValue</name>
                                                </name>
                                                ==
                                                <name>null</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>str</name>.
                                                                <name>append</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"#PCDATA"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name><name>contentSpec</name>.
                                                            <name>value</name>
                                                        </name>
                                                        == <name>null</name> &amp;&amp;
                                                        <name><name>contentSpec</name>.
                                                            <name>otherValue</name>
                                                        </name>
                                                        !=
                                                        <name>null</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>str</name>.
                                                                        <name>append</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"##any:uri="+
                                                                                <name><name>contentSpec</name>.
                                                                                    <name>otherValue</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                                <else>else
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name><name>contentSpec</name>.
                                                                    <name>value</name>
                                                                </name>
                                                                ==
                                                                <name>null</name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>str</name>.
                                                                                <name>append</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>"##any"</expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </then>
                                                        <else>else
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>str</name>.
                                                                                <name>append</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name><name>contentSpec</name>.
                                                                                            <name>value</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </else>
                                                    </if>
                                                </else>
                                            </if>
                                        </else>
                                    </if>
                                    <break>break;</break>
                                    }
                                </block>
                            </case>
                            <case>case
                                <expr>
                                    <name><name>XMLContentSpec</name>.
                                        <name>CONTENTSPECNODE_ZERO_OR_ONE</name>
                                    </name>
                                </expr>
                                :
                                <block>{
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>parentContentSpecType</name>
                                                ==
                                                <name><name>XMLContentSpec</name>.
                                                    <name>CONTENTSPECNODE_ONE_OR_MORE</name>
                                                </name>
                                                ||
                                                <name>parentContentSpecType</name>
                                                ==
                                                <name><name>XMLContentSpec</name>.
                                                    <name>CONTENTSPECNODE_ZERO_OR_MORE</name>
                                                </name>
                                                ||
                                                <name>parentContentSpecType</name>
                                                ==
                                                <name><name>XMLContentSpec</name>.
                                                    <name>CONTENTSPECNODE_ZERO_OR_ONE</name>
                                                </name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>getContentSpec</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>((
                                                                        <name>
                                                                            <name>int</name>
                                                                            <index>[]</index>
                                                                        </name>
                                                                        )
                                                                        <name><name>contentSpec</name>.
                                                                            <name>value</name>
                                                                        </name>
                                                                        )
                                                                        <index>[<expr>0</expr>]
                                                                        </index>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>contentSpec</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>str</name>.
                                                                <name>append</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>'('</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>appendContentSpec</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>contentSpec</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>str</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>true</expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>thisContentSpec</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>str</name>.
                                                                <name>append</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>')'</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>getContentSpec</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>((
                                                                        <name>
                                                                            <name>int</name>
                                                                            <index>[]</index>
                                                                        </name>
                                                                        )
                                                                        <name><name>contentSpec</name>.
                                                                            <name>value</name>
                                                                        </name>
                                                                        )
                                                                        <index>[<expr>0</expr>]
                                                                        </index>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>contentSpec</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>appendContentSpec</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>contentSpec</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>str</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>true</expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>thisContentSpec</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </else>
                                    </if>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>str</name>.
                                                    <name>append</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>'?'</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <break>break;</break>
                                    }
                                </block>
                            </case>
                            <case>case
                                <expr>
                                    <name><name>XMLContentSpec</name>.
                                        <name>CONTENTSPECNODE_ZERO_OR_MORE</name>
                                    </name>
                                </expr>
                                :
                                <block>{
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>parentContentSpecType</name>
                                                ==
                                                <name><name>XMLContentSpec</name>.
                                                    <name>CONTENTSPECNODE_ONE_OR_MORE</name>
                                                </name>
                                                ||
                                                <name>parentContentSpecType</name>
                                                ==
                                                <name><name>XMLContentSpec</name>.
                                                    <name>CONTENTSPECNODE_ZERO_OR_MORE</name>
                                                </name>
                                                ||
                                                <name>parentContentSpecType</name>
                                                ==
                                                <name><name>XMLContentSpec</name>.
                                                    <name>CONTENTSPECNODE_ZERO_OR_ONE</name>
                                                </name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>getContentSpec</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>((
                                                                        <name>
                                                                            <name>int</name>
                                                                            <index>[]</index>
                                                                        </name>
                                                                        )
                                                                        <name><name>contentSpec</name>.
                                                                            <name>value</name>
                                                                        </name>
                                                                        )
                                                                        <index>[<expr>0</expr>]
                                                                        </index>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>contentSpec</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>str</name>.
                                                                <name>append</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>'('</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>appendContentSpec</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>contentSpec</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>str</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>true</expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>thisContentSpec</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>str</name>.
                                                                <name>append</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>')'</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>getContentSpec</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>((
                                                                        <name>
                                                                            <name>int</name>
                                                                            <index>[]</index>
                                                                        </name>
                                                                        )
                                                                        <name><name>contentSpec</name>.
                                                                            <name>value</name>
                                                                        </name>
                                                                        )
                                                                        <index>[<expr>0</expr>]
                                                                        </index>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>contentSpec</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>appendContentSpec</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>contentSpec</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>str</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>true</expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>thisContentSpec</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </else>
                                    </if>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>str</name>.
                                                    <name>append</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>'*'</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <break>break;</break>
                                    }
                                </block>
                            </case>
                            <case>case
                                <expr>
                                    <name><name>XMLContentSpec</name>.
                                        <name>CONTENTSPECNODE_ONE_OR_MORE</name>
                                    </name>
                                </expr>
                                :
                                <block>{
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>parentContentSpecType</name>
                                                ==
                                                <name><name>XMLContentSpec</name>.
                                                    <name>CONTENTSPECNODE_ONE_OR_MORE</name>
                                                </name>
                                                ||
                                                <name>parentContentSpecType</name>
                                                ==
                                                <name><name>XMLContentSpec</name>.
                                                    <name>CONTENTSPECNODE_ZERO_OR_MORE</name>
                                                </name>
                                                ||
                                                <name>parentContentSpecType</name>
                                                ==
                                                <name><name>XMLContentSpec</name>.
                                                    <name>CONTENTSPECNODE_ZERO_OR_ONE</name>
                                                </name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{

                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>str</name>.
                                                                <name>append</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>'('</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>getContentSpec</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>((
                                                                        <name>
                                                                            <name>int</name>
                                                                            <index>[]</index>
                                                                        </name>
                                                                        )
                                                                        <name><name>contentSpec</name>.
                                                                            <name>value</name>
                                                                        </name>
                                                                        )
                                                                        <index>[<expr>0</expr>]
                                                                        </index>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>contentSpec</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>appendContentSpec</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>contentSpec</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>str</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>true</expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>thisContentSpec</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>str</name>.
                                                                <name>append</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>')'</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>getContentSpec</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>((
                                                                        <name>
                                                                            <name>int</name>
                                                                            <index>[]</index>
                                                                        </name>
                                                                        )
                                                                        <name><name>contentSpec</name>.
                                                                            <name>value</name>
                                                                        </name>
                                                                        )
                                                                        <index>[<expr>0</expr>]
                                                                        </index>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>contentSpec</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>appendContentSpec</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>contentSpec</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>str</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>true</expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>thisContentSpec</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </else>
                                    </if>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>str</name>.
                                                    <name>append</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>'+'</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <break>break;</break>
                                    }
                                </block>
                            </case>
                            <case>case
                                <expr>
                                    <name><name>XMLContentSpec</name>.
                                        <name>CONTENTSPECNODE_CHOICE</name>
                                    </name>
                                </expr>
                                :
                            </case>
                            <case>case
                                <expr>
                                    <name><name>XMLContentSpec</name>.
                                        <name>CONTENTSPECNODE_SEQ</name>
                                    </name>
                                </expr>
                                :
                                <block>{
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>parens</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>str</name>.
                                                                <name>append</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>'('</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>type</name> =
                                            <init>
                                                <expr>
                                                    <name><name>contentSpec</name>.
                                                        <name>type</name>
                                                    </name>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>otherValue</name> =
                                            <init>
                                                <expr>((
                                                    <name>
                                                        <name>int</name>
                                                        <index>[]</index>
                                                    </name>
                                                    )
                                                    <name><name>contentSpec</name>.
                                                        <name>otherValue</name>
                                                    </name>
                                                    )
                                                    <index>[<expr>0</expr>]
                                                    </index>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name>getContentSpec</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>((
                                                            <name>
                                                                <name>int</name>
                                                                <index>[]</index>
                                                            </name>
                                                            )
                                                            <name><name>contentSpec</name>.
                                                                <name>value</name>
                                                            </name>
                                                            )
                                                            <index>[<expr>0</expr>]
                                                            </index>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>contentSpec</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name>appendContentSpec</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>contentSpec</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>str</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name><name>contentSpec</name>.
                                                                <name>type</name>
                                                            </name>
                                                            !=
                                                            <name>type</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>thisContentSpec</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>type</name>
                                                ==
                                                <name><name>XMLContentSpec</name>.
                                                    <name>CONTENTSPECNODE_CHOICE</name>
                                                </name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>str</name>.
                                                                <name>append</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>'|'</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>str</name>.
                                                                <name>append</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>','</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </else>
                                    </if>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name>getContentSpec</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>otherValue</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>contentSpec</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name>appendContentSpec</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>contentSpec</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>str</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>true</expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>thisContentSpec</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>parens</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>str</name>.
                                                                <name>append</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>')'</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <break>break;</break>
                                    }
                                </block>
                            </case>
                            <case>case
                                <expr>
                                    <name><name>XMLContentSpec</name>.
                                        <name>CONTENTSPECNODE_ANY</name>
                                    </name>
                                </expr>
                                :
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>str</name>.
                                                    <name>append</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>"##any"</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name><name>contentSpec</name>.
                                                    <name>otherValue</name>
                                                </name>
                                                !=
                                                <name>null</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>str</name>.
                                                                <name>append</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>":uri="</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>str</name>.
                                                                <name>append</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>contentSpec</name>.
                                                                            <name>otherValue</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <break>break;</break>
                                    }
                                </block>
                            </case>
                            <case>case
                                <expr>
                                    <name><name>XMLContentSpec</name>.
                                        <name>CONTENTSPECNODE_ANY_OTHER</name>
                                    </name>
                                </expr>
                                :
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>str</name>.
                                                    <name>append</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>"##other:uri="</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>str</name>.
                                                    <name>append</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>contentSpec</name>.
                                                                <name>otherValue</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <break>break;</break>
                                    }
                                </block>
                            </case>
                            <case>case
                                <expr>
                                    <name><name>XMLContentSpec</name>.
                                        <name>CONTENTSPECNODE_ANY_LOCAL</name>
                                    </name>
                                </expr>
                                :
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>str</name>.
                                                    <name>append</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>"##local"</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <break>break;</break>
                                    }
                                </block>
                            </case>
                            <default>default:
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>str</name>.
                                                    <name>append</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>"???"</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <break>break;</break>
                                    }
                                </block>

                            </default>
                            }
                        </block>
                    </switch>
                    <comment type="line">// switch type</comment>

                    }
                </block>
            </function>
            <comment type="line">//
                appendContentSpec(XMLContentSpec.Provider,StringPool,XMLContentSpec,StringBuffer,boolean)
            </comment>

            <comment type="line">// debugging</comment>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name>void</name>
                </type>
                <name>printAttribute</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>attributeDeclIndex</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XMLAttributeDecl</name>
                            </type>
                            <name>attributeDecl</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>XMLAttributeDecl</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>getAttributeDecl</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>attributeDeclIndex</name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>attributeDecl</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>" { "</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>attributeDecl</name>.<name>name</name>.
                                                            <name>localpart</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>" }"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// printAttribute(int)</comment>

            <comment type="line">// content models</comment>

            <comment type="javadoc">/**
                * When the element has a 'CHILDREN' model, this method is called to
                * create the content model object. It looks for some special case simple
                * models and creates SimpleContentModel objects for those. For the rest
                * it creates the standard DFA style model.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>ContentModelValidator</name>
                </type>
                <name>createChildModel</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>contentSpecIndex</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <comment type="line">//</comment>
                    <comment type="line">// Get the content spec node for the element we are working on.</comment>
                    <comment type="line">// This will tell us what kind of node it is, which tells us what</comment>
                    <comment type="line">// kind of model we will try to create.</comment>
                    <comment type="line">//</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XMLContentSpec</name>
                            </type>
                            <name>contentSpec</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>XMLContentSpec</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>getContentSpec</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>contentSpecIndex</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>contentSpec</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <if>if
                        <condition>(
                            <expr>(
                                <name><name>contentSpec</name>.
                                    <name>type</name>
                                </name>
                                &amp; 0x0f ) ==
                                <name><name>XMLContentSpec</name>.
                                    <name>CONTENTSPECNODE_ANY</name>
                                </name>
                                ||
                                (
                                <name><name>contentSpec</name>.
                                    <name>type</name>
                                </name>
                                &amp; 0x0f ) ==
                                <name><name>XMLContentSpec</name>.
                                    <name>CONTENTSPECNODE_ANY_OTHER</name>
                                </name>
                                ||
                                (
                                <name><name>contentSpec</name>.
                                    <name>type</name>
                                </name>
                                &amp; 0x0f ) ==
                                <name><name>XMLContentSpec</name>.
                                    <name>CONTENTSPECNODE_ANY_LOCAL</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// let fall through to build a DFAContentModel</comment>
                                }
                            </block>
                        </then>

                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name><name>contentSpec</name>.
                                            <name>type</name>
                                        </name>
                                        ==
                                        <name><name>XMLContentSpec</name>.
                                            <name>CONTENTSPECNODE_LEAF</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <comment type="line">//</comment>
                                        <comment type="line">// Check that the left value is not -1, since any content
                                            model
                                        </comment>
                                        <comment type="line">// with PCDATA should be MIXED, so we should not have
                                            gotten here.
                                        </comment>
                                        <comment type="line">//</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name><name>contentSpec</name>.
                                                        <name>value</name>
                                                    </name>
                                                    == <name>null</name> &amp;&amp;
                                                    <name><name>contentSpec</name>.
                                                        <name>otherValue</name>
                                                    </name>
                                                    ==
                                                    <name>null</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <throw>throw
                                                    <expr>new
                                                        <call>
                                                            <name>RuntimeException</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"ImplementationMessages.VAL_NPCD"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </throw>
                                            </then>
                                        </if>

                                        <comment type="line">//</comment>
                                        <comment type="line">// Its a single leaf, so its an 'a' type of content model,
                                            i.e.
                                        </comment>
                                        <comment type="line">// just one instance of one element. That one is definitely
                                            a
                                        </comment>
                                        <comment type="line">// simple content model.</comment>
                                        <comment type="line">//</comment>

                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fQName</name>.
                                                        <name>setValues</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>null</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>(<name>String</name>)
                                                                <name><name>contentSpec</name>.
                                                                    <name>value</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>(<name>String</name>)
                                                                <name><name>contentSpec</name>.
                                                                    <name>value</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>(<name>String</name>)
                                                                <name><name>contentSpec</name>.
                                                                    <name>otherValue</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <return>return
                                            <expr>new
                                                <call>
                                                    <name>SimpleContentModel</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>contentSpec</name>.
                                                                    <name>type</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>fQName</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>null</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <if>if
                                        <condition>(
                                            <expr>(
                                                <name><name>contentSpec</name>.
                                                    <name>type</name>
                                                </name>
                                                ==
                                                <name><name>XMLContentSpec</name>.
                                                    <name>CONTENTSPECNODE_CHOICE</name>
                                                </name>
                                                )
                                                || (
                                                <name><name>contentSpec</name>.
                                                    <name>type</name>
                                                </name>
                                                ==
                                                <name><name>XMLContentSpec</name>.
                                                    <name>CONTENTSPECNODE_SEQ</name>
                                                </name>
                                                )
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <comment type="line">//</comment>
                                                <comment type="line">// Lets see if both of the children are leafs. If
                                                    so, then it
                                                </comment>
                                                <comment type="line">// it has to be a simple content model</comment>
                                                <comment type="line">//</comment>
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>XMLContentSpec</name>
                                                        </type>
                                                        <name>contentSpecLeft</name>  =
                                                        <init>
                                                            <expr>new
                                                                <call>
                                                                    <name>XMLContentSpec</name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>XMLContentSpec</name>
                                                        </type>
                                                        <name>contentSpecRight</name> =
                                                        <init>
                                                            <expr>new
                                                                <call>
                                                                    <name>XMLContentSpec</name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>

                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>getContentSpec</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>((
                                                                        <name>
                                                                            <name>int</name>
                                                                            <index>[]</index>
                                                                        </name>
                                                                        )
                                                                        <name><name>contentSpec</name>.
                                                                            <name>value</name>
                                                                        </name>
                                                                        )
                                                                        <index>[<expr>0</expr>]
                                                                        </index>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>contentSpecLeft</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>getContentSpec</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>((
                                                                        <name>
                                                                            <name>int</name>
                                                                            <index>[]</index>
                                                                        </name>
                                                                        )
                                                                        <name><name>contentSpec</name>.
                                                                            <name>otherValue</name>
                                                                        </name>
                                                                        )
                                                                        <index>[<expr>0</expr>]
                                                                        </index>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>contentSpecRight</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>

                                                <if>if
                                                    <condition>(
                                                        <expr>(
                                                            <name><name>contentSpecLeft</name>.
                                                                <name>type</name>
                                                            </name>
                                                            ==
                                                            <name><name>XMLContentSpec</name>.
                                                                <name>CONTENTSPECNODE_LEAF</name>
                                                            </name>
                                                            )
                                                            &amp;&amp; (
                                                            <name><name>contentSpecRight</name>.
                                                                <name>type</name>
                                                            </name>
                                                            ==
                                                            <name><name>XMLContentSpec</name>.
                                                                <name>CONTENTSPECNODE_LEAF</name>
                                                            </name>
                                                            )
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <comment type="line">//</comment>
                                                            <comment type="line">// Its a simple choice or sequence, so
                                                                we can do a simple
                                                            </comment>
                                                            <comment type="line">// content model for it.</comment>
                                                            <comment type="line">//</comment>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>fQName</name>.
                                                                            <name>setValues</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>null</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>(<name>String</name>)
                                                                                    <name><name>contentSpecLeft</name>.
                                                                                        <name>value</name>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>(<name>String</name>)
                                                                                    <name><name>contentSpecLeft</name>.
                                                                                        <name>value</name>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>(<name>String</name>)
                                                                                    <name><name>contentSpecLeft</name>.
                                                                                        <name>otherValue</name>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>fQName2</name>.
                                                                            <name>setValues</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>null</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>(<name>String</name>)
                                                                                    <name><name>contentSpecRight</name>.
                                                                                        <name>value</name>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>(<name>String</name>)
                                                                                    <name><name>contentSpecRight</name>.
                                                                                        <name>value</name>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>(<name>String</name>)
                                                                                    <name><name>contentSpecRight</name>.
                                                                                        <name>otherValue</name>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <return>return
                                                                <expr>new
                                                                    <call>
                                                                        <name>SimpleContentModel</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name><name>contentSpec</name>.
                                                                                        <name>type</name>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>fQName</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>fQName2</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </return>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <if>if
                                                <condition>(
                                                    <expr>(
                                                        <name><name>contentSpec</name>.
                                                            <name>type</name>
                                                        </name>
                                                        ==
                                                        <name><name>XMLContentSpec</name>.
                                                            <name>CONTENTSPECNODE_ZERO_OR_ONE</name>
                                                        </name>
                                                        )
                                                        || (
                                                        <name><name>contentSpec</name>.
                                                            <name>type</name>
                                                        </name>
                                                        ==
                                                        <name><name>XMLContentSpec</name>.
                                                            <name>CONTENTSPECNODE_ZERO_OR_MORE</name>
                                                        </name>
                                                        )
                                                        || (
                                                        <name><name>contentSpec</name>.
                                                            <name>type</name>
                                                        </name>
                                                        ==
                                                        <name><name>XMLContentSpec</name>.
                                                            <name>CONTENTSPECNODE_ONE_OR_MORE</name>
                                                        </name>
                                                        )
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <comment type="line">//</comment>
                                                        <comment type="line">// Its a repetition, so see if its one
                                                            child is a leaf. If so
                                                        </comment>
                                                        <comment type="line">// its a repetition of a single element, so
                                                            we can do a simple
                                                        </comment>
                                                        <comment type="line">// content model for that.</comment>
                                                        <comment type="line">//</comment>
                                                        <decl_stmt>
                                                            <decl>
                                                                <type>
                                                                    <name>XMLContentSpec</name>
                                                                </type>
                                                                <name>contentSpecLeft</name> =
                                                                <init>
                                                                    <expr>new
                                                                        <call>
                                                                            <name>XMLContentSpec</name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </decl_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name>getContentSpec</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>((
                                                                                <name>
                                                                                    <name>int</name>
                                                                                    <index>[]</index>
                                                                                </name>
                                                                                )
                                                                                <name><name>contentSpec</name>.
                                                                                    <name>value</name>
                                                                                </name>
                                                                                )
                                                                                <index>[<expr>0</expr>]
                                                                                </index>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>contentSpecLeft</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>

                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name><name>contentSpecLeft</name>.
                                                                        <name>type</name>
                                                                    </name>
                                                                    ==
                                                                    <name><name>XMLContentSpec</name>.
                                                                        <name>CONTENTSPECNODE_LEAF</name>
                                                                    </name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <comment type="line">//</comment>
                                                                    <comment type="line">// It is, so we can create a
                                                                        simple content model here that
                                                                    </comment>
                                                                    <comment type="line">// will check for this
                                                                        repetition. We pass -1 for the unused
                                                                    </comment>
                                                                    <comment type="line">// right node.</comment>
                                                                    <comment type="line">//</comment>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>fQName</name>.
                                                                                    <name>setValues</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>null</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>(<name>String</name>)
                                                                                            <name><name>
                                                                                                contentSpecLeft</name>.
                                                                                                <name>value</name>
                                                                                            </name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>(<name>String</name>)
                                                                                            <name><name>
                                                                                                contentSpecLeft</name>.
                                                                                                <name>value</name>
                                                                                            </name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>(<name>String</name>)
                                                                                            <name><name>
                                                                                                contentSpecLeft</name>.
                                                                                                <name>otherValue</name>
                                                                                            </name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <return>return
                                                                        <expr>new
                                                                            <call>
                                                                                <name>SimpleContentModel</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name><name>
                                                                                                contentSpec</name>.
                                                                                                <name>type</name>
                                                                                            </name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>fQName</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>null</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </return>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        }
                                                    </block>
                                                </then>
                                                <else>else
                                                    <block>{
                                                        <throw>throw
                                                            <expr>new
                                                                <call>
                                                                    <name>RuntimeException</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"ImplementationMessages.VAL_CST"
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </throw>
                                                        }
                                                    </block>
                                                </else>
                                            </if>
                                        </else>
                                    </if>
                                </else>
                            </if>
                        </else>
                    </if>

                    <comment type="line">//</comment>
                    <comment type="line">// Its not a simple content model, so here we have to create a DFA</comment>
                    <comment type="line">// for this element. So we create a DFAContentModel object. He</comment>
                    <comment type="line">// encapsulates all of the work to create the DFA.</comment>
                    <comment type="line">//</comment>

                    <expr_stmt>
                        <expr>
                            <name>fLeafCount</name>
                            = 0
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">//int leafCount = countLeaves(contentSpecIndex);</comment>
                    <expr_stmt>
                        <expr>
                            <name>fLeafCount</name>
                            = 0
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>CMNode</name>
                            </type>
                            <name>cmn</name>    =
                            <init>
                                <expr>
                                    <call>
                                        <name>buildSyntaxTree</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>contentSpecIndex</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>contentSpec</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// REVISIT: has to be fLeafCount because we convert x+ to x,x*, one more leaf
                    </comment>
                    <return>return
                        <expr>new
                            <call>
                                <name>DFAContentModel</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>cmn</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fLeafCount</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// createChildModel(int):ContentModelValidator</comment>

            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>final</specifier>
                    <name>CMNode</name>
                </type>
                <name>buildSyntaxTree</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>startNode</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLContentSpec</name>
                            </type>
                            <name>contentSpec</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <comment type="line">// We will build a node at this level for the new tree</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>CMNode</name>
                            </type>
                            <name>nodeRet</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>getContentSpec</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>startNode</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>contentSpec</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>(
                                <name><name>contentSpec</name>.
                                    <name>type</name>
                                </name>
                                &amp; 0x0f) ==
                                <name><name>XMLContentSpec</name>.
                                    <name>CONTENTSPECNODE_ANY</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">//nodeRet = new CMAny(contentSpec.type, -1, fLeafCount++);
                                </comment>
                                <expr_stmt>
                                    <expr>
                                        <name>nodeRet</name>
                                        = new
                                        <call>
                                            <name>CMAny</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>contentSpec</name>.
                                                            <name>type</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>(<name>String</name>)
                                                        <name><name>contentSpec</name>.
                                                            <name>otherValue</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr><name>fLeafCount</name>++
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>(
                                        <name><name>contentSpec</name>.
                                            <name>type</name>
                                        </name>
                                        &amp; 0x0f) ==
                                        <name><name>XMLContentSpec</name>.
                                            <name>CONTENTSPECNODE_ANY_OTHER</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>nodeRet</name>
                                                = new
                                                <call>
                                                    <name>CMAny</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>contentSpec</name>.
                                                                    <name>type</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>(<name>String</name>)
                                                                <name><name>contentSpec</name>.
                                                                    <name>otherValue</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr><name>fLeafCount</name>++
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <if>if
                                        <condition>(
                                            <expr>(
                                                <name><name>contentSpec</name>.
                                                    <name>type</name>
                                                </name>
                                                &amp; 0x0f) ==
                                                <name><name>XMLContentSpec</name>.
                                                    <name>CONTENTSPECNODE_ANY_LOCAL</name>
                                                </name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>nodeRet</name>
                                                        = new
                                                        <call>
                                                            <name>CMAny</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>contentSpec</name>.
                                                                            <name>type</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>null</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr><name>fLeafCount</name>++
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                        <comment type="line">//</comment>
                                        <comment type="line">// If this node is a leaf, then its an easy one. We just
                                            add it
                                        </comment>
                                        <comment type="line">// to the tree.</comment>
                                        <comment type="line">//</comment>
                                        <else>else
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name><name>contentSpec</name>.
                                                            <name>type</name>
                                                        </name>
                                                        ==
                                                        <name><name>XMLContentSpec</name>.
                                                            <name>CONTENTSPECNODE_LEAF</name>
                                                        </name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <comment type="line">//</comment>
                                                        <comment type="line">// Create a new leaf node, and pass it the
                                                            current leaf count,
                                                        </comment>
                                                        <comment type="line">// which is its DFA state position. Bump
                                                            the leaf count after
                                                        </comment>
                                                        <comment type="line">// storing it. This makes the positions
                                                            zero based since we
                                                        </comment>
                                                        <comment type="line">// store first and then increment.
                                                        </comment>
                                                        <comment type="line">//</comment>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>fQName</name>.
                                                                        <name>setValues</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>null</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>(<name>String</name>)
                                                                                <name><name>contentSpec</name>.
                                                                                    <name>value</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>(<name>String</name>)
                                                                                <name><name>contentSpec</name>.
                                                                                    <name>value</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>(<name>String</name>)
                                                                                <name><name>contentSpec</name>.
                                                                                    <name>otherValue</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>nodeRet</name>
                                                                = new
                                                                <call>
                                                                    <name>CMLeaf</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>fQName</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr><name>fLeafCount</name>++
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                                <else>else
                                                    <block>{
                                                        <comment type="line">//</comment>
                                                        <comment type="line">// Its not a leaf, so we have to recurse
                                                            its left and maybe right
                                                        </comment>
                                                        <comment type="line">// nodes. Save both values before we
                                                            recurse and trash the node.
                                                        </comment>
                                                        <decl_stmt>
                                                            <decl>
                                                                <type>
                                                                    <specifier>final</specifier>
                                                                    <name>int</name>
                                                                </type>
                                                                <name>leftNode</name> =
                                                                <init>
                                                                    <expr>((
                                                                        <name>
                                                                            <name>int</name>
                                                                            <index>[]</index>
                                                                        </name>
                                                                        )
                                                                        <name><name>contentSpec</name>.
                                                                            <name>value</name>
                                                                        </name>
                                                                        )
                                                                        <index>[<expr>0</expr>]
                                                                        </index>
                                                                    </expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </decl_stmt>
                                                        <decl_stmt>
                                                            <decl>
                                                                <type>
                                                                    <specifier>final</specifier>
                                                                    <name>int</name>
                                                                </type>
                                                                <name>rightNode</name> =
                                                                <init>
                                                                    <expr>((
                                                                        <name>
                                                                            <name>int</name>
                                                                            <index>[]</index>
                                                                        </name>
                                                                        )
                                                                        <name><name>contentSpec</name>.
                                                                            <name>otherValue</name>
                                                                        </name>
                                                                        )
                                                                        <index>[<expr>0</expr>]
                                                                        </index>
                                                                    </expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </decl_stmt>

                                                        <if>if
                                                            <condition>(
                                                                <expr>(
                                                                    <name><name>contentSpec</name>.
                                                                        <name>type</name>
                                                                    </name>
                                                                    ==
                                                                    <name><name>XMLContentSpec</name>.
                                                                        <name>CONTENTSPECNODE_CHOICE</name>
                                                                    </name>
                                                                    )
                                                                    || (
                                                                    <name><name>contentSpec</name>.
                                                                        <name>type</name>
                                                                    </name>
                                                                    ==
                                                                    <name><name>XMLContentSpec</name>.
                                                                        <name>CONTENTSPECNODE_SEQ</name>
                                                                    </name>
                                                                    )
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <comment type="line">//</comment>
                                                                    <comment type="line">// Recurse on both children,
                                                                        and return a binary op node
                                                                    </comment>
                                                                    <comment type="line">// with the two created sub
                                                                        nodes as its children. The node
                                                                    </comment>
                                                                    <comment type="line">// type is the same type as the
                                                                        source.
                                                                    </comment>
                                                                    <comment type="line">//</comment>

                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>nodeRet</name>
                                                                            = new
                                                                            <call>
                                                                                <name>CMBinOp</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name><name>
                                                                                                contentSpec</name>.
                                                                                                <name>type</name>
                                                                                            </name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <call>
                                                                                                <name>buildSyntaxTree
                                                                                                </name>
                                                                                                <argument_list>(
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <name>
                                                                                                                leftNode
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    ,
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <name>
                                                                                                                contentSpec
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    )
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <call>
                                                                                                <name>buildSyntaxTree
                                                                                                </name>
                                                                                                <argument_list>(
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <name>
                                                                                                                rightNode
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    ,
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <name>
                                                                                                                contentSpec
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    )
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                            <else>else
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>
                                                                            <name><name>contentSpec</name>.
                                                                                <name>type</name>
                                                                            </name>
                                                                            ==
                                                                            <name><name>XMLContentSpec</name>.
                                                                                <name>CONTENTSPECNODE_ZERO_OR_MORE
                                                                                </name>
                                                                            </name>
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <name>nodeRet</name>
                                                                                    = new
                                                                                    <call>
                                                                                        <name>CMUniOp</name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name><name>
                                                                                                        contentSpec</name>
                                                                                                        .
                                                                                                        <name>type
                                                                                                        </name>
                                                                                                    </name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <call>
                                                                                                        <name>
                                                                                                            buildSyntaxTree
                                                                                                        </name>
                                                                                                        <argument_list>(
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        leftNode
                                                                                                                    </name>
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            ,
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        contentSpec
                                                                                                                    </name>
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            )
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            }
                                                                        </block>
                                                                    </then>
                                                                    <else>else
                                                                        <if>if
                                                                            <condition>(
                                                                                <expr>
                                                                                    <name><name>contentSpec</name>.
                                                                                        <name>type</name>
                                                                                    </name>
                                                                                    ==
                                                                                    <name><name>XMLContentSpec</name>.
                                                                                        <name>
                                                                                            CONTENTSPECNODE_ZERO_OR_MORE
                                                                                        </name>
                                                                                    </name>
                                                                                    ||
                                                                                    <name><name>contentSpec</name>.
                                                                                        <name>type</name>
                                                                                    </name>
                                                                                    ==
                                                                                    <name><name>XMLContentSpec</name>.
                                                                                        <name>
                                                                                            CONTENTSPECNODE_ZERO_OR_ONE
                                                                                        </name>
                                                                                    </name>
                                                                                    ||
                                                                                    <name><name>contentSpec</name>.
                                                                                        <name>type</name>
                                                                                    </name>
                                                                                    ==
                                                                                    <name><name>XMLContentSpec</name>.
                                                                                        <name>
                                                                                            CONTENTSPECNODE_ONE_OR_MORE
                                                                                        </name>
                                                                                    </name>
                                                                                </expr>
                                                                                )
                                                                            </condition>
                                                                            <then>
                                                                                <block>{
                                                                                    <expr_stmt>
                                                                                        <expr>
                                                                                            <name>nodeRet</name>
                                                                                            = new
                                                                                            <call>
                                                                                                <name>CMUniOp</name>
                                                                                                <argument_list>(
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <name><name>
                                                                                                                contentSpec</name>
                                                                                                                .
                                                                                                                <name>
                                                                                                                    type
                                                                                                                </name>
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    ,
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <call>
                                                                                                                <name>
                                                                                                                    buildSyntaxTree
                                                                                                                </name>
                                                                                                                <argument_list>
                                                                                                                    (
                                                                                                                    <argument>
                                                                                                                        <expr>
                                                                                                                            <name>
                                                                                                                                leftNode
                                                                                                                            </name>
                                                                                                                        </expr>
                                                                                                                    </argument>
                                                                                                                    ,
                                                                                                                    <argument>
                                                                                                                        <expr>
                                                                                                                            <name>
                                                                                                                                contentSpec
                                                                                                                            </name>
                                                                                                                        </expr>
                                                                                                                    </argument>
                                                                                                                    )
                                                                                                                </argument_list>
                                                                                                            </call>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    )
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                        ;
                                                                                    </expr_stmt>
                                                                                    }
                                                                                </block>
                                                                            </then>
                                                                            <else>else
                                                                                <block>{
                                                                                    <throw>throw
                                                                                        <expr>new
                                                                                            <call>
                                                                                                <name>RuntimeException
                                                                                                </name>
                                                                                                <argument_list>(
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            "ImplementationMessages.VAL_CST"
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    )
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                        ;
                                                                                    </throw>
                                                                                    }
                                                                                </block>
                                                                            </else>
                                                                        </if>
                                                                    </else>
                                                                </if>
                                                            </else>
                                                        </if>
                                                        }
                                                    </block>
                                                </else>
                                            </if>
                                        </else>
                                    </if>
                                </else>
                            </if>
                        </else>
                    </if>
                    <comment type="line">// And return our new node for this level</comment>
                    <return>return
                        <expr>
                            <name>nodeRet</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Build a vector of valid QNames from Content Spec
                * table.
                *
                * @param contentSpecIndex
                * Content Spec index
                * @param vectorQName
                * Array of QName
                * @exception RuntimeException
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>void</name>
                </type>
                <name>contentSpecTree</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>contentSpecIndex</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLContentSpec</name>
                            </type>
                            <name>contentSpec</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ChildrenList</name>
                            </type>
                            <name>children</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <comment type="line">// Handle any and leaf nodes</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>getContentSpec</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>contentSpecIndex</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>contentSpec</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>contentSpec</name>.
                                    <name>type</name>
                                </name>
                                ==
                                <name><name>XMLContentSpec</name>.
                                    <name>CONTENTSPECNODE_LEAF</name>
                                </name>
                                ||
                                (
                                <name><name>contentSpec</name>.
                                    <name>type</name>
                                </name>
                                &amp; 0x0f) ==
                                <name><name>XMLContentSpec</name>.
                                    <name>CONTENTSPECNODE_ANY</name>
                                </name>
                                ||
                                (
                                <name><name>contentSpec</name>.
                                    <name>type</name>
                                </name>
                                &amp; 0x0f) ==
                                <name><name>XMLContentSpec</name>.
                                    <name>CONTENTSPECNODE_ANY_LOCAL</name>
                                </name>
                                ||
                                (
                                <name><name>contentSpec</name>.
                                    <name>type</name>
                                </name>
                                &amp; 0x0f) ==
                                <name><name>XMLContentSpec</name>.
                                    <name>CONTENTSPECNODE_ANY_OTHER</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{

                                <comment type="line">// resize arrays, if needed</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>children</name>.
                                                <name>length</name>
                                            </name>
                                            ==
                                            <name><name>children</name>.<name>qname</name>.
                                                <name>length</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>QName</name>
                                                        <index>[]</index>
                                                    </type>
                                                    <name>newQName</name> =
                                                    <init>
                                                        <expr>new
                                                            <name>
                                                                <name>QName</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name><name>children</name>.
                                                                            <name>length</name>
                                                                        </name>
                                                                        * 2
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>System</name>.
                                                            <name>arraycopy</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>children</name>.
                                                                        <name>qname</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>0</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>newQName</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>0</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name><name>children</name>.
                                                                        <name>length</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name><name>children</name>.
                                                        <name>qname</name>
                                                    </name>
                                                    =
                                                    <name>newQName</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>int</name>
                                                        <index>[]</index>
                                                    </type>
                                                    <name>newType</name> =
                                                    <init>
                                                        <expr>new
                                                            <name>
                                                                <name>int</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name><name>children</name>.
                                                                            <name>length</name>
                                                                        </name>
                                                                        * 2
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>System</name>.
                                                            <name>arraycopy</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>children</name>.
                                                                        <name>type</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>0</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>newType</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>0</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name><name>children</name>.
                                                                        <name>length</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name><name>children</name>.
                                                        <name>type</name>
                                                    </name>
                                                    =
                                                    <name>newType</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>

                                <comment type="line">// save values and return length</comment>
                                <expr_stmt>
                                    <expr>
                                        <name><name>children</name>.
                                            <name>qname</name>
                                            <index>[
                                                <expr>
                                                    <name><name>children</name>.
                                                        <name>length</name>
                                                    </name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        = new
                                        <call>
                                            <name>QName</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>(<name>String</name>)
                                                        <name><name>contentSpec</name>.
                                                            <name>value</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>(<name>String</name>)
                                                        <name><name>contentSpec</name>.
                                                            <name>value</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>(<name>String</name>)
                                                        <name><name>contentSpec</name>.
                                                            <name>otherValue</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>children</name>.
                                            <name>type</name>
                                            <index>[
                                                <expr>
                                                    <name><name>children</name>.
                                                        <name>length</name>
                                                    </name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        =
                                        <name><name>contentSpec</name>.
                                            <name>type</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>children</name>.
                                            <name>length</name>
                                        </name>
                                        ++
                                    </expr>
                                    ;
                                </expr_stmt>
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">//</comment>
                    <comment type="line">// Its not a leaf, so we have to recurse its left and maybe right</comment>
                    <comment type="line">// nodes. Save both values before we recurse and trash the node.</comment>
                    <comment type="line">//</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>int</name>
                            </type>
                            <name>leftNode</name> =
                            <init>
                                <expr>
                                    <name><name>contentSpec</name>.
                                        <name>value</name>
                                    </name>
                                    !=
                                    <name>null</name>
                                    ? ((
                                    <name>
                                        <name>int</name>
                                        <index>[]</index>
                                    </name>
                                    )(
                                    <name><name>contentSpec</name>.
                                        <name>value</name>
                                    </name>
                                    ))
                                    <index>[<expr>0</expr>]
                                    </index>
                                    : -1
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>rightNode</name> =
                            <init>
                                <expr>-1</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>contentSpec</name>.
                                    <name>otherValue</name>
                                </name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <name>rightNode</name>
                                    = ((
                                    <name>
                                        <name>int</name>
                                        <index>[]</index>
                                    </name>
                                    )(
                                    <name><name>contentSpec</name>.
                                        <name>otherValue</name>
                                    </name>
                                    ))
                                    <index>[<expr>0</expr>]
                                    </index>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                        <else>else
                            <return>return;</return>
                        </else>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name><name>contentSpec</name>.
                                    <name>type</name>
                                </name>
                                ==
                                <name><name>XMLContentSpec</name>.
                                    <name>CONTENTSPECNODE_CHOICE</name>
                                </name>
                                ||
                                <name><name>contentSpec</name>.
                                    <name>type</name>
                                </name>
                                ==
                                <name><name>XMLContentSpec</name>.
                                    <name>CONTENTSPECNODE_SEQ</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>contentSpecTree</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>leftNode</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>contentSpec</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>children</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>contentSpecTree</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>rightNode</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>contentSpec</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>children</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name><name>contentSpec</name>.
                                    <name>type</name>
                                </name>
                                ==
                                <name><name>XMLContentSpec</name>.
                                    <name>CONTENTSPECNODE_ZERO_OR_ONE</name>
                                </name>
                                ||
                                <name><name>contentSpec</name>.
                                    <name>type</name>
                                </name>
                                ==
                                <name><name>XMLContentSpec</name>.
                                    <name>CONTENTSPECNODE_ZERO_OR_MORE</name>
                                </name>
                                ||
                                <name><name>contentSpec</name>.
                                    <name>type</name>
                                </name>
                                ==
                                <name><name>XMLContentSpec</name>.
                                    <name>CONTENTSPECNODE_ONE_OR_MORE</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>contentSpecTree</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>leftNode</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>contentSpec</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>children</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// error</comment>
                    <throw>throw
                        <expr>new
                            <call>
                                <name>RuntimeException</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Invalid content spec type seen in contentSpecTree() method of
                                            AbstractDTDGrammar class : "+
                                            <name><name>contentSpec</name>.
                                                <name>type</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>

                    }
                </block>
            </function>
            <comment type="line">// contentSpecTree(int,XMLContentSpec,ChildrenList)</comment>

            <comment type="line">// ensure capacity</comment>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name>void</name>
                </type>
                <name>ensureElementDeclCapacity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>chunk</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>chunk</name>
                                &gt;=
                                <name><name>fElementDeclName</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fElementDeclIsExternal</name>
                                        =
                                        <call>
                                            <name>resize</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fElementDeclIsExternal</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>fElementDeclIsExternal</name>.
                                                            <name>length</name>
                                                        </name>
                                                        * 2
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>

                                <expr_stmt>
                                    <expr>
                                        <name>fElementDeclName</name>
                                        =
                                        <call>
                                            <name>resize</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fElementDeclName</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>fElementDeclName</name>.
                                                            <name>length</name>
                                                        </name>
                                                        * 2
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fElementDeclType</name>
                                        =
                                        <call>
                                            <name>resize</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fElementDeclType</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>fElementDeclType</name>.
                                                            <name>length</name>
                                                        </name>
                                                        * 2
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fElementDeclContentModelValidator</name>
                                        =
                                        <call>
                                            <name>resize</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fElementDeclContentModelValidator</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>fElementDeclContentModelValidator</name>.
                                                            <name>length</name>
                                                        </name>
                                                        * 2
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fElementDeclContentSpecIndex</name>
                                        =
                                        <call>
                                            <name>resize</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fElementDeclContentSpecIndex</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>fElementDeclContentSpecIndex</name>.
                                                            <name>length</name>
                                                        </name>
                                                        * 2
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fElementDeclFirstAttributeDeclIndex</name>
                                        =
                                        <call>
                                            <name>resize</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fElementDeclFirstAttributeDeclIndex</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>fElementDeclFirstAttributeDeclIndex</name>.
                                                            <name>length</name>
                                                        </name>
                                                        * 2
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fElementDeclLastAttributeDeclIndex</name>
                                        =
                                        <call>
                                            <name>resize</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fElementDeclLastAttributeDeclIndex</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>fElementDeclLastAttributeDeclIndex</name>.
                                                            <name>length</name>
                                                        </name>
                                                        * 2
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>
                                            <name>fElementDeclName</name>
                                            <index>[
                                                <expr>
                                                    <name>chunk</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return;</return>
                                        }
                                    </block>
                                </then>
                            </if>
                        </else>
                    </if>

                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fElementDeclIsExternal</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = new
                            <name>
                                <name>int</name>
                                <index>[
                                    <expr>
                                        <name>CHUNK_SIZE</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fElementDeclName</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = new
                            <name>
                                <name>QName</name>
                                <index>[
                                    <expr>
                                        <name>CHUNK_SIZE</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fElementDeclType</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = new
                            <name>
                                <name>short</name>
                                <index>[
                                    <expr>
                                        <name>CHUNK_SIZE</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fElementDeclContentModelValidator</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = new
                            <name>
                                <name>ContentModelValidator</name>
                                <index>[
                                    <expr>
                                        <name>CHUNK_SIZE</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fElementDeclContentSpecIndex</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = new
                            <name>
                                <name>int</name>
                                <index>[
                                    <expr>
                                        <name>CHUNK_SIZE</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fElementDeclFirstAttributeDeclIndex</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = new
                            <name>
                                <name>int</name>
                                <index>[
                                    <expr>
                                        <name>CHUNK_SIZE</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fElementDeclLastAttributeDeclIndex</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = new
                            <name>
                                <name>int</name>
                                <index>[
                                    <expr>
                                        <name>CHUNK_SIZE</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return;</return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name>void</name>
                </type>
                <name>ensureAttributeDeclCapacity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>chunk</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name>chunk</name>
                                &gt;=
                                <name><name>fAttributeDeclName</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fAttributeDeclIsExternal</name>
                                        =
                                        <call>
                                            <name>resize</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fAttributeDeclIsExternal</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>fAttributeDeclIsExternal</name>.
                                                            <name>length</name>
                                                        </name>
                                                        * 2
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fAttributeDeclName</name>
                                        =
                                        <call>
                                            <name>resize</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fAttributeDeclName</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>fAttributeDeclName</name>.
                                                            <name>length</name>
                                                        </name>
                                                        * 2
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fAttributeDeclType</name>
                                        =
                                        <call>
                                            <name>resize</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fAttributeDeclType</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>fAttributeDeclType</name>.
                                                            <name>length</name>
                                                        </name>
                                                        * 2
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fAttributeDeclEnumeration</name>
                                        =
                                        <call>
                                            <name>resize</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fAttributeDeclEnumeration</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>fAttributeDeclEnumeration</name>.
                                                            <name>length</name>
                                                        </name>
                                                        * 2
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fAttributeDeclDefaultType</name>
                                        =
                                        <call>
                                            <name>resize</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fAttributeDeclDefaultType</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>fAttributeDeclDefaultType</name>.
                                                            <name>length</name>
                                                        </name>
                                                        * 2
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fAttributeDeclDatatypeValidator</name>
                                        =
                                        <call>
                                            <name>resize</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fAttributeDeclDatatypeValidator</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>fAttributeDeclDatatypeValidator</name>.
                                                            <name>length</name>
                                                        </name>
                                                        * 2
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fAttributeDeclDefaultValue</name>
                                        =
                                        <call>
                                            <name>resize</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fAttributeDeclDefaultValue</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>fAttributeDeclDefaultValue</name>.
                                                            <name>length</name>
                                                        </name>
                                                        * 2
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fAttributeDeclNonNormalizedDefaultValue</name>
                                        =
                                        <call>
                                            <name>resize</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fAttributeDeclNonNormalizedDefaultValue</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>fAttributeDeclNonNormalizedDefaultValue</name>.
                                                            <name>length</name>
                                                        </name>
                                                        * 2
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fAttributeDeclNextAttributeDeclIndex</name>
                                        =
                                        <call>
                                            <name>resize</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fAttributeDeclNextAttributeDeclIndex</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>fAttributeDeclNextAttributeDeclIndex</name>.
                                                            <name>length</name>
                                                        </name>
                                                        * 2
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>
                                            <name>fAttributeDeclName</name>
                                            <index>[
                                                <expr>
                                                    <name>chunk</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return;</return>
                                        }
                                    </block>
                                </then>
                            </if>
                        </else>
                    </if>

                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fAttributeDeclIsExternal</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = new
                            <name>
                                <name>int</name>
                                <index>[
                                    <expr>
                                        <name>CHUNK_SIZE</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fAttributeDeclName</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = new
                            <name>
                                <name>QName</name>
                                <index>[
                                    <expr>
                                        <name>CHUNK_SIZE</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fAttributeDeclType</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = new
                            <name>
                                <name>short</name>
                                <index>[
                                    <expr>
                                        <name>CHUNK_SIZE</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fAttributeDeclEnumeration</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = new
                            <name>
                                <name>String</name>
                                <index>[
                                    <expr>
                                        <name>CHUNK_SIZE</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[]</index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fAttributeDeclDefaultType</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = new
                            <name>
                                <name>short</name>
                                <index>[
                                    <expr>
                                        <name>CHUNK_SIZE</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fAttributeDeclDatatypeValidator</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = new
                            <name>
                                <name>DatatypeValidator</name>
                                <index>[
                                    <expr>
                                        <name>CHUNK_SIZE</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fAttributeDeclDefaultValue</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = new
                            <name>
                                <name>String</name>
                                <index>[
                                    <expr>
                                        <name>CHUNK_SIZE</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fAttributeDeclNonNormalizedDefaultValue</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = new
                            <name>
                                <name>String</name>
                                <index>[
                                    <expr>
                                        <name>CHUNK_SIZE</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fAttributeDeclNextAttributeDeclIndex</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = new
                            <name>
                                <name>int</name>
                                <index>[
                                    <expr>
                                        <name>CHUNK_SIZE</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return;</return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name>void</name>
                </type>
                <name>ensureEntityDeclCapacity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>chunk</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>chunk</name>
                                &gt;=
                                <name><name>fEntityName</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fEntityName</name>
                                        =
                                        <call>
                                            <name>resize</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fEntityName</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>fEntityName</name>.
                                                            <name>length</name>
                                                        </name>
                                                        * 2
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fEntityValue</name>
                                        =
                                        <call>
                                            <name>resize</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fEntityValue</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>fEntityValue</name>.
                                                            <name>length</name>
                                                        </name>
                                                        * 2
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fEntityPublicId</name>
                                        =
                                        <call>
                                            <name>resize</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fEntityPublicId</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>fEntityPublicId</name>.
                                                            <name>length</name>
                                                        </name>
                                                        * 2
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fEntitySystemId</name>
                                        =
                                        <call>
                                            <name>resize</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fEntitySystemId</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>fEntitySystemId</name>.
                                                            <name>length</name>
                                                        </name>
                                                        * 2
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fEntityBaseSystemId</name>
                                        =
                                        <call>
                                            <name>resize</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fEntityBaseSystemId</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>fEntityBaseSystemId</name>.
                                                            <name>length</name>
                                                        </name>
                                                        * 2
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fEntityNotation</name>
                                        =
                                        <call>
                                            <name>resize</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fEntityNotation</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>fEntityNotation</name>.
                                                            <name>length</name>
                                                        </name>
                                                        * 2
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fEntityIsPE</name>
                                        =
                                        <call>
                                            <name>resize</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fEntityIsPE</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>fEntityIsPE</name>.
                                                            <name>length</name>
                                                        </name>
                                                        * 2
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fEntityInExternal</name>
                                        =
                                        <call>
                                            <name>resize</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fEntityInExternal</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>fEntityInExternal</name>.
                                                            <name>length</name>
                                                        </name>
                                                        * 2
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>
                                            <name>fEntityName</name>
                                            <index>[
                                                <expr>
                                                    <name>chunk</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return;</return>
                                        }
                                    </block>
                                </then>
                            </if>
                        </else>
                    </if>

                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fEntityName</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = new
                            <name>
                                <name>String</name>
                                <index>[
                                    <expr>
                                        <name>CHUNK_SIZE</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fEntityValue</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = new
                            <name>
                                <name>String</name>
                                <index>[
                                    <expr>
                                        <name>CHUNK_SIZE</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fEntityPublicId</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = new
                            <name>
                                <name>String</name>
                                <index>[
                                    <expr>
                                        <name>CHUNK_SIZE</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fEntitySystemId</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = new
                            <name>
                                <name>String</name>
                                <index>[
                                    <expr>
                                        <name>CHUNK_SIZE</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fEntityBaseSystemId</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = new
                            <name>
                                <name>String</name>
                                <index>[
                                    <expr>
                                        <name>CHUNK_SIZE</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fEntityNotation</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = new
                            <name>
                                <name>String</name>
                                <index>[
                                    <expr>
                                        <name>CHUNK_SIZE</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fEntityIsPE</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = new
                            <name>
                                <name>byte</name>
                                <index>[
                                    <expr>
                                        <name>CHUNK_SIZE</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fEntityInExternal</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = new
                            <name>
                                <name>byte</name>
                                <index>[
                                    <expr>
                                        <name>CHUNK_SIZE</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return;</return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name>void</name>
                </type>
                <name>ensureNotationDeclCapacity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>chunk</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>chunk</name>
                                &gt;=
                                <name><name>fNotationName</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fNotationName</name>
                                        =
                                        <call>
                                            <name>resize</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fNotationName</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>fNotationName</name>.
                                                            <name>length</name>
                                                        </name>
                                                        * 2
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fNotationPublicId</name>
                                        =
                                        <call>
                                            <name>resize</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fNotationPublicId</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>fNotationPublicId</name>.
                                                            <name>length</name>
                                                        </name>
                                                        * 2
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fNotationSystemId</name>
                                        =
                                        <call>
                                            <name>resize</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fNotationSystemId</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>fNotationSystemId</name>.
                                                            <name>length</name>
                                                        </name>
                                                        * 2
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fNotationBaseSystemId</name>
                                        =
                                        <call>
                                            <name>resize</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fNotationBaseSystemId</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>fNotationBaseSystemId</name>.
                                                            <name>length</name>
                                                        </name>
                                                        * 2
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>
                                            <name>fNotationName</name>
                                            <index>[
                                                <expr>
                                                    <name>chunk</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return;</return>
                                        }
                                    </block>
                                </then>
                            </if>
                        </else>
                    </if>

                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fNotationName</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = new
                            <name>
                                <name>String</name>
                                <index>[
                                    <expr>
                                        <name>CHUNK_SIZE</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fNotationPublicId</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = new
                            <name>
                                <name>String</name>
                                <index>[
                                    <expr>
                                        <name>CHUNK_SIZE</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fNotationSystemId</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = new
                            <name>
                                <name>String</name>
                                <index>[
                                    <expr>
                                        <name>CHUNK_SIZE</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fNotationBaseSystemId</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = new
                            <name>
                                <name>String</name>
                                <index>[
                                    <expr>
                                        <name>CHUNK_SIZE</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return;</return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name>void</name>
                </type>
                <name>ensureContentSpecCapacity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>chunk</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>chunk</name>
                                &gt;=
                                <name><name>fContentSpecType</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fContentSpecType</name>
                                        =
                                        <call>
                                            <name>resize</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fContentSpecType</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>fContentSpecType</name>.
                                                            <name>length</name>
                                                        </name>
                                                        * 2
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fContentSpecValue</name>
                                        =
                                        <call>
                                            <name>resize</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fContentSpecValue</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>fContentSpecValue</name>.
                                                            <name>length</name>
                                                        </name>
                                                        * 2
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fContentSpecOtherValue</name>
                                        =
                                        <call>
                                            <name>resize</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fContentSpecOtherValue</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>fContentSpecOtherValue</name>.
                                                            <name>length</name>
                                                        </name>
                                                        * 2
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>
                                            <name>fContentSpecType</name>
                                            <index>[
                                                <expr>
                                                    <name>chunk</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return;</return>
                                        }
                                    </block>
                                </then>
                            </if>
                        </else>
                    </if>

                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fContentSpecType</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = new
                            <name>
                                <name>short</name>
                                <index>[
                                    <expr>
                                        <name>CHUNK_SIZE</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fContentSpecValue</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = new
                            <name>
                                <name>Object</name>
                                <index>[
                                    <expr>
                                        <name>CHUNK_SIZE</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fContentSpecOtherValue</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = new
                            <name>
                                <name>Object</name>
                                <index>[
                                    <expr>
                                        <name>CHUNK_SIZE</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return;</return>
                    }
                </block>
            </function>

            <comment type="line">//</comment>
            <comment type="line">// Private static methods</comment>
            <comment type="line">//</comment>

            <comment type="line">// resize chunks</comment>

            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>byte</name>
                    <index>[]</index>
                    <index>[]</index>
                </type>
                <name>resize</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>byte</name>
                            </type>
                            <name>
                                <name>array</name>
                                <index>[]</index>
                                <index>[]</index>
                            </name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>newsize</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>byte</name>
                            </type>
                            <name>
                                <name>newarray</name>
                                <index>[]</index>
                                <index>[]</index>
                            </name>
                            =
                            <init>
                                <expr>new
                                    <name>
                                        <name>byte</name>
                                        <index>[
                                            <expr>
                                                <name>newsize</name>
                                            </expr>
                                            ]
                                        </index>
                                        <index>[]</index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>System</name>.
                                    <name>arraycopy</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>array</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>newarray</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>array</name>.
                                                <name>length</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>newarray</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>short</name>
                    <index>[]</index>
                    <index>[]</index>
                </type>
                <name>resize</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>
                                <name>array</name>
                                <index>[]</index>
                                <index>[]</index>
                            </name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>newsize</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>
                                <name>newarray</name>
                                <index>[]</index>
                                <index>[]</index>
                            </name>
                            =
                            <init>
                                <expr>new
                                    <name>
                                        <name>short</name>
                                        <index>[
                                            <expr>
                                                <name>newsize</name>
                                            </expr>
                                            ]
                                        </index>
                                        <index>[]</index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>System</name>.
                                    <name>arraycopy</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>array</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>newarray</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>array</name>.
                                                <name>length</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>newarray</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>int</name>
                    <index>[]</index>
                    <index>[]</index>
                </type>
                <name>resize</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>
                                <name>array</name>
                                <index>[]</index>
                                <index>[]</index>
                            </name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>newsize</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>
                                <name>newarray</name>
                                <index>[]</index>
                                <index>[]</index>
                            </name>
                            =
                            <init>
                                <expr>new
                                    <name>
                                        <name>int</name>
                                        <index>[
                                            <expr>
                                                <name>newsize</name>
                                            </expr>
                                            ]
                                        </index>
                                        <index>[]</index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>System</name>.
                                    <name>arraycopy</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>array</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>newarray</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>array</name>.
                                                <name>length</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>newarray</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>DatatypeValidator</name>
                    <index>[]</index>
                    <index>[]</index>
                </type>
                <name>resize</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>DatatypeValidator</name>
                            </type>
                            <name>
                                <name>array</name>
                                <index>[]</index>
                                <index>[]</index>
                            </name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>newsize</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>DatatypeValidator</name>
                            </type>
                            <name>
                                <name>newarray</name>
                                <index>[]</index>
                                <index>[]</index>
                            </name>
                            =
                            <init>
                                <expr>new
                                    <name>
                                        <name>DatatypeValidator</name>
                                        <index>[
                                            <expr>
                                                <name>newsize</name>
                                            </expr>
                                            ]
                                        </index>
                                        <index>[]</index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>System</name>.
                                    <name>arraycopy</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>array</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>newarray</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>array</name>.
                                                <name>length</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>newarray</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>ContentModelValidator</name>
                    <index>[]</index>
                    <index>[]</index>
                </type>
                <name>resize</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ContentModelValidator</name>
                            </type>
                            <name>
                                <name>array</name>
                                <index>[]</index>
                                <index>[]</index>
                            </name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>newsize</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ContentModelValidator</name>
                            </type>
                            <name>
                                <name>newarray</name>
                                <index>[]</index>
                                <index>[]</index>
                            </name>
                            =
                            <init>
                                <expr>new
                                    <name>
                                        <name>ContentModelValidator</name>
                                        <index>[
                                            <expr>
                                                <name>newsize</name>
                                            </expr>
                                            ]
                                        </index>
                                        <index>[]</index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>System</name>.
                                    <name>arraycopy</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>array</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>newarray</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>array</name>.
                                                <name>length</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>newarray</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>Object</name>
                    <index>[]</index>
                    <index>[]</index>
                </type>
                <name>resize</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>
                                <name>array</name>
                                <index>[]</index>
                                <index>[]</index>
                            </name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>newsize</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>
                                <name>newarray</name>
                                <index>[]</index>
                                <index>[]</index>
                            </name>
                            =
                            <init>
                                <expr>new
                                    <name>
                                        <name>Object</name>
                                        <index>[
                                            <expr>
                                                <name>newsize</name>
                                            </expr>
                                            ]
                                        </index>
                                        <index>[]</index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>System</name>.
                                    <name>arraycopy</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>array</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>newarray</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>array</name>.
                                                <name>length</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>newarray</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>QName</name>
                    <index>[]</index>
                    <index>[]</index>
                </type>
                <name>resize</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>
                                <name>array</name>
                                <index>[]</index>
                                <index>[]</index>
                            </name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>newsize</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>
                                <name>newarray</name>
                                <index>[]</index>
                                <index>[]</index>
                            </name>
                            =
                            <init>
                                <expr>new
                                    <name>
                                        <name>QName</name>
                                        <index>[
                                            <expr>
                                                <name>newsize</name>
                                            </expr>
                                            ]
                                        </index>
                                        <index>[]</index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>System</name>.
                                    <name>arraycopy</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>array</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>newarray</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>array</name>.
                                                <name>length</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>newarray</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>String</name>
                    <index>[]</index>
                    <index>[]</index>
                </type>
                <name>resize</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>
                                <name>array</name>
                                <index>[]</index>
                                <index>[]</index>
                            </name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>newsize</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>
                                <name>newarray</name>
                                <index>[]</index>
                                <index>[]</index>
                            </name>
                            =
                            <init>
                                <expr>new
                                    <name>
                                        <name>String</name>
                                        <index>[
                                            <expr>
                                                <name>newsize</name>
                                            </expr>
                                            ]
                                        </index>
                                        <index>[]</index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>System</name>.
                                    <name>arraycopy</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>array</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>newarray</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>array</name>.
                                                <name>length</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>newarray</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>String</name>
                    <index>[]</index>
                    <index>[]</index>
                    <index>[]</index>
                </type>
                <name>resize</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>
                                <name>array</name>
                                <index>[]</index>
                                <index>[]</index>
                                <index>[]</index>
                            </name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>newsize</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>
                                <name>newarray</name>
                                <index>[]</index>
                                <index>[]</index>
                                <index>[]</index>
                            </name>
                            =
                            <init>
                                <expr>new
                                    <name>
                                        <name>String</name>
                                        <index>[
                                            <expr>
                                                <name>newsize</name>
                                            </expr>
                                            ]
                                        </index>
                                        <index>[]</index>
                                        <index>[]</index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>System</name>.
                                    <name>arraycopy</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>array</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>newarray</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>array</name>.
                                                <name>length</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>newarray</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">//</comment>
            <comment type="line">// Classes</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * Children list for &lt;code&gt;contentSpecTree&lt;/code&gt; method.
                *
                * @xerces.internal
                *
                * @author Eric Ye, IBM
                */
            </comment>
            <class>
                <specifier>private</specifier>
                <specifier>static</specifier> class <name>ChildrenList</name>
                <block>{

                    <comment type="line">//</comment>
                    <comment type="line">// Data</comment>
                    <comment type="line">//</comment>

                    <comment type="javadoc">/** Length. */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>int</name>
                            </type>
                            <name>length</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// NOTE: The following set of data is mutually exclusive. It is</comment>
                    <comment type="line">// written this way because Java doesn't have a native</comment>
                    <comment type="line">// union data structure. -Ac</comment>

                    <comment type="javadoc">/** Left and right children names. */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>QName</name>
                                <index>[]</index>
                            </type>
                            <name>qname</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>QName</name>
                                        <index>[<expr>2</expr>]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="javadoc">/** Left and right children types. */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>int</name>
                                <index>[]</index>
                            </type>
                            <name>type</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>int</name>
                                        <index>[<expr>2</expr>]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">//</comment>
                    <comment type="line">// Constructors</comment>
                    <comment type="line">//</comment>

                    <constructor>
                        <specifier>public</specifier>
                        <name>ChildrenList</name>
                        <parameter_list>()</parameter_list>
                        <block>{}</block>
                    </constructor>

                    }
                </block>
            </class>
            <comment type="line">// class ChildrenList</comment>

            <comment type="line">//</comment>
            <comment type="line">// Classes</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * A simple Hashtable implementation that takes a tuple (String, String)
                * as the key and a int as value.
                *
                * @xerces.internal
                *
                * @author Eric Ye, IBM
                * @author Andy Clark, IBM
                */
            </comment>
            <class>
                <specifier>protected</specifier>
                <specifier>static</specifier>
                <specifier>final</specifier> class <name>QNameHashtable</name>
                <block>{

                    <comment type="line">//</comment>
                    <comment type="line">// Constants</comment>
                    <comment type="line">//</comment>

                    <comment type="javadoc">/** Initial bucket size (4). */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>int</name>
                            </type>
                            <name>INITIAL_BUCKET_SIZE</name> =
                            <init>
                                <expr>4</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// NOTE: Changed previous hashtable size from 512 to 101 so</comment>
                    <comment type="line">// that we get a better distribution for hashing. -Ac</comment>
                    <comment type="javadoc">/** Hashtable size (101). */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>int</name>
                            </type>
                            <name>HASHTABLE_SIZE</name> =
                            <init>
                                <expr>101</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">//</comment>
                    <comment type="line">// Data</comment>
                    <comment type="line">//</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <name>Object</name>
                                <index>[]</index>
                                <index>[]</index>
                            </type>
                            <name>fHashTable</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>Object</name>
                                        <index>[
                                            <expr>
                                                <name>HASHTABLE_SIZE</name>
                                            </expr>
                                            ]
                                        </index>
                                        <index>[]</index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">//</comment>
                    <comment type="line">// Public methods</comment>
                    <comment type="line">//</comment>
                    <comment type="javadoc">/** Associates the given value with the specified key tuple. */</comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>put</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>key</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>value</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{

                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>hash</name> =
                                    <init>
                                        <expr>(
                                            <call>
                                                <name><name>key</name>.
                                                    <name>hashCode</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            &amp; 0x7FFFFFFF) %
                                            <name>HASHTABLE_SIZE</name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Object</name>
                                        <index>[]</index>
                                    </type>
                                    <name>bucket</name> =
                                    <init>
                                        <expr>
                                            <name>
                                                <name>fHashTable</name>
                                                <index>[
                                                    <expr>
                                                        <name>hash</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>

                            <if>if
                                <condition>(
                                    <expr>
                                        <name>bucket</name>
                                        ==
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>bucket</name>
                                                = new
                                                <name>
                                                    <name>Object</name>
                                                    <index>[
                                                        <expr>1 + 2*
                                                            <name>INITIAL_BUCKET_SIZE</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>
                                                    <name>bucket</name>
                                                    <index>[<expr>0</expr>]
                                                    </index>
                                                </name>
                                                = new
                                                <name>
                                                    <name>int</name>
                                                    <index>[]</index>
                                                </name>
                                                <block>{<expr>1</expr>}
                                                </block>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>
                                                    <name>bucket</name>
                                                    <index>[<expr>1</expr>]
                                                    </index>
                                                </name>
                                                =
                                                <name>key</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>
                                                    <name>bucket</name>
                                                    <index>[<expr>2</expr>]
                                                    </index>
                                                </name>
                                                = new
                                                <name>
                                                    <name>int</name>
                                                    <index>[]</index>
                                                </name>
                                                <block>{
                                                    <expr>
                                                        <name>value</name>
                                                    </expr>
                                                    }
                                                </block>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>
                                                    <name>fHashTable</name>
                                                    <index>[
                                                        <expr>
                                                            <name>hash</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                =
                                                <name>bucket</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>int</name>
                                                </type>
                                                <name>count</name> =
                                                <init>
                                                    <expr>((
                                                        <name>
                                                            <name>int</name>
                                                            <index>[]</index>
                                                        </name>
                                                        )
                                                        <name>
                                                            <name>bucket</name>
                                                            <index>[<expr>0</expr>]
                                                            </index>
                                                        </name>
                                                        )
                                                        <index>[<expr>0</expr>]
                                                        </index>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>int</name>
                                                </type>
                                                <name>offset</name> =
                                                <init>
                                                    <expr>1 + 2*
                                                        <name>count</name>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>offset</name>
                                                    ==
                                                    <name><name>bucket</name>.
                                                        <name>length</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>int</name>
                                                            </type>
                                                            <name>newSize</name> =
                                                            <init>
                                                                <expr>
                                                                    <name>count</name>
                                                                    +
                                                                    <name>INITIAL_BUCKET_SIZE</name>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>Object</name>
                                                                <index>[]</index>
                                                            </type>
                                                            <name>newBucket</name> =
                                                            <init>
                                                                <expr>new
                                                                    <name>
                                                                        <name>Object</name>
                                                                        <index>[
                                                                            <expr>1 + 2*
                                                                                <name>newSize</name>
                                                                            </expr>
                                                                            ]
                                                                        </index>
                                                                    </name>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>System</name>.
                                                                    <name>arraycopy</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>bucket</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>0</expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>newBucket</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>0</expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>offset</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>bucket</name>
                                                            =
                                                            <name>newBucket</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>
                                                                <name>fHashTable</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>hash</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            =
                                                            <name>bucket</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>boolean</name>
                                                </type>
                                                <name>found</name> =
                                                <init>
                                                    <expr>false</expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>int</name>
                                                </type>
                                                <name>j</name>=
                                                <init>
                                                    <expr>1</expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <for>for (
                                            <init>
                                                <decl>
                                                    <type>
                                                        <name>int</name>
                                                    </type>
                                                    <name>i</name>=
                                                    <init>
                                                        <expr>0</expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </init>
                                            <condition>
                                                <expr><name>i</name>&lt;
                                                    <name>count</name>
                                                </expr>
                                                ;
                                            </condition>
                                            <incr>
                                                <expr><name>i</name>++
                                                </expr>
                                            </incr>
                                            )
                                            <block>{
                                                <if>if
                                                    <condition>(
                                                        <expr>(<name>String</name>)
                                                            <name>
                                                                <name>bucket</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>j</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            ==
                                                            <name>key</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>((
                                                                    <name>
                                                                        <name>int</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    )
                                                                    <name>
                                                                        <name>bucket</name>
                                                                        <index>[
                                                                            <expr><name>j</name>+1
                                                                            </expr>
                                                                            ]
                                                                        </index>
                                                                    </name>
                                                                    )
                                                                    <index>[<expr>0</expr>]
                                                                    </index>
                                                                    =
                                                                    <name>value</name>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>found</name>
                                                                    = true
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <break>break;</break>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>j</name>
                                                        += 2
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </for>
                                        <if>if
                                            <condition>(
                                                <expr>!
                                                    <name>found</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>
                                                                <name>bucket</name>
                                                                <index>[
                                                                    <expr><name>offset</name>++
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            =
                                                            <name>key</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>
                                                                <name>bucket</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>offset</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            = new
                                                            <name>
                                                                <name>int</name>
                                                                <index>[]</index>
                                                            </name>
                                                            <block>{
                                                                <expr>
                                                                    <name>value</name>
                                                                </expr>
                                                                }
                                                            </block>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>((
                                                            <name>
                                                                <name>int</name>
                                                                <index>[]</index>
                                                            </name>
                                                            )
                                                            <name>
                                                                <name>bucket</name>
                                                                <index>[<expr>0</expr>]
                                                                </index>
                                                            </name>
                                                            )
                                                            <index>[<expr>0</expr>]
                                                            </index>
                                                            = ++
                                                            <name>count</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>

                                        }
                                    </block>
                                </else>
                            </if>
                            <comment type="line">//System.out.println("put("+key+" -&gt; "+value+')');</comment>
                            <comment type="line">//System.out.println("get("+key+") -&gt; "+get(key));</comment>

                            }
                        </block>
                    </function>
                    <comment type="line">// put(int,String,String,int)</comment>

                    <comment type="javadoc">/** Returns the value associated with the specified key tuple. */</comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>int</name>
                        </type>
                        <name>get</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>key</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>hash</name> =
                                    <init>
                                        <expr>(
                                            <call>
                                                <name><name>key</name>.
                                                    <name>hashCode</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            &amp; 0x7FFFFFFF) %
                                            <name>HASHTABLE_SIZE</name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Object</name>
                                        <index>[]</index>
                                    </type>
                                    <name>bucket</name> =
                                    <init>
                                        <expr>
                                            <name>
                                                <name>fHashTable</name>
                                                <index>[
                                                    <expr>
                                                        <name>hash</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>

                            <if>if
                                <condition>(
                                    <expr>
                                        <name>bucket</name>
                                        ==
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return <expr>-1</expr>;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>count</name> =
                                    <init>
                                        <expr>((
                                            <name>
                                                <name>int</name>
                                                <index>[]</index>
                                            </name>
                                            )
                                            <name>
                                                <name>bucket</name>
                                                <index>[<expr>0</expr>]
                                                </index>
                                            </name>
                                            )
                                            <index>[<expr>0</expr>]
                                            </index>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>

                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>j</name>=
                                    <init>
                                        <expr>1</expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <for>for (
                                <init>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>i</name>=
                                        <init>
                                            <expr>0</expr>
                                        </init>
                                    </decl>
                                    ;
                                </init>
                                <condition>
                                    <expr><name>i</name>&lt;
                                        <name>count</name>
                                    </expr>
                                    ;
                                </condition>
                                <incr>
                                    <expr><name>i</name>++
                                    </expr>
                                </incr>
                                )
                                <block>{
                                    <if>if
                                        <condition>(
                                            <expr>(<name>String</name>)
                                                <name>
                                                    <name>bucket</name>
                                                    <index>[
                                                        <expr>
                                                            <name>j</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                ==
                                                <name>key</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <return>return
                                                    <expr>((
                                                        <name>
                                                            <name>int</name>
                                                            <index>[]</index>
                                                        </name>
                                                        )
                                                        <name>
                                                            <name>bucket</name>
                                                            <index>[
                                                                <expr><name>j</name>+1
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                        )
                                                        <index>[<expr>0</expr>]
                                                        </index>
                                                    </expr>
                                                    ;
                                                </return>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <expr_stmt>
                                        <expr>
                                            <name>j</name>
                                            += 2
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                            </for>
                            <return>return <expr>-1</expr>;
                            </return>

                            }
                        </block>
                    </function>
                    <comment type="line">// get(int,String,String)</comment>

                    }
                </block>
            </class>
            <comment type="line">// class QNameHashtable</comment>

            <comment type="line">//</comment>
            <comment type="line">// EntityState methods</comment>
            <comment type="line">//</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isEntityDeclared</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>(
                            <call>
                                <name>getEntityDeclIndex</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>name</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            !=-1)?true:false
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isEntityUnparsed</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>entityIndex</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getEntityDeclIndex</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>name</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>entityIndex</name>
                                &gt;-1
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>chunk</name> =
                                        <init>
                                            <expr>
                                                <name>entityIndex</name>
                                                &gt;&gt;
                                                <name>CHUNK_SHIFT</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>index</name> =
                                        <init>
                                            <expr>
                                                <name>entityIndex</name>
                                                &amp;
                                                <name>CHUNK_MASK</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <comment type="line">//for unparsed entity notation!=null</comment>
                                <return>return
                                    <expr>(
                                        <name>
                                            <name>fEntityNotation</name>
                                            <index>[
                                                <expr>
                                                    <name>chunk</name>
                                                </expr>
                                                ]
                                            </index>
                                            <index>[
                                                <expr>
                                                    <name>index</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        !=<name>null</name>)?true:false
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return <expr>false</expr>;
                    </return>
                    }
                </block>
            </function>
            }
        </block>
    </class>
    <comment type="line">// class DTDGrammar</comment>
</unit>
