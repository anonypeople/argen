<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\impl\dtd\DTDGrammarBucket.java">
    <comment type="block">/*
        * Copyright 1999-2002,2004 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.
            <name>dtd</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>grammars</name>.
            <name>XMLGrammarDescription</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Hashtable</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * This very simple class is the skeleton of what the DTDValidator could use
        * to store various grammars that it gets from the GrammarPool. As in the
        * case of XSGrammarBucket, one thinks of this object as being closely
        * associated with its validator; when fully mature, this class will be
        * filled from the GrammarPool when the DTDValidator is invoked on a
        * document, and, if a new DTD grammar is parsed, the new set will be
        * offered back to the GrammarPool for possible inclusion.
        *
        * @xerces.internal
        *
        * @author Neil Graham, IBM
        *
        * @version $Id: DTDGrammarBucket.java,v 1.7 2004/10/04 21:57:30 mrglavas Exp $
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>DTDGrammarBucket</name>
        <block>{

            <comment type="line">// REVISIT: make this class smarter and *way* more complete!</comment>

            <comment type="line">//</comment>
            <comment type="line">// Data</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/** Grammars associated with element root name. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>Hashtable</name>
                    </type>
                    <name>fGrammars</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// the unique grammar from fGrammars (or that we're</comment>
            <comment type="line">// building) that is used in validation.</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>DTDGrammar</name>
                    </type>
                    <name>fActiveGrammar</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// is the "active" grammar standalone?</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fIsStandalone</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">//</comment>
            <comment type="line">// Constructors</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/** Default constructor. */</comment>
            <constructor>
                <specifier>public</specifier>
                <name>DTDGrammarBucket</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fGrammars</name>
                            = new
                            <call>
                                <name>Hashtable</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>
            <comment type="line">// &lt;init&gt;()</comment>

            <comment type="line">//</comment>
            <comment type="line">// Public methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * Puts the specified grammar into the grammar pool and associate it to
                * a root element name (this being internal, the lack of generality is irrelevant).
                *
                * @param grammar The grammar.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>putGrammar</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>DTDGrammar</name>
                            </type>
                            <name>grammar</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XMLDTDDescription</name>
                            </type>
                            <name>desc</name> =
                            <init>
                                <expr>(<name>XMLDTDDescription</name>)
                                    <call>
                                        <name><name>grammar</name>.
                                            <name>getGrammarDescription</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fGrammars</name>.
                                    <name>put</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>desc</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>grammar</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="line">// putGrammar(DTDGrammar)</comment>

            <comment type="line">// retrieve a DTDGrammar given an XMLDTDDescription</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>DTDGrammar</name>
                </type>
                <name>getGrammar</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLGrammarDescription</name>
                            </type>
                            <name>desc</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>(<name>DTDGrammar</name>)
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>fGrammars</name>.
                                                    <name>get</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>(<name>XMLDTDDescription</name>)
                                                            <name>desc</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// putGrammar(DTDGrammar)</comment>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>clear</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fGrammars</name>.
                                    <name>clear</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fActiveGrammar</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fIsStandalone</name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="line">// clear()</comment>

            <comment type="line">// is the active grammar standalone? This must live here because</comment>
            <comment type="line">// at the time the validator discovers this we don't yet know</comment>
            <comment type="line">// what the active grammar should be (no info about root)</comment>
            <function>
                <type>
                    <name>void</name>
                </type>
                <name>setStandalone</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>standalone</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fIsStandalone</name>
                            =
                            <name>standalone</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <name>boolean</name>
                </type>
                <name>getStandalone</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fIsStandalone</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">// set the "active" grammar:</comment>
            <function>
                <type>
                    <name>void</name>
                </type>
                <name>setActiveGrammar</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>DTDGrammar</name>
                            </type>
                            <name>grammar</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fActiveGrammar</name>
                            =
                            <name>grammar</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <function>
                <type>
                    <name>DTDGrammar</name>
                </type>
                <name>getActiveGrammar</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fActiveGrammar</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            }
        </block>
    </class>
    <comment type="line">// class DTDGrammarBucket</comment>
</unit>
