<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\impl\xs\opti\DefaultText.java">
    <comment type="block">/*
        * Copyright 2001-2004 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xs</name>.
            <name>opti</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>Text</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>DOMException</name>
        </name>
        ;
    </import>

    <comment type="block">/*
        * @author Neil Graham, IBM
        * @version $Id: DefaultText.java,v 1.5 2004/10/06 15:14:49 mrglavas Exp $
        */
    </comment>
    <comment type="javadoc">/**
        * The &lt;code&gt;Text&lt;/code&gt; interface inherits from &lt;code&gt;CharacterData&lt;/code&gt;
        * and represents the textual content (termed character data in XML) of an
        * &lt;code&gt;Element&lt;/code&gt; or &lt;code&gt;Attr&lt;/code&gt;. If there is no markup inside
        * an element's content, the text is contained in a single object
        * implementing the &lt;code&gt;Text&lt;/code&gt; interface that is the only child of
        * the element. If there is markup, it is parsed into the information items
        * (elements, comments, etc.) and &lt;code&gt;Text&lt;/code&gt; nodes that form the list
        * of children of the element.
        * &lt;p&gt;When a document is first made available via the DOM, there is only one
        * &lt;code&gt;Text&lt;/code&gt; node for each block of text. Users may create adjacent
        * &lt;code&gt;Text&lt;/code&gt; nodes that represent the contents of a given element
        * without any intervening markup, but should be aware that there is no way
        * to represent the separations between these nodes in XML or HTML, so they
        * will not (in general) persist between DOM editing sessions. The
        * &lt;code&gt;normalize()&lt;/code&gt; method on &lt;code&gt;Node&lt;/code&gt; merges any such
        * adjacent &lt;code&gt;Text&lt;/code&gt; objects into a single node for each block of
        * text.
        * &lt;p&gt;See also the &lt;a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113'&gt;Document Object
        Model (DOM) Level 2 Core Specification&lt;/a&gt;.
        *
        * This is an empty implementation.
        *
        * @xerces.internal
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>DefaultText</name>
        <super>
            <extends>extends
                <name>NodeImpl</name>
            </extends>
            <implements>implements
                <name>Text</name>
            </implements>
        </super>
        <block>{

            <comment type="line">// CharacterData methods</comment>

            <comment type="javadoc">/**
                * The character data of the node that implements this interface. The DOM
                * implementation may not put arbitrary limits on the amount of data
                * that may be stored in a &lt;code&gt;CharacterData&lt;/code&gt; node. However,
                * implementation limits may mean that the entirety of a node's data may
                * not fit into a single &lt;code&gt;DOMString&lt;/code&gt;. In such cases, the user
                * may call &lt;code&gt;substringData&lt;/code&gt; to retrieve the data in
                * appropriately sized pieces.
                * @exception DOMException
                * NO_MODIFICATION_ALLOWED_ERR: Raised when the node is readonly.
                * @exception DOMException
                * DOMSTRING_SIZE_ERR: Raised when it would return more characters than
                * fit in a &lt;code&gt;DOMString&lt;/code&gt; variable on the implementation
                * platform.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getData</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>DOMException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * The character data of the node that implements this interface. The DOM
                * implementation may not put arbitrary limits on the amount of data
                * that may be stored in a &lt;code&gt;CharacterData&lt;/code&gt; node. However,
                * implementation limits may mean that the entirety of a node's data may
                * not fit into a single &lt;code&gt;DOMString&lt;/code&gt;. In such cases, the user
                * may call &lt;code&gt;substringData&lt;/code&gt; to retrieve the data in
                * appropriately sized pieces.
                * @exception DOMException
                * NO_MODIFICATION_ALLOWED_ERR: Raised when the node is readonly.
                * @exception DOMException
                * DOMSTRING_SIZE_ERR: Raised when it would return more characters than
                * fit in a &lt;code&gt;DOMString&lt;/code&gt; variable on the implementation
                * platform.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setData</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>data</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>DOMException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <throw>throw
                        <expr>new
                            <call>
                                <name>DOMException</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>DOMException</name>.
                                                <name>NOT_SUPPORTED_ERR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"Method not supported"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * The number of 16-bit units that are available through &lt;code&gt;data&lt;/code&gt;
                * and the &lt;code&gt;substringData&lt;/code&gt; method below. This may have the
                * value zero, i.e., &lt;code&gt;CharacterData&lt;/code&gt; nodes may be empty.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getLength</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return <expr>0</expr>;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Extracts a range of data from the node.
                * @param offset Start offset of substring to extract.
                * @param count The number of 16-bit units to extract.
                * @return The specified substring. If the sum of &lt;code&gt;offset&lt;/code&gt; and
                * &lt;code&gt;count&lt;/code&gt; exceeds the &lt;code&gt;length&lt;/code&gt;, then all 16-bit
                * units to the end of the data are returned.
                * @exception DOMException
                * INDEX_SIZE_ERR: Raised if the specified &lt;code&gt;offset&lt;/code&gt; is
                * negative or greater than the number of 16-bit units in
                * &lt;code&gt;data&lt;/code&gt;, or if the specified &lt;code&gt;count&lt;/code&gt; is
                * negative.
                * &lt;br&gt;DOMSTRING_SIZE_ERR: Raised if the specified range of text does
                * not fit into a &lt;code&gt;DOMString&lt;/code&gt;.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>substringData</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>offset</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>count</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>DOMException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <throw>throw
                        <expr>new
                            <call>
                                <name>DOMException</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>DOMException</name>.
                                                <name>NOT_SUPPORTED_ERR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"Method not supported"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Append the string to the end of the character data of the node. Upon
                * success, &lt;code&gt;data&lt;/code&gt; provides access to the concatenation of
                * &lt;code&gt;data&lt;/code&gt; and the &lt;code&gt;DOMString&lt;/code&gt; specified.
                * @param arg The &lt;code&gt;DOMString&lt;/code&gt; to append.
                * @exception DOMException
                * NO_MODIFICATION_ALLOWED_ERR: Raised if this node is readonly.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>appendData</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>arg</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>DOMException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <throw>throw
                        <expr>new
                            <call>
                                <name>DOMException</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>DOMException</name>.
                                                <name>NOT_SUPPORTED_ERR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"Method not supported"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Insert a string at the specified 16-bit unit offset.
                * @param offset The character offset at which to insert.
                * @param arg The &lt;code&gt;DOMString&lt;/code&gt; to insert.
                * @exception DOMException
                * INDEX_SIZE_ERR: Raised if the specified &lt;code&gt;offset&lt;/code&gt; is
                * negative or greater than the number of 16-bit units in
                * &lt;code&gt;data&lt;/code&gt;.
                * &lt;br&gt;NO_MODIFICATION_ALLOWED_ERR: Raised if this node is readonly.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>insertData</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>offset</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>arg</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>DOMException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <throw>throw
                        <expr>new
                            <call>
                                <name>DOMException</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>DOMException</name>.
                                                <name>NOT_SUPPORTED_ERR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"Method not supported"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Remove a range of 16-bit units from the node. Upon success,
                * &lt;code&gt;data&lt;/code&gt; and &lt;code&gt;length&lt;/code&gt; reflect the change.
                * @param offset The offset from which to start removing.
                * @param count The number of 16-bit units to delete. If the sum of
                * &lt;code&gt;offset&lt;/code&gt; and &lt;code&gt;count&lt;/code&gt; exceeds
                * &lt;code&gt;length&lt;/code&gt; then all 16-bit units from &lt;code&gt;offset&lt;/code&gt;
                * to the end of the data are deleted.
                * @exception DOMException
                * INDEX_SIZE_ERR: Raised if the specified &lt;code&gt;offset&lt;/code&gt; is
                * negative or greater than the number of 16-bit units in
                * &lt;code&gt;data&lt;/code&gt;, or if the specified &lt;code&gt;count&lt;/code&gt; is
                * negative.
                * &lt;br&gt;NO_MODIFICATION_ALLOWED_ERR: Raised if this node is readonly.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>deleteData</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>offset</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>count</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>DOMException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <throw>throw
                        <expr>new
                            <call>
                                <name>DOMException</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>DOMException</name>.
                                                <name>NOT_SUPPORTED_ERR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"Method not supported"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Replace the characters starting at the specified 16-bit unit offset
                * with the specified string.
                * @param offset The offset from which to start replacing.
                * @param count The number of 16-bit units to replace. If the sum of
                * &lt;code&gt;offset&lt;/code&gt; and &lt;code&gt;count&lt;/code&gt; exceeds
                * &lt;code&gt;length&lt;/code&gt;, then all 16-bit units to the end of the data
                * are replaced; (i.e., the effect is the same as a &lt;code&gt;remove&lt;/code&gt;
                * method call with the same range, followed by an &lt;code&gt;append&lt;/code&gt;
                * method invocation).
                * @param arg The &lt;code&gt;DOMString&lt;/code&gt; with which the range must be
                * replaced.
                * @exception DOMException
                * INDEX_SIZE_ERR: Raised if the specified &lt;code&gt;offset&lt;/code&gt; is
                * negative or greater than the number of 16-bit units in
                * &lt;code&gt;data&lt;/code&gt;, or if the specified &lt;code&gt;count&lt;/code&gt; is
                * negative.
                * &lt;br&gt;NO_MODIFICATION_ALLOWED_ERR: Raised if this node is readonly.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>replaceData</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>offset</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>count</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>arg</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>DOMException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <throw>throw
                        <expr>new
                            <call>
                                <name>DOMException</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>DOMException</name>.
                                                <name>NOT_SUPPORTED_ERR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"Method not supported"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>

            <comment type="line">// Text node methods</comment>
            <comment type="javadoc">/**
                * Breaks this node into two nodes at the specified &lt;code&gt;offset&lt;/code&gt;,
                * keeping both in the tree as siblings. After being split, this node
                * will contain all the content up to the &lt;code&gt;offset&lt;/code&gt; point. A
                * new node of the same type, which contains all the content at and
                * after the &lt;code&gt;offset&lt;/code&gt; point, is returned. If the original
                * node had a parent node, the new node is inserted as the next sibling
                * of the original node. When the &lt;code&gt;offset&lt;/code&gt; is equal to the
                * length of this node, the new node has no data.
                * @param offset The 16-bit unit offset at which to split, starting from
                * &lt;code&gt;0&lt;/code&gt;.
                * @return The new node, of the same type as this node.
                * @exception DOMException
                * INDEX_SIZE_ERR: Raised if the specified offset is negative or greater
                * than the number of 16-bit units in &lt;code&gt;data&lt;/code&gt;.
                * &lt;br&gt;NO_MODIFICATION_ALLOWED_ERR: Raised if this node is readonly.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Text</name>
                </type>
                <name>splitText</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>offset</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>DOMException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <throw>throw
                        <expr>new
                            <call>
                                <name>DOMException</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>DOMException</name>.
                                                <name>NOT_SUPPORTED_ERR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"Method not supported"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>

            <comment type="javadoc">/** DOM Level 3 CR */</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isElementContentWhitespace</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <throw>throw
                        <expr>new
                            <call>
                                <name>DOMException</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>DOMException</name>.
                                                <name>NOT_SUPPORTED_ERR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"Method not supported"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getWholeText</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <throw>throw
                        <expr>new
                            <call>
                                <name>DOMException</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>DOMException</name>.
                                                <name>NOT_SUPPORTED_ERR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"Method not supported"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Text</name>
                </type>
                <name>replaceWholeText</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>content</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>DOMException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <throw>throw
                        <expr>new
                            <call>
                                <name>DOMException</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>DOMException</name>.
                                                <name>NOT_SUPPORTED_ERR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"Method not supported"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>
            }
        </block>
    </class>
</unit>
