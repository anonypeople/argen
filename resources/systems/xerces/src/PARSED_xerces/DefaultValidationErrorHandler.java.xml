<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\jaxp\DefaultValidationErrorHandler.java">
    <comment type="block">/*
        * Copyright 2000-2002,2004 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.
            <name>jaxp</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>org</name>.<name>xml</name>.<name>sax</name>.
            <name>SAXException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>xml</name>.<name>sax</name>.
            <name>SAXParseException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>xml</name>.<name>sax</name>.<name>helpers</name>.
            <name>DefaultHandler</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * @version $Id: DefaultValidationErrorHandler.java,v 1.5 2004/02/24 23:15:58 mrglavas Exp $
        */
    </comment>

    <class>class <name>DefaultValidationErrorHandler</name>
        <super>
            <extends>extends
                <name>DefaultHandler</name>
            </extends>
        </super>
        <block>{
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>ERROR_COUNT_LIMIT</name> =
                    <init>
                        <expr>10</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>errorCount</name> =
                    <init>
                        <expr>0</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// XXX Fix message i18n</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>error</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>SAXParseException</name>
                            </type>
                            <name>e</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>SAXException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>errorCount</name>
                                &gt;=
                                <name>ERROR_COUNT_LIMIT</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// Ignore all errors after reaching the limit</comment>
                                <return>return;</return>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>errorCount</name>
                                        == 0
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <comment type="line">// Print a warning before the first error</comment>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>System</name>.<name>err</name>.
                                                        <name>println</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"Warning: validation was turned on but an
                                                                org.xml.sax.ErrorHandler was not"
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>System</name>.<name>err</name>.
                                                        <name>println</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"set, which is probably not what is desired. Parser
                                                                will use a default"
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>System</name>.<name>err</name>.
                                                        <name>println</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"ErrorHandler to print the first " +
                                                                <name>ERROR_COUNT_LIMIT</name>
                                                                + " errors. Please call"
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>System</name>.<name>err</name>.
                                                        <name>println</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"the 'setErrorHandler' method to fix this."</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                        </else>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>systemId</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>e</name>.
                                            <name>getSystemId</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>systemId</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>systemId</name>
                                        = "null"
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>message</name> =
                            <init>
                                <expr>"Error: URI=" + <name>systemId</name> +
                                    " Line=" +
                                    <call>
                                        <name><name>e</name>.
                                            <name>getLineNumber</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    +
                                    ": " +
                                    <call>
                                        <name><name>e</name>.
                                            <name>getMessage</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>System</name>.<name>err</name>.
                                    <name>println</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>message</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr><name>errorCount</name>++
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            }
        </block>
    </class>
</unit>
