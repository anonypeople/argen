<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\dom\DocumentImpl.java">
    <comment type="block">/*
        * Copyright 2001,2002,2004,2005 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.
            <name>dom</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>Serializable</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Hashtable</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Vector</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>dom</name>.<name>events</name>.
            <name>EventImpl</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>dom</name>.<name>events</name>.
            <name>MutationEventImpl</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>UserDataHandler</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>Attr</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>DOMException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>DOMImplementation</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>DocumentType</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>Element</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>NamedNodeMap</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>Node</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.<name>events</name>.
            <name>DocumentEvent</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.<name>events</name>.
            <name>Event</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.<name>events</name>.
            <name>EventException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.<name>events</name>.
            <name>EventListener</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.<name>events</name>.
            <name>MutationEvent</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.<name>ranges</name>.
            <name>DocumentRange</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.<name>ranges</name>.
            <name>Range</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.<name>traversal</name>.
            <name>DocumentTraversal</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.<name>traversal</name>.
            <name>NodeFilter</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.<name>traversal</name>.
            <name>NodeIterator</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.<name>traversal</name>.
            <name>TreeWalker</name>
        </name>
        ;
    </import>


    <comment type="javadoc">/**
        * The Document interface represents the entire HTML or XML document.
        * Conceptually, it is the root of the document tree, and provides the
        * primary access to the document's data.
        * &lt;P&gt;
        * Since elements, text nodes, comments, processing instructions,
        * etc. cannot exist outside the context of a Document, the Document
        * interface also contains the factory methods needed to create these
        * objects. The Node objects created have a ownerDocument attribute
        * which associates them with the Document within whose context they
        * were created.
        * &lt;p&gt;
        * The DocumentImpl class also implements the DOM Level 2 DocumentTraversal
        * interface. This interface is comprised of factory methods needed to
        * create NodeIterators and TreeWalkers. The process of creating NodeIterator
        * objects also adds these references to this document.
        * After finishing with an iterator it is important to remove the object
        * using the remove methods in this implementation. This allows the release of
        * the references from the iterator objects to the DOM Nodes.
        * &lt;p&gt;
        * &lt;b&gt;Note:&lt;/b&gt; When any node in the document is serialized, the
        * entire document is serialized along with it.
        *
        * @xerces.internal
        *
        * @author Arnaud Le Hors, IBM
        * @author Joe Kesselman, IBM
        * @author Andy Clark, IBM
        * @author Ralf Pfeiffer, IBM
        * @version $Id: DocumentImpl.java,v 1.85 2005/05/02 22:02:22 mrglavas Exp $
        * @since PR-DOM-Level-1-19980818.
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class
        <name>DocumentImpl</name>
        <super>
            <extends>extends
                <name>CoreDocumentImpl</name>
            </extends>
            <implements>implements <name>DocumentTraversal</name>, <name>DocumentEvent</name>,
                <name>DocumentRange</name>
            </implements>
        </super>
        <block>{

            <comment type="line">//</comment>
            <comment type="line">// Constants</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/** Serialization version. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>long</name>
                    </type>
                    <name>serialVersionUID</name> =
                    <init>
                        <expr>515687835542616694L</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">//</comment>
            <comment type="line">// Data</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/** Iterators */</comment>
            <comment type="line">// REVISIT: Should this be transient? -Ac</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>Vector</name>
                    </type>
                    <name>iterators</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Ranges */</comment>
            <comment type="line">// REVISIT: Should this be transient? -Ac</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>Vector</name>
                    </type>
                    <name>ranges</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Table for event listeners registered to this document nodes. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>Hashtable</name>
                    </type>
                    <name>eventListeners</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Bypass mutation events firing. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>boolean</name>
                    </type>
                    <name>mutationEvents</name> =
                    <init>
                        <expr>false</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">//</comment>
            <comment type="line">// Constructors</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * NON-DOM: Actually creating a Document is outside the DOM's spec,
                * since it has to operate in terms of a particular implementation.
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>DocumentImpl</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>super</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/** Constructor. */</comment>
            <constructor>
                <specifier>public</specifier>
                <name>DocumentImpl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>grammarAccess</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>super</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>grammarAccess</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * For DOM2 support.
                * The createDocument factory method is in DOMImplementation.
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>DocumentImpl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>DocumentType</name>
                            </type>
                            <name>doctype</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>super</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>doctype</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/** For DOM2 support. */</comment>
            <constructor>
                <specifier>public</specifier>
                <name>DocumentImpl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>DocumentType</name>
                            </type>
                            <name>doctype</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>grammarAccess</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>super</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>doctype</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>grammarAccess</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="line">//</comment>
            <comment type="line">// Node methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * Deep-clone a document, including fixing ownerDoc for the cloned
                * children. Note that this requires bypassing the WRONG_DOCUMENT_ERR
                * protection. I've chosen to implement it by calling importNode
                * which is DOM Level 2.
                *
                * @return org.w3c.dom.Node
                * @param deep boolean, iff true replicate children
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Node</name>
                </type>
                <name>cloneNode</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>deep</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>DocumentImpl</name>
                            </type>
                            <name>newdoc</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>DocumentImpl</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>callUserDataHandlers</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>this</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>newdoc</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>UserDataHandler</name>.
                                                <name>NODE_CLONED</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>cloneNode</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>newdoc</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>deep</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// experimental</comment>
                    <expr_stmt>
                        <expr>
                            <name><name>newdoc</name>.
                                <name>mutationEvents</name>
                            </name>
                            =
                            <name>mutationEvents</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <return>return
                        <expr>
                            <name>newdoc</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// cloneNode(boolean):Node</comment>

            <comment type="javadoc">/**
                * Retrieve information describing the abilities of this particular
                * DOM implementation. Intended to support applications that may be
                * using DOMs retrieved from several different sources, potentially
                * with different underlying representations.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>DOMImplementation</name>
                </type>
                <name>getImplementation</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <comment type="line">// Currently implemented as a singleton, since it's hardcoded</comment>
                    <comment type="line">// information anyway.</comment>
                    <return>return
                        <expr>
                            <call>
                                <name><name>DOMImplementationImpl</name>.
                                    <name>getDOMImplementation</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">//</comment>
            <comment type="line">// DocumentTraversal methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * NON-DOM extension:
                * Create and return a NodeIterator. The NodeIterator is
                * added to a list of NodeIterators so that it can be
                * removed to free up the DOM Nodes it references.
                *
                * @param root The root of the iterator.
                * @param whatToShow The whatToShow mask.
                * @param filter The NodeFilter installed. Null means no filter.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>NodeIterator</name>
                </type>
                <name>createNodeIterator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>root</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>whatToShow</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>NodeFilter</name>
                            </type>
                            <name>filter</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>createNodeIterator</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>root</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>whatToShow</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>filter</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Create and return a NodeIterator. The NodeIterator is
                * added to a list of NodeIterators so that it can be
                * removed to free up the DOM Nodes it references.
                *
                * @param root The root of the iterator.
                * @param whatToShow The whatToShow mask.
                * @param filter The NodeFilter installed. Null means no filter.
                * @param entityReferenceExpansion true to expand the contents of
                * EntityReference nodes
                * @since WD-DOM-Level-2-19990923
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>NodeIterator</name>
                </type>
                <name>createNodeIterator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>root</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>whatToShow</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>NodeFilter</name>
                            </type>
                            <name>filter</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>entityReferenceExpansion</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name>root</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                        </type>
                                        <name>msg</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>formatMessage</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>DOMMessageFormatter</name>.
                                                                    <name>DOM_DOMAIN</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>"NOT_SUPPORTED_ERR"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>null</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>DOMException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>DOMException</name>.
                                                            <name>NOT_SUPPORTED_ERR</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>msg</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>NodeIterator</name>
                            </type>
                            <name>iterator</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>NodeIteratorImpl</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>this</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>root</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>whatToShow</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>filter</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>entityReferenceExpansion</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>iterators</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>iterators</name>
                                        = new
                                        <call>
                                            <name>Vector</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>iterators</name>.
                                    <name>addElement</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>iterator</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <return>return
                        <expr>
                            <name>iterator</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * NON-DOM extension:
                * Create and return a TreeWalker.
                *
                * @param root The root of the iterator.
                * @param whatToShow The whatToShow mask.
                * @param filter The NodeFilter installed. Null means no filter.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>TreeWalker</name>
                </type>
                <name>createTreeWalker</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>root</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>whatToShow</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>NodeFilter</name>
                            </type>
                            <name>filter</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>createTreeWalker</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>root</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>whatToShow</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>filter</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * Create and return a TreeWalker.
                *
                * @param root The root of the iterator.
                * @param whatToShow The whatToShow mask.
                * @param filter The NodeFilter installed. Null means no filter.
                * @param entityReferenceExpansion true to expand the contents of
                * EntityReference nodes
                * @since WD-DOM-Level-2-19990923
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>TreeWalker</name>
                </type>
                <name>createTreeWalker</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>root</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>whatToShow</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>NodeFilter</name>
                            </type>
                            <name>filter</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>entityReferenceExpansion</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>root</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                        </type>
                                        <name>msg</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>formatMessage</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>DOMMessageFormatter</name>.
                                                                    <name>DOM_DOMAIN</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>"NOT_SUPPORTED_ERR"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>null</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>DOMException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>DOMException</name>.
                                                            <name>NOT_SUPPORTED_ERR</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>msg</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>new
                            <call>
                                <name>TreeWalkerImpl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>root</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>whatToShow</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>filter</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>entityReferenceExpansion</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">//</comment>
            <comment type="line">// Not DOM Level 2. Support DocumentTraversal methods.</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/** This is not called by the developer client. The
                * developer client uses the detach() function on the
                * NodeIterator itself. &lt;p&gt;
                *
                * This function is called from the NodeIterator#detach().
                */
            </comment>
            <function>
                <type>
                    <name>void</name>
                </type>
                <name>removeNodeIterator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>NodeIterator</name>
                            </type>
                            <name>nodeIterator</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name>nodeIterator</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return;</return>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>iterators</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return;</return>
                        </then>
                    </if>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>iterators</name>.
                                    <name>removeElement</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>nodeIterator</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="line">//</comment>
            <comment type="line">// DocumentRange methods</comment>
            <comment type="line">//</comment>
            <comment type="javadoc">/**
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Range</name>
                </type>
                <name>createRange</name>
                <parameter_list>()</parameter_list>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name>ranges</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>ranges</name>
                                        = new
                                        <call>
                                            <name>Vector</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Range</name>
                            </type>
                            <name>range</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>RangeImpl</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>this</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>ranges</name>.
                                    <name>addElement</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>range</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <return>return
                        <expr>
                            <name>range</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>

            <comment type="javadoc">/** Not a client function. Called by Range.detach(),
                * so a Range can remove itself from the list of
                * Ranges.
                */
            </comment>
            <function>
                <type>
                    <name>void</name>
                </type>
                <name>removeRange</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Range</name>
                            </type>
                            <name>range</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name>range</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return;</return>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>ranges</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return;</return>
                        </then>
                    </if>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>ranges</name>.
                                    <name>removeElement</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>range</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * A method to be called when some text was changed in a text node,
                * so that live objects can be notified.
                */
            </comment>
            <function>
                <type>
                    <name>void</name>
                </type>
                <name>replacedText</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>NodeImpl</name>
                            </type>
                            <name>node</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// notify ranges</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>ranges</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>size</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>ranges</name>.
                                                        <name>size</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <for>for (
                                    <init>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>i</name> =
                                            <init>
                                                <expr>0</expr>
                                            </init>
                                        </decl>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            !=
                                            <name>size</name>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr><name>i</name>++
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <expr_stmt>
                                            <expr>((<name>RangeImpl</name>)
                                                <call>
                                                    <name><name>ranges</name>.
                                                        <name>elementAt</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                ).
                                                <call>
                                                    <name>receiveReplacedText</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>node</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </for>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * A method to be called when some text was deleted from a text node,
                * so that live objects can be notified.
                */
            </comment>
            <function>
                <type>
                    <name>void</name>
                </type>
                <name>deletedText</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>NodeImpl</name>
                            </type>
                            <name>node</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>offset</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>count</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// notify ranges</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>ranges</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>size</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>ranges</name>.
                                                        <name>size</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <for>for (
                                    <init>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>i</name> =
                                            <init>
                                                <expr>0</expr>
                                            </init>
                                        </decl>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            !=
                                            <name>size</name>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr><name>i</name>++
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <expr_stmt>
                                            <expr>((<name>RangeImpl</name>)
                                                <call>
                                                    <name><name>ranges</name>.
                                                        <name>elementAt</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                ).
                                                <call>
                                                    <name>receiveDeletedText</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>node</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>offset</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>count</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </for>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * A method to be called when some text was inserted into a text node,
                * so that live objects can be notified.
                */
            </comment>
            <function>
                <type>
                    <name>void</name>
                </type>
                <name>insertedText</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>NodeImpl</name>
                            </type>
                            <name>node</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>offset</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>count</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// notify ranges</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>ranges</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>size</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>ranges</name>.
                                                        <name>size</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <for>for (
                                    <init>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>i</name> =
                                            <init>
                                                <expr>0</expr>
                                            </init>
                                        </decl>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            !=
                                            <name>size</name>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr><name>i</name>++
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <expr_stmt>
                                            <expr>((<name>RangeImpl</name>)
                                                <call>
                                                    <name><name>ranges</name>.
                                                        <name>elementAt</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                ).
                                                <call>
                                                    <name>receiveInsertedText</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>node</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>offset</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>count</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </for>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * A method to be called when a text node has been split,
                * so that live objects can be notified.
                */
            </comment>
            <function>
                <type>
                    <name>void</name>
                </type>
                <name>splitData</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>node</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>newNode</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>offset</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// notify ranges</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>ranges</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>size</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>ranges</name>.
                                                        <name>size</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <for>for (
                                    <init>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>i</name> =
                                            <init>
                                                <expr>0</expr>
                                            </init>
                                        </decl>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            !=
                                            <name>size</name>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr><name>i</name>++
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <expr_stmt>
                                            <expr>((<name>RangeImpl</name>)
                                                <call>
                                                    <name><name>ranges</name>.
                                                        <name>elementAt</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                ).
                                                <call>
                                                    <name>receiveSplitData</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>node</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>newNode</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>offset</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </for>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="line">//</comment>
            <comment type="line">// DocumentEvent methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * Introduced in DOM Level 2. Optional. &lt;p&gt;
                * Create and return Event objects.
                *
                * @param type The eventType parameter specifies the type of Event
                * interface to be created. If the Event interface specified is supported
                * by the implementation this method will return a new Event of the
                * interface type requested. If the Event is to be dispatched via the
                * dispatchEvent method the appropriate event init method must be called
                * after creation in order to initialize the Event's values. As an
                * example, a user wishing to synthesize some kind of Event would call
                * createEvent with the parameter "Events". The initEvent method could then
                * be called on the newly created Event to set the specific type of Event
                * to be dispatched and set its context information.
                * @return Newly created Event
                * @exception DOMException NOT_SUPPORTED_ERR: Raised if the implementation
                * does not support the type of Event interface requested
                * @since WD-DOM-Level-2-19990923
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Event</name>
                </type>
                <name>createEvent</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>DOMException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>type</name>.
                                        <name>equalsIgnoreCase</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>"Events"</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                || "Event".
                                <call>
                                    <name>equals</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>type</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>new
                                    <call>
                                        <name>EventImpl</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>type</name>.
                                        <name>equalsIgnoreCase</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>"MutationEvents"</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                ||
                                "MutationEvent".
                                <call>
                                    <name>equals</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>type</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>new
                                    <call>
                                        <name>MutationEventImpl</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                        </then>
                        <else>else
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                        </type>
                                        <name>msg</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>formatMessage</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>DOMMessageFormatter</name>.
                                                                    <name>DOM_DOMAIN</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>"NOT_SUPPORTED_ERR"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>null</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>DOMException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>DOMException</name>.
                                                            <name>NOT_SUPPORTED_ERR</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>msg</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets whether the DOM implementation generates mutation events
                * upon operations.
                */
            </comment>
            <function>
                <type>
                    <name>void</name>
                </type>
                <name>setMutationEvents</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>set</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>mutationEvents</name>
                            =
                            <name>set</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns true if the DOM implementation generates mutation events.
                */
            </comment>
            <function>
                <type>
                    <name>boolean</name>
                </type>
                <name>getMutationEvents</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>mutationEvents</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Store event listener registered on a given node
                * This is another place where we could use weak references! Indeed, the
                * node here won't be GC'ed as long as some listener is registered on it,
                * since the eventsListeners table will have a reference to the node.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>setEventListeners</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>NodeImpl</name>
                            </type>
                            <name>n</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Vector</name>
                            </type>
                            <name>listeners</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>eventListeners</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>eventListeners</name>
                                        = new
                                        <call>
                                            <name>Hashtable</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>listeners</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>eventListeners</name>.
                                                <name>remove</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>n</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>eventListeners</name>.
                                                    <name>isEmpty</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <comment type="line">// stop firing events when there isn't any listener
                                            </comment>
                                            <expr_stmt>
                                                <expr>
                                                    <name>mutationEvents</name>
                                                    = false
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>eventListeners</name>.
                                                <name>put</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>n</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>listeners</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <comment type="line">// turn mutation events on</comment>
                                <expr_stmt>
                                    <expr>
                                        <name>mutationEvents</name>
                                        = true
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Retreive event listener registered on a given node
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>Vector</name>
                </type>
                <name>getEventListeners</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>NodeImpl</name>
                            </type>
                            <name>n</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>eventListeners</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>(<name>Vector</name>)
                            <call>
                                <name><name>eventListeners</name>.
                                    <name>get</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>n</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">//</comment>
            <comment type="line">// EventTarget support (public and internal)</comment>
            <comment type="line">//</comment>

            <comment type="line">//</comment>
            <comment type="line">// Constants</comment>
            <comment type="line">//</comment>

            <comment type="block">/*
                * NON-DOM INTERNAL: Class LEntry is just a struct used to represent
                * event listeners registered with this node. Copies of this object
                * are hung from the nodeListeners Vector.
                * &lt;p&gt;
                * I considered using two vectors -- one for capture,
                * one for bubble -- but decided that since the list of listeners
                * is probably short in most cases, it might not be worth spending
                * the space. ***** REVISIT WHEN WE HAVE MORE EXPERIENCE.
                */
            </comment>
            <class>class <name>LEntry</name>
                <super>
                    <implements>implements
                        <name>Serializable</name>
                    </implements>
                </super>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>long</name>
                            </type>
                            <name>serialVersionUID</name> =
                            <init>
                                <expr>3258416144514626360L</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>type</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>EventListener</name>
                            </type>
                            <name>listener</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>useCapture</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="javadoc">/** NON-DOM INTERNAL: Constructor for Listener list Entry
                        * @param type Event name (NOT event group!) to listen for.
                        * @param listener Who gets called when event is dispatched
                        * @param useCaptue True iff listener is registered on
                        * capturing phase rather than at-target or bubbling
                        */
                    </comment>
                    <constructor>
                        <name>LEntry</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>type</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>EventListener</name>
                                    </type>
                                    <name>listener</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>boolean</name>
                                    </type>
                                    <name>useCapture</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>type</name>
                                    </name>
                                    =
                                    <name>type</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>listener</name>
                                    </name>
                                    =
                                    <name>listener</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>useCapture</name>
                                    </name>
                                    =
                                    <name>useCapture</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>

                    }
                </block>
            </class>
            <comment type="line">// LEntry</comment>

            <comment type="javadoc">/**
                * Introduced in DOM Level 2. &lt;p&gt; Register an event listener with this
                * Node. A listener may be independently registered as both Capturing and
                * Bubbling, but may only be registered once per role; redundant
                * registrations are ignored.
                * @param node node to add listener to
                * @param type Event name (NOT event group!) to listen for.
                * @param listener Who gets called when event is dispatched
                * @param useCapture True iff listener is registered on
                * capturing phase rather than at-target or bubbling
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>addEventListener</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>NodeImpl</name>
                            </type>
                            <name>node</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>EventListener</name>
                            </type>
                            <name>listener</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>useCapture</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// We can't dispatch to blank type-name, and of course we need</comment>
                    <comment type="line">// a listener to dispatch to</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>type</name>
                                == <name>null</name> ||
                                <call>
                                    <name><name>type</name>.
                                        <name>equals</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>""</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                || <name>listener</name> ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return;</return>
                        </then>
                    </if>

                    <comment type="line">// Each listener may be registered only once per type per phase.</comment>
                    <comment type="line">// Simplest way to code that is to zap the previous entry, if any.</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>removeEventListener</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>node</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>type</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>listener</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>useCapture</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Vector</name>
                            </type>
                            <name>nodeListeners</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getEventListeners</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>node</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>nodeListeners</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>nodeListeners</name>
                                        = new
                                        <call>
                                            <name>Vector</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>setEventListeners</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>node</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>nodeListeners</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>nodeListeners</name>.
                                    <name>addElement</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>new
                                            <call>
                                                <name>LEntry</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>type</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>listener</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>useCapture</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// Record active listener</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>LCount</name>
                            </type>
                            <name>lc</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>LCount</name>.
                                            <name>lookup</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>type</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>useCapture</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>++
                                        <name><name>lc</name>.
                                            <name>captures</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>++
                                        <name><name>lc</name>.
                                            <name>total</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>++
                                        <name><name>lc</name>.
                                            <name>bubbles</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>++
                                        <name><name>lc</name>.
                                            <name>total</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// addEventListener(NodeImpl,String,EventListener,boolean) :void</comment>

            <comment type="javadoc">/**
                * Introduced in DOM Level 2. &lt;p&gt; Deregister an event listener previously
                * registered with this Node. A listener must be independently removed
                * from the Capturing and Bubbling roles. Redundant removals (of listeners
                * not currently registered for this role) are ignored.
                * @param node node to remove listener from
                * @param type Event name (NOT event group!) to listen for.
                * @param listener Who gets called when event is dispatched
                * @param useCapture True iff listener is registered on
                * capturing phase rather than at-target or bubbling
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>removeEventListener</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>NodeImpl</name>
                            </type>
                            <name>node</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>EventListener</name>
                            </type>
                            <name>listener</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>useCapture</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// If this couldn't be a valid listener registration, ignore request</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>type</name>
                                == <name>null</name> ||
                                <call>
                                    <name><name>type</name>.
                                        <name>equals</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>""</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                || <name>listener</name> ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return;</return>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Vector</name>
                            </type>
                            <name>nodeListeners</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getEventListeners</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>node</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>nodeListeners</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return;</return>
                        </then>
                    </if>

                    <comment type="line">// Note that addListener has previously ensured that</comment>
                    <comment type="line">// each listener may be registered only once per type per phase.</comment>
                    <comment type="line">// count-down is OK for deletions!</comment>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>
                                        <call>
                                            <name><name>nodeListeners</name>.
                                                <name>size</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        - 1
                                    </expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &gt;= 0
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr>--
                                <name>i</name>
                            </expr>
                        </incr>
                        )
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>LEntry</name>
                                    </type>
                                    <name>le</name> =
                                    <init>
                                        <expr>(<name>LEntry</name>)
                                            <call>
                                                <name><name>nodeListeners</name>.
                                                    <name>elementAt</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name><name>le</name>.
                                            <name>useCapture</name>
                                        </name>
                                        == <name>useCapture</name> &amp;&amp;
                                        <name><name>le</name>.
                                            <name>listener</name>
                                        </name>
                                        == <name>listener</name> &amp;&amp;
                                        <call>
                                            <name><name>le</name>.<name>type</name>.
                                                <name>equals</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>type</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>nodeListeners</name>.
                                                        <name>removeElementAt</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <comment type="line">// Storage management: Discard empty listener lists
                                        </comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>nodeListeners</name>.
                                                            <name>size</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    == 0
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>setEventListeners</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>node</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>null</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                            </then>
                                        </if>

                                        <comment type="line">// Remove active listener</comment>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>LCount</name>
                                                </type>
                                                <name>lc</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>LCount</name>.
                                                                <name>lookup</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>type</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>useCapture</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>--
                                                            <name><name>lc</name>.
                                                                <name>captures</name>
                                                            </name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>--
                                                            <name><name>lc</name>.
                                                                <name>total</name>
                                                            </name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>--
                                                            <name><name>lc</name>.
                                                                <name>bubbles</name>
                                                            </name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>--
                                                            <name><name>lc</name>.
                                                                <name>total</name>
                                                            </name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </else>
                                        </if>

                                        <break>break;</break>
                                        <comment type="line">// Found it; no need to loop farther.</comment>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    }
                </block>
            </function>
            <comment type="line">// removeEventListener(NodeImpl,String,EventListener,boolean) :void</comment>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>copyEventListeners</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>NodeImpl</name>
                            </type>
                            <name>src</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>NodeImpl</name>
                            </type>
                            <name>tgt</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Vector</name>
                            </type>
                            <name>nodeListeners</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getEventListeners</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>src</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>nodeListeners</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setEventListeners</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>tgt</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>(<name>Vector</name>)
                                            <call>
                                                <name><name>nodeListeners</name>.
                                                    <name>clone</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Introduced in DOM Level 2. &lt;p&gt;
                * Distribution engine for DOM Level 2 Events.
                * &lt;p&gt;
                * Event propagation runs as follows:
                * &lt;ol&gt;
                * &lt;li&gt;Event is dispatched to a particular target node, which invokes
                * this code. Note that the event's stopPropagation flag is
                * cleared when dispatch begins; thereafter, if it has
                * been set before processing of a node commences, we instead
                * immediately advance to the DEFAULT phase.
                * &lt;li&gt;The node's ancestors are established as destinations for events.
                * For capture and bubble purposes, node ancestry is determined at
                * the time dispatch starts. If an event handler alters the document
                * tree, that does not change which nodes will be informed of the event.
                * &lt;li&gt;CAPTURING_PHASE: Ancestors are scanned, root to target, for
                * Capturing listeners. If found, they are invoked (see below).
                * &lt;li&gt;AT_TARGET:
                * Event is dispatched to NON-CAPTURING listeners on the
                * target node. Note that capturing listeners on this node are _not_
                * invoked.
                * &lt;li&gt;BUBBLING_PHASE: Ancestors are scanned, target to root, for
                * non-capturing listeners.
                * &lt;li&gt;Default processing: Some DOMs have default behaviors bound to
                * specific nodes. If this DOM does, and if the event's preventDefault
                * flag has not been set, we now return to the target node and process
                * its default handler for this event, if any.
                * &lt;/ol&gt;
                * &lt;p&gt;
                * Note that registration of handlers during processing of an event does
                * not take effect during this phase of this event; they will not be called
                * until the next time this node is visited by dispatchEvent. On the other
                * hand, removals take effect immediately.
                * &lt;p&gt;
                * If an event handler itself causes events to be dispatched, they are
                * processed synchronously, before processing resumes
                * on the event which triggered them. Please be aware that this may
                * result in events arriving at listeners "out of order" relative
                * to the actual sequence of requests.
                * &lt;p&gt;
                * Note that our implementation resets the event's stop/prevent flags
                * when dispatch begins.
                * I believe the DOM's intent is that event objects be redispatchable,
                * though it isn't stated in those terms.
                * @param node node to dispatch to
                * @param event the event object to be dispatched to
                * registered EventListeners
                * @return true if the event's &lt;code&gt;preventDefault()&lt;/code&gt;
                * method was invoked by an EventListener; otherwise false.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>boolean</name>
                </type>
                <name>dispatchEvent</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>NodeImpl</name>
                            </type>
                            <name>node</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Event</name>
                            </type>
                            <name>event</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>event</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return <expr>false</expr>;
                            </return>
                        </then>
                    </if>

                    <comment type="line">// Can't use anyone else's implementation, since there's no public</comment>
                    <comment type="line">// API for setting the event's processing-state fields.</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>EventImpl</name>
                            </type>
                            <name>evt</name> =
                            <init>
                                <expr>(<name>EventImpl</name>)
                                    <name>event</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// VALIDATE -- must have been initialized at least once, must have</comment>
                    <comment type="line">// a non-null non-blank name.</comment>
                    <if>if
                        <condition>(
                            <expr>!
                                <name><name>evt</name>.
                                    <name>initialized</name>
                                </name>
                                ||
                                <name><name>evt</name>.
                                    <name>type</name>
                                </name>
                                == <name>null</name> ||
                                <call>
                                    <name><name>evt</name>.<name>type</name>.
                                        <name>equals</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>""</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                        </type>
                                        <name>msg</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>DOMMessageFormatter</name>.
                                                        <name>formatMessage</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>DOMMessageFormatter</name>.
                                                                    <name>DOM_DOMAIN</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>"UNSPECIFIED_EVENT_TYPE_ERR"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>null</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>EventException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>EventException</name>.
                                                            <name>UNSPECIFIED_EVENT_TYPE_ERR</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>msg</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// If nobody is listening for this event, discard immediately</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>LCount</name>
                            </type>
                            <name>lc</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>LCount</name>.
                                            <name>lookup</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>evt</name>.
                                                            <name>getType</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>lc</name>.
                                    <name>total</name>
                                </name>
                                == 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <name><name>evt</name>.
                                        <name>preventDefault</name>
                                    </name>
                                </expr>
                                ;
                            </return>
                        </then>
                    </if>

                    <comment type="line">// INITIALIZE THE EVENT'S DISPATCH STATUS</comment>
                    <comment type="line">// (Note that Event objects are reusable in our implementation;</comment>
                    <comment type="line">// that doesn't seem to be explicitly guaranteed in the DOM, but</comment>
                    <comment type="line">// I believe it is the intent.)</comment>
                    <expr_stmt>
                        <expr>
                            <name><name>evt</name>.
                                <name>target</name>
                            </name>
                            =
                            <name>node</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>evt</name>.
                                <name>stopPropagation</name>
                            </name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>evt</name>.
                                <name>preventDefault</name>
                            </name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// Capture pre-event parentage chain, not including target;</comment>
                    <comment type="line">// use pre-event-dispatch ancestors even if event handlers mutate</comment>
                    <comment type="line">// document and change the target's context.</comment>
                    <comment type="line">// Note that this is parents ONLY; events do not</comment>
                    <comment type="line">// cross the Attr/Element "blood/brain barrier".</comment>
                    <comment type="line">// DOMAttrModified. which looks like an exception,</comment>
                    <comment type="line">// is issued to the Element rather than the Attr</comment>
                    <comment type="line">// and causes a _second_ DOMSubtreeModified in the Element's</comment>
                    <comment type="line">// tree.</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Vector</name>
                            </type>
                            <name>pv</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>Vector</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>10</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>10</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>p</name> =
                            <init>
                                <expr>
                                    <name>node</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>n</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>p</name>.
                                            <name>getParentNode</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <while>while
                        <condition>(
                            <expr>
                                <name>n</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>pv</name>.
                                            <name>addElement</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>n</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>p</name>
                                    =
                                    <name>n</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>n</name>
                                    =
                                    <call>
                                        <name><name>n</name>.
                                            <name>getParentNode</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </while>

                    <comment type="line">// CAPTURING_PHASE:</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>lc</name>.
                                    <name>captures</name>
                                </name>
                                &gt; 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>evt</name>.
                                            <name>eventPhase</name>
                                        </name>
                                        =
                                        <name><name>Event</name>.
                                            <name>CAPTURING_PHASE</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <comment type="line">// Ancestors are scanned, root to target, for</comment>
                                <comment type="line">// Capturing listeners.</comment>
                                <for>for (
                                    <init>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>j</name> =
                                            <init>
                                                <expr>
                                                    <call>
                                                        <name><name>pv</name>.
                                                            <name>size</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    - 1
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>j</name>
                                            &gt;= 0
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr>--
                                            <name>j</name>
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name><name>evt</name>.
                                                        <name>stopPropagation</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <break>break;</break>
                                            </then>
                                        </if>
                                        <comment type="line">// Someone set the flag. Phase ends.</comment>

                                        <comment type="line">// Handle all capturing listeners on this node</comment>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>NodeImpl</name>
                                                </type>
                                                <name>nn</name> =
                                                <init>
                                                    <expr>(<name>NodeImpl</name>)
                                                        <call>
                                                            <name><name>pv</name>.
                                                                <name>elementAt</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>j</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>evt</name>.
                                                    <name>currentTarget</name>
                                                </name>
                                                =
                                                <name>nn</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>Vector</name>
                                                </type>
                                                <name>nodeListeners</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name>getEventListeners</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>nn</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>nodeListeners</name>
                                                    !=
                                                    <name>null</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>Vector</name>
                                                            </type>
                                                            <name>nl</name> =
                                                            <init>
                                                                <expr>(<name>Vector</name>)
                                                                    <call>
                                                                        <name><name>nodeListeners</name>.
                                                                            <name>clone</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <comment type="line">// call listeners in the order in which they
                                                        got registered
                                                    </comment>
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>int</name>
                                                            </type>
                                                            <name>nlsize</name> =
                                                            <init>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>nl</name>.
                                                                            <name>size</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <for>for (
                                                        <init>
                                                            <decl>
                                                                <type>
                                                                    <name>int</name>
                                                                </type>
                                                                <name>i</name> =
                                                                <init>
                                                                    <expr>0</expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </init>
                                                        <condition>
                                                            <expr>
                                                                <name>i</name>
                                                                &lt;
                                                                <name>nlsize</name>
                                                            </expr>
                                                            ;
                                                        </condition>
                                                        <incr>
                                                            <expr><name>i</name>++
                                                            </expr>
                                                        </incr>
                                                        )
                                                        <block>{
                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <name>LEntry</name>
                                                                    </type>
                                                                    <name>le</name> =
                                                                    <init>
                                                                        <expr>(<name>LEntry</name>)
                                                                            <call>
                                                                                <name><name>nl</name>.
                                                                                    <name>elementAt</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>i</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name><name>le</name>.
                                                                            <name>useCapture</name>
                                                                        </name>
                                                                        &amp;&amp;
                                                                        <call>
                                                                            <name><name>le</name>.<name>type</name>.
                                                                                <name>equals</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name><name>evt</name>.
                                                                                            <name>type</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                        &amp;&amp;
                                                                        <call>
                                                                            <name><name>nodeListeners</name>.
                                                                                <name>contains</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>le</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <try>try
                                                                            <block>{
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>le</name>.<name>
                                                                                                listener</name>.
                                                                                                <name>handleEvent</name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>evt</name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                }
                                                                            </block>
                                                                            <catch>catch (
                                                                                <param>
                                                                                    <decl>
                                                                                        <type>
                                                                                            <name>Exception</name>
                                                                                        </type>
                                                                                        <name>e</name>
                                                                                    </decl>
                                                                                </param>
                                                                                )
                                                                                <block>{
                                                                                    <comment type="line">// All
                                                                                        exceptions are ignored.
                                                                                    </comment>
                                                                                    }
                                                                                </block>
                                                                            </catch>
                                                                        </try>
                                                                        }
                                                                    </block>
                                                                </then>
                                                            </if>
                                                            }
                                                        </block>
                                                    </for>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </for>
                                }
                            </block>
                        </then>
                    </if>


                    <comment type="line">// Both AT_TARGET and BUBBLE use non-capturing listeners.</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>lc</name>.
                                    <name>bubbles</name>
                                </name>
                                &gt; 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// AT_TARGET PHASE: Event is dispatched to NON-CAPTURING
                                    listeners
                                </comment>
                                <comment type="line">// on the target node. Note that capturing listeners on the
                                    target
                                </comment>
                                <comment type="line">// node are _not_ invoked, even during the capture phase.</comment>
                                <expr_stmt>
                                    <expr>
                                        <name><name>evt</name>.
                                            <name>eventPhase</name>
                                        </name>
                                        =
                                        <name><name>Event</name>.
                                            <name>AT_TARGET</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>evt</name>.
                                            <name>currentTarget</name>
                                        </name>
                                        =
                                        <name>node</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Vector</name>
                                        </type>
                                        <name>nodeListeners</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name>getEventListeners</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>node</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>!
                                            <name><name>evt</name>.
                                                <name>stopPropagation</name>
                                            </name>
                                            &amp;&amp; <name>nodeListeners</name> !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>Vector</name>
                                                    </type>
                                                    <name>nl</name> =
                                                    <init>
                                                        <expr>(<name>Vector</name>)
                                                            <call>
                                                                <name><name>nodeListeners</name>.
                                                                    <name>clone</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <comment type="line">// call listeners in the order in which they got
                                                registered
                                            </comment>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>int</name>
                                                    </type>
                                                    <name>nlsize</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name><name>nl</name>.
                                                                    <name>size</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <for>for (
                                                <init>
                                                    <decl>
                                                        <type>
                                                            <name>int</name>
                                                        </type>
                                                        <name>i</name> =
                                                        <init>
                                                            <expr>0</expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </init>
                                                <condition>
                                                    <expr>
                                                        <name>i</name>
                                                        &lt;
                                                        <name>nlsize</name>
                                                    </expr>
                                                    ;
                                                </condition>
                                                <incr>
                                                    <expr><name>i</name>++
                                                    </expr>
                                                </incr>
                                                )
                                                <block>{
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>LEntry</name>
                                                            </type>
                                                            <name>le</name> =
                                                            <init>
                                                                <expr>(<name>LEntry</name>)
                                                                    <call>
                                                                        <name><name>nl</name>.
                                                                            <name>elementAt</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>i</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <if>if
                                                        <condition>(
                                                            <expr>!
                                                                <name><name>le</name>.
                                                                    <name>useCapture</name>
                                                                </name>
                                                                &amp;&amp;
                                                                <call>
                                                                    <name><name>le</name>.<name>type</name>.
                                                                        <name>equals</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>evt</name>.
                                                                                    <name>type</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                                &amp;&amp;
                                                                <call>
                                                                    <name><name>nodeListeners</name>.
                                                                        <name>contains</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>le</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <try>try
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>le</name>.<name>
                                                                                        listener</name>.
                                                                                        <name>handleEvent</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>evt</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                    <catch>catch (
                                                                        <param>
                                                                            <decl>
                                                                                <type>
                                                                                    <name>Exception</name>
                                                                                </type>
                                                                                <name>e</name>
                                                                            </decl>
                                                                        </param>
                                                                        )
                                                                        <block>{
                                                                            <comment type="line">// All exceptions are
                                                                                ignored.
                                                                            </comment>
                                                                            }
                                                                        </block>
                                                                    </catch>
                                                                </try>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    }
                                                </block>
                                            </for>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <comment type="line">// BUBBLING_PHASE: Ancestors are scanned, target to root, for
                                </comment>
                                <comment type="line">// non-capturing listeners. If the event's preventBubbling flag
                                </comment>
                                <comment type="line">// has been set before processing of a node commences, we</comment>
                                <comment type="line">// instead immediately advance to the default phase.</comment>
                                <comment type="line">// Note that not all events bubble.</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>evt</name>.
                                                <name>bubbles</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name><name>evt</name>.
                                                        <name>eventPhase</name>
                                                    </name>
                                                    =
                                                    <name><name>Event</name>.
                                                        <name>BUBBLING_PHASE</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>int</name>
                                                    </type>
                                                    <name>pvsize</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name><name>pv</name>.
                                                                    <name>size</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <for>for (
                                                <init>
                                                    <decl>
                                                        <type>
                                                            <name>int</name>
                                                        </type>
                                                        <name>j</name> =
                                                        <init>
                                                            <expr>0</expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </init>
                                                <condition>
                                                    <expr>
                                                        <name>j</name>
                                                        &lt;
                                                        <name>pvsize</name>
                                                    </expr>
                                                    ;
                                                </condition>
                                                <incr>
                                                    <expr><name>j</name>++
                                                    </expr>
                                                </incr>
                                                )
                                                <block>{
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name><name>evt</name>.
                                                                    <name>stopPropagation</name>
                                                                </name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <break>break;</break>
                                                        </then>
                                                    </if>
                                                    <comment type="line">// Someone set the flag. Phase ends.</comment>

                                                    <comment type="line">// Handle all bubbling listeners on this node
                                                    </comment>
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>NodeImpl</name>
                                                            </type>
                                                            <name>nn</name> =
                                                            <init>
                                                                <expr>(<name>NodeImpl</name>)
                                                                    <call>
                                                                        <name><name>pv</name>.
                                                                            <name>elementAt</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>j</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name><name>evt</name>.
                                                                <name>currentTarget</name>
                                                            </name>
                                                            =
                                                            <name>nn</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>nodeListeners</name>
                                                            =
                                                            <call>
                                                                <name>getEventListeners</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>nn</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>nodeListeners</name>
                                                                !=
                                                                <name>null</name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <decl_stmt>
                                                                    <decl>
                                                                        <type>
                                                                            <name>Vector</name>
                                                                        </type>
                                                                        <name>nl</name> =
                                                                        <init>
                                                                            <expr>(<name>Vector</name>)
                                                                                <call>
                                                                                    <name><name>nodeListeners</name>.
                                                                                        <name>clone</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </init>
                                                                    </decl>
                                                                    ;
                                                                </decl_stmt>
                                                                <comment type="line">// call listeners in the order in
                                                                    which they got
                                                                </comment>
                                                                <comment type="line">// registered</comment>
                                                                <decl_stmt>
                                                                    <decl>
                                                                        <type>
                                                                            <name>int</name>
                                                                        </type>
                                                                        <name>nlsize</name> =
                                                                        <init>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>nl</name>.
                                                                                        <name>size</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </init>
                                                                    </decl>
                                                                    ;
                                                                </decl_stmt>
                                                                <for>for (
                                                                    <init>
                                                                        <decl>
                                                                            <type>
                                                                                <name>int</name>
                                                                            </type>
                                                                            <name>i</name> =
                                                                            <init>
                                                                                <expr>0</expr>
                                                                            </init>
                                                                        </decl>
                                                                        ;
                                                                    </init>
                                                                    <condition>
                                                                        <expr>
                                                                            <name>i</name>
                                                                            &lt;
                                                                            <name>nlsize</name>
                                                                        </expr>
                                                                        ;
                                                                    </condition>
                                                                    <incr>
                                                                        <expr><name>i</name>++
                                                                        </expr>
                                                                    </incr>
                                                                    )
                                                                    <block>{
                                                                        <decl_stmt>
                                                                            <decl>
                                                                                <type>
                                                                                    <name>LEntry</name>
                                                                                </type>
                                                                                <name>le</name> =
                                                                                <init>
                                                                                    <expr>(<name>LEntry</name>)
                                                                                        <call>
                                                                                            <name><name>nl</name>.
                                                                                                <name>elementAt</name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>i</name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                </init>
                                                                            </decl>
                                                                            ;
                                                                        </decl_stmt>
                                                                        <if>if
                                                                            <condition>(
                                                                                <expr>!
                                                                                    <name><name>le</name>.
                                                                                        <name>useCapture</name>
                                                                                    </name>
                                                                                    &amp;&amp;
                                                                                    <call>
                                                                                        <name><name>le</name>.<name>
                                                                                            type</name>.
                                                                                            <name>equals</name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name><name>
                                                                                                        evt</name>.
                                                                                                        <name>type
                                                                                                        </name>
                                                                                                    </name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                    &amp;&amp;
                                                                                    <call>
                                                                                        <name><name>nodeListeners</name>
                                                                                            .
                                                                                            <name>contains</name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>le</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                )
                                                                            </condition>
                                                                            <then>
                                                                                <block>{
                                                                                    <try>try
                                                                                        <block>{
                                                                                            <expr_stmt>
                                                                                                <expr>
                                                                                                    <call>
                                                                                                        <name><name>
                                                                                                            le</name>
                                                                                                            .<name>
                                                                                                                listener</name>.
                                                                                                            <name>
                                                                                                                handleEvent
                                                                                                            </name>
                                                                                                        </name>
                                                                                                        <argument_list>(
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        evt
                                                                                                                    </name>
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            )
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                                ;
                                                                                            </expr_stmt>
                                                                                            }
                                                                                        </block>
                                                                                        <catch>catch (
                                                                                            <param>
                                                                                                <decl>
                                                                                                    <type>
                                                                                                        <name>
                                                                                                            Exception
                                                                                                        </name>
                                                                                                    </type>
                                                                                                    <name>e</name>
                                                                                                </decl>
                                                                                            </param>
                                                                                            )
                                                                                            <block>{
                                                                                                <comment type="line">//
                                                                                                    All exceptions are
                                                                                                    ignored.
                                                                                                </comment>
                                                                                                }
                                                                                            </block>
                                                                                        </catch>
                                                                                    </try>
                                                                                    }
                                                                                </block>
                                                                            </then>
                                                                        </if>
                                                                        }
                                                                    </block>
                                                                </for>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    }
                                                </block>
                                            </for>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// DEFAULT PHASE: Some DOMs have default behaviors bound to specific</comment>
                    <comment type="line">// nodes. If this DOM does, and if the event's preventDefault flag has
                    </comment>
                    <comment type="line">// not been set, we now return to the target node and process its</comment>
                    <comment type="line">// default handler for this event, if any.</comment>
                    <comment type="line">// No specific phase value defined, since this is DOM-internal</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>lc</name>.
                                    <name>defaults</name>
                                </name>
                                &gt; 0 &amp;&amp; (!
                                <name><name>evt</name>.
                                    <name>cancelable</name>
                                </name>
                                || !
                                <name><name>evt</name>.
                                    <name>preventDefault</name>
                                </name>
                                )
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// evt.eventPhase = Event.DEFAULT_PHASE;</comment>
                                <comment type="line">// evt.currentTarget = node;</comment>
                                <comment type="line">// DO_DEFAULT_OPERATION</comment>
                                }
                            </block>
                        </then>
                    </if>

                    <return>return
                        <expr>
                            <name><name>evt</name>.
                                <name>preventDefault</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// dispatchEvent(NodeImpl,Event) :boolean</comment>

            <comment type="javadoc">/**
                * NON-DOM INTERNAL: DOMNodeInsertedIntoDocument and ...RemovedFrom...
                * are dispatched to an entire subtree. This is the distribution code
                * therefor. They DO NOT bubble, thanks be, but may be captured.
                * &lt;p&gt;
                * Similar to code in dispatchingEventToSubtree however this method
                * is only used on the target node and does not start a dispatching chain
                * on the sibling of the target node as this is not part of the subtree
                * ***** At the moment I'm being sloppy and using the normal
                * capture dispatcher on every node. This could be optimized hugely
                * by writing a capture engine that tracks our position in the tree to
                * update the capture chain without repeated chases up to root.
                * @param n target node (that was directly inserted or removed)
                * @param e event to be sent to that node and its subtree
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>dispatchEventToSubtree</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>n</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Event</name>
                            </type>
                            <name>e</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <expr_stmt>
                        <expr>((<name>NodeImpl</name>) <name>n</name>).
                            <call>
                                <name>dispatchEvent</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>e</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>n</name>.
                                        <name>getNodeType</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                ==
                                <name><name>Node</name>.
                                    <name>ELEMENT_NODE</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>NamedNodeMap</name>
                                        </type>
                                        <name>a</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>n</name>.
                                                        <name>getAttributes</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <for>for (
                                    <init>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>i</name> =
                                            <init>
                                                <expr>
                                                    <call>
                                                        <name><name>a</name>.
                                                            <name>getLength</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    - 1
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            &gt;= 0
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr>--
                                            <name>i</name>
                                        </expr>
                                    </incr>
                                    )
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name>dispatchingEventToSubtree</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>a</name>.
                                                                    <name>item</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>i</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>e</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                </for>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>dispatchingEventToSubtree</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>n</name>.
                                                    <name>getFirstChild</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>e</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </function>
            <comment type="line">// dispatchEventToSubtree(NodeImpl,Node,Event) :void</comment>


            <comment type="javadoc">/**
                * Dispatches event to the target node's descendents recursively
                *
                * @param n node to dispatch to
                * @param e event to be sent to that node and its subtree
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>dispatchingEventToSubtree</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>n</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Event</name>
                            </type>
                            <name>e</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr><name>n</name>==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return;</return>
                        </then>
                    </if>

                    <comment type="line">// ***** Recursive implementation. This is excessively expensive,</comment>
                    <comment type="line">// and should be replaced in conjunction with optimization</comment>
                    <comment type="line">// mentioned above.</comment>
                    <expr_stmt>
                        <expr>((<name>NodeImpl</name>) <name>n</name>).
                            <call>
                                <name>dispatchEvent</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>e</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>n</name>.
                                        <name>getNodeType</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                ==
                                <name><name>Node</name>.
                                    <name>ELEMENT_NODE</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>NamedNodeMap</name>
                                        </type>
                                        <name>a</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>n</name>.
                                                        <name>getAttributes</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <for>for (
                                    <init>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>i</name> =
                                            <init>
                                                <expr>
                                                    <call>
                                                        <name><name>a</name>.
                                                            <name>getLength</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    - 1
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            &gt;= 0
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr>--
                                            <name>i</name>
                                        </expr>
                                    </incr>
                                    )
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name>dispatchingEventToSubtree</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>a</name>.
                                                                    <name>item</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>i</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>e</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                </for>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>dispatchingEventToSubtree</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>n</name>.
                                                    <name>getFirstChild</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>e</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>dispatchingEventToSubtree</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>n</name>.
                                                    <name>getNextSibling</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>e</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * NON-DOM INTERNAL: Return object for getEnclosingAttr. Carries
                * (two values, the Attr node affected (if any) and its previous
                * string value. Simple struct, no methods.
                */
            </comment>
            <class>class <name>EnclosingAttr</name>
                <super>
                    <implements>implements
                        <name>Serializable</name>
                    </implements>
                </super>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>long</name>
                            </type>
                            <name>serialVersionUID</name> =
                            <init>
                                <expr>3257001077260759859L</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>AttrImpl</name>
                            </type>
                            <name>node</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>oldvalue</name>
                        </decl>
                        ;
                    </decl_stmt>
                    }
                </block>
            </class>

            <decl_stmt>
                <decl>
                    <type>
                        <name>EnclosingAttr</name>
                    </type>
                    <name>savedEnclosingAttr</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * NON-DOM INTERNAL: Convenience wrapper for calling
                * dispatchAggregateEvents when the context was established
                * by &lt;code&gt;savedEnclosingAttr&lt;/code&gt;.
                * @param node node to dispatch to
                * @param ea description of Attr affected by current operation
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>dispatchAggregateEvents</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>NodeImpl</name>
                            </type>
                            <name>node</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>EnclosingAttr</name>
                            </type>
                            <name>ea</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>ea</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>dispatchAggregateEvents</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>node</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>ea</name>.
                                                        <name>node</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>ea</name>.
                                                        <name>oldvalue</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>MutationEvent</name>.
                                                        <name>MODIFICATION</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                        <else>else
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>dispatchAggregateEvents</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>node</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>(<name>short</name>) 0
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </else>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// dispatchAggregateEvents(NodeImpl,EnclosingAttr) :void</comment>

            <comment type="javadoc">/**
                * NON-DOM INTERNAL: Generate the "aggregated" post-mutation events
                * DOMAttrModified and DOMSubtreeModified.
                * Both of these should be issued only once for each user-requested
                * mutation operation, even if that involves multiple changes to
                * the DOM.
                * For example, if a DOM operation makes multiple changes to a single
                * Attr before returning, it would be nice to generate only one
                * DOMAttrModified, and multiple changes over larger scope but within
                * a recognizable single subtree might want to generate only one
                * DOMSubtreeModified, sent to their lowest common ancestor.
                * &lt;p&gt;
                * To manage this, use the "internal" versions of insert and remove
                * with MUTATION_LOCAL, then make an explicit call to this routine
                * at the higher level. Some examples now exist in our code.
                *
                * @param node The node to dispatch to
                * @param enclosingAttr The Attr node (if any) whose value has been changed
                * as a result of the DOM operation. Null if none such.
                * @param oldValue The String value previously held by the
                * enclosingAttr. Ignored if none such.
                * @param change Type of modification to the attr. See
                * MutationEvent.attrChange
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>dispatchAggregateEvents</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>NodeImpl</name>
                            </type>
                            <name>node</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>AttrImpl</name>
                            </type>
                            <name>enclosingAttr</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>oldvalue</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>change</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// We have to send DOMAttrModified.</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>NodeImpl</name>
                            </type>
                            <name>owner</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>enclosingAttr</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>LCount</name>
                                        </type>
                                        <name>lc</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>LCount</name>.
                                                        <name>lookup</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>MutationEventImpl</name>.
                                                                    <name>DOM_ATTR_MODIFIED</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>owner</name>
                                        = (<name>NodeImpl</name>)
                                        <call>
                                            <name><name>enclosingAttr</name>.
                                                <name>getOwnerElement</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>lc</name>.
                                                <name>total</name>
                                            </name>
                                            &gt; 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>owner</name>
                                                        !=
                                                        <name>null</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <decl_stmt>
                                                            <decl>
                                                                <type>
                                                                    <name>MutationEventImpl</name>
                                                                </type>
                                                                <name>me</name> =
                                                                <init>
                                                                    <expr>new
                                                                        <call>
                                                                            <name>MutationEventImpl</name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </decl_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>me</name>.
                                                                        <name>initMutationEvent</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>MutationEventImpl</name>.
                                                                                    <name>DOM_ATTR_MODIFIED</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>true</expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>false</expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>enclosingAttr</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>oldvalue</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>enclosingAttr</name>.
                                                                                        <name>getNodeValue</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>enclosingAttr</name>.
                                                                                        <name>getNodeName</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>change</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>owner</name>.
                                                                        <name>dispatchEvent</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>me</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">// DOMSubtreeModified gets sent to the lowest common root of a</comment>
                    <comment type="line">// set of changes.</comment>
                    <comment type="line">// "This event is dispatched after all other events caused by the</comment>
                    <comment type="line">// mutation have been fired."</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>LCount</name>
                            </type>
                            <name>lc</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>LCount</name>.
                                            <name>lookup</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>MutationEventImpl</name>.
                                                        <name>DOM_SUBTREE_MODIFIED</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>lc</name>.
                                    <name>total</name>
                                </name>
                                &gt; 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>MutationEvent</name>
                                        </type>
                                        <name>me</name> =
                                        <init>
                                            <expr>new
                                                <call>
                                                    <name>MutationEventImpl</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>me</name>.
                                                <name>initMutationEvent</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>MutationEventImpl</name>.
                                                            <name>DOM_SUBTREE_MODIFIED</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>true</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>false</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>(<name>short</name>) 0
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>

                                <comment type="line">// If we're within an Attr, DStM gets sent to the Attr</comment>
                                <comment type="line">// and to its owningElement. Otherwise we dispatch it</comment>
                                <comment type="line">// locally.</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>enclosingAttr</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>dispatchEvent</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>enclosingAttr</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>me</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>owner</name>
                                                        !=
                                                        <name>null</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name>dispatchEvent</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>owner</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>me</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>dispatchEvent</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>node</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>me</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>
            <comment type="line">// dispatchAggregateEvents(NodeImpl, AttrImpl,String) :void</comment>

            <comment type="javadoc">/**
                * NON-DOM INTERNAL: Pre-mutation context check, in
                * preparation for later generating DOMAttrModified events.
                * Determines whether this node is within an Attr
                * @param node node to get enclosing attribute for
                * @return either a description of that Attr, or null if none such.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>saveEnclosingAttr</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>NodeImpl</name>
                            </type>
                            <name>node</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>savedEnclosingAttr</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// MUTATION PREPROCESSING AND PRE-EVENTS:</comment>
                    <comment type="line">// If we're within the scope of an Attr and DOMAttrModified</comment>
                    <comment type="line">// was requested, we need to preserve its previous value for</comment>
                    <comment type="line">// that event.</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>LCount</name>
                            </type>
                            <name>lc</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>LCount</name>.
                                            <name>lookup</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>MutationEventImpl</name>.
                                                        <name>DOM_ATTR_MODIFIED</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>lc</name>.
                                    <name>total</name>
                                </name>
                                &gt; 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>NodeImpl</name>
                                        </type>
                                        <name>eventAncestor</name> =
                                        <init>
                                            <expr>
                                                <name>node</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <while>while
                                    <condition>(<expr>true</expr>)
                                    </condition>
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>eventAncestor</name>
                                                    ==
                                                    <name>null</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <return>return;</return>
                                            </then>
                                        </if>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>int</name>
                                                </type>
                                                <name>type</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>eventAncestor</name>.
                                                                <name>getNodeType</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>type</name>
                                                    ==
                                                    <name><name>Node</name>.
                                                        <name>ATTRIBUTE_NODE</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>EnclosingAttr</name>
                                                            </type>
                                                            <name>retval</name> =
                                                            <init>
                                                                <expr>new
                                                                    <call>
                                                                        <name>EnclosingAttr</name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name><name>retval</name>.
                                                                <name>node</name>
                                                            </name>
                                                            = (<name>AttrImpl</name>)
                                                            <name>eventAncestor</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name><name>retval</name>.
                                                                <name>oldvalue</name>
                                                            </name>
                                                            =
                                                            <call>
                                                                <name><name>retval</name>.<name>node</name>.
                                                                    <name>getNodeValue</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>savedEnclosingAttr</name>
                                                            =
                                                            <name>retval</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <return>return;</return>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>type</name>
                                                            ==
                                                            <name><name>Node</name>.
                                                                <name>ENTITY_REFERENCE_NODE</name>
                                                            </name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>eventAncestor</name>
                                                                =
                                                                <call>
                                                                    <name><name>eventAncestor</name>.
                                                                        <name>parentNode</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                    </then>
                                                    <else>else
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>type</name>
                                                                    ==
                                                                    <name><name>Node</name>.
                                                                        <name>TEXT_NODE</name>
                                                                    </name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>eventAncestor</name>
                                                                        =
                                                                        <call>
                                                                            <name><name>eventAncestor</name>.
                                                                                <name>parentNode</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                            </then>
                                                            <else>else
                                                                <return>return;</return>
                                                            </else>
                                                        </if>
                                                    </else>
                                                </if>
                                            </else>
                                        </if>
                                        <comment type="line">// Any other parent means we're not in an Attr</comment>
                                        }
                                    </block>
                                </while>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>
            <comment type="line">// saveEnclosingAttr(NodeImpl) :void</comment>

            <comment type="javadoc">/**
                * A method to be called when a character data node has been modified
                */
            </comment>
            <function>
                <type>
                    <name>void</name>
                </type>
                <name>modifyingCharacterData</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>NodeImpl</name>
                            </type>
                            <name>node</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>replace</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>mutationEvents</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>!
                                            <name>replace</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>saveEnclosingAttr</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>node</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * A method to be called when a character data node has been modified
                */
            </comment>
            <function>
                <type>
                    <name>void</name>
                </type>
                <name>modifiedCharacterData</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>NodeImpl</name>
                            </type>
                            <name>node</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>oldvalue</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>replace</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>mutationEvents</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>!
                                            <name>replace</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <comment type="line">// MUTATION POST-EVENTS:</comment>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>LCount</name>
                                                    </type>
                                                    <name>lc</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name><name>LCount</name>.
                                                                    <name>lookup</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>MutationEventImpl</name>.
                                                                                <name>DOM_CHARACTER_DATA_MODIFIED</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name><name>lc</name>.
                                                            <name>total</name>
                                                        </name>
                                                        &gt; 0
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <decl_stmt>
                                                            <decl>
                                                                <type>
                                                                    <name>MutationEvent</name>
                                                                </type>
                                                                <name>me</name> =
                                                                <init>
                                                                    <expr>new
                                                                        <call>
                                                                            <name>MutationEventImpl</name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </decl_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>me</name>.
                                                                        <name>initMutationEvent</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>MutationEventImpl</name>.
                                                                                    <name>DOM_CHARACTER_DATA_MODIFIED
                                                                                    </name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>true</expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>false</expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>null</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>oldvalue</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>value</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>null</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>(<name>short</name>) 0
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name>dispatchEvent</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>node</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>me</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>

                                            <comment type="line">// Subroutine: Transmit DOMAttrModified and
                                                DOMSubtreeModified,
                                            </comment>
                                            <comment type="line">// if required. (Common to most kinds of mutation)
                                            </comment>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>dispatchAggregateEvents</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>node</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>savedEnclosingAttr</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <comment type="line">// End mutation postprocessing</comment>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * A method to be called when a character data node has been replaced
                */
            </comment>
            <function>
                <type>
                    <name>void</name>
                </type>
                <name>replacedCharacterData</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>NodeImpl</name>
                            </type>
                            <name>node</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>oldvalue</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">//now that we have finished replacing data, we need to perform the same
                        actions
                    </comment>
                    <comment type="line">//that are required after a character data node has been modified</comment>
                    <comment type="line">//send the value of false for replace parameter so that mutation</comment>
                    <comment type="line">//events if appropriate will be initiated</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>modifiedCharacterData</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>node</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>oldvalue</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>value</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * A method to be called when a node is about to be inserted in the tree.
                */
            </comment>
            <function>
                <type>
                    <name>void</name>
                </type>
                <name>insertingNode</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>NodeImpl</name>
                            </type>
                            <name>node</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>replace</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>mutationEvents</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>!
                                            <name>replace</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>saveEnclosingAttr</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>node</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * A method to be called when a node has been inserted in the tree.
                */
            </comment>
            <function>
                <type>
                    <name>void</name>
                </type>
                <name>insertedNode</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>NodeImpl</name>
                            </type>
                            <name>node</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>NodeImpl</name>
                            </type>
                            <name>newInternal</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>replace</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>mutationEvents</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// MUTATION POST-EVENTS:</comment>
                                <comment type="line">// "Local" events (non-aggregated)</comment>
                                <comment type="line">// New child is told it was inserted, and where</comment>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>LCount</name>
                                        </type>
                                        <name>lc</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>LCount</name>.
                                                        <name>lookup</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>MutationEventImpl</name>.
                                                                    <name>DOM_NODE_INSERTED</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>lc</name>.
                                                <name>total</name>
                                            </name>
                                            &gt; 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>MutationEventImpl</name>
                                                    </type>
                                                    <name>me</name> =
                                                    <init>
                                                        <expr>new
                                                            <call>
                                                                <name>MutationEventImpl</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>me</name>.
                                                            <name>initMutationEvent</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>MutationEventImpl</name>.
                                                                        <name>DOM_NODE_INSERTED</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>true</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>false</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>node</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>null</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>null</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>null</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>(<name>short</name>) 0
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>dispatchEvent</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>newInternal</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>me</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>

                                <comment type="line">// If within the Document, tell the subtree it's been added
                                </comment>
                                <comment type="line">// to the Doc.</comment>
                                <expr_stmt>
                                    <expr>
                                        <name>lc</name>
                                        =
                                        <call>
                                            <name><name>LCount</name>.
                                                <name>lookup</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>MutationEventImpl</name>.
                                                            <name>DOM_NODE_INSERTED_INTO_DOCUMENT</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>lc</name>.
                                                <name>total</name>
                                            </name>
                                            &gt; 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>NodeImpl</name>
                                                    </type>
                                                    <name>eventAncestor</name> =
                                                    <init>
                                                        <expr>
                                                            <name>node</name>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>savedEnclosingAttr</name>
                                                        !=
                                                        <name>null</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>eventAncestor</name>
                                                            = (<name>NodeImpl</name>)
                                                            <call>
                                                                <name><name>savedEnclosingAttr</name>.<name>node</name>.
                                                                    <name>getOwnerElement</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                </then>
                                            </if>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>eventAncestor</name>
                                                        !=
                                                        <name>null</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <comment type="line">// Might have been orphan Attr</comment>
                                                        <decl_stmt>
                                                            <decl>
                                                                <type>
                                                                    <name>NodeImpl</name>
                                                                </type>
                                                                <name>p</name> =
                                                                <init>
                                                                    <expr>
                                                                        <name>eventAncestor</name>
                                                                    </expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </decl_stmt>
                                                        <while>while
                                                            <condition>(
                                                                <expr>
                                                                    <name>p</name>
                                                                    !=
                                                                    <name>null</name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>eventAncestor</name>
                                                                        =
                                                                        <name>p</name>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <comment type="line">// Last non-null ancestor</comment>
                                                                <comment type="line">// In this context, ancestry
                                                                    includes
                                                                </comment>
                                                                <comment type="line">// walking back from Attr to
                                                                    Element
                                                                </comment>
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>p</name>.
                                                                                    <name>getNodeType</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            ==
                                                                            <name>ATTRIBUTE_NODE</name>
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <name>p</name>
                                                                                    =
                                                                                    <call>(<name>NodeImpl</name>)
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>(<name>
                                                                                                    AttrImpl</name>)
                                                                                                    <name>p</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                    .
                                                                                    <call>
                                                                                        <name>getOwnerElement</name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            }
                                                                        </block>
                                                                    </then>
                                                                    <else>else
                                                                        <block>{
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <name>p</name>
                                                                                    =
                                                                                    <call>
                                                                                        <name><name>p</name>.
                                                                                            <name>parentNode</name>
                                                                                        </name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            }
                                                                        </block>
                                                                    </else>
                                                                </if>
                                                                }
                                                            </block>
                                                        </while>
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <call>
                                                                        <name><name>eventAncestor</name>.
                                                                            <name>getNodeType</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                    ==
                                                                    <name><name>Node</name>.
                                                                        <name>DOCUMENT_NODE</name>
                                                                    </name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <decl_stmt>
                                                                        <decl>
                                                                            <type>
                                                                                <name>MutationEventImpl</name>
                                                                            </type>
                                                                            <name>me</name> =
                                                                            <init>
                                                                                <expr>new
                                                                                    <call>
                                                                                        <name>MutationEventImpl</name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </init>
                                                                        </decl>
                                                                        ;
                                                                    </decl_stmt>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>me</name>.
                                                                                    <name>initMutationEvent</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>
                                                                                                <name>
                                                                                                    MutationEventImpl
                                                                                                </name>
                                                                                                .
                                                                                                <name>
                                                                                                    DOM_NODE_INSERTED_INTO_DOCUMENT
                                                                                                </name>
                                                                                            </name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>false</expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>false</expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>null</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>null</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>null</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>null</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>(<name>short</name>)0
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name>dispatchEventToSubtree</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>newInternal</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>me</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <if>if
                                    <condition>(
                                        <expr>!
                                            <name>replace</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <comment type="line">// Subroutine: Transmit DOMAttrModified and
                                                DOMSubtreeModified
                                            </comment>
                                            <comment type="line">// (Common to most kinds of mutation)</comment>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>dispatchAggregateEvents</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>node</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>savedEnclosingAttr</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// notify the range of insertions</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>ranges</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>size</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>ranges</name>.
                                                        <name>size</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <for>for (
                                    <init>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>i</name> =
                                            <init>
                                                <expr>0</expr>
                                            </init>
                                        </decl>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            !=
                                            <name>size</name>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr><name>i</name>++
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <expr_stmt>
                                            <expr>((<name>RangeImpl</name>)
                                                <call>
                                                    <name><name>ranges</name>.
                                                        <name>elementAt</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                ).
                                                <call>
                                                    <name>insertedNodeFromDOM</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>newInternal</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </for>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * A method to be called when a node is about to be removed from the tree.
                */
            </comment>
            <function>
                <type>
                    <name>void</name>
                </type>
                <name>removingNode</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>NodeImpl</name>
                            </type>
                            <name>node</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>NodeImpl</name>
                            </type>
                            <name>oldChild</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>replace</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <comment type="line">// notify iterators</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>iterators</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>size</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>iterators</name>.
                                                        <name>size</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <for>for (
                                    <init>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>i</name> =
                                            <init>
                                                <expr>0</expr>
                                            </init>
                                        </decl>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            !=
                                            <name>size</name>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr><name>i</name>++
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <expr_stmt>
                                            <expr>((<name>NodeIteratorImpl</name>)
                                                <call>
                                                    <name><name>iterators</name>.
                                                        <name>elementAt</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                ).
                                                <call>
                                                    <name>removeNode</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>oldChild</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </for>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// notify ranges</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>ranges</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>size</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>ranges</name>.
                                                        <name>size</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <for>for (
                                    <init>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>i</name> =
                                            <init>
                                                <expr>0</expr>
                                            </init>
                                        </decl>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            !=
                                            <name>size</name>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr><name>i</name>++
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <expr_stmt>
                                            <expr>((<name>RangeImpl</name>)
                                                <call>
                                                    <name><name>ranges</name>.
                                                        <name>elementAt</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                ).
                                                <call>
                                                    <name>removeNode</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>oldChild</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </for>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// mutation events</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>mutationEvents</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// MUTATION PREPROCESSING AND PRE-EVENTS:</comment>
                                <comment type="line">// If we're within the scope of an Attr and DOMAttrModified
                                </comment>
                                <comment type="line">// was requested, we need to preserve its previous value for
                                </comment>
                                <comment type="line">// that event.</comment>
                                <if>if
                                    <condition>(
                                        <expr>!
                                            <name>replace</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>saveEnclosingAttr</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>node</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <comment type="line">// Child is told that it is about to be removed</comment>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>LCount</name>
                                        </type>
                                        <name>lc</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>LCount</name>.
                                                        <name>lookup</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>MutationEventImpl</name>.
                                                                    <name>DOM_NODE_REMOVED</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>lc</name>.
                                                <name>total</name>
                                            </name>
                                            &gt; 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>MutationEventImpl</name>
                                                    </type>
                                                    <name>me</name>=
                                                    <init>
                                                        <expr>new
                                                            <call>
                                                                <name>MutationEventImpl</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>me</name>.
                                                            <name>initMutationEvent</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>MutationEventImpl</name>.
                                                                        <name>DOM_NODE_REMOVED</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>true</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>false</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>node</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>null</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>null</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>null</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>(<name>short</name>) 0
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>dispatchEvent</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>oldChild</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>me</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>

                                <comment type="line">// If within Document, child's subtree is informed that it's
                                </comment>
                                <comment type="line">// losing that status</comment>
                                <expr_stmt>
                                    <expr>
                                        <name>lc</name>
                                        =
                                        <call>
                                            <name><name>LCount</name>.
                                                <name>lookup</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>MutationEventImpl</name>.
                                                            <name>DOM_NODE_REMOVED_FROM_DOCUMENT</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>lc</name>.
                                                <name>total</name>
                                            </name>
                                            &gt; 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>NodeImpl</name>
                                                    </type>
                                                    <name>eventAncestor</name> =
                                                    <init>
                                                        <expr>
                                                            <name>this</name>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>savedEnclosingAttr</name>
                                                        !=
                                                        <name>null</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>eventAncestor</name>
                                                            = (<name>NodeImpl</name>)
                                                            <call>
                                                                <name><name>savedEnclosingAttr</name>.<name>node</name>.
                                                                    <name>getOwnerElement</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                </then>
                                            </if>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>eventAncestor</name>
                                                        !=
                                                        <name>null</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <comment type="line">// Might have been orphan Attr</comment>
                                                        <for>for (
                                                            <init>
                                                                <decl>
                                                                    <type>
                                                                        <name>NodeImpl</name>
                                                                    </type>
                                                                    <name>p</name> =
                                                                    <init>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>eventAncestor</name>.
                                                                                    <name>parentNode</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </init>
                                                            <condition>
                                                                <expr>
                                                                    <name>p</name>
                                                                    !=
                                                                    <name>null</name>
                                                                </expr>
                                                                ;
                                                            </condition>
                                                            <incr>
                                                                <expr>
                                                                    <name>p</name>
                                                                    =
                                                                    <call>
                                                                        <name><name>p</name>.
                                                                            <name>parentNode</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </incr>
                                                            )
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>eventAncestor</name>
                                                                        =
                                                                        <name>p</name>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <comment type="line">// Last non-null ancestor</comment>
                                                                }
                                                            </block>
                                                        </for>
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <call>
                                                                        <name><name>eventAncestor</name>.
                                                                            <name>getNodeType</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                    ==
                                                                    <name><name>Node</name>.
                                                                        <name>DOCUMENT_NODE</name>
                                                                    </name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <decl_stmt>
                                                                        <decl>
                                                                            <type>
                                                                                <name>MutationEventImpl</name>
                                                                            </type>
                                                                            <name>me</name> =
                                                                            <init>
                                                                                <expr>new
                                                                                    <call>
                                                                                        <name>MutationEventImpl</name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </init>
                                                                        </decl>
                                                                        ;
                                                                    </decl_stmt>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>me</name>.
                                                                                    <name>initMutationEvent</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name><name>
                                                                                                MutationEventImpl</name>
                                                                                                .
                                                                                                <name>
                                                                                                    DOM_NODE_REMOVED_FROM_DOCUMENT
                                                                                                </name>
                                                                                            </name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>false</expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>false</expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>null</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>null</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>null</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>null</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>(<name>short</name>) 0
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name>dispatchEventToSubtree</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>oldChild</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>me</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">// End mutation preprocessing</comment>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * A method to be called when a node has been removed from the tree.
                */
            </comment>
            <function>
                <type>
                    <name>void</name>
                </type>
                <name>removedNode</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>NodeImpl</name>
                            </type>
                            <name>node</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>replace</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>mutationEvents</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// MUTATION POST-EVENTS:</comment>
                                <comment type="line">// Subroutine: Transmit DOMAttrModified and DOMSubtreeModified,
                                </comment>
                                <comment type="line">// if required. (Common to most kinds of mutation)</comment>
                                <if>if
                                    <condition>(
                                        <expr>!
                                            <name>replace</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>dispatchAggregateEvents</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>node</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>savedEnclosingAttr</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">// End mutation postprocessing</comment>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * A method to be called when a node is about to be replaced in the tree.
                */
            </comment>
            <function>
                <type>
                    <name>void</name>
                </type>
                <name>replacingNode</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>NodeImpl</name>
                            </type>
                            <name>node</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>mutationEvents</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>saveEnclosingAttr</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>node</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * A method to be called when character data is about to be replaced in the tree.
                */
            </comment>
            <function>
                <type>
                    <name>void</name>
                </type>
                <name>replacingData</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>NodeImpl</name>
                            </type>
                            <name>node</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>mutationEvents</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>saveEnclosingAttr</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>node</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * A method to be called when a node has been replaced in the tree.
                */
            </comment>
            <function>
                <type>
                    <name>void</name>
                </type>
                <name>replacedNode</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>NodeImpl</name>
                            </type>
                            <name>node</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>mutationEvents</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>dispatchAggregateEvents</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>node</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>savedEnclosingAttr</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * A method to be called when an attribute value has been modified
                */
            </comment>
            <function>
                <type>
                    <name>void</name>
                </type>
                <name>modifiedAttrValue</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>AttrImpl</name>
                            </type>
                            <name>attr</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>oldvalue</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>mutationEvents</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// MUTATION POST-EVENTS:</comment>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>dispatchAggregateEvents</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>attr</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>attr</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>oldvalue</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>MutationEvent</name>.
                                                            <name>MODIFICATION</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * A method to be called when an attribute node has been set
                */
            </comment>
            <function>
                <type>
                    <name>void</name>
                </type>
                <name>setAttrNode</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>AttrImpl</name>
                            </type>
                            <name>attr</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>AttrImpl</name>
                            </type>
                            <name>previous</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>mutationEvents</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// MUTATION POST-EVENTS:</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>previous</name>
                                            ==
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>dispatchAggregateEvents</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>attr</name>.
                                                                        <name>ownerNode</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>attr</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>null</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name><name>MutationEvent</name>.
                                                                        <name>ADDITION</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>dispatchAggregateEvents</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>attr</name>.
                                                                        <name>ownerNode</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>attr</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>previous</name>.
                                                                            <name>getNodeValue</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name><name>MutationEvent</name>.
                                                                        <name>MODIFICATION</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * A method to be called when an attribute node has been removed
                */
            </comment>
            <function>
                <type>
                    <name>void</name>
                </type>
                <name>removedAttrNode</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>AttrImpl</name>
                            </type>
                            <name>attr</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>NodeImpl</name>
                            </type>
                            <name>oldOwner</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// We can't use the standard dispatchAggregate, since it assumes</comment>
                    <comment type="line">// that the Attr is still attached to an owner. This code is</comment>
                    <comment type="line">// similar but dispatches to the previous owner, "element".</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>mutationEvents</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// If we have to send DOMAttrModified (determined earlier),
                                </comment>
                                <comment type="line">// do so.</comment>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>LCount</name>
                                        </type>
                                        <name>lc</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>LCount</name>.
                                                        <name>lookup</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>MutationEventImpl</name>.
                                                                    <name>DOM_ATTR_MODIFIED</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>lc</name>.
                                                <name>total</name>
                                            </name>
                                            &gt; 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>MutationEventImpl</name>
                                                    </type>
                                                    <name>me</name>=
                                                    <init>
                                                        <expr>new
                                                            <call>
                                                                <name>MutationEventImpl</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>me</name>.
                                                            <name>initMutationEvent</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>MutationEventImpl</name>.
                                                                        <name>DOM_ATTR_MODIFIED</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>true</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>false</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>attr</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>attr</name>.
                                                                            <name>getNodeValue</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>null</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>name</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name><name>MutationEvent</name>.
                                                                        <name>REMOVAL</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>dispatchEvent</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>oldOwner</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>me</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>

                                <comment type="line">// We can hand off to process DOMSubtreeModified, though.</comment>
                                <comment type="line">// Note that only the Element needs to be informed; the</comment>
                                <comment type="line">// Attr's subtree has not been changed by this operation.</comment>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>dispatchAggregateEvents</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>oldOwner</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>(<name>short</name>) 0
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * A method to be called when an attribute node has been renamed
                */
            </comment>
            <function>
                <type>
                    <name>void</name>
                </type>
                <name>renamedAttrNode</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Attr</name>
                            </type>
                            <name>oldAt</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Attr</name>
                            </type>
                            <name>newAt</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// REVISIT: To be implemented!!!</comment>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * A method to be called when an element has been renamed
                */
            </comment>
            <function>
                <type>
                    <name>void</name>
                </type>
                <name>renamedElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Element</name>
                            </type>
                            <name>oldEl</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Element</name>
                            </type>
                            <name>newEl</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// REVISIT: To be implemented!!!</comment>
                    }
                </block>
            </function>

            }
        </block>
    </class>
    <comment type="line">// class DocumentImpl</comment>
</unit>
