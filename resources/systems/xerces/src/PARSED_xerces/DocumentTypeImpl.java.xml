<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\dom\DocumentTypeImpl.java">
    <comment type="block">/*
        * Copyright 1999-2002,2004 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.
            <name>dom</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>DOMException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>DocumentType</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>Node</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>NamedNodeMap</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Hashtable</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>UserDataHandler</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * This class represents a Document Type &lt;em&gt;declaraction&lt;/em&gt; in
        * the document itself, &lt;em&gt;not&lt;/em&gt; a Document Type Definition (DTD).
        * An XML document may (or may not) have such a reference.
        * &lt;P&gt;
        * DocumentType is an Extended DOM feature, used in XML documents but
        * not in HTML.
        * &lt;P&gt;
        * Note that Entities and Notations are no longer children of the
        * DocumentType, but are parentless nodes hung only in their
        * appropriate NamedNodeMaps.
        * &lt;P&gt;
        * This area is UNDERSPECIFIED IN REC-DOM-Level-1-19981001
        * Most notably, absolutely no provision was made for storing
        * and using Element and Attribute information. Nor was the linkage
        * between Entities and Entity References nailed down solidly.
        *
        * @xerces.internal
        *
        * @author Arnaud Le Hors, IBM
        * @author Joe Kesselman, IBM
        * @author Andy Clark, IBM
        * @version $Id: DocumentTypeImpl.java,v 1.29 2005/05/02 22:02:22 mrglavas Exp $
        * @since PR-DOM-Level-1-19980818.
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class
        <name>DocumentTypeImpl</name>
        <super>
            <extends>extends
                <name>ParentNode</name>
            </extends>
            <implements>implements
                <name>DocumentType</name>
            </implements>
        </super>
        <block>{

            <comment type="line">//</comment>
            <comment type="line">// Constants</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/** Serialization version. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>long</name>
                    </type>
                    <name>serialVersionUID</name> =
                    <init>
                        <expr>7751299192316526485L</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">//</comment>
            <comment type="line">// Data</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/** Document type name. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>String</name>
                    </type>
                    <name>name</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Entities. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>NamedNodeMapImpl</name>
                    </type>
                    <name>entities</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Notations. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>NamedNodeMapImpl</name>
                    </type>
                    <name>notations</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// NON-DOM</comment>

            <comment type="javadoc">/** Elements. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>NamedNodeMapImpl</name>
                    </type>
                    <name>elements</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// DOM2: support public ID.</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>String</name>
                    </type>
                    <name>publicID</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// DOM2: support system ID.</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>String</name>
                    </type>
                    <name>systemID</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// DOM2: support internal subset.</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>String</name>
                    </type>
                    <name>internalSubset</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The following are required for compareDocumentPosition
                */
            </comment>
            <comment type="line">// Doctype number. Doc types which have no owner may be assigned</comment>
            <comment type="line">// a number, on demand, for ordering purposes for compareDocumentPosition</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>doctypeNumber</name>=
                    <init>
                        <expr>0</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">//</comment>
            <comment type="line">// Constructors</comment>
            <comment type="line">//</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Hashtable</name>
                    </type>
                    <name>userData</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/** Factory method for creating a document type node. */</comment>
            <constructor>
                <specifier>public</specifier>
                <name>DocumentTypeImpl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>CoreDocumentImpl</name>
                            </type>
                            <name>ownerDocument</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>super</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>ownerDocument</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>name</name>
                            </name>
                            =
                            <name>name</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// DOM</comment>
                    <expr_stmt>
                        <expr>
                            <name>entities</name>
                            = new
                            <call>
                                <name>NamedNodeMapImpl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>this</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>notations</name>
                            = new
                            <call>
                                <name>NamedNodeMapImpl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>this</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// NON-DOM</comment>
                    <expr_stmt>
                        <expr>
                            <name>elements</name>
                            = new
                            <call>
                                <name>NamedNodeMapImpl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>this</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </constructor>
            <comment type="line">// &lt;init&gt;(CoreDocumentImpl,String)</comment>

            <comment type="javadoc">/** Factory method for creating a document type node. */</comment>
            <constructor>
                <specifier>public</specifier>
                <name>DocumentTypeImpl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>CoreDocumentImpl</name>
                            </type>
                            <name>ownerDocument</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>qualifiedName</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>publicID</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>systemID</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>this</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>ownerDocument</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>qualifiedName</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>publicID</name>
                            </name>
                            =
                            <name>publicID</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>systemID</name>
                            </name>
                            =
                            <name>systemID</name>
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </constructor>
            <comment type="line">// &lt;init&gt;(CoreDocumentImpl,String)</comment>

            <comment type="line">//</comment>
            <comment type="line">// DOM2: methods.</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * Introduced in DOM Level 2. &lt;p&gt;
                *
                * Return the public identifier of this Document type.
                * @since WD-DOM-Level-2-19990923
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getPublicId</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>needsSyncData</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>synchronizeData</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>publicID</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * Introduced in DOM Level 2. &lt;p&gt;
                *
                * Return the system identifier of this Document type.
                * @since WD-DOM-Level-2-19990923
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getSystemId</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>needsSyncData</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>synchronizeData</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>systemID</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * NON-DOM. &lt;p&gt;
                *
                * Set the internalSubset given as a string.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setInternalSubset</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>internalSubset</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>needsSyncData</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>synchronizeData</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>internalSubset</name>
                            </name>
                            =
                            <name>internalSubset</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Introduced in DOM Level 2. &lt;p&gt;
                *
                * Return the internalSubset given as a string.
                * @since WD-DOM-Level-2-19990923
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getInternalSubset</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>needsSyncData</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>synchronizeData</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>internalSubset</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">//</comment>
            <comment type="line">// Node methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * A short integer indicating what type of node this is. The named
                * constants for this value are defined in the org.w3c.dom.Node interface.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>short</name>
                </type>
                <name>getNodeType</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>Node</name>.
                                <name>DOCUMENT_TYPE_NODE</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the document type name
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getNodeName</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>needsSyncData</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>synchronizeData</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>name</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/** Clones the node. */</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Node</name>
                </type>
                <name>cloneNode</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>deep</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>DocumentTypeImpl</name>
                            </type>
                            <name>newnode</name> =
                            <init>
                                <expr>(<name>DocumentTypeImpl</name>)
                                    <call>
                                        <name><name>super</name>.
                                            <name>cloneNode</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>deep</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// NamedNodeMaps must be cloned explicitly, to avoid sharing them.</comment>
                    <expr_stmt>
                        <expr>
                            <name><name>newnode</name>.
                                <name>entities</name>
                            </name>
                            =
                            <call>
                                <name><name>entities</name>.
                                    <name>cloneMap</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>newnode</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>newnode</name>.
                                <name>notations</name>
                            </name>
                            =
                            <call>
                                <name><name>notations</name>.
                                    <name>cloneMap</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>newnode</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>newnode</name>.
                                <name>elements</name>
                            </name>
                            =
                            <call>
                                <name><name>elements</name>.
                                    <name>cloneMap</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>newnode</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <return>return
                        <expr>
                            <name>newnode</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// cloneNode(boolean):Node</comment>

            <comment type="block">/*
                * Get Node text content
                * @since DOM Level 3
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getTextContent</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>DOMException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="block">/*
                * Set Node text content
                * @since DOM Level 3
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setTextContent</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>textContent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>DOMException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <comment type="line">// no-op</comment>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * DOM Level 3 WD- Experimental.
                * Override inherited behavior from ParentNodeImpl to support deep equal.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isEqualNode</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>arg</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>super</name>.
                                        <name>isEqualNode</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>arg</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>needsSyncData</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>synchronizeData</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>DocumentTypeImpl</name>
                            </type>
                            <name>argDocType</name> =
                            <init>
                                <expr>(<name>DocumentTypeImpl</name>)
                                    <name>arg</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">//test if the following string attributes are equal: publicId,</comment>
                    <comment type="line">//systemId, internalSubset.</comment>
                    <if>if
                        <condition>(
                            <expr>(
                                <call>
                                    <name>getPublicId</name>
                                    <argument_list>()</argument_list>
                                </call>
                                == <name>null</name> &amp;&amp;
                                <call>
                                    <name><name>argDocType</name>.
                                        <name>getPublicId</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                != <name>null</name>)
                                || (
                                <call>
                                    <name>getPublicId</name>
                                    <argument_list>()</argument_list>
                                </call>
                                != <name>null</name> &amp;&amp;
                                <call>
                                    <name><name>argDocType</name>.
                                        <name>getPublicId</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                == <name>null</name>)
                                || (
                                <call>
                                    <name>getSystemId</name>
                                    <argument_list>()</argument_list>
                                </call>
                                == <name>null</name> &amp;&amp;
                                <call>
                                    <name><name>argDocType</name>.
                                        <name>getSystemId</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                != <name>null</name>)
                                || (
                                <call>
                                    <name>getSystemId</name>
                                    <argument_list>()</argument_list>
                                </call>
                                != <name>null</name> &amp;&amp;
                                <call>
                                    <name><name>argDocType</name>.
                                        <name>getSystemId</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                == <name>null</name>)
                                || (
                                <call>
                                    <name>getInternalSubset</name>
                                    <argument_list>()</argument_list>
                                </call>
                                ==
                                <name>null</name>
                                &amp;&amp;
                                <call>
                                    <name><name>argDocType</name>.
                                        <name>getInternalSubset</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                != <name>null</name>)
                                || (
                                <call>
                                    <name>getInternalSubset</name>
                                    <argument_list>()</argument_list>
                                </call>
                                !=
                                <name>null</name>
                                &amp;&amp;
                                <call>
                                    <name><name>argDocType</name>.
                                        <name>getInternalSubset</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                == <name>null</name>)
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>getPublicId</name>
                                    <argument_list>()</argument_list>
                                </call>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>!
                                            <call>
                                                <name>getPublicId</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>equals</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>argDocType</name>.
                                                                    <name>getPublicId</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <return>return <expr>false</expr>;
                                            </return>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>getSystemId</name>
                                    <argument_list>()</argument_list>
                                </call>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>!
                                            <call>
                                                <name>getSystemId</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>equals</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>argDocType</name>.
                                                                    <name>getSystemId</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <return>return <expr>false</expr>;
                                            </return>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>getInternalSubset</name>
                                    <argument_list>()</argument_list>
                                </call>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>!
                                            <call>
                                                <name>getInternalSubset</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>equals</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>argDocType</name>.
                                                                    <name>getInternalSubset</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <return>return <expr>false</expr>;
                                            </return>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">//test if NamedNodeMaps entities and notations are equal</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>NamedNodeMapImpl</name>
                            </type>
                            <name>argEntities</name> =
                            <init>
                                <expr>
                                    <name><name>argDocType</name>.
                                        <name>entities</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <if>if
                        <condition>(
                            <expr>(<name>entities</name> == <name>null</name> &amp;&amp; <name>argEntities
                            </name> != <name>null</name>)
                                || (<name>entities</name> != <name>null</name> &amp;&amp; <name>argEntities
                                </name> == <name>null</name>)
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return <expr>false</expr>;
                            </return>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>entities</name>
                                != <name>null</name> &amp;&amp; <name>argEntities</name> !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>entities</name>.
                                                    <name>getLength</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            !=
                                            <call>
                                                <name><name>argEntities</name>.
                                                    <name>getLength</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <return>return <expr>false</expr>;
                                        </return>
                                    </then>
                                </if>

                                <for>for (
                                    <init>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>index</name> =
                                            <init>
                                                <expr>0</expr>
                                            </init>
                                        </decl>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <call>
                                                <name><name>entities</name>.
                                                    <name>item</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>index</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr><name>index</name>++
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>Node</name>
                                                </type>
                                                <name>entNode1</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>entities</name>.
                                                                <name>item</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>index</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>Node</name>
                                                </type>
                                                <name>entNode2</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>argEntities</name>.
                                                                <name>getNamedItem</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>entNode1</name>.
                                                                                <name>getNodeName</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>

                                        <if>if
                                            <condition>(
                                                <expr>!((<name>NodeImpl</name>) <name>entNode1</name>).
                                                    <call>
                                                        <name>isEqualNode</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>(<name>NodeImpl</name>)
                                                                    <name>entNode2</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <return>return <expr>false</expr>;
                                                </return>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </for>
                                }
                            </block>
                        </then>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>NamedNodeMapImpl</name>
                            </type>
                            <name>argNotations</name> =
                            <init>
                                <expr>
                                    <name><name>argDocType</name>.
                                        <name>notations</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <if>if
                        <condition>(
                            <expr>(<name>notations</name> == <name>null</name> &amp;&amp; <name>argNotations
                            </name> != <name>null</name>)
                                || (<name>notations</name> != <name>null</name> &amp;&amp; <name>argNotations</name> == <name>
                                    null</name>)
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return <expr>false</expr>;
                            </return>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>notations</name>
                                != <name>null</name> &amp;&amp; <name>argNotations</name> !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>notations</name>.
                                                    <name>getLength</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            !=
                                            <call>
                                                <name><name>argNotations</name>.
                                                    <name>getLength</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <return>return <expr>false</expr>;
                                        </return>
                                    </then>
                                </if>

                                <for>for (
                                    <init>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>index</name> =
                                            <init>
                                                <expr>0</expr>
                                            </init>
                                        </decl>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <call>
                                                <name><name>notations</name>.
                                                    <name>item</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>index</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr><name>index</name>++
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>Node</name>
                                                </type>
                                                <name>noteNode1</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>notations</name>.
                                                                <name>item</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>index</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>Node</name>
                                                </type>
                                                <name>noteNode2</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>argNotations</name>.
                                                                <name>getNamedItem</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>noteNode1</name>.
                                                                                <name>getNodeName</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>

                                        <if>if
                                            <condition>(
                                                <expr>!((<name>NodeImpl</name>) <name>noteNode1</name>).
                                                    <call>
                                                        <name>isEqualNode</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>(<name>NodeImpl</name>)
                                                                    <name>noteNode2</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <return>return <expr>false</expr>;
                                                </return>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </for>
                                }
                            </block>
                        </then>
                    </if>

                    <return>return <expr>true</expr>;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">//end isEqualNode</comment>


            <comment type="javadoc">/**
                * NON-DOM
                * set the ownerDocument of this node and its children
                */
            </comment>
            <function>
                <type>
                    <name>void</name>
                </type>
                <name>setOwnerDocument</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>CoreDocumentImpl</name>
                            </type>
                            <name>doc</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>super</name>.
                                    <name>setOwnerDocument</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>doc</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>entities</name>.
                                    <name>setOwnerDocument</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>doc</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>notations</name>.
                                    <name>setOwnerDocument</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>doc</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>elements</name>.
                                    <name>setOwnerDocument</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>doc</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/** NON-DOM
                Get the number associated with this doctype.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>int</name>
                </type>
                <name>getNodeNumber</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <comment type="line">// If the doctype has a document owner, get the node number</comment>
                    <comment type="line">// relative to the owner doc</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>getOwnerDocument</name>
                                    <argument_list>()</argument_list>
                                </call>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>super</name>.
                                            <name>getNodeNumber</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                        </then>
                    </if>

                    <comment type="line">// The doctype is disconnected and not associated with any document.</comment>
                    <comment type="line">// Assign the doctype a number relative to the implementation.</comment>
                    <if>if
                        <condition>(
                            <expr><name>doctypeNumber</name>==0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{

                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>CoreDOMImplementationImpl</name>
                                        </type>
                                        <name>cd</name> =
                                        <init>
                                            <expr>(<name>CoreDOMImplementationImpl</name>)
                                                <call>
                                                    <name><name>CoreDOMImplementationImpl</name>.
                                                        <name>getDOMImplementation</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>doctypeNumber</name>
                                        =
                                        <call>
                                            <name><name>cd</name>.
                                                <name>assignDocTypeNumber</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>doctypeNumber</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">//</comment>
            <comment type="line">// DocumentType methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * Name of this document type. If we loaded from a DTD, this should
                * be the name immediately following the DOCTYPE keyword.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getName</name>
                <parameter_list>()</parameter_list>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>needsSyncData</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>synchronizeData</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>name</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// getName():String</comment>

            <comment type="javadoc">/**
                * Access the collection of general Entities, both external and
                * internal, defined in the DTD. For example, in:
                * &lt;p&gt;
                * &lt;pre&gt;
                * &amp;lt;!doctype example SYSTEM "ex.dtd" [
                * &amp;lt;!ENTITY foo "foo"&amp;gt;
                * &amp;lt;!ENTITY bar "bar"&amp;gt;
                * &amp;lt;!ENTITY % baz "baz"&amp;gt;
                * ]&amp;gt;
                * &lt;/pre&gt;
                * &lt;p&gt;
                * The Entities map includes foo and bar, but not baz. It is promised that
                * only Nodes which are Entities will exist in this NamedNodeMap.
                * &lt;p&gt;
                * For HTML, this will always be null.
                * &lt;p&gt;
                * Note that "built in" entities such as &amp;amp; and &amp;lt; should be
                * converted to their actual characters before being placed in the DOM's
                * contained text, and should be converted back when the DOM is rendered
                * as XML or HTML, and hence DO NOT appear here.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>NamedNodeMap</name>
                </type>
                <name>getEntities</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>needsSyncChildren</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>synchronizeChildren</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>entities</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Access the collection of Notations defined in the DTD. A
                * notation declares, by name, the format of an XML unparsed entity
                * or is used to formally declare a Processing Instruction target.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>NamedNodeMap</name>
                </type>
                <name>getNotations</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>needsSyncChildren</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>synchronizeChildren</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>notations</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">//</comment>
            <comment type="line">// Public methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * NON-DOM: Subclassed to flip the entities' and notations' readonly switch
                * as well.
                * @see NodeImpl#setReadOnly
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setReadOnly</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>readOnly</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>deep</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>needsSyncChildren</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>synchronizeChildren</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>super</name>.
                                    <name>setReadOnly</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>readOnly</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>deep</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// set read-only property</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>elements</name>.
                                    <name>setReadOnly</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>readOnly</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>entities</name>.
                                    <name>setReadOnly</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>readOnly</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>notations</name>.
                                    <name>setReadOnly</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>readOnly</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </function>
            <comment type="line">// setReadOnly(boolean,boolean)</comment>

            <comment type="javadoc">/**
                * NON-DOM: Access the collection of ElementDefinitions.
                * @see ElementDefinitionImpl
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>NamedNodeMap</name>
                </type>
                <name>getElements</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>needsSyncChildren</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>synchronizeChildren</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>elements</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Object</name>
                </type>
                <name>setUserData</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>key</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>data</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>UserDataHandler</name>
                            </type>
                            <name>handler</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>userData</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <name>userData</name>
                                    = new
                                    <call>
                                        <name>Hashtable</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>data</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>userData</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>Object</name>
                                                    </type>
                                                    <name>o</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name><name>userData</name>.
                                                                    <name>remove</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>key</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>o</name>
                                                        !=
                                                        <name>null</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <decl_stmt>
                                                            <decl>
                                                                <type>
                                                                    <name>UserDataRecord</name>
                                                                </type>
                                                                <name>r</name> =
                                                                <init>
                                                                    <expr>(<name>UserDataRecord</name>)
                                                                        <name>o</name>
                                                                    </expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </decl_stmt>
                                                        <return>return
                                                            <expr>
                                                                <name><name>r</name>.
                                                                    <name>fData</name>
                                                                </name>
                                                            </expr>
                                                            ;
                                                        </return>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <return>return
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Object</name>
                                        </type>
                                        <name>o</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>userData</name>.
                                                        <name>put</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>key</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>new
                                                                <call>
                                                                    <name>UserDataRecord</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>data</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>handler</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>o</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>UserDataRecord</name>
                                                    </type>
                                                    <name>r</name> =
                                                    <init>
                                                        <expr>(<name>UserDataRecord</name>)
                                                            <name>o</name>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <return>return
                                                <expr>
                                                    <name><name>r</name>.
                                                        <name>fData</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </else>
                    </if>
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Object</name>
                </type>
                <name>getUserData</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>key</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>userData</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>o</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>userData</name>.
                                            <name>get</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>key</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>o</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>UserDataRecord</name>
                                        </type>
                                        <name>r</name> =
                                        <init>
                                            <expr>(<name>UserDataRecord</name>)
                                                <name>o</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <return>return
                                    <expr>
                                        <name><name>r</name>.
                                            <name>fData</name>
                                        </name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>Hashtable</name>
                </type>
                <name>getUserDataRecord</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>userData</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            }
        </block>
    </class>
    <comment type="line">// class DocumentTypeImpl</comment>
</unit>
