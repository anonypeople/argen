<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\impl\dv\xs\DurationDV.java">
    <comment type="block">/*
        * Copyright 1999-2002,2004,2005 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>dv</name>.
            <name>xs</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>math</name>.
            <name>BigDecimal</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>math</name>.
            <name>BigInteger</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>javax</name>.<name>xml</name>.<name>datatype</name>.
            <name>DatatypeConstants</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>javax</name>.<name>xml</name>.<name>datatype</name>.
            <name>Duration</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>dv</name>.
            <name>InvalidDatatypeValueException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>dv</name>.
            <name>ValidationContext</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * Validator for &amp;lt;duration&amp;gt; datatype (W3C Schema Datatypes)
        *
        * @xerces.internal
        *
        * @author Elena Litani
        * @author Gopal Sharma, SUN Microsystem Inc.
        * @version $Id: DurationDV.java,v 1.20 2005/05/06 15:31:14 ankitp Exp $
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>DurationDV</name>
        <super>
            <extends>extends
                <name>AbstractDateTimeDV</name>
            </extends>
        </super>
        <block>{

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>DURATION_TYPE</name> =
                    <init>
                        <expr>0</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>YEARMONTHDURATION_TYPE</name> =
                    <init>
                        <expr>1</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>DAYTIMEDURATION_TYPE</name> =
                    <init>
                        <expr>2</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="line">// order-relation on duration is a partial order. The dates below are used to</comment>
            <comment type="line">// for comparison of 2 durations, based on the fact that</comment>
            <comment type="line">// duration x and y is x&lt;=y iff s+x&lt;=s+y</comment>
            <comment type="line">// see 3.2.6 duration W3C schema datatype specs</comment>
            <comment type="line">//</comment>
            <comment type="line">// the dates are in format: {CCYY,MM,DD, H, S, M, MS, timezone}</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>DateTimeData</name>
                        <index>[]</index>
                    </type>
                    <name>DATETIMES</name>=
                    <init>
                        <expr>
                            <block>{
                                <expr>new
                                    <call>
                                        <name>DateTimeData</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>1696</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>9</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>1</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>0</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>0</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>0</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>'Z'</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>true</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ,
                                <expr>new
                                    <call>
                                        <name>DateTimeData</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>1697</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>2</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>1</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>0</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>0</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>0</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>'Z'</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>true</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ,
                                <expr>new
                                    <call>
                                        <name>DateTimeData</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>1903</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>3</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>1</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>0</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>0</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>0</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>'Z'</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>true</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ,
                                <expr>new
                                    <call>
                                        <name>DateTimeData</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>1903</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>7</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>1</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>0</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>0</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>0</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>'Z'</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>true</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                }
                            </block>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Object</name>
                </type>
                <name>getActualValue</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>content</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ValidationContext</name>
                            </type>
                            <name>context</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>InvalidDatatypeValueException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <try>try
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name>parse</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>content</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>DURATION_TYPE</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>Exception</name>
                                    </type>
                                    <name>ex</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>InvalidDatatypeValueException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"cvc-datatype-valid.1.2.1"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>new
                                                        <name>
                                                            <name>Object</name>
                                                            <index>[]</index>
                                                        </name>
                                                        <block>{
                                                            <expr>
                                                                <name>content</name>
                                                            </expr>
                                                            , <expr>"duration"</expr>}
                                                        </block>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Parses, validates and computes normalized version of duration object
                *
                * @param str The lexical representation of duration object PnYn MnDTnH nMnS
                * @param durationType
                * @return normalized date representation
                * @exception SchemaDateTimeException Invalid lexical representation
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>DateTimeData</name>
                </type>
                <name>parse</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>str</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>durationType</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>SchemaDateTimeException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>len</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>str</name>.
                                            <name>length</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>DateTimeData</name>
                            </type>
                            <name>date</name>=
                            <init>
                                <expr>new
                                    <call>
                                        <name>DateTimeData</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>str</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>this</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>start</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>char</name>
                            </type>
                            <name>c</name>=
                            <init>
                                <expr>
                                    <call>
                                        <name><name>str</name>.
                                            <name>charAt</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr><name>start</name>++
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr><name>c</name>!='P' &amp;&amp; <name>c</name>!='-'
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>SchemaDateTimeException</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>date</name>.
                                            <name>utc</name>
                                        </name>
                                        =(<name>c</name>=='-')?'-':0
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr><name>c</name>=='-' &amp;&amp;
                                            <call>
                                                <name><name>str</name>.
                                                    <name>charAt</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr><name>start</name>++
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            !='P'
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>SchemaDateTimeException</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </else>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>negate</name> =
                            <init>
                                <expr>1</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">//negative duration</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>date</name>.
                                    <name>utc</name>
                                </name>
                                =='-'
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>negate</name>
                                        = -1
                                    </expr>
                                    ;
                                </expr_stmt>

                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">//at least one number and designator must be seen after P</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>designator</name> =
                            <init>
                                <expr>false</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>endDate</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>indexOf</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>str</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>start</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>len</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>'T'</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>endDate</name>
                                == -1
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>endDate</name>
                                        =
                                        <name>len</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>durationType</name>
                                        ==
                                        <name>YEARMONTHDURATION_TYPE</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <throw>throw
                                            <expr>new
                                                <call>
                                                    <name>SchemaDateTimeException</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </throw>
                                        }
                                    </block>
                                </then>
                            </if>
                        </else>
                    </if>

                    <comment type="line">//find 'Y'</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>end</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>indexOf</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>str</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>start</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>endDate</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>'Y'</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr><name>end</name>!=-1
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{

                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>durationType</name>
                                            ==
                                            <name>DAYTIMEDURATION_TYPE</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>SchemaDateTimeException</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </then>
                                </if>

                                <comment type="line">//scan year</comment>
                                <expr_stmt>
                                    <expr>
                                        <name><name>date</name>.
                                            <name>year</name>
                                        </name>
                                        =<name>negate</name> *
                                        <call>
                                            <name>parseInt</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>str</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>start</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>end</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>start</name>
                                        = <name>end</name>+1
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>designator</name>
                                        = true
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <expr_stmt>
                        <expr>
                            <name>end</name>
                            =
                            <call>
                                <name>indexOf</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>str</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>start</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>endDate</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>'M'</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr><name>end</name>!=-1
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{

                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>durationType</name>
                                            ==
                                            <name>DAYTIMEDURATION_TYPE</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>SchemaDateTimeException</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </then>
                                </if>

                                <comment type="line">//scan month</comment>
                                <expr_stmt>
                                    <expr>
                                        <name><name>date</name>.
                                            <name>month</name>
                                        </name>
                                        =<name>negate</name> *
                                        <call>
                                            <name>parseInt</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>str</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>start</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>end</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>start</name>
                                        = <name>end</name>+1
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>designator</name>
                                        = true
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <expr_stmt>
                        <expr>
                            <name>end</name>
                            =
                            <call>
                                <name>indexOf</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>str</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>start</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>endDate</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>'D'</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr><name>end</name>!=-1
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{

                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>durationType</name>
                                            ==
                                            <name>YEARMONTHDURATION_TYPE</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>SchemaDateTimeException</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </then>
                                </if>

                                <comment type="line">//scan day</comment>
                                <expr_stmt>
                                    <expr>
                                        <name><name>date</name>.
                                            <name>day</name>
                                        </name>
                                        =<name>negate</name> *
                                        <call>
                                            <name>parseInt</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>str</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>start</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>end</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>start</name>
                                        = <name>end</name>+1
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>designator</name>
                                        = true
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>len</name>
                                == <name>endDate</name> &amp;&amp; <name>start</name>!=
                                <name>len</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>SchemaDateTimeException</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>len</name>
                                !=
                                <name>endDate</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{

                                <comment type="line">//scan hours, minutes, seconds</comment>
                                <comment type="line">//REVISIT: can any item include a decimal fraction or only
                                    seconds?
                                </comment>
                                <comment type="line">//</comment>

                                <expr_stmt>
                                    <expr>
                                        <name>end</name>
                                        =
                                        <call>
                                            <name>indexOf</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>str</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>++
                                                        <name>start</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>len</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>'H'</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr><name>end</name>!=-1
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <comment type="line">//scan hours</comment>
                                            <expr_stmt>
                                                <expr>
                                                    <name><name>date</name>.
                                                        <name>hour</name>
                                                    </name>
                                                    =<name>negate</name> *
                                                    <call>
                                                        <name>parseInt</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>str</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>start</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>end</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr><name>start</name>=<name>end</name>+1
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>designator</name>
                                                    = true
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>

                                <expr_stmt>
                                    <expr>
                                        <name>end</name>
                                        =
                                        <call>
                                            <name>indexOf</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>str</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>start</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>len</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>'M'</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr><name>end</name>!=-1
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <comment type="line">//scan min</comment>
                                            <expr_stmt>
                                                <expr>
                                                    <name><name>date</name>.
                                                        <name>minute</name>
                                                    </name>
                                                    =<name>negate</name> *
                                                    <call>
                                                        <name>parseInt</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>str</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>start</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>end</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr><name>start</name>=<name>end</name>+1
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>designator</name>
                                                    = true
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>

                                <expr_stmt>
                                    <expr>
                                        <name>end</name>
                                        =
                                        <call>
                                            <name>indexOf</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>str</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>start</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>len</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>'S'</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr><name>end</name>!=-1
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <comment type="line">//scan seconds</comment>
                                            <expr_stmt>
                                                <expr>
                                                    <name><name>date</name>.
                                                        <name>second</name>
                                                    </name>
                                                    = <name>negate</name> *
                                                    <call>
                                                        <name>parseSecond</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>str</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>start</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>end</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr><name>start</name>=<name>end</name>+1
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>designator</name>
                                                    = true
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <comment type="line">// no additional data shouls appear after last item</comment>
                                <comment type="line">// P1Y1M1DT is illigal value as well</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>start</name>
                                            != <name>len</name> ||
                                            <call>
                                                <name><name>str</name>.
                                                    <name>charAt</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>--
                                                            <name>start</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            =='T'
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>SchemaDateTimeException</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>!
                                <name>designator</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>SchemaDateTimeException</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>

                    <return>return
                        <expr>
                            <name>date</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Compares 2 given durations. (refer to W3C Schema Datatypes "3.2.6 duration")
                *
                * @param date1 Unnormalized duration
                * @param date2 Unnormalized duration
                * @param strict (min/max)Exclusive strict == true ( LESS_THAN ) or ( GREATER_THAN )
                * (min/max)Inclusive strict == false (LESS_EQUAL) or (GREATER_EQUAL)
                * @return INDETERMINATE if the order relationship between date1 and date2 is indeterminate.
                * EQUAL if the order relation between date1 and date2 is EQUAL.
                * If the strict parameter is true, return LESS_THAN if date1 is less than date2 and
                * return GREATER_THAN if date1 is greater than date2.
                * If the strict parameter is false, return LESS_THAN if date1 is less than OR equal to date2 and
                * return GREATER_THAN if date1 is greater than OR equal to date2
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>short</name>
                </type>
                <name>compareDates</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>DateTimeData</name>
                            </type>
                            <name>date1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>DateTimeData</name>
                            </type>
                            <name>date2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>strict</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <comment type="line">//REVISIT: this is unoptimazed vs of comparing 2 durations</comment>
                    <comment type="line">// Algorithm is described in 3.2.6.2 W3C Schema Datatype specs</comment>
                    <comment type="line">//</comment>

                    <comment type="line">//add constA to both durations</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>resultA</name>, <name>resultB</name>=
                            <init>
                                <expr>
                                    <name>INDETERMINATE</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">//try and see if the objects are equal</comment>
                    <expr_stmt>
                        <expr>
                            <name>resultA</name>
                            =
                            <call>
                                <name>compareOrder</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>date1</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>date2</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>resultA</name>
                                == 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>0</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>DateTimeData</name>
                                <index>[]</index>
                            </type>
                            <name>result</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>DateTimeData</name>
                                        <index>[<expr>2</expr>]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>result</name>
                                <index>[<expr>0</expr>]
                                </index>
                            </name>
                            = new
                            <call>
                                <name>DateTimeData</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>this</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>result</name>
                                <index>[<expr>1</expr>]
                                </index>
                            </name>
                            = new
                            <call>
                                <name>DateTimeData</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>this</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">//long comparison algorithm is required</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>DateTimeData</name>
                            </type>
                            <name>tempA</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>addDuration</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>date1</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>
                                                        <name>DATETIMES</name>
                                                        <index>[<expr>0</expr>]
                                                        </index>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>
                                                        <name>result</name>
                                                        <index>[<expr>0</expr>]
                                                        </index>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>DateTimeData</name>
                            </type>
                            <name>tempB</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>addDuration</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>date2</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>
                                                        <name>DATETIMES</name>
                                                        <index>[<expr>0</expr>]
                                                        </index>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>
                                                        <name>result</name>
                                                        <index>[<expr>1</expr>]
                                                        </index>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name>resultA</name>
                            =
                            <call>
                                <name>compareOrder</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>tempA</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>tempB</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>resultA</name>
                                ==
                                <name>INDETERMINATE</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>INDETERMINATE</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <expr_stmt>
                        <expr>
                            <name>tempA</name>
                            =
                            <call>
                                <name>addDuration</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>date1</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>DATETIMES</name>
                                                <index>[<expr>1</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>result</name>
                                                <index>[<expr>0</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>tempB</name>
                            =
                            <call>
                                <name>addDuration</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>date2</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>DATETIMES</name>
                                                <index>[<expr>1</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>result</name>
                                                <index>[<expr>1</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>resultB</name>
                            =
                            <call>
                                <name>compareOrder</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>tempA</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>tempB</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>resultA</name>
                            =
                            <call>
                                <name>compareResults</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>resultA</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>resultB</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>strict</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>resultA</name>
                                ==
                                <name>INDETERMINATE</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>INDETERMINATE</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <expr_stmt>
                        <expr>
                            <name>tempA</name>
                            =
                            <call>
                                <name>addDuration</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>date1</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>DATETIMES</name>
                                                <index>[<expr>2</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>result</name>
                                                <index>[<expr>0</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>tempB</name>
                            =
                            <call>
                                <name>addDuration</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>date2</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>DATETIMES</name>
                                                <index>[<expr>2</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>result</name>
                                                <index>[<expr>1</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>resultB</name>
                            =
                            <call>
                                <name>compareOrder</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>tempA</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>tempB</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>resultA</name>
                            =
                            <call>
                                <name>compareResults</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>resultA</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>resultB</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>strict</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>resultA</name>
                                ==
                                <name>INDETERMINATE</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>INDETERMINATE</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <expr_stmt>
                        <expr>
                            <name>tempA</name>
                            =
                            <call>
                                <name>addDuration</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>date1</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>DATETIMES</name>
                                                <index>[<expr>3</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>result</name>
                                                <index>[<expr>0</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>tempB</name>
                            =
                            <call>
                                <name>addDuration</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>date2</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>DATETIMES</name>
                                                <index>[<expr>3</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>result</name>
                                                <index>[<expr>1</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>resultB</name>
                            =
                            <call>
                                <name>compareOrder</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>tempA</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>tempB</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>resultA</name>
                            =
                            <call>
                                <name>compareResults</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>resultA</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>resultB</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>strict</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <return>return
                        <expr>
                            <name>resultA</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name>short</name>
                </type>
                <name>compareResults</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>resultA</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>resultB</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>strict</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name>resultB</name>
                                ==
                                <name>INDETERMINATE</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>INDETERMINATE</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr><name>resultA</name>!=<name>resultB</name> &amp;&amp;
                                        <name>strict</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>
                                                <name>INDETERMINATE</name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <if>if
                                        <condition>(
                                            <expr><name>resultA</name>!=<name>resultB</name> &amp;&amp; !
                                                <name>strict</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <if>if
                                                    <condition>(
                                                        <expr><name>resultA</name>!=0 &amp;&amp; <name>resultB</name>!=0
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <return>return
                                                                <expr>
                                                                    <name>INDETERMINATE</name>
                                                                </expr>
                                                                ;
                                                            </return>
                                                            }
                                                        </block>
                                                    </then>
                                                    <else>else
                                                        <block>{
                                                            <return>return
                                                                <expr>(<name>resultA</name>!=0)?<name>resultA</name>:
                                                                    <name>resultB</name>
                                                                </expr>
                                                                ;
                                                            </return>
                                                            }
                                                        </block>
                                                    </else>
                                                </if>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                </else>
                            </if>
                        </else>
                    </if>
                    <return>return
                        <expr>
                            <name>resultA</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name>DateTimeData</name>
                </type>
                <name>addDuration</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>DateTimeData</name>
                            </type>
                            <name>date</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>DateTimeData</name>
                            </type>
                            <name>addto</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>DateTimeData</name>
                            </type>
                            <name>duration</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <comment type="line">//REVISIT: some code could be shared between normalize() and this method,
                    </comment>
                    <comment type="line">// however is it worth moving it? The structures are different...</comment>
                    <comment type="line">//</comment>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name>resetDateObj</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>duration</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">//add months (may be modified additionaly below)</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>temp</name> =
                            <init>
                                <expr>
                                    <name><name>addto</name>.
                                        <name>month</name>
                                    </name>
                                    +
                                    <name><name>date</name>.
                                        <name>month</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>duration</name>.
                                <name>month</name>
                            </name>
                            =
                            <call>
                                <name>modulo</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>temp</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>1</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>13</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>carry</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>fQuotient</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>temp</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>1</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>13</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">//add years (may be modified additionaly below)</comment>
                    <expr_stmt>
                        <expr>
                            <name><name>duration</name>.
                                <name>year</name>
                            </name>
                            =
                            <name><name>addto</name>.
                                <name>year</name>
                            </name>
                            +
                            <name><name>date</name>.
                                <name>year</name>
                            </name>
                            +
                            <name>carry</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">//add seconds</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>dtemp</name> =
                            <init>
                                <expr>
                                    <name><name>addto</name>.
                                        <name>second</name>
                                    </name>
                                    +
                                    <name><name>date</name>.
                                        <name>second</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name>carry</name>
                            = (<name>int</name>)
                            <call>
                                <name><name>Math</name>.
                                    <name>floor</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr><name>dtemp</name>/60
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>duration</name>.
                                <name>second</name>
                            </name>
                            = <name>dtemp</name> - <name>carry</name>*60
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">//add minutes</comment>
                    <expr_stmt>
                        <expr>
                            <name>temp</name>
                            =
                            <name><name>addto</name>.
                                <name>minute</name>
                            </name>
                            +
                            <name><name>date</name>.
                                <name>minute</name>
                            </name>
                            +
                            <name>carry</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>carry</name>
                            =
                            <call>
                                <name>fQuotient</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>temp</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>60</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>duration</name>.
                                <name>minute</name>
                            </name>
                            =
                            <call>
                                <name>mod</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>temp</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>60</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>carry</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">//add hours</comment>
                    <expr_stmt>
                        <expr>
                            <name>temp</name>
                            =
                            <name><name>addto</name>.
                                <name>hour</name>
                            </name>
                            +
                            <name><name>date</name>.
                                <name>hour</name>
                            </name>
                            +
                            <name>carry</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>carry</name>
                            =
                            <call>
                                <name>fQuotient</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>temp</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>24</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>duration</name>.
                                <name>hour</name>
                            </name>
                            =
                            <call>
                                <name>mod</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>temp</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>24</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>carry</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>


                    <expr_stmt>
                        <expr>
                            <name><name>duration</name>.
                                <name>day</name>
                            </name>
                            =
                            <name><name>addto</name>.
                                <name>day</name>
                            </name>
                            +
                            <name><name>date</name>.
                                <name>day</name>
                            </name>
                            +
                            <name>carry</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <while>while
                        <condition>( <expr>true</expr> )
                        </condition>
                        <block>{

                            <expr_stmt>
                                <expr><name>temp</name>=
                                    <call>
                                        <name>maxDayInMonthFor</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>duration</name>.
                                                        <name>year</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>duration</name>.
                                                        <name>month</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name><name>duration</name>.
                                            <name>day</name>
                                        </name>
                                        &lt; 1
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <comment type="line">//original duration was negative</comment>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>duration</name>.
                                                    <name>day</name>
                                                </name>
                                                =
                                                <name><name>duration</name>.
                                                    <name>day</name>
                                                </name>
                                                +
                                                <call>
                                                    <name>maxDayInMonthFor</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>duration</name>.
                                                                    <name>year</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>duration</name>.
                                                                    <name>month</name>
                                                                </name>
                                                                -1
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr><name>carry</name>=-1
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name><name>duration</name>.
                                                    <name>day</name>
                                                </name>
                                                &gt;
                                                <name>temp</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name><name>duration</name>.
                                                            <name>day</name>
                                                        </name>
                                                        =
                                                        <name><name>duration</name>.
                                                            <name>day</name>
                                                        </name>
                                                        -
                                                        <name>temp</name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr><name>carry</name>=1
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <block>{
                                                <break>break;</break>
                                                }
                                            </block>
                                        </else>
                                    </if>
                                </else>
                            </if>
                            <expr_stmt>
                                <expr>
                                    <name>temp</name>
                                    =
                                    <name><name>duration</name>.
                                        <name>month</name>
                                    </name>
                                    +
                                    <name>carry</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>duration</name>.
                                        <name>month</name>
                                    </name>
                                    =
                                    <call>
                                        <name>modulo</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>temp</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>1</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>13</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>duration</name>.
                                        <name>year</name>
                                    </name>
                                    =
                                    <name><name>duration</name>.
                                        <name>year</name>
                                    </name>
                                    +
                                    <call>
                                        <name>fQuotient</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>temp</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>1</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>13</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </while>

                    <expr_stmt>
                        <expr>
                            <name><name>duration</name>.
                                <name>utc</name>
                            </name>
                            ='Z'
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>duration</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>double</name>
                </type>
                <name>parseSecond</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>buffer</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>start</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>end</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>NumberFormatException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>dot</name> =
                            <init>
                                <expr>-1</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>
                                        <name>start</name>
                                    </expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name>end</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>char</name>
                                    </type>
                                    <name>ch</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>buffer</name>.
                                                    <name>charAt</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>ch</name>
                                        == '.'
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <expr_stmt>
                                        <expr>
                                            <name>dot</name>
                                            =
                                            <name>i</name>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                </then>
                                <else>else
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>ch</name>
                                                &gt; '9' || <name>ch</name> &lt; '0'
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>NumberFormatException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"'" + <name>buffer</name> + "' has wrong format"
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                        </then>
                                    </if>
                                </else>
                            </if>
                            }
                        </block>
                    </for>
                    <if>if
                        <condition>(
                            <expr><name>dot</name>+1 ==
                                <name>end</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>NumberFormatException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"'" + <name>buffer</name> + "' has wrong format"
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <call>
                                <name><name>Double</name>.
                                    <name>parseDouble</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>buffer</name>.
                                                    <name>substring</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>start</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>end</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>String</name>
                </type>
                <name>dateToString</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>DateTimeData</name>
                            </type>
                            <name>date</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>StringBuffer</name>
                            </type>
                            <name>message</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>StringBuffer</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>30</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>date</name>.
                                    <name>year</name>
                                </name>
                                &lt;0 ||
                                <name><name>date</name>.
                                    <name>month</name>
                                </name>
                                &lt;0 ||
                                <name><name>date</name>.
                                    <name>day</name>
                                </name>
                                &lt;0
                                ||
                                <name><name>date</name>.
                                    <name>hour</name>
                                </name>
                                &lt;0 ||
                                <name><name>date</name>.
                                    <name>minute</name>
                                </name>
                                &lt;0 ||
                                <name><name>date</name>.
                                    <name>second</name>
                                </name>
                                &lt;0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>message</name>.
                                                <name>append</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>'-'</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>message</name>.
                                    <name>append</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>'P'</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>message</name>.
                                    <name>append</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>(
                                            <name><name>date</name>.
                                                <name>year</name>
                                            </name>
                                            &lt; 0?-1:1) *
                                            <name><name>date</name>.
                                                <name>year</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>message</name>.
                                    <name>append</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>'Y'</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>message</name>.
                                    <name>append</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>(
                                            <name><name>date</name>.
                                                <name>month</name>
                                            </name>
                                            &lt; 0?-1:1) *
                                            <name><name>date</name>.
                                                <name>month</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>message</name>.
                                    <name>append</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>'M'</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>message</name>.
                                    <name>append</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>(
                                            <name><name>date</name>.
                                                <name>day</name>
                                            </name>
                                            &lt; 0?-1:1) *
                                            <name><name>date</name>.
                                                <name>day</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>message</name>.
                                    <name>append</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>'D'</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>message</name>.
                                    <name>append</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>'T'</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>message</name>.
                                    <name>append</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>(
                                            <name><name>date</name>.
                                                <name>hour</name>
                                            </name>
                                            &lt; 0?-1:1) *
                                            <name><name>date</name>.
                                                <name>hour</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>message</name>.
                                    <name>append</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>'H'</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>message</name>.
                                    <name>append</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>(
                                            <name><name>date</name>.
                                                <name>minute</name>
                                            </name>
                                            &lt; 0?-1:1) *
                                            <name><name>date</name>.
                                                <name>minute</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>message</name>.
                                    <name>append</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>'M'</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>message</name>.
                                    <name>append</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>(
                                            <name><name>date</name>.
                                                <name>second</name>
                                            </name>
                                            &lt; 0?-1:1) *
                                            <name><name>date</name>.
                                                <name>second</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>message</name>.
                                    <name>append</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>'S'</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <return>return
                        <expr>
                            <call>
                                <name><name>message</name>.
                                    <name>toString</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>Duration</name>
                </type>
                <name>getDuration</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>DateTimeData</name>
                            </type>
                            <name>date</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>sign</name> =
                            <init>
                                <expr>1</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>date</name>.
                                    <name>year</name>
                                </name>
                                &lt;0 ||
                                <name><name>date</name>.
                                    <name>month</name>
                                </name>
                                &lt;0 ||
                                <name><name>date</name>.
                                    <name>day</name>
                                </name>
                                &lt;0
                                ||
                                <name><name>date</name>.
                                    <name>hour</name>
                                </name>
                                &lt;0 ||
                                <name><name>date</name>.
                                    <name>minute</name>
                                </name>
                                &lt;0 ||
                                <name><name>date</name>.
                                    <name>second</name>
                                </name>
                                &lt;0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>sign</name>
                                        = -1
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <call>
                                <name><name>factory</name>.
                                    <name>newDuration</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>sign</name>
                                            == 1
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>date</name>.
                                                <name>year</name>
                                            </name>
                                            !=
                                            <name><name>DatatypeConstants</name>.
                                                <name>FIELD_UNDEFINED</name>
                                            </name>
                                            ?
                                            <call>
                                                <name><name>BigInteger</name>.
                                                    <name>valueOf</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr><name>sign</name>*
                                                            <name><name>date</name>.
                                                                <name>year</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            :
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>date</name>.
                                                <name>month</name>
                                            </name>
                                            !=
                                            <name><name>DatatypeConstants</name>.
                                                <name>FIELD_UNDEFINED</name>
                                            </name>
                                            ?
                                            <call>
                                                <name><name>BigInteger</name>.
                                                    <name>valueOf</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr><name>sign</name>*
                                                            <name><name>date</name>.
                                                                <name>month</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            :
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>date</name>.
                                                <name>day</name>
                                            </name>
                                            !=
                                            <name><name>DatatypeConstants</name>.
                                                <name>FIELD_UNDEFINED</name>
                                            </name>
                                            ?
                                            <call>
                                                <name><name>BigInteger</name>.
                                                    <name>valueOf</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr><name>sign</name>*
                                                            <name><name>date</name>.
                                                                <name>day</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            :
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>date</name>.
                                                <name>hour</name>
                                            </name>
                                            !=
                                            <name><name>DatatypeConstants</name>.
                                                <name>FIELD_UNDEFINED</name>
                                            </name>
                                            ?
                                            <call>
                                                <name><name>BigInteger</name>.
                                                    <name>valueOf</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr><name>sign</name>*
                                                            <name><name>date</name>.
                                                                <name>hour</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            :
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>date</name>.
                                                <name>minute</name>
                                            </name>
                                            !=
                                            <name><name>DatatypeConstants</name>.
                                                <name>FIELD_UNDEFINED</name>
                                            </name>
                                            ?
                                            <call>
                                                <name><name>BigInteger</name>.
                                                    <name>valueOf</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr><name>sign</name>*
                                                            <name><name>date</name>.
                                                                <name>minute</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            :
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>date</name>.
                                                <name>second</name>
                                            </name>
                                            !=
                                            <name><name>DatatypeConstants</name>.
                                                <name>FIELD_UNDEFINED</name>
                                            </name>
                                            ?new
                                            <call>
                                                <name>BigDecimal</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>String</name>.
                                                                    <name>valueOf</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr><name>sign</name>*
                                                                            <name><name>date</name>.
                                                                                <name>second</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            :
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            }
        </block>
    </class>
</unit>
