<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\jaxp\datatype\DurationImpl.java">
    <comment type="block">/*
        * Copyright 2005 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>jaxp</name>.
            <name>datatype</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>IOException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>ObjectStreamException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>Serializable</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>math</name>.
            <name>BigDecimal</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>math</name>.
            <name>BigInteger</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Calendar</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Date</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>GregorianCalendar</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>javax</name>.<name>xml</name>.<name>datatype</name>.
            <name>DatatypeConstants</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>javax</name>.<name>xml</name>.<name>datatype</name>.
            <name>Duration</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>javax</name>.<name>xml</name>.<name>datatype</name>.
            <name>XMLGregorianCalendar</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>DatatypeMessageFormatter</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * &lt;p&gt;Immutable representation of a time span as defined in
        * the W3C XML Schema 1.0 specification.&lt;/p&gt;
        *
        * &lt;p&gt;A Duration object represents a period of Gregorian time,
        * which consists of six fields (years, months, days, hours,
        * minutes, and seconds) plus a sign (+/-) field.&lt;/p&gt;
        *
        * &lt;p&gt;The first five fields have non-negative (&gt;=0) integers or null
        * (which represents that the field is not set),
        * and the seconds field has a non-negative decimal or null.
        * A negative sign indicates a negative duration.&lt;/p&gt;
        *
        * &lt;p&gt;This class provides a number of methods that make it easy
        * to use for the duration datatype of XML Schema 1.0 with
        * the errata.&lt;/p&gt;
        *
        * &lt;h2&gt;Order relationship&lt;/h2&gt;
        * &lt;p&gt;Duration objects only have partial order, where two values A and B
        * maybe either:&lt;/p&gt;
        * &lt;ol&gt;
        * &lt;li&gt;A&amp;lt;B (A is shorter than B)
        * &lt;li&gt;A&amp;gt;B (A is longer than B)
        * &lt;li&gt;A==B (A and B are of the same duration)
        * &lt;li&gt;A&amp;lt;&gt;B (Comparison between A and B is indeterminate)
        * &lt;/ol&gt;
        * &lt;p&gt;For example, 30 days cannot be meaningfully compared to one month.
        * The {@link #compare(Duration)} method implements this
        * relationship.&lt;/p&gt;
        *
        * &lt;p&gt;See the {@link #isLongerThan(Duration)} method for details about
        * the order relationship among {@link Duration} objects.&lt;/p&gt;
        *
        *
        *
        * &lt;h2&gt;Operations over Duration&lt;/h2&gt;
        * &lt;p&gt;This class provides a set of basic arithmetic operations, such
        * as addition, subtraction and multiplication.
        * Because durations don't have total order, an operation could
        * fail for some combinations of operations. For example, you cannot
        * subtract 15 days from 1 month. See the javadoc of those methods
        * for detailed conditions where this could happen.&lt;/p&gt;
        *
        * &lt;p&gt;Also, division of a duration by a number is not provided because
        * the {@link Duration} class can only deal with finite precision
        * decimal numbers. For example, one cannot represent 1 sec divided by 3.&lt;/p&gt;
        *
        * &lt;p&gt;However, you could substitute a division by 3 with multiplying
        * by numbers such as 0.3 or 0.333.&lt;/p&gt;
        *
        *
        *
        * &lt;h2&gt;Range of allowed values&lt;/h2&gt;
        * &lt;p&gt;
        * Because some operations of {@link Duration} rely on {@link Calendar}
        * even though {@link Duration} can hold very large or very small values,
        * some of the methods may not work correctly on such {@link Duration}s.
        * The impacted methods document their dependency on {@link Calendar}.
        *
        *
        * @author &lt;a href="mailto:Kohsuke.Kawaguchi@Sun.com"&gt;Kohsuke Kawaguchi&lt;/a&gt;
        * @author &lt;a href="mailto:Joseph.Fialli@Sun.com"&gt;Joseph Fialli&lt;/a&gt;
        * @version $Id: DurationImpl.java,v 1.4 2005/05/17 20:59:48 mrglavas Exp $
        * @see XMLGregorianCalendar#add(Duration)
        */
    </comment>
    <class>class
        <name>DurationImpl</name>
        <super>
            <extends>extends
                <name>Duration</name>
            </extends>
            <implements>implements
                <name>Serializable</name>
            </implements>
        </super>
        <block>{

            <comment type="javadoc">/**
                * &lt;p&gt;Number of Fields.&lt;/p&gt;
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>FIELD_NUM</name> =
                    <init>
                        <expr>6</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * &lt;p&gt;Internal array of value Fields.&lt;/p&gt;
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name><name>DatatypeConstants</name>.
                            <name>Field</name>
                        </name>
                        <index>[]</index>
                    </type>
                    <name>FIELDS</name> =
                    <init>
                        <expr>new
                            <name><name>DatatypeConstants</name>.
                                <name>Field</name>
                                <index>[]</index>
                            </name>
                            <block>{
                                <expr>
                                    <name><name>DatatypeConstants</name>.
                                        <name>YEARS</name>
                                    </name>
                                </expr>
                                ,
                                <expr>
                                    <name><name>DatatypeConstants</name>.
                                        <name>MONTHS</name>
                                    </name>
                                </expr>
                                ,
                                <expr>
                                    <name><name>DatatypeConstants</name>.
                                        <name>DAYS</name>
                                    </name>
                                </expr>
                                ,
                                <expr>
                                    <name><name>DatatypeConstants</name>.
                                        <name>HOURS</name>
                                    </name>
                                </expr>
                                ,
                                <expr>
                                    <name><name>DatatypeConstants</name>.
                                        <name>MINUTES</name>
                                    </name>
                                </expr>
                                ,
                                <expr>
                                    <name><name>DatatypeConstants</name>.
                                        <name>SECONDS</name>
                                    </name>
                                </expr>
                                }
                            </block>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * &lt;p&gt;Internal array of value Field ids.&lt;/p&gt;
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                        <index>[]</index>
                    </type>
                    <name>FIELD_IDS</name> =
                    <init>
                        <expr>
                            <block>{
                                <expr>
                                    <call>
                                        <name><name>DatatypeConstants</name>.<name>YEARS</name>.
                                            <name>getId</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ,
                                <expr>
                                    <call>
                                        <name><name>DatatypeConstants</name>.<name>MONTHS</name>.
                                            <name>getId</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ,
                                <expr>
                                    <call>
                                        <name><name>DatatypeConstants</name>.<name>DAYS</name>.
                                            <name>getId</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ,
                                <expr>
                                    <call>
                                        <name><name>DatatypeConstants</name>.<name>HOURS</name>.
                                            <name>getId</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ,
                                <expr>
                                    <call>
                                        <name><name>DatatypeConstants</name>.<name>MINUTES</name>.
                                            <name>getId</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ,
                                <expr>
                                    <call>
                                        <name><name>DatatypeConstants</name>.<name>SECONDS</name>.
                                            <name>getId</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                }
                            </block>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * &lt;p&gt;BigDecimal value of 0.&lt;/p&gt;
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>BigDecimal</name>
                    </type>
                    <name>ZERO</name> =
                    <init>
                        <expr>
                            <call>
                                <name><name>BigDecimal</name>.
                                    <name>valueOf</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>(<name>long</name>) 0
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * &lt;p&gt;Indicates the sign. -1, 0 or 1 if the duration is negative,
                * zero, or positive.&lt;/p&gt;
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>signum</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * &lt;p&gt;Years of this &lt;code&gt;Duration&lt;/code&gt;.&lt;/p&gt;
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>BigInteger</name>
                    </type>
                    <name>years</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * &lt;p&gt;Months of this &lt;code&gt;Duration&lt;/code&gt;.&lt;/p&gt;
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>BigInteger</name>
                    </type>
                    <name>months</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * &lt;p&gt;Days of this &lt;code&gt;Duration&lt;/code&gt;.&lt;/p&gt;
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>BigInteger</name>
                    </type>
                    <name>days</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * &lt;p&gt;Hours of this &lt;code&gt;Duration&lt;/code&gt;.&lt;/p&gt;
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>BigInteger</name>
                    </type>
                    <name>hours</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * &lt;p&gt;Minutes of this &lt;code&gt;Duration&lt;/code&gt;.&lt;/p&gt;
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>BigInteger</name>
                    </type>
                    <name>minutes</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * &lt;p&gt;Seconds of this &lt;code&gt;Duration&lt;/code&gt;.&lt;/p&gt;
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>BigDecimal</name>
                    </type>
                    <name>seconds</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Returns the sign of this duration in -1,0, or 1.
                *
                * @return
                * -1 if this duration is negative, 0 if the duration is zero,
                * and 1 if the duration is postive.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getSign</name>
                <parameter_list>()</parameter_list>
                <block>{

                    <return>return
                        <expr>
                            <name>signum</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * TODO: Javadoc
                * @param isPositive Sign.
                *
                * @return 1 if positive, else -1.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>int</name>
                </type>
                <name>calcSignum</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>isPositive</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>(<name>years</name> == <name>null</name> ||
                                <call>
                                    <name><name>years</name>.
                                        <name>signum</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                == 0)
                                &amp;&amp; (<name>months</name> == <name>null</name> ||
                                <call>
                                    <name><name>months</name>.
                                        <name>signum</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                == 0)
                                &amp;&amp; (<name>days</name> == <name>null</name> ||
                                <call>
                                    <name><name>days</name>.
                                        <name>signum</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                == 0)
                                &amp;&amp; (<name>hours</name> == <name>null</name> ||
                                <call>
                                    <name><name>hours</name>.
                                        <name>signum</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                == 0)
                                &amp;&amp; (<name>minutes</name> == <name>null</name> ||
                                <call>
                                    <name><name>minutes</name>.
                                        <name>signum</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                == 0)
                                &amp;&amp; (<name>seconds</name> == <name>null</name> ||
                                <call>
                                    <name><name>seconds</name>.
                                        <name>signum</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                == 0)
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>0</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>isPositive</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>1</expr>;
                                </return>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <return>return <expr>-1</expr>;
                                </return>
                                }
                            </block>
                        </else>
                    </if>

                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Constructs a new Duration object by specifying each field individually.&lt;/p&gt;
                *
                * &lt;p&gt;All the parameters are optional as long as at least one field is present.
                * If specified, parameters have to be zero or positive.&lt;/p&gt;
                *
                * @param isPositive Set to &lt;code&gt;false&lt;/code&gt; to create a negative duration. When the length
                * of the duration is zero, this parameter will be ignored.
                * @param years of this &lt;code&gt;Duration&lt;/code&gt;
                * @param months of this &lt;code&gt;Duration&lt;/code&gt;
                * @param days of this &lt;code&gt;Duration&lt;/code&gt;
                * @param hours of this &lt;code&gt;Duration&lt;/code&gt;
                * @param minutes of this &lt;code&gt;Duration&lt;/code&gt;
                * @param seconds of this &lt;code&gt;Duration&lt;/code&gt;
                *
                * @throws IllegalArgumentException
                * If years, months, days, hours, minutes and
                * seconds parameters are all &lt;code&gt;null&lt;/code&gt;. Or if any
                * of those parameters are negative.
                */
            </comment>
            <constructor>
                <specifier>protected</specifier>
                <name>DurationImpl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>isPositive</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>BigInteger</name>
                            </type>
                            <name>years</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>BigInteger</name>
                            </type>
                            <name>months</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>BigInteger</name>
                            </type>
                            <name>days</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>BigInteger</name>
                            </type>
                            <name>hours</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>BigInteger</name>
                            </type>
                            <name>minutes</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>BigDecimal</name>
                            </type>
                            <name>seconds</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>years</name>
                            </name>
                            =
                            <name>years</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>months</name>
                            </name>
                            =
                            <name>months</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>days</name>
                            </name>
                            =
                            <name>days</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>hours</name>
                            </name>
                            =
                            <name>hours</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>minutes</name>
                            </name>
                            =
                            <name>minutes</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>seconds</name>
                            </name>
                            =
                            <name>seconds</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>signum</name>
                            </name>
                            =
                            <call>
                                <name>calcSignum</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>isPositive</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// sanity check</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>years</name>
                                ==
                                <name>null</name>
                                &amp;&amp; <name>months</name> ==
                                <name>null</name>
                                &amp;&amp; <name>days</name> ==
                                <name>null</name>
                                &amp;&amp; <name>hours</name> ==
                                <name>null</name>
                                &amp;&amp; <name>minutes</name> ==
                                <name>null</name>
                                &amp;&amp; <name>seconds</name> ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <comment type="line">//"all the fields are null"</comment>
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>DatatypeMessageFormatter</name>.
                                                                <name>formatMessage</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>null</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>"AllFieldsNull"</expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>null</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>testNonNegative</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>years</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>DatatypeConstants</name>.
                                                <name>YEARS</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>testNonNegative</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>months</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>DatatypeConstants</name>.
                                                <name>MONTHS</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>testNonNegative</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>days</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>DatatypeConstants</name>.
                                                <name>DAYS</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>testNonNegative</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>hours</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>DatatypeConstants</name>.
                                                <name>HOURS</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>testNonNegative</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>minutes</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>DatatypeConstants</name>.
                                                <name>MINUTES</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>testNonNegative</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>seconds</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>DatatypeConstants</name>.
                                                <name>SECONDS</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * &lt;p&gt;Makes sure that the given number is non-negative. If it is not,
                * throw {@link IllegalArgumentException}.&lt;/p&gt;
                *
                * @param n Number to test.
                * @param f Field to test.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>void</name>
                </type>
                <name>testNonNegative</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>BigInteger</name>
                            </type>
                            <name>n</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name><name>DatatypeConstants</name>.
                                    <name>Field</name>
                                </name>
                            </type>
                            <name>f</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>n</name>
                                != <name>null</name> &amp;&amp;
                                <call>
                                    <name><name>n</name>.
                                        <name>signum</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                &lt; 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>DatatypeMessageFormatter</name>.
                                                                <name>formatMessage</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>null</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>"NegativeField"</expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>new
                                                                        <name>
                                                                            <name>Object</name>
                                                                            <index>[]</index>
                                                                        </name>
                                                                        <block>{
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>f</name>.
                                                                                        <name>toString</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            }
                                                                        </block>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Makes sure that the given number is non-negative. If it is not,
                * throw {@link IllegalArgumentException}.&lt;/p&gt;
                *
                * @param n Number to test.
                * @param f Field to test.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>void</name>
                </type>
                <name>testNonNegative</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>BigDecimal</name>
                            </type>
                            <name>n</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name><name>DatatypeConstants</name>.
                                    <name>Field</name>
                                </name>
                            </type>
                            <name>f</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>n</name>
                                != <name>null</name> &amp;&amp;
                                <call>
                                    <name><name>n</name>.
                                        <name>signum</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                &lt; 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{

                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>DatatypeMessageFormatter</name>.
                                                                <name>formatMessage</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>null</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>"NegativeField"</expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>new
                                                                        <name>
                                                                            <name>Object</name>
                                                                            <index>[]</index>
                                                                        </name>
                                                                        <block>{
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>f</name>.
                                                                                        <name>toString</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            }
                                                                        </block>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Constructs a new Duration object by specifying each field
                * individually.&lt;/p&gt;
                *
                * &lt;p&gt;This method is functionally equivalent to
                * invoking another constructor by wrapping
                * all non-zero parameters into {@link BigInteger} and {@link BigDecimal}.
                * Zero value of int parameter is equivalent of null value of
                * the corresponding field.&lt;/p&gt;
                *
                * @see #DurationImpl(boolean, BigInteger, BigInteger, BigInteger, BigInteger,
                * BigInteger, BigDecimal)
                */
            </comment>
            <constructor>
                <specifier>protected</specifier>
                <name>DurationImpl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>boolean</name>
                            </type>
                            <name>isPositive</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>int</name>
                            </type>
                            <name>years</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>int</name>
                            </type>
                            <name>months</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>int</name>
                            </type>
                            <name>days</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>int</name>
                            </type>
                            <name>hours</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>int</name>
                            </type>
                            <name>minutes</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>int</name>
                            </type>
                            <name>seconds</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>this</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>isPositive</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>wrap</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>years</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>wrap</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>months</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>wrap</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>days</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>wrap</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>hours</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>wrap</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>minutes</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>seconds</name>
                                            != 0 ? new
                                            <call>
                                                <name>BigDecimal</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>String</name>.
                                                                    <name>valueOf</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>seconds</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            :
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * TODO: Javadoc
                *
                * @param i int to convert to BigInteger.
                *
                * @return BigInteger representation of int.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>BigInteger</name>
                </type>
                <name>wrap</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>int</name>
                            </type>
                            <name>i</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <comment type="line">// field may not be set</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>i</name>
                                ==
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// int -&gt; BigInteger</comment>
                    <return>return
                        <expr>new
                            <call>
                                <name>BigInteger</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>String</name>.
                                                    <name>valueOf</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Constructs a new Duration object by specifying the duration
                * in milliseconds.&lt;/p&gt;
                *
                * &lt;p&gt;The DAYS, HOURS, MINUTES and SECONDS fields are used to
                * represent the specifed duration in a reasonable way.
                * That is, the constructed object &lt;code&gt;x&lt;/code&gt; satisfies
                * the following conditions:&lt;/p&gt;
                * &lt;ul&gt;
                * &lt;li&gt;x.getHours()&amp;lt;24
                * &lt;li&gt;x.getMinutes()&amp;lt;60
                * &lt;li&gt;x.getSeconds()&amp;lt;60
                * &lt;/ul&gt;
                *
                * @param durationInMilliSeconds
                * The length of the duration in milliseconds.
                */
            </comment>
            <constructor>
                <specifier>protected</specifier>
                <name>DurationImpl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>long</name>
                            </type>
                            <name>durationInMilliSeconds</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>is0x8000000000000000L</name> =
                            <init>
                                <expr>false</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>long</name>
                            </type>
                            <name>l</name> =
                            <init>
                                <expr>
                                    <name>durationInMilliSeconds</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <name>l</name>
                                &gt; 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>signum</name>
                                        = 1
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>l</name>
                                        &lt; 0
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>signum</name>
                                                = -1
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>l</name>
                                                    == 0x8000000000000000L
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <comment type="line">// negating 0x8000000000000000L causes an
                                                        overflow
                                                    </comment>
                                                    <expr_stmt>
                                                        <expr><name>l</name>++
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>is0x8000000000000000L</name>
                                                            = true
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name>l</name>
                                                *= -1
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>signum</name>
                                                = 0
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </else>
                            </if>
                        </else>
                    </if>

                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>years</name>
                            </name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>months</name>
                            </name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>seconds</name>
                            </name>
                            =
                            <call>
                                <name><name>BigDecimal</name>.
                                    <name>valueOf</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>(<name>l</name> % 60000L) + (<name>is0x8000000000000000L</name> ? 1 : 0)
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>3</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name>l</name>
                            /= 60000L
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>minutes</name>
                            </name>
                            = (<name>l</name> == 0) ? <name>null</name> :
                            <call>
                                <name><name>BigInteger</name>.
                                    <name>valueOf</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>l</name>
                                            % 60L
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name>l</name>
                            /= 60L
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>hours</name>
                            </name>
                            = (<name>l</name> == 0) ? <name>null</name> :
                            <call>
                                <name><name>BigInteger</name>.
                                    <name>valueOf</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>l</name>
                                            % 24L
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name>l</name>
                            /= 24L
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>days</name>
                            </name>
                            = (<name>l</name> == 0) ? <name>null</name> :
                            <call>
                                <name><name>BigInteger</name>.
                                    <name>valueOf</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>l</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>


            <comment type="javadoc">/**
                * Constructs a new Duration object by
                * parsing its string representation
                * "PnYnMnDTnHnMnS" as defined in XML Schema 1.0 section 3.2.6.1.
                *
                * &lt;p&gt;
                * The string representation may not have any leading
                * and trailing whitespaces.
                *
                * &lt;p&gt;
                * For example, this method parses strings like
                * "P1D" (1 day), "-PT100S" (-100 sec.), "P1DT12H" (1 days and 12 hours).
                *
                * &lt;p&gt;
                * The parsing is done field by field so that
                * the following holds for any lexically correct string x:
                * &lt;pre&gt;
                * new Duration(x).toString().equals(x)
                * &lt;/pre&gt;
                *
                * Returns a non-null valid duration object that holds the value
                * indicated by the lexicalRepresentation parameter.
                *
                * @param lexicalRepresentation
                * Lexical representation of a duration.
                * @throws IllegalArgumentException
                * If the given string does not conform to the aforementioned
                * specification.
                * @throws NullPointerException
                * If the given string is null.
                */
            </comment>
            <constructor>
                <specifier>protected</specifier>
                <name>DurationImpl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>lexicalRepresentation</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IllegalArgumentException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <comment type="line">// only if I could use the JDK1.4 regular expression ....</comment>

                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>String</name>
                            </type>
                            <name>s</name> =
                            <init>
                                <expr>
                                    <name>lexicalRepresentation</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>positive</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                                <index>[]</index>
                            </type>
                            <name>idx</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>int</name>
                                        <index>[<expr>1</expr>]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>length</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>s</name>.
                                            <name>length</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>timeRequired</name> =
                            <init>
                                <expr>false</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <name>lexicalRepresentation</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>NullPointerException</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>

                    <expr_stmt>
                        <expr>
                            <name>
                                <name>idx</name>
                                <index>[<expr>0</expr>]
                                </index>
                            </name>
                            = 0
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>length</name>
                                !=
                                <name>
                                    <name>idx</name>
                                    <index>[<expr>0</expr>]
                                    </index>
                                </name>
                                &amp;&amp;
                                <call>
                                    <name><name>s</name>.
                                        <name>charAt</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>
                                                    <name>idx</name>
                                                    <index>[<expr>0</expr>]
                                                    </index>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                == '-'
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>
                                            <name>idx</name>
                                            <index>[<expr>0</expr>]
                                            </index>
                                        </name>
                                        ++
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>positive</name>
                                        = false
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>positive</name>
                                        = true
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>length</name>
                                !=
                                <name>
                                    <name>idx</name>
                                    <index>[<expr>0</expr>]
                                    </index>
                                </name>
                                &amp;&amp;
                                <call>
                                    <name><name>s</name>.
                                        <name>charAt</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>
                                                    <name>idx</name>
                                                    <index>[<expr>0</expr>]
                                                    </index>
                                                </name>
                                                ++
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                != 'P'
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>s</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                <comment type="line">//,idx[0]-1);</comment>
                                }
                            </block>
                        </then>
                    </if>


                    <comment type="line">// phase 1: chop the string into chunks</comment>
                    <comment type="line">// (where a chunk is '&lt;number&gt;&lt;a symbol&gt;'</comment>
                    <comment type="line">//--------------------------------------</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>dateLen</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                                <index>[]</index>
                            </type>
                            <name>dateParts</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>String</name>
                                        <index>[<expr>3</expr>]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                                <index>[]</index>
                            </type>
                            <name>datePartsIndex</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>int</name>
                                        <index>[<expr>3</expr>]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <while>while
                        <condition>(
                            <expr>
                                <name>length</name>
                                !=
                                <name>
                                    <name>idx</name>
                                    <index>[<expr>0</expr>]
                                    </index>
                                </name>
                                &amp;&amp;
                                <call>
                                    <name>isDigit</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <call>
                                                    <name><name>s</name>.
                                                        <name>charAt</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>
                                                                    <name>idx</name>
                                                                    <index>[<expr>0</expr>]
                                                                    </index>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                &amp;&amp; <name>dateLen</name> &lt; 3
                            </expr>
                            )
                        </condition>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>datePartsIndex</name>
                                        <index>[
                                            <expr>
                                                <name>dateLen</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    =
                                    <name>
                                        <name>idx</name>
                                        <index>[<expr>0</expr>]
                                        </index>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>dateParts</name>
                                        <index>[
                                            <expr><name>dateLen</name>++
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    =
                                    <call>
                                        <name>parsePiece</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>s</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>idx</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </while>

                    <if>if
                        <condition>(
                            <expr>
                                <name>length</name>
                                !=
                                <name>
                                    <name>idx</name>
                                    <index>[<expr>0</expr>]
                                    </index>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>s</name>.
                                                    <name>charAt</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>
                                                                <name>idx</name>
                                                                <index>[<expr>0</expr>]
                                                                </index>
                                                            </name>
                                                            ++
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            == 'T'
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>timeRequired</name>
                                                    = true
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>IllegalArgumentException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>s</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            <comment type="line">// ,idx[0]-1);</comment>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>timeLen</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                                <index>[]</index>
                            </type>
                            <name>timeParts</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>String</name>
                                        <index>[<expr>3</expr>]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                                <index>[]</index>
                            </type>
                            <name>timePartsIndex</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>int</name>
                                        <index>[<expr>3</expr>]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <while>while
                        <condition>(
                            <expr>
                                <name>length</name>
                                !=
                                <name>
                                    <name>idx</name>
                                    <index>[<expr>0</expr>]
                                    </index>
                                </name>
                                &amp;&amp;
                                <call>
                                    <name>isDigitOrPeriod</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <call>
                                                    <name><name>s</name>.
                                                        <name>charAt</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>
                                                                    <name>idx</name>
                                                                    <index>[<expr>0</expr>]
                                                                    </index>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                &amp;&amp; <name>timeLen</name> &lt; 3
                            </expr>
                            )
                        </condition>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>timePartsIndex</name>
                                        <index>[
                                            <expr>
                                                <name>timeLen</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    =
                                    <name>
                                        <name>idx</name>
                                        <index>[<expr>0</expr>]
                                        </index>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>timeParts</name>
                                        <index>[
                                            <expr><name>timeLen</name>++
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    =
                                    <call>
                                        <name>parsePiece</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>s</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>idx</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </while>

                    <if>if
                        <condition>(
                            <expr>
                                <name>timeRequired</name>
                                &amp;&amp; <name>timeLen</name> == 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>s</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                <comment type="line">// ,idx[0]);</comment>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>length</name>
                                !=
                                <name>
                                    <name>idx</name>
                                    <index>[<expr>0</expr>]
                                    </index>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>s</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                <comment type="line">// ,idx[0]);</comment>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>dateLen</name>
                                == 0 &amp;&amp; <name>timeLen</name> == 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>s</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                <comment type="line">// ,idx[0]);</comment>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// phase 2: check the ordering of chunks</comment>
                    <comment type="line">//--------------------------------------</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>organizeParts</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>s</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>dateParts</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>datePartsIndex</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>dateLen</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"YMD"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>organizeParts</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>s</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>timeParts</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>timePartsIndex</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>timeLen</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HMS"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// parse into numbers</comment>
                    <expr_stmt>
                        <expr>
                            <name>years</name>
                            =
                            <call>
                                <name>parseBigInteger</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>s</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>dateParts</name>
                                                <index>[<expr>0</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>datePartsIndex</name>
                                                <index>[<expr>0</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>months</name>
                            =
                            <call>
                                <name>parseBigInteger</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>s</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>dateParts</name>
                                                <index>[<expr>1</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>datePartsIndex</name>
                                                <index>[<expr>1</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>days</name>
                            =
                            <call>
                                <name>parseBigInteger</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>s</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>dateParts</name>
                                                <index>[<expr>2</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>datePartsIndex</name>
                                                <index>[<expr>2</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>hours</name>
                            =
                            <call>
                                <name>parseBigInteger</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>s</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>timeParts</name>
                                                <index>[<expr>0</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>timePartsIndex</name>
                                                <index>[<expr>0</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>minutes</name>
                            =
                            <call>
                                <name>parseBigInteger</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>s</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>timeParts</name>
                                                <index>[<expr>1</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>timePartsIndex</name>
                                                <index>[<expr>1</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>seconds</name>
                            =
                            <call>
                                <name>parseBigDecimal</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>s</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>timeParts</name>
                                                <index>[<expr>2</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>timePartsIndex</name>
                                                <index>[<expr>2</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>signum</name>
                            =
                            <call>
                                <name>calcSignum</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>positive</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>


            <comment type="javadoc">/**
                * TODO: Javadoc
                *
                * @param ch char to test.
                *
                * @return true if ch is a digit, else false.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>boolean</name>
                </type>
                <name>isDigit</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>char</name>
                            </type>
                            <name>ch</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>'0' &lt;= <name>ch</name> &amp;&amp; <name>ch</name> &lt;= '9'
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * TODO: Javadoc
                *
                * @param ch to test.
                *
                * @return true if ch is a digit or a period, else false.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>boolean</name>
                </type>
                <name>isDigitOrPeriod</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>char</name>
                            </type>
                            <name>ch</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>isDigit</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>ch</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            || <name>ch</name> == '.'
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * TODO: Javadoc
                *
                * @param whole String to parse.
                * @param idx TODO: ???
                *
                * @return Result of parsing.
                *
                * @throws IllegalArgumentException If whole cannot be parsed.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>String</name>
                </type>
                <name>parsePiece</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>whole</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>int</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>idx</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IllegalArgumentException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>start</name> =
                            <init>
                                <expr>
                                    <name>
                                        <name>idx</name>
                                        <index>[<expr>0</expr>]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <while>while
                        <condition>(
                            <expr>
                                <name>
                                    <name>idx</name>
                                    <index>[<expr>0</expr>]
                                    </index>
                                </name>
                                &lt;
                                <call>
                                    <name><name>whole</name>.
                                        <name>length</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                &amp;&amp;
                                <call>
                                    <name>isDigitOrPeriod</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <call>
                                                    <name><name>whole</name>.
                                                        <name>charAt</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>
                                                                    <name>idx</name>
                                                                    <index>[<expr>0</expr>]
                                                                    </index>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>idx</name>
                                        <index>[<expr>0</expr>]
                                        </index>
                                    </name>
                                    ++
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </while>
                    <if>if
                        <condition>(
                            <expr>
                                <name>
                                    <name>idx</name>
                                    <index>[<expr>0</expr>]
                                    </index>
                                </name>
                                ==
                                <call>
                                    <name><name>whole</name>.
                                        <name>length</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>whole</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                <comment type="line">// ,idx[0]);</comment>
                                }
                            </block>
                        </then>
                    </if>

                    <expr_stmt>
                        <expr>
                            <name>
                                <name>idx</name>
                                <index>[<expr>0</expr>]
                                </index>
                            </name>
                            ++
                        </expr>
                        ;
                    </expr_stmt>

                    <return>return
                        <expr>
                            <call>
                                <name><name>whole</name>.
                                    <name>substring</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>start</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>idx</name>
                                                <index>[<expr>0</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * TODO: Javadoc.
                *
                * @param whole TODO: ???
                * @param parts TODO: ???
                * @param partsIndex TODO: ???
                * @param len TODO: ???
                * @param tokens TODO: ???
                *
                * @throws IllegalArgumentException TODO: ???
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>void</name>
                </type>
                <name>organizeParts</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>whole</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>String</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>parts</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>int</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>partsIndex</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>len</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>tokens</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IllegalArgumentException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>idx</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>tokens</name>.
                                            <name>length</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>
                                        <name>len</name>
                                        - 1
                                    </expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &gt;= 0
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>--
                            </expr>
                        </incr>
                        )
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>nidx</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>tokens</name>.
                                                    <name>lastIndexOf</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>
                                                                <name>parts</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>i</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            .
                                                            <call>
                                                                <name>charAt</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>
                                                                                <name>parts</name>
                                                                                <index>[
                                                                                    <expr>
                                                                                        <name>i</name>
                                                                                    </expr>
                                                                                    ]
                                                                                </index>
                                                                            </name>
                                                                            .
                                                                            <call>
                                                                                <name>length</name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            - 1
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>idx</name>
                                                            - 1
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>nidx</name>
                                        == -1
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <throw>throw
                                            <expr>new
                                                <call>
                                                    <name>IllegalArgumentException</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>whole</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </throw>
                                        <comment type="line">// ,partsIndex[i]+parts[i].length()-1);</comment>
                                        }
                                    </block>
                                </then>
                            </if>

                            <for>for (
                                <init>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>j</name> =
                                        <init>
                                            <expr>
                                                <name>nidx</name>
                                                + 1
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </init>
                                <condition>
                                    <expr>
                                        <name>j</name>
                                        &lt;
                                        <name>idx</name>
                                    </expr>
                                    ;
                                </condition>
                                <incr>
                                    <expr><name>j</name>++
                                    </expr>
                                </incr>
                                )
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <name>
                                                <name>parts</name>
                                                <index>[
                                                    <expr>
                                                        <name>j</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                            =
                                            <name>null</name>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                            </for>
                            <expr_stmt>
                                <expr>
                                    <name>idx</name>
                                    =
                                    <name>nidx</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>parts</name>
                                        <index>[
                                            <expr>
                                                <name>idx</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    =
                                    <name>
                                        <name>parts</name>
                                        <index>[
                                            <expr>
                                                <name>i</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>partsIndex</name>
                                        <index>[
                                            <expr>
                                                <name>idx</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    =
                                    <name>
                                        <name>partsIndex</name>
                                        <index>[
                                            <expr>
                                                <name>i</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </for>
                    <for>for (
                        <init>
                            <expr><name>idx</name>--
                            </expr>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>idx</name>
                                &gt;= 0
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>idx</name>--
                            </expr>
                        </incr>
                        )
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>parts</name>
                                        <index>[
                                            <expr>
                                                <name>idx</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    =
                                    <name>null</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </for>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * TODO: Javadoc
                *
                * @param whole TODO: ???.
                * @param part TODO: ???.
                * @param index TODO: ???.
                *
                * @return TODO: ???.
                *
                * @throws IllegalArgumentException TODO: ???.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>BigInteger</name>
                </type>
                <name>parseBigInteger</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>whole</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>part</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IllegalArgumentException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>part</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name>part</name>
                            =
                            <call>
                                <name><name>part</name>.
                                    <name>substring</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>part</name>.
                                                    <name>length</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            - 1
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// try {</comment>
                    <return>return
                        <expr>new
                            <call>
                                <name>BigInteger</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>part</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    <comment type="line">// } catch( NumberFormatException e ) {</comment>
                    <comment type="line">// throw new ParseException( whole, index );</comment>
                    <comment type="line">// }</comment>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * TODO: Javadoc.
                *
                * @param whole TODO: ???.
                * @param part TODO: ???.
                * @param index TODO: ???.
                *
                * @return TODO: ???.
                *
                * @throws IllegalArgumentException TODO: ???.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>BigDecimal</name>
                </type>
                <name>parseBigDecimal</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>whole</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>part</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IllegalArgumentException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>part</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name>part</name>
                            =
                            <call>
                                <name><name>part</name>.
                                    <name>substring</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>part</name>.
                                                    <name>length</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            - 1
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// NumberFormatException is IllegalArgumentException</comment>
                    <comment type="line">// try {</comment>
                    <return>return
                        <expr>new
                            <call>
                                <name>BigDecimal</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>part</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    <comment type="line">// } catch( NumberFormatException e ) {</comment>
                    <comment type="line">// throw new ParseException( whole, index );</comment>
                    <comment type="line">// }</comment>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Four constants defined for the comparison of durations.&lt;/p&gt;
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>XMLGregorianCalendar</name>
                        <index>[]</index>
                    </type>
                    <name>TEST_POINTS</name> =
                    <init>
                        <expr>new
                            <name>
                                <name>XMLGregorianCalendar</name>
                                <index>[]</index>
                            </name>
                            <block>{
                                <expr>
                                    <call>
                                        <name><name>XMLGregorianCalendarImpl</name>.
                                            <name>parse</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"1696-09-01T00:00:00Z"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ,
                                <expr>
                                    <call>
                                        <name><name>XMLGregorianCalendarImpl</name>.
                                            <name>parse</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"1697-02-01T00:00:00Z"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ,
                                <expr>
                                    <call>
                                        <name><name>XMLGregorianCalendarImpl</name>.
                                            <name>parse</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"1903-03-01T00:00:00Z"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ,
                                <expr>
                                    <call>
                                        <name><name>XMLGregorianCalendarImpl</name>.
                                            <name>parse</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"1903-07-01T00:00:00Z"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                }
                            </block>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * &lt;p&gt;Partial order relation comparison with this &lt;code&gt;Duration&lt;/code&gt; instance.&lt;/p&gt;
                *
                * &lt;p&gt;Comparison result must be in accordance with
                * &lt;a href="http://www.w3.org/TR/xmlschema-2/#duration-order"&gt;W3C XML Schema 1.0 Part 2, Section
                3.2.7.6.2,
                * &lt;i&gt;Order relation on duration&lt;/i&gt;&lt;/a&gt;.&lt;/p&gt;
                *
                * &lt;p&gt;Return:&lt;/p&gt;
                * &lt;ul&gt;
                * &lt;li&gt;{@link DatatypeConstants#LESSER} if this &lt;code&gt;Duration&lt;/code&gt; is shorter than
                &lt;code&gt;duration&lt;/code&gt; parameter&lt;/li&gt;
                * &lt;li&gt;{@link DatatypeConstants#EQUAL} if this &lt;code&gt;Duration&lt;/code&gt; is equal to &lt;code&gt;duration&lt;/code&gt;
                parameter&lt;/li&gt;
                * &lt;li&gt;{@link DatatypeConstants#GREATER} if this &lt;code&gt;Duration&lt;/code&gt; is longer than
                &lt;code&gt;duration&lt;/code&gt; parameter&lt;/li&gt;
                * &lt;li&gt;{@link DatatypeConstants#INDETERMINATE} if a conclusive partial order relation cannot be
                determined&lt;/li&gt;
                * &lt;/ul&gt;
                *
                * @param duration to compare
                *
                * @return the relationship between &lt;code&gt;this&lt;/code&gt; &lt;code&gt;Duration&lt;/code&gt;and
                &lt;code&gt;duration&lt;/code&gt; parameter as
                * {@link DatatypeConstants#LESSER}, {@link DatatypeConstants#EQUAL}, {@link DatatypeConstants#GREATER}
                * or {@link DatatypeConstants#INDETERMINATE}.
                *
                * @throws UnsupportedOperationException If the underlying implementation
                * cannot reasonably process the request, e.g. W3C XML Schema allows for
                * arbitrarily large/small/precise values, the request may be beyond the
                * implementations capability.
                * @throws NullPointerException if &lt;code&gt;duration&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;.
                *
                * @see #isShorterThan(Duration)
                * @see #isLongerThan(Duration)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>compare</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Duration</name>
                            </type>
                            <name>rhs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>BigInteger</name>
                            </type>
                            <name>maxintAsBigInteger</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>BigInteger</name>.
                                            <name>valueOf</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>(<name>long</name>)
                                                    <name><name>Integer</name>.
                                                        <name>MAX_VALUE</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>BigInteger</name>
                            </type>
                            <name>minintAsBigInteger</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>BigInteger</name>.
                                            <name>valueOf</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>(<name>long</name>)
                                                    <name><name>Integer</name>.
                                                        <name>MIN_VALUE</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// check for fields that are too large in this Duration</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>years</name>
                                != <name>null</name> &amp;&amp;
                                <call>
                                    <name><name>years</name>.
                                        <name>compareTo</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>maxintAsBigInteger</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                == 1
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>UnsupportedOperationException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>DatatypeMessageFormatter</name>.
                                                                <name>formatMessage</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>null</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>"TooLarge"</expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>new
                                                                        <name>
                                                                            <name>Object</name>
                                                                            <index>[]</index>
                                                                        </name>
                                                                        <block>{
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>this</name>.
                                                                                        <name>getClass</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                .
                                                                                <call>
                                                                                    <name>getName</name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                + "#compare(Duration duration)" +
                                                                                <call>
                                                                                    <name><name>DatatypeConstants</name>
                                                                                        .<name>YEARS</name>.
                                                                                        <name>toString</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ,
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>years</name>.
                                                                                        <name>toString</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            }
                                                                        </block>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                <comment type="line">//this.getClass().getName() + "#compare(Duration
                                                    duration)"
                                                </comment>
                                                <comment type="line">//+ " years too large to be supported by this
                                                    implementation "
                                                </comment>
                                                <comment type="line">//+ years.toString()</comment>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>months</name>
                                != <name>null</name> &amp;&amp;
                                <call>
                                    <name><name>months</name>.
                                        <name>compareTo</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>maxintAsBigInteger</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                == 1
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>UnsupportedOperationException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>DatatypeMessageFormatter</name>.
                                                                <name>formatMessage</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>null</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>"TooLarge"</expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>new
                                                                        <name>
                                                                            <name>Object</name>
                                                                            <index>[]</index>
                                                                        </name>
                                                                        <block>{
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>this</name>.
                                                                                        <name>getClass</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                .
                                                                                <call>
                                                                                    <name>getName</name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                + "#compare(Duration duration)" +
                                                                                <call>
                                                                                    <name><name>DatatypeConstants</name>
                                                                                        .<name>MONTHS</name>.
                                                                                        <name>toString</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ,
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>months</name>.
                                                                                        <name>toString</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            }
                                                                        </block>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>

                                                <comment type="line">//this.getClass().getName() + "#compare(Duration
                                                    duration)"
                                                </comment>
                                                <comment type="line">//+ " months too large to be supported by this
                                                    implementation "
                                                </comment>
                                                <comment type="line">//+ months.toString()</comment>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>days</name>
                                != <name>null</name> &amp;&amp;
                                <call>
                                    <name><name>days</name>.
                                        <name>compareTo</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>maxintAsBigInteger</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                == 1
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>UnsupportedOperationException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>DatatypeMessageFormatter</name>.
                                                                <name>formatMessage</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>null</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>"TooLarge"</expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>new
                                                                        <name>
                                                                            <name>Object</name>
                                                                            <index>[]</index>
                                                                        </name>
                                                                        <block>{
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>this</name>.
                                                                                        <name>getClass</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                .
                                                                                <call>
                                                                                    <name>getName</name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                + "#compare(Duration duration)" +
                                                                                <call>
                                                                                    <name><name>DatatypeConstants</name>
                                                                                        .<name>DAYS</name>.
                                                                                        <name>toString</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ,
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>days</name>.
                                                                                        <name>toString</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            }
                                                                        </block>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>

                                                <comment type="line">//this.getClass().getName() + "#compare(Duration
                                                    duration)"
                                                </comment>
                                                <comment type="line">//+ " days too large to be supported by this
                                                    implementation "
                                                </comment>
                                                <comment type="line">//+ days.toString()</comment>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>hours</name>
                                != <name>null</name> &amp;&amp;
                                <call>
                                    <name><name>hours</name>.
                                        <name>compareTo</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>maxintAsBigInteger</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                == 1
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>UnsupportedOperationException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>DatatypeMessageFormatter</name>.
                                                                <name>formatMessage</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>null</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>"TooLarge"</expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>new
                                                                        <name>
                                                                            <name>Object</name>
                                                                            <index>[]</index>
                                                                        </name>
                                                                        <block>{
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>this</name>.
                                                                                        <name>getClass</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                .
                                                                                <call>
                                                                                    <name>getName</name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                + "#compare(Duration duration)" +
                                                                                <call>
                                                                                    <name><name>DatatypeConstants</name>
                                                                                        .<name>HOURS</name>.
                                                                                        <name>toString</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ,
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>hours</name>.
                                                                                        <name>toString</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            }
                                                                        </block>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>

                                                <comment type="line">//this.getClass().getName() + "#compare(Duration
                                                    duration)"
                                                </comment>
                                                <comment type="line">//+ " hours too large to be supported by this
                                                    implementation "
                                                </comment>
                                                <comment type="line">//+ hours.toString()</comment>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>minutes</name>
                                != <name>null</name> &amp;&amp;
                                <call>
                                    <name><name>minutes</name>.
                                        <name>compareTo</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>maxintAsBigInteger</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                == 1
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>UnsupportedOperationException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>DatatypeMessageFormatter</name>.
                                                                <name>formatMessage</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>null</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>"TooLarge"</expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>new
                                                                        <name>
                                                                            <name>Object</name>
                                                                            <index>[]</index>
                                                                        </name>
                                                                        <block>{
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>this</name>.
                                                                                        <name>getClass</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                .
                                                                                <call>
                                                                                    <name>getName</name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                + "#compare(Duration duration)" +
                                                                                <call>
                                                                                    <name><name>DatatypeConstants</name>
                                                                                        .<name>MINUTES</name>.
                                                                                        <name>toString</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ,
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>minutes</name>.
                                                                                        <name>toString</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            }
                                                                        </block>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>

                                                <comment type="line">//this.getClass().getName() + "#compare(Duration
                                                    duration)"
                                                </comment>
                                                <comment type="line">//+ " minutes too large to be supported by this
                                                    implementation "
                                                </comment>
                                                <comment type="line">//+ minutes.toString()</comment>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>seconds</name>
                                != <name>null</name> &amp;&amp;
                                <call>
                                    <name><name>seconds</name>.
                                        <name>toBigInteger</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                .
                                <call>
                                    <name>compareTo</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>maxintAsBigInteger</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                == 1
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>UnsupportedOperationException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>DatatypeMessageFormatter</name>.
                                                                <name>formatMessage</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>null</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>"TooLarge"</expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>new
                                                                        <name>
                                                                            <name>Object</name>
                                                                            <index>[]</index>
                                                                        </name>
                                                                        <block>{
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>this</name>.
                                                                                        <name>getClass</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                .
                                                                                <call>
                                                                                    <name>getName</name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                + "#compare(Duration duration)" +
                                                                                <call>
                                                                                    <name><name>DatatypeConstants</name>
                                                                                        .<name>SECONDS</name>.
                                                                                        <name>toString</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ,
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>seconds</name>.
                                                                                        <name>toString</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            }
                                                                        </block>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>

                                                <comment type="line">//this.getClass().getName() + "#compare(Duration
                                                    duration)"
                                                </comment>
                                                <comment type="line">//+ " seconds too large to be supported by this
                                                    implementation "
                                                </comment>
                                                <comment type="line">//+ seconds.toString()</comment>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// check for fields that are too large in rhs Duration</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>BigInteger</name>
                            </type>
                            <name>rhsYears</name> =
                            <init>
                                <expr>(<name>BigInteger</name>)
                                    <call>
                                        <name><name>rhs</name>.
                                            <name>getField</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>DatatypeConstants</name>.
                                                        <name>YEARS</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>rhsYears</name>
                                != <name>null</name> &amp;&amp;
                                <call>
                                    <name><name>rhsYears</name>.
                                        <name>compareTo</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>maxintAsBigInteger</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                == 1
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>UnsupportedOperationException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>DatatypeMessageFormatter</name>.
                                                                <name>formatMessage</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>null</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>"TooLarge"</expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>new
                                                                        <name>
                                                                            <name>Object</name>
                                                                            <index>[]</index>
                                                                        </name>
                                                                        <block>{
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>this</name>.
                                                                                        <name>getClass</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                .
                                                                                <call>
                                                                                    <name>getName</name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                + "#compare(Duration duration)" +
                                                                                <call>
                                                                                    <name><name>DatatypeConstants</name>
                                                                                        .<name>YEARS</name>.
                                                                                        <name>toString</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ,
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>rhsYears</name>.
                                                                                        <name>toString</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            }
                                                                        </block>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>

                                                <comment type="line">//this.getClass().getName() + "#compare(Duration
                                                    duration)"
                                                </comment>
                                                <comment type="line">//+ " years too large to be supported by this
                                                    implementation "
                                                </comment>
                                                <comment type="line">//+ rhsYears.toString()</comment>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>BigInteger</name>
                            </type>
                            <name>rhsMonths</name> =
                            <init>
                                <expr>(<name>BigInteger</name>)
                                    <call>
                                        <name><name>rhs</name>.
                                            <name>getField</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>DatatypeConstants</name>.
                                                        <name>MONTHS</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>rhsMonths</name>
                                != <name>null</name> &amp;&amp;
                                <call>
                                    <name><name>rhsMonths</name>.
                                        <name>compareTo</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>maxintAsBigInteger</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                == 1
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>UnsupportedOperationException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>DatatypeMessageFormatter</name>.
                                                                <name>formatMessage</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>null</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>"TooLarge"</expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>new
                                                                        <name>
                                                                            <name>Object</name>
                                                                            <index>[]</index>
                                                                        </name>
                                                                        <block>{
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>this</name>.
                                                                                        <name>getClass</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                .
                                                                                <call>
                                                                                    <name>getName</name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                + "#compare(Duration duration)" +
                                                                                <call>
                                                                                    <name><name>DatatypeConstants</name>
                                                                                        .<name>MONTHS</name>.
                                                                                        <name>toString</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ,
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>rhsMonths</name>.
                                                                                        <name>toString</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            }
                                                                        </block>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>

                                                <comment type="line">//this.getClass().getName() + "#compare(Duration
                                                    duration)"
                                                </comment>
                                                <comment type="line">//+ " months too large to be supported by this
                                                    implementation "
                                                </comment>
                                                <comment type="line">//+ rhsMonths.toString()</comment>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>BigInteger</name>
                            </type>
                            <name>rhsDays</name> =
                            <init>
                                <expr>(<name>BigInteger</name>)
                                    <call>
                                        <name><name>rhs</name>.
                                            <name>getField</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>DatatypeConstants</name>.
                                                        <name>DAYS</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>rhsDays</name>
                                != <name>null</name> &amp;&amp;
                                <call>
                                    <name><name>rhsDays</name>.
                                        <name>compareTo</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>maxintAsBigInteger</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                == 1
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>UnsupportedOperationException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>DatatypeMessageFormatter</name>.
                                                                <name>formatMessage</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>null</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>"TooLarge"</expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>new
                                                                        <name>
                                                                            <name>Object</name>
                                                                            <index>[]</index>
                                                                        </name>
                                                                        <block>{
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>this</name>.
                                                                                        <name>getClass</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                .
                                                                                <call>
                                                                                    <name>getName</name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                + "#compare(Duration duration)" +
                                                                                <call>
                                                                                    <name><name>DatatypeConstants</name>
                                                                                        .<name>DAYS</name>.
                                                                                        <name>toString</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ,
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>rhsDays</name>.
                                                                                        <name>toString</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            }
                                                                        </block>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>

                                                <comment type="line">//this.getClass().getName() + "#compare(Duration
                                                    duration)"
                                                </comment>
                                                <comment type="line">//+ " days too large to be supported by this
                                                    implementation "
                                                </comment>
                                                <comment type="line">//+ rhsDays.toString()</comment>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>BigInteger</name>
                            </type>
                            <name>rhsHours</name> =
                            <init>
                                <expr>(<name>BigInteger</name>)
                                    <call>
                                        <name><name>rhs</name>.
                                            <name>getField</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>DatatypeConstants</name>.
                                                        <name>HOURS</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>rhsHours</name>
                                != <name>null</name> &amp;&amp;
                                <call>
                                    <name><name>rhsHours</name>.
                                        <name>compareTo</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>maxintAsBigInteger</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                == 1
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>UnsupportedOperationException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>DatatypeMessageFormatter</name>.
                                                                <name>formatMessage</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>null</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>"TooLarge"</expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>new
                                                                        <name>
                                                                            <name>Object</name>
                                                                            <index>[]</index>
                                                                        </name>
                                                                        <block>{
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>this</name>.
                                                                                        <name>getClass</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                .
                                                                                <call>
                                                                                    <name>getName</name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                + "#compare(Duration duration)" +
                                                                                <call>
                                                                                    <name><name>DatatypeConstants</name>
                                                                                        .<name>HOURS</name>.
                                                                                        <name>toString</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ,
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>rhsHours</name>.
                                                                                        <name>toString</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            }
                                                                        </block>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>

                                                <comment type="line">//this.getClass().getName() + "#compare(Duration
                                                    duration)"
                                                </comment>
                                                <comment type="line">//+ " hours too large to be supported by this
                                                    implementation "
                                                </comment>
                                                <comment type="line">//+ rhsHours.toString()</comment>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>BigInteger</name>
                            </type>
                            <name>rhsMinutes</name> =
                            <init>
                                <expr>(<name>BigInteger</name>)
                                    <call>
                                        <name><name>rhs</name>.
                                            <name>getField</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>DatatypeConstants</name>.
                                                        <name>MINUTES</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>rhsMinutes</name>
                                != <name>null</name> &amp;&amp;
                                <call>
                                    <name><name>rhsMinutes</name>.
                                        <name>compareTo</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>maxintAsBigInteger</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                == 1
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>UnsupportedOperationException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>DatatypeMessageFormatter</name>.
                                                                <name>formatMessage</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>null</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>"TooLarge"</expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>new
                                                                        <name>
                                                                            <name>Object</name>
                                                                            <index>[]</index>
                                                                        </name>
                                                                        <block>{
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>this</name>.
                                                                                        <name>getClass</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                .
                                                                                <call>
                                                                                    <name>getName</name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                + "#compare(Duration duration)" +
                                                                                <call>
                                                                                    <name><name>DatatypeConstants</name>
                                                                                        .<name>MINUTES</name>.
                                                                                        <name>toString</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ,
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>rhsMinutes</name>.
                                                                                        <name>toString</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            }
                                                                        </block>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>

                                                <comment type="line">//this.getClass().getName() + "#compare(Duration
                                                    duration)"
                                                </comment>
                                                <comment type="line">//+ " minutes too large to be supported by this
                                                    implementation "
                                                </comment>
                                                <comment type="line">//+ rhsMinutes.toString()</comment>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>BigDecimal</name>
                            </type>
                            <name>rhsSecondsAsBigDecimal</name> =
                            <init>
                                <expr>(<name>BigDecimal</name>)
                                    <call>
                                        <name><name>rhs</name>.
                                            <name>getField</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>DatatypeConstants</name>.
                                                        <name>SECONDS</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>BigInteger</name>
                            </type>
                            <name>rhsSeconds</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>rhsSecondsAsBigDecimal</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>rhsSeconds</name>
                                        =
                                        <call>
                                            <name><name>rhsSecondsAsBigDecimal</name>.
                                                <name>toBigInteger</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>rhsSeconds</name>
                                != <name>null</name> &amp;&amp;
                                <call>
                                    <name><name>rhsSeconds</name>.
                                        <name>compareTo</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>maxintAsBigInteger</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                == 1
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>UnsupportedOperationException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>DatatypeMessageFormatter</name>.
                                                                <name>formatMessage</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>null</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>"TooLarge"</expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>new
                                                                        <name>
                                                                            <name>Object</name>
                                                                            <index>[]</index>
                                                                        </name>
                                                                        <block>{
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>this</name>.
                                                                                        <name>getClass</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                .
                                                                                <call>
                                                                                    <name>getName</name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                + "#compare(Duration duration)" +
                                                                                <call>
                                                                                    <name><name>DatatypeConstants</name>
                                                                                        .<name>SECONDS</name>.
                                                                                        <name>toString</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ,
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>rhsSeconds</name>.
                                                                                        <name>toString</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            }
                                                                        </block>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>

                                                <comment type="line">//this.getClass().getName() + "#compare(Duration
                                                    duration)"
                                                </comment>
                                                <comment type="line">//+ " seconds too large to be supported by this
                                                    implementation "
                                                </comment>
                                                <comment type="line">//+ rhsSeconds.toString()</comment>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// turn this Duration into a GregorianCalendar</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>GregorianCalendar</name>
                            </type>
                            <name>lhsCalendar</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>GregorianCalendar</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>1970</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>1</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>1</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>0</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>0</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>0</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>lhsCalendar</name>.
                                    <name>add</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>GregorianCalendar</name>.
                                                <name>YEAR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getYears</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            *
                                            <call>
                                                <name>getSign</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>lhsCalendar</name>.
                                    <name>add</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>GregorianCalendar</name>.
                                                <name>MONTH</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getMonths</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            *
                                            <call>
                                                <name>getSign</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>lhsCalendar</name>.
                                    <name>add</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>GregorianCalendar</name>.
                                                <name>DAY_OF_YEAR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getDays</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            *
                                            <call>
                                                <name>getSign</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>lhsCalendar</name>.
                                    <name>add</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>GregorianCalendar</name>.
                                                <name>HOUR_OF_DAY</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getHours</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            *
                                            <call>
                                                <name>getSign</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>lhsCalendar</name>.
                                    <name>add</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>GregorianCalendar</name>.
                                                <name>MINUTE</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getMinutes</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            *
                                            <call>
                                                <name>getSign</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>lhsCalendar</name>.
                                    <name>add</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>GregorianCalendar</name>.
                                                <name>SECOND</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getSeconds</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            *
                                            <call>
                                                <name>getSign</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// turn compare Duration into a GregorianCalendar</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>GregorianCalendar</name>
                            </type>
                            <name>rhsCalendar</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>GregorianCalendar</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>1970</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>1</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>1</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>0</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>0</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>0</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>rhsCalendar</name>.
                                    <name>add</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>GregorianCalendar</name>.
                                                <name>YEAR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>rhs</name>.
                                                    <name>getYears</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            *
                                            <call>
                                                <name><name>rhs</name>.
                                                    <name>getSign</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>rhsCalendar</name>.
                                    <name>add</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>GregorianCalendar</name>.
                                                <name>MONTH</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>rhs</name>.
                                                    <name>getMonths</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            *
                                            <call>
                                                <name><name>rhs</name>.
                                                    <name>getSign</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>rhsCalendar</name>.
                                    <name>add</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>GregorianCalendar</name>.
                                                <name>DAY_OF_YEAR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>rhs</name>.
                                                    <name>getDays</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            *
                                            <call>
                                                <name><name>rhs</name>.
                                                    <name>getSign</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>rhsCalendar</name>.
                                    <name>add</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>GregorianCalendar</name>.
                                                <name>HOUR_OF_DAY</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>rhs</name>.
                                                    <name>getHours</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            *
                                            <call>
                                                <name><name>rhs</name>.
                                                    <name>getSign</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>rhsCalendar</name>.
                                    <name>add</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>GregorianCalendar</name>.
                                                <name>MINUTE</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>rhs</name>.
                                                    <name>getMinutes</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            *
                                            <call>
                                                <name><name>rhs</name>.
                                                    <name>getSign</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>rhsCalendar</name>.
                                    <name>add</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>GregorianCalendar</name>.
                                                <name>SECOND</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>rhs</name>.
                                                    <name>getSeconds</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            *
                                            <call>
                                                <name><name>rhs</name>.
                                                    <name>getSign</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>


                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>lhsCalendar</name>.
                                        <name>equals</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>rhsCalendar</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name><name>DatatypeConstants</name>.
                                            <name>EQUAL</name>
                                        </name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <return>return
                        <expr>
                            <call>
                                <name>compareDates</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>this</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>rhs</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Compares 2 given durations. (refer to W3C Schema Datatypes "3.2.6 duration")
                *
                * @param duration1 Unnormalized duration
                * @param duration2 Unnormalized duration
                * @return INDETERMINATE if the order relationship between date1 and date2 is indeterminate.
                * EQUAL if the order relation between date1 and date2 is EQUAL.
                * If the strict parameter is true, return LESS_THAN if date1 is less than date2 and
                * return GREATER_THAN if date1 is greater than date2.
                * If the strict parameter is false, return LESS_THAN if date1 is less than OR equal to date2 and
                * return GREATER_THAN if date1 is greater than OR equal to date2
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>int</name>
                </type>
                <name>compareDates</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Duration</name>
                            </type>
                            <name>duration1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Duration</name>
                            </type>
                            <name>duration2</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>resultA</name> =
                            <init>
                                <expr>
                                    <name><name>DatatypeConstants</name>.
                                        <name>INDETERMINATE</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>resultB</name> =
                            <init>
                                <expr>
                                    <name><name>DatatypeConstants</name>.
                                        <name>INDETERMINATE</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XMLGregorianCalendar</name>
                            </type>
                            <name>tempA</name> =
                            <init>
                                <expr>(<name>XMLGregorianCalendar</name>)
                                    <name>
                                        <name>TEST_POINTS</name>
                                        <index>[<expr>0</expr>]
                                        </index>
                                    </name>
                                    .
                                    <call>
                                        <name>clone</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XMLGregorianCalendar</name>
                            </type>
                            <name>tempB</name> =
                            <init>
                                <expr>(<name>XMLGregorianCalendar</name>)
                                    <name>
                                        <name>TEST_POINTS</name>
                                        <index>[<expr>0</expr>]
                                        </index>
                                    </name>
                                    .
                                    <call>
                                        <name>clone</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">//long comparison algorithm is required</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>tempA</name>.
                                    <name>add</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>duration1</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>tempB</name>.
                                    <name>add</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>duration2</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>resultA</name>
                            =
                            <call>
                                <name><name>tempA</name>.
                                    <name>compare</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>tempB</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>resultA</name>
                                ==
                                <name><name>DatatypeConstants</name>.
                                    <name>INDETERMINATE</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name><name>DatatypeConstants</name>.
                                            <name>INDETERMINATE</name>
                                        </name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <expr_stmt>
                        <expr>
                            <name>tempA</name>
                            = (<name>XMLGregorianCalendar</name>)
                            <name>
                                <name>TEST_POINTS</name>
                                <index>[<expr>1</expr>]
                                </index>
                            </name>
                            .
                            <call>
                                <name>clone</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>tempB</name>
                            = (<name>XMLGregorianCalendar</name>)
                            <name>
                                <name>TEST_POINTS</name>
                                <index>[<expr>1</expr>]
                                </index>
                            </name>
                            .
                            <call>
                                <name>clone</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>tempA</name>.
                                    <name>add</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>duration1</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>tempB</name>.
                                    <name>add</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>duration2</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>resultB</name>
                            =
                            <call>
                                <name><name>tempA</name>.
                                    <name>compare</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>tempB</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>resultA</name>
                            =
                            <call>
                                <name>compareResults</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>resultA</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>resultB</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>resultA</name>
                                ==
                                <name><name>DatatypeConstants</name>.
                                    <name>INDETERMINATE</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name><name>DatatypeConstants</name>.
                                            <name>INDETERMINATE</name>
                                        </name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <expr_stmt>
                        <expr>
                            <name>tempA</name>
                            = (<name>XMLGregorianCalendar</name>)
                            <name>
                                <name>TEST_POINTS</name>
                                <index>[<expr>2</expr>]
                                </index>
                            </name>
                            .
                            <call>
                                <name>clone</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>tempB</name>
                            = (<name>XMLGregorianCalendar</name>)
                            <name>
                                <name>TEST_POINTS</name>
                                <index>[<expr>2</expr>]
                                </index>
                            </name>
                            .
                            <call>
                                <name>clone</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>tempA</name>.
                                    <name>add</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>duration1</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>tempB</name>.
                                    <name>add</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>duration2</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>resultB</name>
                            =
                            <call>
                                <name><name>tempA</name>.
                                    <name>compare</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>tempB</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>resultA</name>
                            =
                            <call>
                                <name>compareResults</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>resultA</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>resultB</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>resultA</name>
                                ==
                                <name><name>DatatypeConstants</name>.
                                    <name>INDETERMINATE</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name><name>DatatypeConstants</name>.
                                            <name>INDETERMINATE</name>
                                        </name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <expr_stmt>
                        <expr>
                            <name>tempA</name>
                            = (<name>XMLGregorianCalendar</name>)
                            <name>
                                <name>TEST_POINTS</name>
                                <index>[<expr>3</expr>]
                                </index>
                            </name>
                            .
                            <call>
                                <name>clone</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>tempB</name>
                            = (<name>XMLGregorianCalendar</name>)
                            <name>
                                <name>TEST_POINTS</name>
                                <index>[<expr>3</expr>]
                                </index>
                            </name>
                            .
                            <call>
                                <name>clone</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>tempA</name>.
                                    <name>add</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>duration1</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>tempB</name>.
                                    <name>add</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>duration2</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>resultB</name>
                            =
                            <call>
                                <name><name>tempA</name>.
                                    <name>compare</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>tempB</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>resultA</name>
                            =
                            <call>
                                <name>compareResults</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>resultA</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>resultB</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <return>return
                        <expr>
                            <name>resultA</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name>int</name>
                </type>
                <name>compareResults</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>resultA</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>resultB</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name>resultB</name>
                                ==
                                <name><name>DatatypeConstants</name>.
                                    <name>INDETERMINATE</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name><name>DatatypeConstants</name>.
                                            <name>INDETERMINATE</name>
                                        </name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr><name>resultA</name>!=
                                        <name>resultB</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>
                                                <name><name>DatatypeConstants</name>.
                                                    <name>INDETERMINATE</name>
                                                </name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                        </else>
                    </if>
                    <return>return
                        <expr>
                            <name>resultA</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns a hash code consistent with the definition of the equals method.
                *
                * @see Object#hashCode()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>hashCode</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <comment type="line">// component wise hash is not correct because 1day = 24hours</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Calendar</name>
                            </type>
                            <name>cal</name> =
                            <init>
                                <expr>
                                    <name>
                                        <name>TEST_POINTS</name>
                                        <index>[<expr>0</expr>]
                                        </index>
                                    </name>
                                    .
                                    <call>
                                        <name>toGregorianCalendar</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>this</name>.
                                    <name>addTo</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>cal</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>(<name>int</name>)
                            <call>
                                <name>getCalendarTimeInMillis</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>cal</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns a string representation of this duration object.
                *
                * &lt;p&gt;
                * The result is formatter according to the XML Schema 1.0
                * spec and can be always parsed back later into the
                * equivalent duration object by
                * the {@link #DurationImpl(String)} constructor.
                *
                * &lt;p&gt;
                * Formally, the following holds for any {@link Duration}
                * object x.
                * &lt;pre&gt;
                * new Duration(x.toString()).equals(x)
                * &lt;/pre&gt;
                *
                * @return
                * Always return a non-null valid String object.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>toString</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>StringBuffer</name>
                            </type>
                            <name>buf</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>StringBuffer</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>signum</name>
                                &lt; 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>buf</name>.
                                                <name>append</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>'-'</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>buf</name>.
                                    <name>append</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>'P'</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <name>years</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>buf</name>.
                                                <name>append</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>years</name>
                                                        + "Y"
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>months</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>buf</name>.
                                                <name>append</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>months</name>
                                                        + "M"
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>days</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>buf</name>.
                                                <name>append</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>days</name>
                                                        + "D"
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>hours</name>
                                != <name>null</name> || <name>minutes</name> != <name>null</name> || <name>seconds
                            </name> !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>buf</name>.
                                                <name>append</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>'T'</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>hours</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>buf</name>.
                                                            <name>append</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>hours</name>
                                                                    + "H"
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>minutes</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>buf</name>.
                                                            <name>append</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>minutes</name>
                                                                    + "M"
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>seconds</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>buf</name>.
                                                            <name>append</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name>toString</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>seconds</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                    + "S"
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <return>return
                        <expr>
                            <call>
                                <name><name>buf</name>.
                                    <name>toString</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Turns {@link BigDecimal} to a string representation.&lt;/p&gt;
                *
                * &lt;p&gt;Due to a behavior change in the {@link BigDecimal#toString()}
                * method in JDK1.5, this had to be implemented here.&lt;/p&gt;
                *
                * @param bd &lt;code&gt;BigDecimal&lt;/code&gt; to format as a &lt;code&gt;String&lt;/code&gt;
                *
                * @return &lt;code&gt;String&lt;/code&gt; representation of &lt;code&gt;BigDecimal&lt;/code&gt;
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>String</name>
                </type>
                <name>toString</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>BigDecimal</name>
                            </type>
                            <name>bd</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>intString</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>bd</name>.
                                            <name>unscaledValue</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>toString</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>scale</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>bd</name>.
                                            <name>scale</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <name>scale</name>
                                == 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>intString</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="block">/* Insert decimal point */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>StringBuffer</name>
                            </type>
                            <name>buf</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>insertionPoint</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>intString</name>.
                                            <name>length</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    -
                                    <name>scale</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>insertionPoint</name>
                                == 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="block">/* Point goes right before intVal */</comment>
                                <return>return
                                    <expr>"0." +
                                        <name>intString</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>insertionPoint</name>
                                        &gt; 0
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <comment type="block">/* Point goes inside intVal */</comment>
                                        <expr_stmt>
                                            <expr>
                                                <name>buf</name>
                                                = new
                                                <call>
                                                    <name>StringBuffer</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>intString</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>buf</name>.
                                                        <name>insert</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>insertionPoint</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>'.'</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <comment type="block">/* We must insert zeros between point and intVal */
                                        </comment>
                                        <expr_stmt>
                                            <expr>
                                                <name>buf</name>
                                                = new
                                                <call>
                                                    <name>StringBuffer</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>3 - <name>insertionPoint</name> +
                                                                <call>
                                                                    <name><name>intString</name>.
                                                                        <name>length</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>buf</name>.
                                                        <name>append</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"0."</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <for>for (
                                            <init>
                                                <decl>
                                                    <type>
                                                        <name>int</name>
                                                    </type>
                                                    <name>i</name> =
                                                    <init>
                                                        <expr>0</expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </init>
                                            <condition>
                                                <expr>
                                                    <name>i</name>
                                                    &lt; -
                                                    <name>insertionPoint</name>
                                                </expr>
                                                ;
                                            </condition>
                                            <incr>
                                                <expr><name>i</name>++
                                                </expr>
                                            </incr>
                                            )
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>buf</name>.
                                                                <name>append</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>'0'</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </for>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>buf</name>.
                                                        <name>append</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>intString</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </else>
                            </if>
                        </else>
                    </if>
                    <return>return
                        <expr>
                            <call>
                                <name><name>buf</name>.
                                    <name>toString</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Checks if a field is set.
                *
                * A field of a duration object may or may not be present.
                * This method can be used to test if a field is present.
                *
                * @param field
                * one of the six Field constants (YEARS,MONTHS,DAYS,HOURS,
                * MINUTES, or SECONDS.)
                * @return
                * true if the field is present. false if not.
                *
                * @throws NullPointerException
                * If the field parameter is null.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isSet</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>DatatypeConstants</name>.
                                    <name>Field</name>
                                </name>
                            </type>
                            <name>field</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name>field</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                        </type>
                                        <name>methodName</name> =
                                        <init>
                                            <expr>"javax.xml.datatype.Duration" + "#isSet(DatatypeConstants.Field
                                                field)"
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>NullPointerException</name>
                                            <argument_list>(
                                                <comment type="line">//"cannot be called with field == null"</comment>
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>DatatypeMessageFormatter</name>.
                                                                <name>formatMessage</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>null</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>"FieldCannotBeNull"</expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>new
                                                                        <name>
                                                                            <name>Object</name>
                                                                            <index>[]</index>
                                                                        </name>
                                                                        <block>{
                                                                            <expr>
                                                                                <name>methodName</name>
                                                                            </expr>
                                                                            }
                                                                        </block>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>field</name>
                                ==
                                <name><name>DatatypeConstants</name>.
                                    <name>YEARS</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>years</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>field</name>
                                ==
                                <name><name>DatatypeConstants</name>.
                                    <name>MONTHS</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>months</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>field</name>
                                ==
                                <name><name>DatatypeConstants</name>.
                                    <name>DAYS</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>days</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>field</name>
                                ==
                                <name><name>DatatypeConstants</name>.
                                    <name>HOURS</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>hours</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>field</name>
                                ==
                                <name><name>DatatypeConstants</name>.
                                    <name>MINUTES</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>minutes</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>field</name>
                                ==
                                <name><name>DatatypeConstants</name>.
                                    <name>SECONDS</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>seconds</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>methodName</name> =
                            <init>
                                <expr>"javax.xml.datatype.Duration" + "#isSet(DatatypeConstants.Field field)"</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <throw>throw
                        <expr>new
                            <call>
                                <name>IllegalArgumentException</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>DatatypeMessageFormatter</name>.
                                                    <name>formatMessage</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>null</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>"UnknownField"</expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>new
                                                            <name>
                                                                <name>Object</name>
                                                                <index>[]</index>
                                                            </name>
                                                            <block>{
                                                                <expr>
                                                                    <name>methodName</name>
                                                                </expr>
                                                                ,
                                                                <expr>
                                                                    <call>
                                                                        <name><name>field</name>.
                                                                            <name>toString</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                                }
                                                            </block>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>

                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Gets the value of a field.
                *
                * Fields of a duration object may contain arbitrary large value.
                * Therefore this method is designed to return a {@link Number} object.
                *
                * In case of YEARS, MONTHS, DAYS, HOURS, and MINUTES, the returned
                * number will be a non-negative integer. In case of seconds,
                * the returned number may be a non-negative decimal value.
                *
                * @param field
                * one of the six Field constants (YEARS,MONTHS,DAYS,HOURS,
                * MINUTES, or SECONDS.)
                * @return
                * If the specified field is present, this method returns
                * a non-null non-negative {@link Number} object that
                * represents its value. If it is not present, return null.
                * For YEARS, MONTHS, DAYS, HOURS, and MINUTES, this method
                * returns a {@link BigInteger} object. For SECONDS, this
                * method returns a {@link BigDecimal}.
                *
                * @throws NullPointerException
                * If the field parameter is null.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Number</name>
                </type>
                <name>getField</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>DatatypeConstants</name>.
                                    <name>Field</name>
                                </name>
                            </type>
                            <name>field</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name>field</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                        </type>
                                        <name>methodName</name> =
                                        <init>
                                            <expr>"javax.xml.datatype.Duration" + "#isSet(DatatypeConstants.Field field)
                                                "
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>

                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>NullPointerException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>DatatypeMessageFormatter</name>.
                                                                <name>formatMessage</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>null</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>"FieldCannotBeNull"</expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>new
                                                                        <name>
                                                                            <name>Object</name>
                                                                            <index>[]</index>
                                                                        </name>
                                                                        <block>{
                                                                            <expr>
                                                                                <name>methodName</name>
                                                                            </expr>
                                                                            }
                                                                        </block>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>field</name>
                                ==
                                <name><name>DatatypeConstants</name>.
                                    <name>YEARS</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>years</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>field</name>
                                ==
                                <name><name>DatatypeConstants</name>.
                                    <name>MONTHS</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>months</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>field</name>
                                ==
                                <name><name>DatatypeConstants</name>.
                                    <name>DAYS</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>days</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>field</name>
                                ==
                                <name><name>DatatypeConstants</name>.
                                    <name>HOURS</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>hours</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>field</name>
                                ==
                                <name><name>DatatypeConstants</name>.
                                    <name>MINUTES</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>minutes</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>field</name>
                                ==
                                <name><name>DatatypeConstants</name>.
                                    <name>SECONDS</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>seconds</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="javadoc">/**
                        throw new IllegalArgumentException(
                        "javax.xml.datatype.Duration"
                        + "#(getSet(DatatypeConstants.Field field) called with an unknown field: "
                        + field.toString()
                        );
                        */
                    </comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>methodName</name> =
                            <init>
                                <expr>"javax.xml.datatype.Duration" + "#(getSet(DatatypeConstants.Field field)"</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <throw>throw
                        <expr>new
                            <call>
                                <name>IllegalArgumentException</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>DatatypeMessageFormatter</name>.
                                                    <name>formatMessage</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>null</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>"UnknownField"</expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>new
                                                            <name>
                                                                <name>Object</name>
                                                                <index>[]</index>
                                                            </name>
                                                            <block>{
                                                                <expr>
                                                                    <name>methodName</name>
                                                                </expr>
                                                                ,
                                                                <expr>
                                                                    <call>
                                                                        <name><name>field</name>.
                                                                            <name>toString</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                                }
                                                            </block>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>

                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Obtains the value of the YEARS field as an integer value,
                * or 0 if not present.
                *
                * &lt;p&gt;
                * This method is a convenience method around the
                * {@link #getField(DatatypeConstants.Field)} method.
                *
                * &lt;p&gt;
                * Note that since this method returns &lt;tt&gt;int&lt;/tt&gt;, this
                * method will return an incorrect value for {@link Duration}s
                * with the year field that goes beyond the range of &lt;tt&gt;int&lt;/tt&gt;.
                * Use &lt;code&gt;getField(YEARS)&lt;/code&gt; to avoid possible loss of precision.&lt;/p&gt;
                *
                * @return
                * If the YEARS field is present, return
                * its value as an integer by using the {@link Number#intValue()}
                * method. If the YEARS field is not present, return 0.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getYears</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getInt</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>DatatypeConstants</name>.
                                                <name>YEARS</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Obtains the value of the MONTHS field as an integer value,
                * or 0 if not present.
                *
                * This method works just like {@link #getYears()} except
                * that this method works on the MONTHS field.
                *
                * @return Months of this &lt;code&gt;Duration&lt;/code&gt;.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getMonths</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getInt</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>DatatypeConstants</name>.
                                                <name>MONTHS</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Obtains the value of the DAYS field as an integer value,
                * or 0 if not present.
                *
                * This method works just like {@link #getYears()} except
                * that this method works on the DAYS field.
                *
                * @return Days of this &lt;code&gt;Duration&lt;/code&gt;.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getDays</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getInt</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>DatatypeConstants</name>.
                                                <name>DAYS</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Obtains the value of the HOURS field as an integer value,
                * or 0 if not present.
                *
                * This method works just like {@link #getYears()} except
                * that this method works on the HOURS field.
                *
                * @return Hours of this &lt;code&gt;Duration&lt;/code&gt;.
                *
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getHours</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getInt</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>DatatypeConstants</name>.
                                                <name>HOURS</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Obtains the value of the MINUTES field as an integer value,
                * or 0 if not present.
                *
                * This method works just like {@link #getYears()} except
                * that this method works on the MINUTES field.
                *
                * @return Minutes of this &lt;code&gt;Duration&lt;/code&gt;.
                *
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getMinutes</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getInt</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>DatatypeConstants</name>.
                                                <name>MINUTES</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Obtains the value of the SECONDS field as an integer value,
                * or 0 if not present.
                *
                * This method works just like {@link #getYears()} except
                * that this method works on the SECONDS field.
                *
                * @return seconds in the integer value. The fraction of seconds
                * will be discarded (for example, if the actual value is 2.5,
                * this method returns 2)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getSeconds</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getInt</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>DatatypeConstants</name>.
                                                <name>SECONDS</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Return the requested field value as an int.&lt;/p&gt;
                *
                * &lt;p&gt;If field is not set, i.e. == null, 0 is returned.&lt;/p&gt;
                *
                * @param field To get value for.
                *
                * @return int value of field or 0 if field is not set.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>int</name>
                </type>
                <name>getInt</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>DatatypeConstants</name>.
                                    <name>Field</name>
                                </name>
                            </type>
                            <name>field</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Number</name>
                            </type>
                            <name>n</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getField</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>field</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>n</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>0</expr>;
                                </return>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <return>return
                                    <expr>
                                        <call>
                                            <name><name>n</name>.
                                                <name>intValue</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Returns the length of the duration in milli-seconds.&lt;/p&gt;
                *
                * &lt;p&gt;If the seconds field carries more digits than milli-second order,
                * those will be simply discarded (or in other words, rounded to zero.)
                * For example, for any Calendar value &lt;code&gt;x&lt;code&gt;,&lt;/p&gt;
                * &lt;pre&gt;
                * &lt;code&gt;new Duration("PT10.00099S").getTimeInMills(x) == 10000&lt;/code&gt;.
                * &lt;code&gt;new Duration("-PT10.00099S").getTimeInMills(x) == -10000&lt;/code&gt;.
                * &lt;/pre&gt;
                *
                * &lt;p&gt;
                * Note that this method uses the {@link #addTo(Calendar)} method,
                * which may work incorectly with {@link Duration} objects with
                * very large values in its fields. See the {@link #addTo(Calendar)}
                * method for details.
                *
                * @param startInstant
                * The length of a month/year varies. The &lt;code&gt;startInstant&lt;/code&gt; is
                * used to disambiguate this variance. Specifically, this method
                * returns the difference between &lt;code&gt;startInstant&lt;/code&gt; and
                * &lt;code&gt;startInstant+duration&lt;/code&gt;
                *
                * @return milliseconds between &lt;code&gt;startInstant&lt;/code&gt; and
                * &lt;code&gt;startInstant&lt;/code&gt; plus this &lt;code&gt;Duration&lt;/code&gt;
                *
                * @throws NullPointerException if &lt;code&gt;startInstant&lt;/code&gt; parameter
                * is null.
                *
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>long</name>
                </type>
                <name>getTimeInMillis</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>Calendar</name>
                            </type>
                            <name>startInstant</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Calendar</name>
                            </type>
                            <name>cal</name> =
                            <init>
                                <expr>(<name>Calendar</name>)
                                    <call>
                                        <name><name>startInstant</name>.
                                            <name>clone</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>addTo</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>cal</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <call>
                                <name>getCalendarTimeInMillis</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>cal</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            -
                            <call>
                                <name>getCalendarTimeInMillis</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>startInstant</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Returns the length of the duration in milli-seconds.&lt;/p&gt;
                *
                * &lt;p&gt;If the seconds field carries more digits than milli-second order,
                * those will be simply discarded (or in other words, rounded to zero.)
                * For example, for any &lt;code&gt;Date&lt;/code&gt; value &lt;code&gt;x&lt;code&gt;,&lt;/p&gt;
                * &lt;pre&gt;
                * &lt;code&gt;new Duration("PT10.00099S").getTimeInMills(x) == 10000&lt;/code&gt;.
                * &lt;code&gt;new Duration("-PT10.00099S").getTimeInMills(x) == -10000&lt;/code&gt;.
                * &lt;/pre&gt;
                *
                * &lt;p&gt;
                * Note that this method uses the {@link #addTo(Date)} method,
                * which may work incorectly with {@link Duration} objects with
                * very large values in its fields. See the {@link #addTo(Date)}
                * method for details.
                *
                * @param startInstant
                * The length of a month/year varies. The &lt;code&gt;startInstant&lt;/code&gt; is
                * used to disambiguate this variance. Specifically, this method
                * returns the difference between &lt;code&gt;startInstant&lt;/code&gt; and
                * &lt;code&gt;startInstant+duration&lt;/code&gt;.
                *
                * @throws NullPointerException
                * If the startInstant parameter is null.
                *
                * @return milliseconds between &lt;code&gt;startInstant&lt;/code&gt; and
                * &lt;code&gt;startInstant&lt;/code&gt; plus this &lt;code&gt;Duration&lt;/code&gt;
                *
                * @see #getTimeInMillis(Calendar)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>long</name>
                </type>
                <name>getTimeInMillis</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>Date</name>
                            </type>
                            <name>startInstant</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Calendar</name>
                            </type>
                            <name>cal</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>GregorianCalendar</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>cal</name>.
                                    <name>setTime</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>startInstant</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>this</name>.
                                    <name>addTo</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>cal</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <call>
                                <name>getCalendarTimeInMillis</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>cal</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            -
                            <call>
                                <name><name>startInstant</name>.
                                    <name>getTime</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">// /**</comment>
            <comment type="line">// * Returns an equivalent but "normalized" duration value.</comment>
            <comment type="line">// *</comment>
            <comment type="line">// * Intuitively, the normalization moves YEARS into</comment>
            <comment type="line">// * MONTHS (by x12) and moves DAYS, HOURS, and MINUTES fields</comment>
            <comment type="line">// * into SECONDS (by x86400, x3600, and x60 respectively.)</comment>
            <comment type="line">// *</comment>
            <comment type="line">// *</comment>
            <comment type="line">// * Formally, this method satisfies the following conditions:</comment>
            <comment type="line">// * &lt;ul&gt;</comment>
            <comment type="line">// * &lt;li&gt;x.normalize().equals(x)</comment>
            <comment type="line">// * &lt;li&gt;!x.normalize().isSet(Duration.YEARS)</comment>
            <comment type="line">// * &lt;li&gt;!x.normalize().isSet(Duration.DAYS)</comment>
            <comment type="line">// * &lt;li&gt;!x.normalize().isSet(Duration.HOURS)</comment>
            <comment type="line">// * &lt;li&gt;!x.normalize().isSet(Duration.MINUTES)</comment>
            <comment type="line">// * &lt;/ul&gt;</comment>
            <comment type="line">// *</comment>
            <comment type="line">// * @return</comment>
            <comment type="line">// * always return a non-null valid value.</comment>
            <comment type="line">// */</comment>
            <comment type="line">// public Duration normalize() {</comment>
            <comment type="line">// return null;</comment>
            <comment type="line">// }</comment>

            <comment type="javadoc">/**
                * &lt;p&gt;Converts the years and months fields into the days field
                * by using a specific time instant as the reference point.&lt;/p&gt;
                *
                * &lt;p&gt;For example, duration of one month normalizes to 31 days
                * given the start time instance "July 8th 2003, 17:40:32".&lt;/p&gt;
                *
                * &lt;p&gt;Formally, the computation is done as follows:&lt;/p&gt;
                * &lt;ol&gt;
                * &lt;li&gt;The given Calendar object is cloned.
                * &lt;li&gt;The years, months and days fields will be added to
                * the {@link Calendar} object
                * by using the {@link Calendar#add(int,int)} method.
                * &lt;li&gt;The difference between two Calendars are computed in terms of days.
                * &lt;li&gt;The computed days, along with the hours, minutes and seconds
                * fields of this duration object is used to construct a new
                * Duration object.
                * &lt;/ol&gt;
                *
                * &lt;p&gt;Note that since the Calendar class uses &lt;code&gt;int&lt;/code&gt; to
                * hold the value of year and month, this method may produce
                * an unexpected result if this duration object holds
                * a very large value in the years or months fields.&lt;/p&gt;
                *
                * @param startTimeInstant &lt;code&gt;Calendar&lt;/code&gt; reference point.
                *
                * @return &lt;code&gt;Duration&lt;/code&gt; of years and months of this &lt;code&gt;Duration&lt;/code&gt;
                as days.
                *
                * @throws NullPointerException If the startTimeInstant parameter is null.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Duration</name>
                </type>
                <name>normalizeWith</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Calendar</name>
                            </type>
                            <name>startTimeInstant</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Calendar</name>
                            </type>
                            <name>c</name> =
                            <init>
                                <expr>(<name>Calendar</name>)
                                    <call>
                                        <name><name>startTimeInstant</name>.
                                            <name>clone</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// using int may cause overflow, but</comment>
                    <comment type="line">// Calendar internally treats value as int anyways.</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>c</name>.
                                    <name>add</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>YEAR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getYears</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            *
                                            <name>signum</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>c</name>.
                                    <name>add</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>MONTH</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getMonths</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            *
                                            <name>signum</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>c</name>.
                                    <name>add</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>DAY_OF_MONTH</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getDays</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            *
                                            <name>signum</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// obtain the difference in terms of days</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>long</name>
                            </type>
                            <name>diff</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getCalendarTimeInMillis</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>c</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    -
                                    <call>
                                        <name>getCalendarTimeInMillis</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>startTimeInstant</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>days</name> =
                            <init>
                                <expr>
                                    <call>(<name>int</name>)
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>diff</name>
                                                    / (1000L * 60L * 60L * 24L)
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <return>return
                        <expr>new
                            <call>
                                <name>DurationImpl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>days</name>
                                            &gt;= 0
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>wrap</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>Math</name>.
                                                                    <name>abs</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>days</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>(<name>BigInteger</name>)
                                            <call>
                                                <name>getField</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>DatatypeConstants</name>.
                                                                <name>HOURS</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>(<name>BigInteger</name>)
                                            <call>
                                                <name>getField</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>DatatypeConstants</name>.
                                                                <name>MINUTES</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>(<name>BigDecimal</name>)
                                            <call>
                                                <name>getField</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>DatatypeConstants</name>.
                                                                <name>SECONDS</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Computes a new duration whose value is &lt;code&gt;factor&lt;/code&gt; times
                * longer than the value of this duration.&lt;/p&gt;
                *
                * &lt;p&gt;This method is provided for the convenience.
                * It is functionally equivalent to the following code:&lt;/p&gt;
                * &lt;pre&gt;
                * multiply(new BigDecimal(String.valueOf(factor)))
                * &lt;/pre&gt;
                *
                * @param factor Factor times longer of new &lt;code&gt;Duration&lt;/code&gt; to create.
                *
                * @return New &lt;code&gt;Duration&lt;/code&gt; that is &lt;code&gt;factor&lt;/code&gt;times longer than
                this &lt;code&gt;Duration&lt;/code&gt;.
                *
                * @see #multiply(BigDecimal)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Duration</name>
                </type>
                <name>multiply</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>factor</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>multiply</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>BigDecimal</name>.
                                                    <name>valueOf</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>factor</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Computes a new duration whose value is &lt;code&gt;factor&lt;/code&gt; times
                * longer than the value of this duration.
                *
                * &lt;p&gt;
                * For example,
                * &lt;pre&gt;
                * "P1M" (1 month) * "12" = "P12M" (12 months)
                * "PT1M" (1 min) * "0.3" = "PT18S" (18 seconds)
                * "P1M" (1 month) * "1.5" = IllegalStateException
                * &lt;/pre&gt;
                *
                * &lt;p&gt;
                * Since the {@link Duration} class is immutable, this method
                * doesn't change the value of this object. It simply computes
                * a new Duration object and returns it.
                *
                * &lt;p&gt;
                * The operation will be performed field by field with the precision
                * of {@link BigDecimal}. Since all the fields except seconds are
                * restricted to hold integers,
                * any fraction produced by the computation will be
                * carried down toward the next lower unit. For example,
                * if you multiply "P1D" (1 day) with "0.5", then it will be 0.5 day,
                * which will be carried down to "PT12H" (12 hours).
                * When fractions of month cannot be meaningfully carried down
                * to days, or year to months, this will cause an
                * {@link IllegalStateException} to be thrown.
                * For example if you multiple one month by 0.5.&lt;/p&gt;
                *
                * &lt;p&gt;
                * To avoid {@link IllegalStateException}, use
                * the {@link #normalizeWith(Calendar)} method to remove the years
                * and months fields.
                *
                * @param factor to multiply by
                *
                * @return
                * returns a non-null valid {@link Duration} object
                *
                * @throws IllegalStateException if operation produces fraction in
                * the months field.
                *
                * @throws NullPointerException if the &lt;code&gt;factor&lt;/code&gt; parameter is
                * &lt;code&gt;null&lt;/code&gt;.
                *
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Duration</name>
                </type>
                <name>multiply</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>BigDecimal</name>
                            </type>
                            <name>factor</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>BigDecimal</name>
                            </type>
                            <name>carry</name> =
                            <init>
                                <expr>
                                    <name>ZERO</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>factorSign</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>factor</name>.
                                            <name>signum</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name>factor</name>
                            =
                            <call>
                                <name><name>factor</name>.
                                    <name>abs</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>BigDecimal</name>
                                <index>[]</index>
                            </type>
                            <name>buf</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>BigDecimal</name>
                                        <index>[<expr>6</expr>]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt; 5
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>BigDecimal</name>
                                    </type>
                                    <name>bd</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name>getFieldAsBigDecimal</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>
                                                                <name>FIELDS</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>i</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>bd</name>
                                    =
                                    <call>
                                        <name><name>bd</name>.
                                            <name>multiply</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>factor</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>add</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>carry</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>

                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>buf</name>
                                        <index>[
                                            <expr>
                                                <name>i</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    =
                                    <call>
                                        <name><name>bd</name>.
                                            <name>setScale</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>0</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>BigDecimal</name>.
                                                        <name>ROUND_DOWN</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>

                            <expr_stmt>
                                <expr>
                                    <name>bd</name>
                                    =
                                    <call>
                                        <name><name>bd</name>.
                                            <name>subtract</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>
                                                        <name>buf</name>
                                                        <index>[
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>i</name>
                                        == 1
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>bd</name>.
                                                            <name>signum</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    != 0
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>IllegalStateException</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    <comment type="line">// illegal carry-down</comment>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>carry</name>
                                                            =
                                                            <name>ZERO</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </else>
                                        </if>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>carry</name>
                                                =
                                                <call>
                                                    <name><name>bd</name>.
                                                        <name>multiply</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>
                                                                    <name>FACTORS</name>
                                                                    <index>[
                                                                        <expr>
                                                                            <name>i</name>
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </else>
                            </if>
                            }
                        </block>
                    </for>

                    <if>if
                        <condition>(
                            <expr>
                                <name>seconds</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>
                                            <name>buf</name>
                                            <index>[<expr>5</expr>]
                                            </index>
                                        </name>
                                        =
                                        <call>
                                            <name><name>seconds</name>.
                                                <name>multiply</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>factor</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        .
                                        <call>
                                            <name>add</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>carry</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>
                                            <name>buf</name>
                                            <index>[<expr>5</expr>]
                                            </index>
                                        </name>
                                        =
                                        <name>carry</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>

                    <return>return
                        <expr>new
                            <call>
                                <name>DurationImpl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>this</name>.
                                                <name>signum</name>
                                            </name>
                                            * <name>factorSign</name> &gt;= 0
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>toBigInteger</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>
                                                                <name>buf</name>
                                                                <index>[<expr>0</expr>]
                                                                </index>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>null</name>
                                                            ==
                                                            <name>years</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>toBigInteger</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>
                                                                <name>buf</name>
                                                                <index>[<expr>1</expr>]
                                                                </index>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>null</name>
                                                            ==
                                                            <name>months</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>toBigInteger</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>
                                                                <name>buf</name>
                                                                <index>[<expr>2</expr>]
                                                                </index>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>null</name>
                                                            ==
                                                            <name>days</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>toBigInteger</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>
                                                                <name>buf</name>
                                                                <index>[<expr>3</expr>]
                                                                </index>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>null</name>
                                                            ==
                                                            <name>hours</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>toBigInteger</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>
                                                                <name>buf</name>
                                                                <index>[<expr>4</expr>]
                                                                </index>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>null</name>
                                                            ==
                                                            <name>minutes</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>(
                                            <name>
                                                <name>buf</name>
                                                <index>[<expr>5</expr>]
                                                </index>
                                            </name>
                                            .
                                            <call>
                                                <name>signum</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            == 0 &amp;&amp; <name>seconds</name> == <name>null</name>) ? <name>null
                                            </name> :
                                            <name>
                                                <name>buf</name>
                                                <index>[<expr>5</expr>]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Gets the value of the field as a {@link BigDecimal}.&lt;/p&gt;
                *
                * &lt;p&gt;If the field is unset, return 0.&lt;/p&gt;
                *
                * @param f Field to get value for.
                *
                * @return non-null valid {@link BigDecimal}.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>BigDecimal</name>
                </type>
                <name>getFieldAsBigDecimal</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>DatatypeConstants</name>.
                                    <name>Field</name>
                                </name>
                            </type>
                            <name>f</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>f</name>
                                ==
                                <name><name>DatatypeConstants</name>.
                                    <name>SECONDS</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>seconds</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <return>return
                                                <expr>
                                                    <name>seconds</name>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <return>return
                                                <expr>
                                                    <name>ZERO</name>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>BigInteger</name>
                                        </type>
                                        <name>bi</name> =
                                        <init>
                                            <expr>(<name>BigInteger</name>)
                                                <call>
                                                    <name>getField</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>f</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>bi</name>
                                            ==
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <return>return
                                                <expr>
                                                    <name>ZERO</name>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <return>return
                                                <expr>new
                                                    <call>
                                                        <name>BigDecimal</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>bi</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;BigInteger value of BigDecimal value.&lt;/p&gt;
                *
                * @param value Value to convert.
                * @param canBeNull Can returned value be null?
                *
                * @return BigInteger value of BigDecimal, possibly null.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>BigInteger</name>
                </type>
                <name>toBigInteger</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>BigDecimal</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>canBeNull</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>canBeNull</name>
                                &amp;&amp;
                                <call>
                                    <name><name>value</name>.
                                        <name>signum</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                == 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <return>return
                                    <expr>
                                        <call>
                                            <name><name>value</name>.
                                                <name>unscaledValue</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * 1 unit of FIELDS[i] is equivalent to &lt;code&gt;FACTORS[i]&lt;/code&gt; unit of
                * FIELDS[i+1].
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>BigDecimal</name>
                        <index>[]</index>
                    </type>
                    <name>FACTORS</name> =
                    <init>
                        <expr>new
                            <name>
                                <name>BigDecimal</name>
                                <index>[]</index>
                            </name>
                            <block>{
                                <expr>
                                    <call>
                                        <name><name>BigDecimal</name>.
                                            <name>valueOf</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>12</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ,
                                <expr>
                                    <name>null</name>
                                </expr>
                                <comment type="block">/*undefined*/</comment>,
                                <expr>
                                    <call>
                                        <name><name>BigDecimal</name>.
                                            <name>valueOf</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>24</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ,
                                <expr>
                                    <call>
                                        <name><name>BigDecimal</name>.
                                            <name>valueOf</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>60</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ,
                                <expr>
                                    <call>
                                        <name><name>BigDecimal</name>.
                                            <name>valueOf</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>60</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                }
                            </block>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * &lt;p&gt;Computes a new duration whose value is &lt;code&gt;this+rhs&lt;/code&gt;.&lt;/p&gt;
                *
                * &lt;p&gt;For example,&lt;/p&gt;
                * &lt;pre&gt;
                * "1 day" + "-3 days" = "-2 days"
                * "1 year" + "1 day" = "1 year and 1 day"
                * "-(1 hour,50 minutes)" + "-20 minutes" = "-(1 hours,70 minutes)"
                * "15 hours" + "-3 days" = "-(2 days,9 hours)"
                * "1 year" + "-1 day" = IllegalStateException
                * &lt;/pre&gt;
                *
                * &lt;p&gt;Since there's no way to meaningfully subtract 1 day from 1 month,
                * there are cases where the operation fails in
                * {@link IllegalStateException}.&lt;/p&gt;
                *
                * &lt;p&gt;
                * Formally, the computation is defined as follows.&lt;/p&gt;
                * &lt;p&gt;
                * Firstly, we can assume that two {@link Duration}s to be added
                * are both positive without losing generality (i.e.,
                * &lt;code&gt;(-X)+Y=Y-X&lt;/code&gt;, &lt;code&gt;X+(-Y)=X-Y&lt;/code&gt;,
                * &lt;code&gt;(-X)+(-Y)=-(X+Y)&lt;/code&gt;)
                *
                * &lt;p&gt;
                * Addition of two positive {@link Duration}s are simply defined as
                * field by field addition where missing fields are treated as 0.
                * &lt;p&gt;
                * A field of the resulting {@link Duration} will be unset if and
                * only if respective fields of two input {@link Duration}s are unset.
                * &lt;p&gt;
                * Note that &lt;code&gt;lhs.add(rhs)&lt;/code&gt; will be always successful if
                * &lt;code&gt;lhs.signum()*rhs.signum()!=-1&lt;/code&gt; or both of them are
                * normalized.&lt;/p&gt;
                *
                * @param rhs &lt;code&gt;Duration&lt;/code&gt; to add to this &lt;code&gt;Duration&lt;/code&gt;
                *
                * @return
                * non-null valid Duration object.
                *
                * @throws NullPointerException
                * If the rhs parameter is null.
                * @throws IllegalStateException
                * If two durations cannot be meaningfully added. For
                * example, adding negative one day to one month causes
                * this exception.
                *
                *
                * @see #subtract(Duration)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Duration</name>
                </type>
                <name>add</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>Duration</name>
                            </type>
                            <name>rhs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Duration</name>
                            </type>
                            <name>lhs</name> =
                            <init>
                                <expr>
                                    <name>this</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>BigDecimal</name>
                                <index>[]</index>
                            </type>
                            <name>buf</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>BigDecimal</name>
                                        <index>[<expr>6</expr>]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <name>
                                <name>buf</name>
                                <index>[<expr>0</expr>]
                                </index>
                            </name>
                            =
                            <call>
                                <name>sanitize</name>
                                <argument_list>(
                                    <argument>
                                        <expr>(<name>BigInteger</name>)
                                            <call>
                                                <name><name>lhs</name>.
                                                    <name>getField</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>DatatypeConstants</name>.
                                                                <name>YEARS</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>lhs</name>.
                                                    <name>getSign</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            .
                            <call>
                                <name>add</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>sanitize</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>(<name>BigInteger</name>)
                                                            <call>
                                                                <name><name>rhs</name>.
                                                                    <name>getField</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>DatatypeConstants</name>.
                                                                                <name>YEARS</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>rhs</name>.
                                                                    <name>getSign</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>buf</name>
                                <index>[<expr>1</expr>]
                                </index>
                            </name>
                            =
                            <call>
                                <name>sanitize</name>
                                <argument_list>(
                                    <argument>
                                        <expr>(<name>BigInteger</name>)
                                            <call>
                                                <name><name>lhs</name>.
                                                    <name>getField</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>DatatypeConstants</name>.
                                                                <name>MONTHS</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>lhs</name>.
                                                    <name>getSign</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            .
                            <call>
                                <name>add</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>sanitize</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>(<name>BigInteger</name>)
                                                            <call>
                                                                <name><name>rhs</name>.
                                                                    <name>getField</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>DatatypeConstants</name>.
                                                                                <name>MONTHS</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>rhs</name>.
                                                                    <name>getSign</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>buf</name>
                                <index>[<expr>2</expr>]
                                </index>
                            </name>
                            =
                            <call>
                                <name>sanitize</name>
                                <argument_list>(
                                    <argument>
                                        <expr>(<name>BigInteger</name>)
                                            <call>
                                                <name><name>lhs</name>.
                                                    <name>getField</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>DatatypeConstants</name>.
                                                                <name>DAYS</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>lhs</name>.
                                                    <name>getSign</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            .
                            <call>
                                <name>add</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>sanitize</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>(<name>BigInteger</name>)
                                                            <call>
                                                                <name><name>rhs</name>.
                                                                    <name>getField</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>DatatypeConstants</name>.
                                                                                <name>DAYS</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>rhs</name>.
                                                                    <name>getSign</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>buf</name>
                                <index>[<expr>3</expr>]
                                </index>
                            </name>
                            =
                            <call>
                                <name>sanitize</name>
                                <argument_list>(
                                    <argument>
                                        <expr>(<name>BigInteger</name>)
                                            <call>
                                                <name><name>lhs</name>.
                                                    <name>getField</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>DatatypeConstants</name>.
                                                                <name>HOURS</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>lhs</name>.
                                                    <name>getSign</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            .
                            <call>
                                <name>add</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>sanitize</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>(<name>BigInteger</name>)
                                                            <call>
                                                                <name><name>rhs</name>.
                                                                    <name>getField</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>DatatypeConstants</name>.
                                                                                <name>HOURS</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>rhs</name>.
                                                                    <name>getSign</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>buf</name>
                                <index>[<expr>4</expr>]
                                </index>
                            </name>
                            =
                            <call>
                                <name>sanitize</name>
                                <argument_list>(
                                    <argument>
                                        <expr>(<name>BigInteger</name>)
                                            <call>
                                                <name><name>lhs</name>.
                                                    <name>getField</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>DatatypeConstants</name>.
                                                                <name>MINUTES</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>lhs</name>.
                                                    <name>getSign</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            .
                            <call>
                                <name>add</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>sanitize</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>(<name>BigInteger</name>)
                                                            <call>
                                                                <name><name>rhs</name>.
                                                                    <name>getField</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>DatatypeConstants</name>.
                                                                                <name>MINUTES</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>rhs</name>.
                                                                    <name>getSign</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>buf</name>
                                <index>[<expr>5</expr>]
                                </index>
                            </name>
                            =
                            <call>
                                <name>sanitize</name>
                                <argument_list>(
                                    <argument>
                                        <expr>(<name>BigDecimal</name>)
                                            <call>
                                                <name><name>lhs</name>.
                                                    <name>getField</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>DatatypeConstants</name>.
                                                                <name>SECONDS</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>lhs</name>.
                                                    <name>getSign</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            .
                            <call>
                                <name>add</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>sanitize</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>(<name>BigDecimal</name>)
                                                            <call>
                                                                <name><name>rhs</name>.
                                                                    <name>getField</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>DatatypeConstants</name>.
                                                                                <name>SECONDS</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>rhs</name>.
                                                                    <name>getSign</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// align sign</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>alignSigns</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>buf</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>2</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// Y,M</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>alignSigns</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>buf</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>2</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>6</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// D,h,m,s</comment>

                    <comment type="line">// make sure that the sign bit is consistent across all 6 fields.</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>s</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt; 6
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>s</name>
                                        *
                                        <name>
                                            <name>buf</name>
                                            <index>[
                                                <expr>
                                                    <name>i</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        .
                                        <call>
                                            <name>signum</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        &lt; 0
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <throw>throw
                                            <expr>new
                                                <call>
                                                    <name>IllegalStateException</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </throw>
                                        }
                                    </block>
                                </then>
                            </if>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>s</name>
                                        == 0
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>s</name>
                                                =
                                                <name>
                                                    <name>buf</name>
                                                    <index>[
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                .
                                                <call>
                                                    <name>signum</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>

                    <return>return
                        <expr>new
                            <call>
                                <name>DurationImpl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>s</name>
                                            &gt;= 0
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>toBigInteger</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name>sanitize</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>
                                                                                <name>buf</name>
                                                                                <index>[<expr>0</expr>]
                                                                                </index>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>s</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>lhs</name>.
                                                                    <name>getField</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>DatatypeConstants</name>.
                                                                                <name>YEARS</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                            == <name>null</name> &amp;&amp;
                                                            <call>
                                                                <name><name>rhs</name>.
                                                                    <name>getField</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>DatatypeConstants</name>.
                                                                                <name>YEARS</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                            ==
                                                            <name>null</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>toBigInteger</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name>sanitize</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>
                                                                                <name>buf</name>
                                                                                <index>[<expr>1</expr>]
                                                                                </index>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>s</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>lhs</name>.
                                                                    <name>getField</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>DatatypeConstants</name>.
                                                                                <name>MONTHS</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                            == <name>null</name> &amp;&amp;
                                                            <call>
                                                                <name><name>rhs</name>.
                                                                    <name>getField</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>DatatypeConstants</name>.
                                                                                <name>MONTHS</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                            ==
                                                            <name>null</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>toBigInteger</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name>sanitize</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>
                                                                                <name>buf</name>
                                                                                <index>[<expr>2</expr>]
                                                                                </index>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>s</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>lhs</name>.
                                                                    <name>getField</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>DatatypeConstants</name>.
                                                                                <name>DAYS</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                            == <name>null</name> &amp;&amp;
                                                            <call>
                                                                <name><name>rhs</name>.
                                                                    <name>getField</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>DatatypeConstants</name>.
                                                                                <name>DAYS</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                            ==
                                                            <name>null</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>toBigInteger</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name>sanitize</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>
                                                                                <name>buf</name>
                                                                                <index>[<expr>3</expr>]
                                                                                </index>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>s</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>lhs</name>.
                                                                    <name>getField</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>DatatypeConstants</name>.
                                                                                <name>HOURS</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                            == <name>null</name> &amp;&amp;
                                                            <call>
                                                                <name><name>rhs</name>.
                                                                    <name>getField</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>DatatypeConstants</name>.
                                                                                <name>HOURS</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                            ==
                                                            <name>null</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>toBigInteger</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name>sanitize</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>
                                                                                <name>buf</name>
                                                                                <index>[<expr>4</expr>]
                                                                                </index>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>s</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>lhs</name>.
                                                                    <name>getField</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>DatatypeConstants</name>.
                                                                                <name>MINUTES</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                            == <name>null</name> &amp;&amp;
                                                            <call>
                                                                <name><name>rhs</name>.
                                                                    <name>getField</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>DatatypeConstants</name>.
                                                                                <name>MINUTES</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                            ==
                                                            <name>null</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>(
                                            <name>
                                                <name>buf</name>
                                                <index>[<expr>5</expr>]
                                                </index>
                                            </name>
                                            .
                                            <call>
                                                <name>signum</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            == 0
                                            &amp;&amp;
                                            <call>
                                                <name><name>lhs</name>.
                                                    <name>getField</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>DatatypeConstants</name>.
                                                                <name>SECONDS</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            ==
                                            <name>null</name>
                                            &amp;&amp;
                                            <call>
                                                <name><name>rhs</name>.
                                                    <name>getField</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>DatatypeConstants</name>.
                                                                <name>SECONDS</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            == <name>null</name>) ? <name>null</name> :
                                            <call>
                                                <name>sanitize</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>
                                                                <name>buf</name>
                                                                <index>[<expr>5</expr>]
                                                                </index>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>s</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>void</name>
                </type>
                <name>alignSigns</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>BigDecimal</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>buf</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>start</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>end</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// align sign</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>touched</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <do>do
                        <block>{
                            <comment type="line">// repeat until all the sign bits become consistent</comment>
                            <expr_stmt>
                                <expr>
                                    <name>touched</name>
                                    = false
                                </expr>
                                ;
                            </expr_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>s</name> =
                                    <init>
                                        <expr>0</expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <comment type="line">// sign of the left fields</comment>

                            <for>for (
                                <init>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>i</name> =
                                        <init>
                                            <expr>
                                                <name>start</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </init>
                                <condition>
                                    <expr>
                                        <name>i</name>
                                        &lt;
                                        <name>end</name>
                                    </expr>
                                    ;
                                </condition>
                                <incr>
                                    <expr><name>i</name>++
                                    </expr>
                                </incr>
                                )
                                <block>{
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>s</name>
                                                *
                                                <name>
                                                    <name>buf</name>
                                                    <index>[
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                .
                                                <call>
                                                    <name>signum</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                &lt; 0
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <comment type="line">// this field has different sign than its left
                                                    field.
                                                </comment>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>touched</name>
                                                        = true
                                                    </expr>
                                                    ;
                                                </expr_stmt>

                                                <comment type="line">// compute the number of unit that needs to be
                                                    borrowed.
                                                </comment>
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>BigDecimal</name>
                                                        </type>
                                                        <name>borrow</name> =
                                                        <init>
                                                            <expr>
                                                                <name>
                                                                    <name>buf</name>
                                                                    <index>[
                                                                        <expr>
                                                                            <name>i</name>
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                                .
                                                                <call>
                                                                    <name>abs</name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                                .
                                                                <call>
                                                                    <name>divide</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>
                                                                                    <name>FACTORS</name>
                                                                                    <index>[
                                                                                        <expr>
                                                                                            <name>i</name>
                                                                                            - 1
                                                                                        </expr>
                                                                                        ]
                                                                                    </index>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>BigDecimal</name>.
                                                                                    <name>ROUND_UP</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>
                                                                <name>buf</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>i</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            .
                                                            <call>
                                                                <name>signum</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                            &gt; 0
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>borrow</name>
                                                                    =
                                                                    <call>
                                                                        <name><name>borrow</name>.
                                                                            <name>negate</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>

                                                <comment type="line">// update values</comment>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>
                                                            <name>buf</name>
                                                            <index>[
                                                                <expr>
                                                                    <name>i</name>
                                                                    - 1
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                        =
                                                        <name>
                                                            <name>buf</name>
                                                            <index>[
                                                                <expr>
                                                                    <name>i</name>
                                                                    - 1
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                        .
                                                        <call>
                                                            <name>subtract</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>borrow</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>
                                                            <name>buf</name>
                                                            <index>[
                                                                <expr>
                                                                    <name>i</name>
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                        =
                                                        <name>
                                                            <name>buf</name>
                                                            <index>[
                                                                <expr>
                                                                    <name>i</name>
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                        .
                                                        <call>
                                                            <name>add</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>borrow</name>.
                                                                                <name>multiply</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>
                                                                                            <name>FACTORS</name>
                                                                                            <index>[
                                                                                                <expr>
                                                                                                    <name>i</name>
                                                                                                    - 1
                                                                                                </expr>
                                                                                                ]
                                                                                            </index>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>
                                                    <name>buf</name>
                                                    <index>[
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                .
                                                <call>
                                                    <name>signum</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                != 0
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>s</name>
                                                        =
                                                        <name>
                                                            <name>buf</name>
                                                            <index>[
                                                                <expr>
                                                                    <name>i</name>
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                        .
                                                        <call>
                                                            <name>signum</name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    }
                                </block>
                            </for>
                            }
                        </block>
                        while
                        <condition>(
                            <expr>
                                <name>touched</name>
                            </expr>
                            )
                        </condition>
                        ;
                    </do>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Compute &lt;code&gt;value*signum&lt;/code&gt; where value==null is treated as
                * value==0.
                * @param value Value to sanitize.
                * @param signum 0 to sanitize to 0, &gt; 0 to sanitize to &lt;code&gt;value&lt;/code&gt;, &lt; 0 to
                sanitize to negative &lt;code&gt;value&lt;/code&gt;.
                *
                * @return non-null {@link BigDecimal}.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>BigDecimal</name>
                </type>
                <name>sanitize</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>BigInteger</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>signum</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>signum</name>
                                == 0 || <name>value</name> ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>ZERO</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>signum</name>
                                &gt; 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>new
                                        <call>
                                            <name>BigDecimal</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>value</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>new
                            <call>
                                <name>BigDecimal</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>value</name>.
                                                    <name>negate</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Compute &lt;code&gt;value*signum&lt;/code&gt; where &lt;code&gt;value==null&lt;/code&gt; is
                treated as &lt;code&gt;value==0&lt;/code&gt;&lt;/p&gt;.
                *
                * @param value Value to sanitize.
                * @param signum 0 to sanitize to 0, &gt; 0 to sanitize to &lt;code&gt;value&lt;/code&gt;, &lt; 0 to
                sanitize to negative &lt;code&gt;value&lt;/code&gt;.
                *
                * @return non-null {@link BigDecimal}.
                */
            </comment>
            <function>
                <type>
                    <specifier>static</specifier>
                    <name>BigDecimal</name>
                </type>
                <name>sanitize</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>BigDecimal</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>signum</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>signum</name>
                                == 0 || <name>value</name> ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>ZERO</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>signum</name>
                                &gt; 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>value</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <call>
                                <name><name>value</name>.
                                    <name>negate</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Computes a new duration whose value is &lt;code&gt;this-rhs&lt;/code&gt;.&lt;/p&gt;
                *
                * &lt;p&gt;For example:&lt;/p&gt;
                * &lt;pre&gt;
                * "1 day" - "-3 days" = "4 days"
                * "1 year" - "1 day" = IllegalStateException
                * "-(1 hour,50 minutes)" - "-20 minutes" = "-(1hours,30 minutes)"
                * "15 hours" - "-3 days" = "3 days and 15 hours"
                * "1 year" - "-1 day" = "1 year and 1 day"
                * &lt;/pre&gt;
                *
                * &lt;p&gt;Since there's no way to meaningfully subtract 1 day from 1 month,
                * there are cases where the operation fails in {@link IllegalStateException}.&lt;/p&gt;
                *
                * &lt;p&gt;Formally the computation is defined as follows.
                * First, we can assume that two {@link Duration}s are both positive
                * without losing generality. (i.e.,
                * &lt;code&gt;(-X)-Y=-(X+Y)&lt;/code&gt;, &lt;code&gt;X-(-Y)=X+Y&lt;/code&gt;,
                * &lt;code&gt;(-X)-(-Y)=-(X-Y)&lt;/code&gt;)&lt;/p&gt;
                *
                * &lt;p&gt;Then two durations are subtracted field by field.
                * If the sign of any non-zero field &lt;tt&gt;F&lt;/tt&gt; is different from
                * the sign of the most significant field,
                * 1 (if &lt;tt&gt;F&lt;/tt&gt; is negative) or -1 (otherwise)
                * will be borrowed from the next bigger unit of &lt;tt&gt;F&lt;/tt&gt;.&lt;/p&gt;
                *
                * &lt;p&gt;This process is repeated until all the non-zero fields have
                * the same sign.&lt;/p&gt;
                *
                * &lt;p&gt;If a borrow occurs in the days field (in other words, if
                * the computation needs to borrow 1 or -1 month to compensate
                * days), then the computation fails by throwing an
                * {@link IllegalStateException}.&lt;/p&gt;
                *
                * @param rhs &lt;code&gt;Duration&lt;/code&gt; to substract from this &lt;code&gt;Duration&lt;/code&gt;.
                *
                * @return New &lt;code&gt;Duration&lt;/code&gt; created from subtracting &lt;code&gt;rhs&lt;/code&gt;
                from this &lt;code&gt;Duration&lt;/code&gt;.
                *
                * @throws IllegalStateException
                * If two durations cannot be meaningfully subtracted. For
                * example, subtracting one day from one month causes
                * this exception.
                *
                * @throws NullPointerException
                * If the rhs parameter is null.
                *
                * @see #add(Duration)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Duration</name>
                </type>
                <name>subtract</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>Duration</name>
                            </type>
                            <name>rhs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>add</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>rhs</name>.
                                                    <name>negate</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns a new {@link Duration} object whose
                * value is &lt;code&gt;-this&lt;/code&gt;.
                *
                * &lt;p&gt;
                * Since the {@link Duration} class is immutable, this method
                * doesn't change the value of this object. It simply computes
                * a new Duration object and returns it.
                *
                * @return
                * always return a non-null valid {@link Duration} object.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Duration</name>
                </type>
                <name>negate</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>DurationImpl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>signum</name>
                                            &lt;= 0
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>years</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>months</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>days</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>hours</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>minutes</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>seconds</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the sign of this duration in -1,0, or 1.
                *
                * @return
                * -1 if this duration is negative, 0 if the duration is zero,
                * and 1 if the duration is postive.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>signum</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>signum</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * Adds this duration to a {@link Calendar} object.
                *
                * &lt;p&gt;
                * Calls {@link java.util.Calendar#add(int,int)} in the
                * order of YEARS, MONTHS, DAYS, HOURS, MINUTES, SECONDS, and MILLISECONDS
                * if those fields are present. Because the {@link Calendar} class
                * uses int to hold values, there are cases where this method
                * won't work correctly (for example if values of fields
                * exceed the range of int.)
                * &lt;/p&gt;
                *
                * &lt;p&gt;
                * Also, since this duration class is a Gregorian duration, this
                * method will not work correctly if the given {@link Calendar}
                * object is based on some other calendar systems.
                * &lt;/p&gt;
                *
                * &lt;p&gt;
                * Any fractional parts of this {@link Duration} object
                * beyond milliseconds will be simply ignored. For example, if
                * this duration is "P1.23456S", then 1 is added to SECONDS,
                * 234 is added to MILLISECONDS, and the rest will be unused.
                * &lt;/p&gt;
                *
                * &lt;p&gt;
                * Note that because {@link Calendar#add(int, int)} is using
                * &lt;tt&gt;int&lt;/tt&gt;, {@link Duration} with values beyond the
                * range of &lt;tt&gt;int&lt;/tt&gt; in its fields
                * will cause overflow/underflow to the given {@link Calendar}.
                * {@link XMLGregorianCalendar#add(Duration)} provides the same
                * basic operation as this method while avoiding
                * the overflow/underflow issues.
                *
                * @param calendar
                * A calendar object whose value will be modified.
                * @throws NullPointerException
                * if the calendar parameter is null.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>addTo</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Calendar</name>
                            </type>
                            <name>calendar</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>calendar</name>.
                                    <name>add</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>YEAR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getYears</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            *
                                            <name>signum</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>calendar</name>.
                                    <name>add</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>MONTH</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getMonths</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            *
                                            <name>signum</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>calendar</name>.
                                    <name>add</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>DAY_OF_MONTH</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getDays</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            *
                                            <name>signum</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>calendar</name>.
                                    <name>add</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>HOUR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getHours</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            *
                                            <name>signum</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>calendar</name>.
                                    <name>add</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>MINUTE</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getMinutes</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            *
                                            <name>signum</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>calendar</name>.
                                    <name>add</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>Calendar</name>.
                                                <name>SECOND</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getSeconds</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            *
                                            <name>signum</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <name>seconds</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>BigDecimal</name>
                                        </type>
                                        <name>fraction</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>seconds</name>.
                                                        <name>subtract</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>seconds</name>.
                                                                        <name>setScale</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>0</expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>BigDecimal</name>.
                                                                                    <name>ROUND_DOWN</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>millisec</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>fraction</name>.
                                                        <name>movePointRight</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>3</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                .
                                                <call>
                                                    <name>intValue</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>calendar</name>.
                                                <name>add</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>Calendar</name>.
                                                            <name>MILLISECOND</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>millisec</name>
                                                        *
                                                        <name>signum</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Adds this duration to a {@link Date} object.
                *
                * &lt;p&gt;
                * The given date is first converted into
                * a {@link java.util.GregorianCalendar}, then the duration
                * is added exactly like the {@link #addTo(Calendar)} method.
                *
                * &lt;p&gt;
                * The updated time instant is then converted back into a
                * {@link Date} object and used to update the given {@link Date} object.
                *
                * &lt;p&gt;
                * This somewhat redundant computation is necessary to unambiguously
                * determine the duration of months and years.
                *
                * @param date
                * A date object whose value will be modified.
                * @throws NullPointerException
                * if the date parameter is null.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>addTo</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Date</name>
                            </type>
                            <name>date</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Calendar</name>
                            </type>
                            <name>cal</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>GregorianCalendar</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>cal</name>.
                                    <name>setTime</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>date</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// this will throw NPE if date==null</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>this</name>.
                                    <name>addTo</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>cal</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>date</name>.
                                    <name>setTime</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getCalendarTimeInMillis</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>cal</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Stream Unique Identifier.&lt;/p&gt;
                *
                * &lt;p&gt;TODO: Serialization should use the XML string representation as
                * the serialization format to ensure future compatibility.&lt;/p&gt;
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>long</name>
                    </type>
                    <name>serialVersionUID</name> =
                    <init>
                        <expr>1L</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Writes {@link Duration} as a lexical representation
                * for maximum future compatibility.
                *
                * @return
                * An object that encapsulates the string
                * returned by &lt;code&gt;this.toString()&lt;/code&gt;.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>Object</name>
                </type>
                <name>writeReplace</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>DurationStream</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>this</name>.
                                                    <name>toString</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Representation of {@link Duration} in the object stream.
                *
                * @author Kohsuke Kawaguchi (kohsuke.kawaguchi@sun.com)
                */
            </comment>
            <class>
                <specifier>private</specifier>
                <specifier>static</specifier> class <name>DurationStream</name>
                <super>
                    <implements>implements
                        <name>Serializable</name>
                    </implements>
                </super>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>final</specifier>
                                <name>String</name>
                            </type>
                            <name>lexical</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <constructor>
                        <specifier>private</specifier>
                        <name>DurationStream</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>_lexical</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>lexical</name>
                                    </name>
                                    =
                                    <name>_lexical</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>

                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>Object</name>
                        </type>
                        <name>readResolve</name>
                        <parameter_list>()</parameter_list>
                        <throws>throws
                            <argument>
                                <expr>
                                    <name>ObjectStreamException</name>
                                </expr>
                            </argument>
                        </throws>
                        <block>{
                            <comment type="line">// try {</comment>
                            <return>return
                                <expr>new
                                    <call>
                                        <name>DurationImpl</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>lexical</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            <comment type="line">// } catch( ParseException e ) {</comment>
                            <comment type="line">// throw new StreamCorruptedException("unable to parse "+lexical+" as
                                duration");
                            </comment>
                            <comment type="line">// }</comment>
                            }
                        </block>
                    </function>

                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>long</name>
                            </type>
                            <name>serialVersionUID</name> =
                            <init>
                                <expr>1L</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    }
                </block>
            </class>

            <comment type="javadoc">/**
                * Calls the {@link Calendar#getTimeInMillis} method.
                * Prior to JDK1.4, this method was protected and therefore
                * cannot be invoked directly.
                *
                * In future, this should be replaced by
                * &lt;code&gt;cal.getTimeInMillis()&lt;/code&gt;
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>long</name>
                </type>
                <name>getCalendarTimeInMillis</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Calendar</name>
                            </type>
                            <name>cal</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>cal</name>.
                                    <name>getTime</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>getTime</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            }
        </block>
    </class>

</unit>
