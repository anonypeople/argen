<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xml\serialize\EncodingInfo.java">
    <comment type="block">/*
        * Copyright 2000-2002,2004,2005 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xml</name>.
            <name>serialize</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>OutputStream</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>OutputStreamWriter</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>UnsupportedEncodingException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>Writer</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>EncodingMap</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * This class represents an encoding.
        *
        * @version $Id: EncodingInfo.java,v 1.7 2005/05/22 19:11:07 mrglavas Exp $
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>EncodingInfo</name>
        <block>{

            <comment type="line">// An array to hold the argument for a method of Charset, CharsetEncoder or
                CharToByteConverter.
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Object</name>
                        <index>[]</index>
                    </type>
                    <name>fArgsForMethod</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// name of encoding as registered with IANA;</comment>
            <comment type="line">// preferably a MIME name, but aliases are fine too.</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <name>String</name>
                    </type>
                    <name>ianaName</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <name>String</name>
                    </type>
                    <name>javaName</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <name>int</name>
                    </type>
                    <name>lastPrintable</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// The CharsetEncoder with which we test unusual characters.</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <name>Object</name>
                    </type>
                    <name>fCharsetEncoder</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// The CharToByteConverter with which we test unusual characters.</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <name>Object</name>
                    </type>
                    <name>fCharToByteConverter</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// Is the converter null because it can't be instantiated</comment>
            <comment type="line">// for some reason (perhaps we're running with insufficient authority as</comment>
            <comment type="line">// an applet?</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <name>boolean</name>
                    </type>
                    <name>fHaveTriedCToB</name> =
                    <init>
                        <expr>false</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// Is the charset encoder usable or available.</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <name>boolean</name>
                    </type>
                    <name>fHaveTriedCharsetEncoder</name> =
                    <init>
                        <expr>false</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Creates new &lt;code&gt;EncodingInfo&lt;/code&gt; instance.
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>EncodingInfo</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>ianaName</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>javaName</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>lastPrintable</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>ianaName</name>
                            </name>
                            =
                            <name>ianaName</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>javaName</name>
                            </name>
                            =
                            <call>
                                <name><name>EncodingMap</name>.
                                    <name>getIANA2JavaMapping</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>ianaName</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>lastPrintable</name>
                            </name>
                            =
                            <name>lastPrintable</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Returns a MIME charset name of this encoding.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getIANAName</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>ianaName</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns a writer for this encoding based on
                * an output stream.
                *
                * @return A suitable writer
                * @exception UnsupportedEncodingException There is no convertor
                * to support this encoding
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Writer</name>
                </type>
                <name>getWriter</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>OutputStream</name>
                            </type>
                            <name>output</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>UnsupportedEncodingException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <comment type="line">// this should always be true!</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>javaName</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>new
                                    <call>
                                        <name>OutputStreamWriter</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>output</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>javaName</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name>javaName</name>
                            =
                            <call>
                                <name><name>EncodingMap</name>.
                                    <name>getIANA2JavaMapping</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>ianaName</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>javaName</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <comment type="line">// use UTF-8 as preferred encoding</comment>
                            <return>return
                                <expr>new
                                    <call>
                                        <name>OutputStreamWriter</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>output</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"UTF8"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                        </then>
                    </if>
                    <return>return
                        <expr>new
                            <call>
                                <name>OutputStreamWriter</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>output</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>javaName</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Checks whether the specified character is printable or not in this encoding.
                *
                * @param ch a code point (0-0x10ffff)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isPrintable</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>char</name>
                            </type>
                            <name>ch</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>ch</name>
                                &lt;=
                                <name><name>this</name>.
                                    <name>lastPrintable</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>true</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <call>
                                <name>isPrintable0</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>ch</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Checks whether the specified character is printable or not in this encoding.
                * This method accomplishes this using a java.nio.CharsetEncoder. If NIO isn't
                * available it will attempt use a sun.io.CharToByteConverter.
                *
                * @param ch a code point (0-0x10ffff)
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>boolean</name>
                </type>
                <name>isPrintable0</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>char</name>
                            </type>
                            <name>ch</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <comment type="line">// Attempt to get a CharsetEncoder for this encoding.</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fCharsetEncoder</name>
                                == <name>null</name> &amp;&amp;
                                <name><name>CharsetMethods</name>.
                                    <name>fgNIOCharsetAvailable</name>
                                </name>
                                &amp;&amp; !
                                <name>fHaveTriedCharsetEncoder</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fArgsForMethod</name>
                                            ==
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>fArgsForMethod</name>
                                                    = new
                                                    <name>
                                                        <name>Object</name>
                                                        <index>[<expr>1</expr>]
                                                        </index>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <comment type="line">// try and create the CharsetEncoder</comment>
                                <try>try
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>
                                                    <name>fArgsForMethod</name>
                                                    <index>[<expr>0</expr>]
                                                    </index>
                                                </name>
                                                =
                                                <name>javaName</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>Object</name>
                                                </type>
                                                <name>charset</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>CharsetMethods</name>.<name>
                                                                fgCharsetForNameMethod</name>.
                                                                <name>invoke</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>null</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>fArgsForMethod</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>((<name>Boolean</name>)
                                                    <call>
                                                        <name><name>CharsetMethods</name>.<name>
                                                            fgCharsetCanEncodeMethod</name>.
                                                            <name>invoke</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>charset</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>(
                                                                    <name>
                                                                        <name>Object</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    )
                                                                    <name>null</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    ).
                                                    <call>
                                                        <name>booleanValue</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>fCharsetEncoder</name>
                                                            =
                                                            <call>
                                                                <name><name>CharsetMethods</name>.<name>
                                                                    fgCharsetNewEncoderMethod</name>.
                                                                    <name>invoke</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>charset</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>(
                                                                            <name>
                                                                                <name>Object</name>
                                                                                <index>[]</index>
                                                                            </name>
                                                                            )
                                                                            <name>null</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                            <comment type="line">// This charset cannot be used for encoding, don't try
                                                it again...
                                            </comment>
                                            <else>else
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>fHaveTriedCharsetEncoder</name>
                                                            = true
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </else>
                                        </if>
                                        }
                                    </block>
                                    <catch>catch (
                                        <param>
                                            <decl>
                                                <type>
                                                    <name>Exception</name>
                                                </type>
                                                <name>e</name>
                                            </decl>
                                        </param>
                                        )
                                        <block>{
                                            <comment type="line">// don't try it again...</comment>
                                            <expr_stmt>
                                                <expr>
                                                    <name>fHaveTriedCharsetEncoder</name>
                                                    = true
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </catch>
                                </try>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">// Attempt to use the CharsetEncoder to determine whether the character is
                        printable.
                    </comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fCharsetEncoder</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <try>try
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>
                                                    <name>fArgsForMethod</name>
                                                    <index>[<expr>0</expr>]
                                                    </index>
                                                </name>
                                                = new
                                                <call>
                                                    <name>Character</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>ch</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <return>return
                                            <expr>((<name>Boolean</name>)
                                                <call>
                                                    <name><name>CharsetMethods</name>.<name>
                                                        fgCharsetEncoderCanEncodeMethod</name>.
                                                        <name>invoke</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>fCharsetEncoder</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>fArgsForMethod</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                ).
                                                <call>
                                                    <name>booleanValue</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                    <catch>catch (
                                        <param>
                                            <decl>
                                                <type>
                                                    <name>Exception</name>
                                                </type>
                                                <name>e</name>
                                            </decl>
                                        </param>
                                        )
                                        <block>{
                                            <comment type="line">// obviously can't use this charset encoder; possibly a
                                                JDK bug
                                            </comment>
                                            <expr_stmt>
                                                <expr>
                                                    <name>fCharsetEncoder</name>
                                                    =
                                                    <name>null</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>fHaveTriedCharsetEncoder</name>
                                                    = false
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </catch>
                                </try>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// As a last resort try to use a sun.io.CharToByteConverter to</comment>
                    <comment type="line">// determine whether this character is printable. We will always</comment>
                    <comment type="line">// reach here on JDK 1.3 or below.</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fCharToByteConverter</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fHaveTriedCToB</name>
                                            || !
                                            <name><name>CharToByteConverterMethods</name>.
                                                <name>fgConvertersAvailable</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <comment type="line">// forget it; nothing we can do...</comment>
                                            <return>return <expr>false</expr>;
                                            </return>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fArgsForMethod</name>
                                            ==
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>fArgsForMethod</name>
                                                    = new
                                                    <name>
                                                        <name>Object</name>
                                                        <index>[<expr>1</expr>]
                                                        </index>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <comment type="line">// try and create the CharToByteConverter</comment>
                                <try>try
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>
                                                    <name>fArgsForMethod</name>
                                                    <index>[<expr>0</expr>]
                                                    </index>
                                                </name>
                                                =
                                                <name>javaName</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>fCharToByteConverter</name>
                                                =
                                                <call>
                                                    <name><name>CharToByteConverterMethods</name>.<name>
                                                        fgGetConverterMethod</name>.
                                                        <name>invoke</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>null</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>fArgsForMethod</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                    <catch>catch (
                                        <param>
                                            <decl>
                                                <type>
                                                    <name>Exception</name>
                                                </type>
                                                <name>e</name>
                                            </decl>
                                        </param>
                                        )
                                        <block>{
                                            <comment type="line">// don't try it again...</comment>
                                            <expr_stmt>
                                                <expr>
                                                    <name>fHaveTriedCToB</name>
                                                    = true
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <return>return <expr>false</expr>;
                                            </return>
                                            }
                                        </block>
                                    </catch>
                                </try>
                                }
                            </block>
                        </then>
                    </if>
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>fArgsForMethod</name>
                                        <index>[<expr>0</expr>]
                                        </index>
                                    </name>
                                    = new
                                    <call>
                                        <name>Character</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>ch</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <return>return
                                <expr>((<name>Boolean</name>)
                                    <call>
                                        <name><name>CharToByteConverterMethods</name>.<name>fgCanConvertMethod</name>.
                                            <name>invoke</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>fCharToByteConverter</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>fArgsForMethod</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    ).
                                    <call>
                                        <name>booleanValue</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>Exception</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <comment type="line">// obviously can't use this converter; probably some kind of
                                </comment>
                                <comment type="line">// security restriction</comment>
                                <expr_stmt>
                                    <expr>
                                        <name>fCharToByteConverter</name>
                                        =
                                        <name>null</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fHaveTriedCToB</name>
                                        = false
                                    </expr>
                                    ;
                                </expr_stmt>
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </catch>
                    </try>
                    }
                </block>
            </function>

            <comment type="line">// is this an encoding name recognized by this JDK?</comment>
            <comment type="line">// if not, will throw UnsupportedEncodingException</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>void</name>
                </type>
                <name>testJavaEncodingName</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>UnsupportedEncodingException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>byte</name>
                                <index>[]</index>
                            </type>
                            <name>bTest</name> =
                            <init>
                                <expr>
                                    <block>{
                                        <expr>(<name>byte</name>)'v'
                                        </expr>
                                        ,
                                        <expr>(<name>byte</name>)'a'
                                        </expr>
                                        ,
                                        <expr>(<name>byte</name>)'l'
                                        </expr>
                                        ,
                                        <expr>(<name>byte</name>)'i'
                                        </expr>
                                        ,
                                        <expr>(<name>byte</name>)'d'
                                        </expr>
                                        }
                                    </block>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>s</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>String</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>bTest</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>name</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Holder of methods from java.nio.charset.Charset and java.nio.charset.CharsetEncoder.
                */
            </comment>
            <class>
                <specifier>static</specifier>
                class <name>CharsetMethods</name>
                <block>{

                    <comment type="line">// Method: java.nio.charset.Charset.forName(java.lang.String)</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>static</specifier>
                                <name><name>java</name>.<name>lang</name>.<name>reflect</name>.
                                    <name>Method</name>
                                </name>
                            </type>
                            <name>fgCharsetForNameMethod</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// Method: java.nio.charset.Charset.canEncode()</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>static</specifier>
                                <name><name>java</name>.<name>lang</name>.<name>reflect</name>.
                                    <name>Method</name>
                                </name>
                            </type>
                            <name>fgCharsetCanEncodeMethod</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// Method: java.nio.charset.Charset.newEncoder()</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>static</specifier>
                                <name><name>java</name>.<name>lang</name>.<name>reflect</name>.
                                    <name>Method</name>
                                </name>
                            </type>
                            <name>fgCharsetNewEncoderMethod</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// Method: java.nio.charset.CharsetEncoder.canEncode(char)</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>static</specifier>
                                <name><name>java</name>.<name>lang</name>.<name>reflect</name>.
                                    <name>Method</name>
                                </name>
                            </type>
                            <name>fgCharsetEncoderCanEncodeMethod</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// Flag indicating whether or not java.nio.charset.* is available.</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>static</specifier>
                                <name>boolean</name>
                            </type>
                            <name>fgNIOCharsetAvailable</name> =
                            <init>
                                <expr>false</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <constructor>
                        <specifier>private</specifier>
                        <name>CharsetMethods</name>
                        <parameter_list>()</parameter_list>
                        <block>{}</block>
                    </constructor>

                    <comment type="line">// Attempt to get methods for Charset and CharsetEncoder on class
                        initialization.
                    </comment>
                    static
                    <block>{
                        <try>try
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Class</name>
                                        </type>
                                        <name>charsetClass</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>Class</name>.
                                                        <name>forName</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"java.nio.charset.Charset"</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Class</name>
                                        </type>
                                        <name>charsetEncoderClass</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>Class</name>.
                                                        <name>forName</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"java.nio.charset.CharsetEncoder"</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fgCharsetForNameMethod</name>
                                        =
                                        <call>
                                            <name><name>charsetClass</name>.
                                                <name>getMethod</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"forName"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>new
                                                        <name>
                                                            <name>Class</name>
                                                            <index>[]</index>
                                                        </name>
                                                        <block>{
                                                            <expr>
                                                                <name><name>String</name>.
                                                                    <name>
                                                                        <name/>
                                                                    </name>
                                                                </name>
                                                                class
                                                            </expr>
                                                            }
                                                        </block>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fgCharsetCanEncodeMethod</name>
                                        =
                                        <call>
                                            <name><name>charsetClass</name>.
                                                <name>getMethod</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"canEncode"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>new
                                                        <name>
                                                            <name>Class</name>
                                                            <index>[]</index>
                                                        </name>
                                                        <block>{}</block>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fgCharsetNewEncoderMethod</name>
                                        =
                                        <call>
                                            <name><name>charsetClass</name>.
                                                <name>getMethod</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"newEncoder"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>new
                                                        <name>
                                                            <name>Class</name>
                                                            <index>[]</index>
                                                        </name>
                                                        <block>{}</block>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fgCharsetEncoderCanEncodeMethod</name>
                                        =
                                        <call>
                                            <name><name>charsetEncoderClass</name>.
                                                <name>getMethod</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"canEncode"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>new
                                                        <name>
                                                            <name>Class</name>
                                                            <index>[]</index>
                                                        </name>
                                                        <block>{
                                                            <expr>
                                                                <name><name>Character</name>.
                                                                    <name>TYPE</name>
                                                                </name>
                                                            </expr>
                                                            }
                                                        </block>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fgNIOCharsetAvailable</name>
                                        = true
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                            <comment type="line">// ClassNotFoundException, NoSuchMethodException or SecurityException
                            </comment>
                            <comment type="line">// Whatever the case, we cannot use java.nio.charset.*.</comment>
                            <catch>catch (
                                <param>
                                    <decl>
                                        <type>
                                            <name>Exception</name>
                                        </type>
                                        <name>exc</name>
                                    </decl>
                                </param>
                                )
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <name>fgCharsetForNameMethod</name>
                                            =
                                            <name>null</name>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <name>fgCharsetCanEncodeMethod</name>
                                            =
                                            <name>null</name>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <name>fgCharsetEncoderCanEncodeMethod</name>
                                            =
                                            <name>null</name>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <name>fgCharsetNewEncoderMethod</name>
                                            =
                                            <name>null</name>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <name>fgNIOCharsetAvailable</name>
                                            = false
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                            </catch>
                        </try>
                        }
                    </block>
                    }
                </block>
            </class>

            <comment type="javadoc">/**
                * Holder of methods from sun.io.CharToByteConverter.
                */
            </comment>
            <class>
                <specifier>static</specifier>
                class <name>CharToByteConverterMethods</name>
                <block>{

                    <comment type="line">// Method: sun.io.CharToByteConverter.getConverter(java.lang.String)</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>static</specifier>
                                <name><name>java</name>.<name>lang</name>.<name>reflect</name>.
                                    <name>Method</name>
                                </name>
                            </type>
                            <name>fgGetConverterMethod</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// Method: sun.io.CharToByteConverter.canConvert(char)</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>static</specifier>
                                <name><name>java</name>.<name>lang</name>.<name>reflect</name>.
                                    <name>Method</name>
                                </name>
                            </type>
                            <name>fgCanConvertMethod</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// Flag indicating whether or not sun.io.CharToByteConverter is available.
                    </comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>static</specifier>
                                <name>boolean</name>
                            </type>
                            <name>fgConvertersAvailable</name> =
                            <init>
                                <expr>false</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <constructor>
                        <specifier>private</specifier>
                        <name>CharToByteConverterMethods</name>
                        <parameter_list>()</parameter_list>
                        <block>{}</block>
                    </constructor>

                    <comment type="line">// Attempt to get methods for char to byte converter on class initialization.
                    </comment>
                    static
                    <block>{
                        <try>try
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Class</name>
                                        </type>
                                        <name>clazz</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>Class</name>.
                                                        <name>forName</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"sun.io.CharToByteConverter"</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fgGetConverterMethod</name>
                                        =
                                        <call>
                                            <name><name>clazz</name>.
                                                <name>getMethod</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"getConverter"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>new
                                                        <name>
                                                            <name>Class</name>
                                                            <index>[]</index>
                                                        </name>
                                                        <block>{
                                                            <expr>
                                                                <name><name>String</name>.
                                                                    <name>
                                                                        <name/>
                                                                    </name>
                                                                </name>
                                                                class
                                                            </expr>
                                                            }
                                                        </block>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fgCanConvertMethod</name>
                                        =
                                        <call>
                                            <name><name>clazz</name>.
                                                <name>getMethod</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"canConvert"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>new
                                                        <name>
                                                            <name>Class</name>
                                                            <index>[]</index>
                                                        </name>
                                                        <block>{
                                                            <expr>
                                                                <name><name>Character</name>.
                                                                    <name>TYPE</name>
                                                                </name>
                                                            </expr>
                                                            }
                                                        </block>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fgConvertersAvailable</name>
                                        = true
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                            <comment type="line">// ClassNotFoundException, NoSuchMethodException or SecurityException
                            </comment>
                            <comment type="line">// Whatever the case, we cannot use sun.io.CharToByteConverter.
                            </comment>
                            <catch>catch (
                                <param>
                                    <decl>
                                        <type>
                                            <name>Exception</name>
                                        </type>
                                        <name>exc</name>
                                    </decl>
                                </param>
                                )
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <name>fgGetConverterMethod</name>
                                            =
                                            <name>null</name>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <name>fgCanConvertMethod</name>
                                            =
                                            <name>null</name>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <name>fgConvertersAvailable</name>
                                            = false
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                            </catch>
                        </try>
                        }
                    </block>
                    }
                </block>
            </class>
            }
        </block>
    </class>
</unit>
