<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\util\EntityResolverWrapper.java">
    <comment type="block">/*
        * Copyright 2001, 2002,2004 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.
            <name>util</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>InputStream</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>IOException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>Reader</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XNIException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XMLResourceIdentifier</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLEntityResolver</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLInputSource</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>xml</name>.<name>sax</name>.
            <name>EntityResolver</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>xml</name>.<name>sax</name>.
            <name>InputSource</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>xml</name>.<name>sax</name>.
            <name>SAXException</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * This class wraps a SAX entity resolver in an XNI entity resolver.
        *
        * @see EntityResolver
        *
        * @author Andy Clark, IBM
        *
        * @version $Id: EntityResolverWrapper.java,v 1.6 2004/02/24 23:15:53 mrglavas Exp $
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class
        <name>EntityResolverWrapper</name>
        <super>
            <implements>implements
                <name>XMLEntityResolver</name>
            </implements>
        </super>
        <block>{

            <comment type="line">//</comment>
            <comment type="line">// Data</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/** The SAX entity resolver. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>EntityResolver</name>
                    </type>
                    <name>fEntityResolver</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">//</comment>
            <comment type="line">// Constructors</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/** Default constructor. */</comment>
            <constructor>
                <specifier>public</specifier>
                <name>EntityResolverWrapper</name>
                <parameter_list>()</parameter_list>
                <block>{}</block>
            </constructor>

            <comment type="javadoc">/** Wraps the specified SAX entity resolver. */</comment>
            <constructor>
                <specifier>public</specifier>
                <name>EntityResolverWrapper</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>EntityResolver</name>
                            </type>
                            <name>entityResolver</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setEntityResolver</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>entityResolver</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>
            <comment type="line">// &lt;init&gt;(EntityResolver)</comment>

            <comment type="line">//</comment>
            <comment type="line">// Public methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/** Sets the SAX entity resolver. */</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setEntityResolver</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>EntityResolver</name>
                            </type>
                            <name>entityResolver</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fEntityResolver</name>
                            =
                            <name>entityResolver</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="line">// setEntityResolver(EntityResolver)</comment>

            <comment type="javadoc">/** Returns the SAX entity resolver. */</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>EntityResolver</name>
                </type>
                <name>getEntityResolver</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fEntityResolver</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getEntityResolver():EntityResolver</comment>

            <comment type="line">//</comment>
            <comment type="line">// XMLEntityResolver methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * Resolves an external parsed entity. If the entity cannot be
                * resolved, this method should return null.
                *
                * @param resourceIdentifier contains the physical co-ordinates of the resource to be resolved
                *
                * @throws XNIException Thrown on general error.
                * @throws IOException Thrown if resolved entity stream cannot be
                * opened or some other i/o error occurs.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>XMLInputSource</name>
                </type>
                <name>resolveEntity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLResourceIdentifier</name>
                            </type>
                            <name>resourceIdentifier</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                    ,
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// When both pubId and sysId are null, the user's entity resolver</comment>
                    <comment type="line">// can do nothing about it. We'd better not bother calling it.</comment>
                    <comment type="line">// This happens when the resourceIdentifier is a GrammarDescription,</comment>
                    <comment type="line">// which describes a schema grammar of some namespace, but without</comment>
                    <comment type="line">// any schema location hint. -Sg</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>pubId</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>resourceIdentifier</name>.
                                            <name>getPublicId</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>sysId</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>resourceIdentifier</name>.
                                            <name>getExpandedSystemId</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>pubId</name>
                                == <name>null</name> &amp;&amp; <name>sysId</name> ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <name>null</name>
                                </expr>
                                ;
                            </return>
                        </then>
                    </if>

                    <comment type="line">// resolve entity using SAX entity resolver</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fEntityResolver</name>
                                != <name>null</name> &amp;&amp; <name>resourceIdentifier</name> !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <try>try
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>InputSource</name>
                                                </type>
                                                <name>inputSource</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>fEntityResolver</name>.
                                                                <name>resolveEntity</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>pubId</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>sysId</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>inputSource</name>
                                                    !=
                                                    <name>null</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>String</name>
                                                            </type>
                                                            <name>publicId</name> =
                                                            <init>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>inputSource</name>.
                                                                            <name>getPublicId</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>String</name>
                                                            </type>
                                                            <name>systemId</name> =
                                                            <init>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>inputSource</name>.
                                                                            <name>getSystemId</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>String</name>
                                                            </type>
                                                            <name>baseSystemId</name> =
                                                            <init>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>resourceIdentifier</name>.
                                                                            <name>getBaseSystemId</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>InputStream</name>
                                                            </type>
                                                            <name>byteStream</name> =
                                                            <init>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>inputSource</name>.
                                                                            <name>getByteStream</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>Reader</name>
                                                            </type>
                                                            <name>charStream</name> =
                                                            <init>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>inputSource</name>.
                                                                            <name>getCharacterStream</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>String</name>
                                                            </type>
                                                            <name>encoding</name> =
                                                            <init>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>inputSource</name>.
                                                                            <name>getEncoding</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>XMLInputSource</name>
                                                            </type>
                                                            <name>xmlInputSource</name> =
                                                            <init>
                                                                <expr>new
                                                                    <call>
                                                                        <name>XMLInputSource</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>publicId</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>systemId</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>baseSystemId</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>xmlInputSource</name>.
                                                                    <name>setByteStream</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>byteStream</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>xmlInputSource</name>.
                                                                    <name>setCharacterStream</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>charStream</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>xmlInputSource</name>.
                                                                    <name>setEncoding</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>encoding</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <return>return
                                                        <expr>
                                                            <name>xmlInputSource</name>
                                                        </expr>
                                                        ;
                                                    </return>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>

                                    <comment type="line">// error resolving entity</comment>
                                    <catch>catch (
                                        <param>
                                            <decl>
                                                <type>
                                                    <name>SAXException</name>
                                                </type>
                                                <name>e</name>
                                            </decl>
                                        </param>
                                        )
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>Exception</name>
                                                    </type>
                                                    <name>ex</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name><name>e</name>.
                                                                    <name>getException</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>ex</name>
                                                        ==
                                                        <name>null</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>ex</name>
                                                                =
                                                                <name>e</name>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>XNIException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>ex</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </catch>
                                </try>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// unable to resolve entity</comment>
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// resolveEntity(String,String,String):XMLInputSource</comment>
            }
        </block>
    </class>
</unit>
