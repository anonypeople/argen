<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\util\ErrorHandlerProxy.java">
    <comment type="block">/*
        * Copyright 2005 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.
            <name>util</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLErrorHandler</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>xml</name>.<name>sax</name>.
            <name>ErrorHandler</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>xml</name>.<name>sax</name>.
            <name>SAXException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>xml</name>.<name>sax</name>.
            <name>SAXParseException</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * Wraps {@link XMLErrorHandler} and make it look like a SAX {@link ErrorHandler}.
        *
        * &lt;p&gt;
        * The derived class should override the {@link #getErrorHandler()} method
        * so that it will return the correct {@link XMLErrorHandler} instance.
        * This method will be called whenever an error/warning is found.
        *
        * &lt;p&gt;
        * Experience shows that it is better to store the actual
        * {@link XMLErrorHandler} in one place and looks up that variable,
        * rather than copying it into every component that needs an error handler
        * and update all of them whenever it is changed, IMO.
        *
        * @author Kohsuke Kawaguchi (kohsuke.kawaguchi@sun.com)
        *
        * @version $Id: ErrorHandlerProxy.java,v 1.3 2005/06/22 03:58:12 mrglavas Exp $
        */
    </comment>
    <class>
        <specifier>public</specifier>
        <specifier>abstract</specifier> class <name>ErrorHandlerProxy</name>
        <super>
            <implements>implements
                <name>ErrorHandler</name>
            </implements>
        </super>
        <block>{

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>error</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>SAXParseException</name>
                            </type>
                            <name>e</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>SAXException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XMLErrorHandler</name>
                            </type>
                            <name>eh</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getErrorHandler</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>eh</name>
                                <name>instanceof</name>
                                <name>ErrorHandlerWrapper</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>((<name>ErrorHandlerWrapper</name>)<name>eh</name>).
                                        <call>
                                            <name><name>fErrorHandler</name>.
                                                <name>error</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>e</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>eh</name>.
                                                <name>error</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>""</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>""</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>ErrorHandlerWrapper</name>.
                                                                <name>createXMLParseException</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>e</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    <comment type="line">// if an XNIException is thrown, just let it go.</comment>
                    <comment type="line">// REVISIT: is this OK? or should we try to wrap it into SAXException?
                    </comment>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>fatalError</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>SAXParseException</name>
                            </type>
                            <name>e</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>SAXException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XMLErrorHandler</name>
                            </type>
                            <name>eh</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getErrorHandler</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>eh</name>
                                <name>instanceof</name>
                                <name>ErrorHandlerWrapper</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>((<name>ErrorHandlerWrapper</name>)<name>eh</name>).
                                        <call>
                                            <name><name>fErrorHandler</name>.
                                                <name>fatalError</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>e</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>eh</name>.
                                                <name>fatalError</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>""</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>""</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>ErrorHandlerWrapper</name>.
                                                                <name>createXMLParseException</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>e</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>warning</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>SAXParseException</name>
                            </type>
                            <name>e</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>SAXException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XMLErrorHandler</name>
                            </type>
                            <name>eh</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getErrorHandler</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>eh</name>
                                <name>instanceof</name>
                                <name>ErrorHandlerWrapper</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>((<name>ErrorHandlerWrapper</name>)<name>eh</name>).
                                        <call>
                                            <name><name>fErrorHandler</name>.
                                                <name>warning</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>e</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>eh</name>.
                                                <name>warning</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>""</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>""</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>ErrorHandlerWrapper</name>.
                                                                <name>createXMLParseException</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>e</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <function_decl>
                <type>
                    <specifier>protected</specifier>
                    <specifier>abstract</specifier>
                    <name>XMLErrorHandler</name>
                </type>
                <name>getErrorHandler</name>
                <parameter_list>()</parameter_list>;
            </function_decl>
            }
        </block>
    </class>
</unit>
