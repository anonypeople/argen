<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\impl\xs\identity\Field.java">
    <comment type="block">/*
        * Copyright 2001-2005 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xs</name>.
            <name>identity</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xpath</name>.
            <name>XPathException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xs</name>.<name>
            util</name>.
            <name>ShortListImpl</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>SymbolTable</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>NamespaceContext</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.
            <name>ShortList</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.
            <name>XSComplexTypeDefinition</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.
            <name>XSConstants</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.
            <name>XSTypeDefinition</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * Schema identity constraint field.
        *
        * @xerces.internal
        *
        * @author Andy Clark, IBM
        * @version $Id: Field.java,v 1.20 2005/05/25 02:28:39 mrglavas Exp $
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>Field</name>
        <block>{

            <comment type="line">//</comment>
            <comment type="line">// Data</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/** Field XPath. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name><name>Field</name>.
                            <name>XPath</name>
                        </name>
                    </type>
                    <name>fXPath</name>
                </decl>
                ;
            </decl_stmt>


            <comment type="javadoc">/** Identity constraint. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>IdentityConstraint</name>
                    </type>
                    <name>fIdentityConstraint</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">//</comment>
            <comment type="line">// Constructors</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/** Constructs a field. */</comment>
            <constructor>
                <specifier>public</specifier>
                <name>Field</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>Field</name>.
                                    <name>XPath</name>
                                </name>
                            </type>
                            <name>xpath</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>IdentityConstraint</name>
                            </type>
                            <name>identityConstraint</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fXPath</name>
                            =
                            <name>xpath</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fIdentityConstraint</name>
                            =
                            <name>identityConstraint</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>
            <comment type="line">// &lt;init&gt;(Field.XPath,IdentityConstraint)</comment>

            <comment type="line">//</comment>
            <comment type="line">// Public methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/** Returns the field XPath. */</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xpath</name>.
                        <name>XPath</name>
                    </name>
                </type>
                <name>getXPath</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fXPath</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getXPath():org.apache.xerces.impl.v1.schema.identity.XPath</comment>

            <comment type="javadoc">/** Returns the identity constraint. */</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>IdentityConstraint</name>
                </type>
                <name>getIdentityConstraint</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fIdentityConstraint</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getIdentityConstraint():IdentityConstraint</comment>

            <comment type="line">// factory method</comment>

            <comment type="javadoc">/** Creates a field matcher. */</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>XPathMatcher</name>
                </type>
                <name>createMatcher</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>FieldActivator</name>
                            </type>
                            <name>activator</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ValueStore</name>
                            </type>
                            <name>store</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name><name>Field</name>.
                                    <name>Matcher</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>fXPath</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>activator</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>store</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// createMatcher(ValueStore):XPathMatcher</comment>

            <comment type="line">//</comment>
            <comment type="line">// Object methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/** Returns a string representation of this object. */</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>toString</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>fXPath</name>.
                                    <name>toString</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// toString():String</comment>

            <comment type="line">//</comment>
            <comment type="line">// Classes</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * Field XPath.
                *
                * @author Andy Clark, IBM
                */
            </comment>
            <class>
                <specifier>public</specifier>
                <specifier>static</specifier> class
                <name>XPath</name>
                <super>
                    <extends>extends <name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>
                        xpath</name>.
                        <name>XPath</name>
                    </extends>
                </super>
                <block>{

                    <comment type="line">//</comment>
                    <comment type="line">// Constructors</comment>
                    <comment type="line">//</comment>

                    <comment type="javadoc">/** Constructs a field XPath expression. */</comment>
                    <constructor>
                        <specifier>public</specifier>
                        <name>XPath</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>xpath</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>SymbolTable</name>
                                    </type>
                                    <name>symbolTable</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>NamespaceContext</name>
                                    </type>
                                    <name>context</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <throws>throws
                            <argument>
                                <expr>
                                    <name>XPathException</name>
                                </expr>
                            </argument>
                        </throws>
                        <block>{
                            <comment type="line">// NOTE: We have to prefix the field XPath with "./" in</comment>
                            <comment type="line">// order to handle selectors such as "@attr" that</comment>
                            <comment type="line">// select the attribute because the fields could be</comment>
                            <comment type="line">// relative to the selector element. -Ac</comment>
                            <comment type="line">// Unless xpath starts with a descendant node -Achille Fokoue</comment>
                            <comment type="line">// ... or a / or a . - NG</comment>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>super</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>((
                                                    <call>
                                                        <name><name>xpath</name>.
                                                            <name>trim</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    .
                                                    <call>
                                                        <name>startsWith</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"/"</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    ||
                                                    <call>
                                                        <name><name>xpath</name>.
                                                            <name>trim</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    .
                                                    <call>
                                                        <name>startsWith</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"."</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    )?
                                                    <name>xpath</name>:"./"+<name>xpath</name>)
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>symbolTable</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>context</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>

                            <comment type="line">// verify that only one attribute is selected per branch</comment>
                            <for>for (
                                <init>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>i</name>=
                                        <init>
                                            <expr>0</expr>
                                        </init>
                                    </decl>
                                    ;
                                </init>
                                <condition>
                                    <expr><name>i</name>&lt;
                                        <name><name>fLocationPaths</name>.
                                            <name>length</name>
                                        </name>
                                    </expr>
                                    ;
                                </condition>
                                <incr>
                                    <expr><name>i</name>++
                                    </expr>
                                </incr>
                                )
                                <block>{
                                    <for>for(
                                        <init>
                                            <decl>
                                                <type>
                                                    <name>int</name>
                                                </type>
                                                <name>j</name>=
                                                <init>
                                                    <expr>0</expr>
                                                </init>
                                            </decl>
                                            ;
                                        </init>
                                        <condition>
                                            <expr><name>j</name>&lt;
                                                <name>
                                                    <name>fLocationPaths</name>
                                                    <index>[
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                .
                                                <name><name>steps</name>.
                                                    <name>length</name>
                                                </name>
                                            </expr>
                                            ;
                                        </condition>
                                        <incr>
                                            <expr><name>j</name>++
                                            </expr>
                                        </incr>
                                        )
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name><name>org</name>.<name>apache</name>.<name>
                                                            xerces</name>.<name>impl</name>.<name>xpath</name>.<name>
                                                            XPath</name>.
                                                            <name>Axis</name>
                                                        </name>
                                                    </type>
                                                    <name>axis</name> =
                                                    <init>
                                                        <expr>
                                                            <name>
                                                                <name>fLocationPaths</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>i</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            .
                                                            <name>
                                                                <name>steps</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>j</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            .
                                                            <name>axis</name>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name><name>axis</name>.
                                                            <name>type</name>
                                                        </name>
                                                        ==
                                                        <name><name>XPath</name>.<name>Axis</name>.
                                                            <name>ATTRIBUTE</name>
                                                        </name>
                                                        &amp;&amp;
                                                        (<name>j</name> &lt;
                                                        <name>
                                                            <name>fLocationPaths</name>
                                                            <index>[
                                                                <expr>
                                                                    <name>i</name>
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                        .
                                                        <name><name>steps</name>.
                                                            <name>length</name>
                                                        </name>
                                                        -1)
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <throw>throw
                                                            <expr>new
                                                                <call>
                                                                    <name>XPathException</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"c-fields-xpaths"</expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </throw>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </for>
                                    }
                                </block>
                            </for>
                            }
                        </block>
                    </constructor>
                    <comment type="line">// &lt;init&gt;(String,SymbolTable,NamespacesContext)</comment>

                    }
                </block>
            </class>
            <comment type="line">// class XPath</comment>

            <comment type="javadoc">/**
                * Field matcher.
                *
                * @author Andy Clark, IBM
                */
            </comment>
            <class>
                <specifier>protected</specifier>
                class
                <name>Matcher</name>
                <super>
                    <extends>extends
                        <name>XPathMatcher</name>
                    </extends>
                </super>
                <block>{

                    <comment type="line">//</comment>
                    <comment type="line">// Data</comment>
                    <comment type="line">//</comment>

                    <comment type="javadoc">/** Field activator. */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>protected</specifier>
                                <name>FieldActivator</name>
                            </type>
                            <name>fFieldActivator</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="javadoc">/** Value store for data values. */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>protected</specifier>
                                <name>ValueStore</name>
                            </type>
                            <name>fStore</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">//</comment>
                    <comment type="line">// Constructors</comment>
                    <comment type="line">//</comment>

                    <comment type="javadoc">/** Constructs a field matcher. */</comment>
                    <constructor>
                        <specifier>public</specifier>
                        <name>Matcher</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name><name>Field</name>.
                                            <name>XPath</name>
                                        </name>
                                    </type>
                                    <name>xpath</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>FieldActivator</name>
                                    </type>
                                    <name>activator</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>ValueStore</name>
                                    </type>
                                    <name>store</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>super</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>xpath</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>fFieldActivator</name>
                                    =
                                    <name>activator</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>fStore</name>
                                    =
                                    <name>store</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>
                    <comment type="line">// &lt;init&gt;(Field.XPath,ValueStore)</comment>

                    <comment type="line">//</comment>
                    <comment type="line">// XPathHandler methods</comment>
                    <comment type="line">//</comment>

                    <comment type="javadoc">/**
                        * This method is called when the XPath handler matches the
                        * XPath expression.
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>protected</specifier>
                            <name>void</name>
                        </type>
                        <name>matched</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Object</name>
                                    </type>
                                    <name>actualValue</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>short</name>
                                    </type>
                                    <name>valueType</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>ShortList</name>
                                    </type>
                                    <name>itemValueType</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>boolean</name>
                                    </type>
                                    <name>isNil</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>super</name>.
                                            <name>matched</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>actualValue</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>valueType</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>itemValueType</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>isNil</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>isNil</name>
                                        &amp;&amp; (
                                        <call>
                                            <name><name>fIdentityConstraint</name>.
                                                <name>getCategory</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        ==
                                        <name><name>IdentityConstraint</name>.
                                            <name>IC_KEY</name>
                                        </name>
                                        )
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>String</name>
                                                </type>
                                                <name>code</name> =
                                                <init>
                                                    <expr>"KeyMatchesNillable"</expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fStore</name>.
                                                        <name>reportError</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>code</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>new
                                                                <name>
                                                                    <name>Object</name>
                                                                    <index>[]</index>
                                                                </name>
                                                                <block>{
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>fIdentityConstraint</name>.
                                                                                <name>getElementName</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    }
                                                                </block>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fStore</name>.
                                            <name>addValue</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>Field</name>.
                                                        <name>this</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>actualValue</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name>convertToPrimitiveKind</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>valueType</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name>convertToPrimitiveKind</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>itemValueType</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <comment type="line">// once we've stored the value for this field, we set the mayMatch
                            </comment>
                            <comment type="line">// member to false so that, in the same scope, we don't match any
                                more
                            </comment>
                            <comment type="line">// values (and throw an error instead).</comment>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fFieldActivator</name>.
                                            <name>setMayMatch</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>Field</name>.
                                                        <name>this</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>Boolean</name>.
                                                        <name>FALSE</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>
                    <comment type="line">// matched(String)</comment>

                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>short</name>
                        </type>
                        <name>convertToPrimitiveKind</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>short</name>
                                    </type>
                                    <name>valueType</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <comment type="javadoc">/** Primitive datatypes. */</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>valueType</name>
                                        &lt;=
                                        <name><name>XSConstants</name>.
                                            <name>NOTATION_DT</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>
                                                <name>valueType</name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <comment type="javadoc">/** Types derived from string. */</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>valueType</name>
                                        &lt;=
                                        <name><name>XSConstants</name>.
                                            <name>ENTITY_DT</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>
                                                <name><name>XSConstants</name>.
                                                    <name>STRING_DT</name>
                                                </name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <comment type="javadoc">/** Types derived from decimal. */</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>valueType</name>
                                        &lt;=
                                        <name><name>XSConstants</name>.
                                            <name>POSITIVEINTEGER_DT</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>
                                                <name><name>XSConstants</name>.
                                                    <name>DECIMAL_DT</name>
                                                </name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <comment type="javadoc">/** Other types. */</comment>
                            <return>return
                                <expr>
                                    <name>valueType</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>ShortList</name>
                        </type>
                        <name>convertToPrimitiveKind</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>ShortList</name>
                                    </type>
                                    <name>itemValueType</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>itemValueType</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>int</name>
                                                </type>
                                                <name>i</name>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <specifier>final</specifier>
                                                    <name>int</name>
                                                </type>
                                                <name>length</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>itemValueType</name>.
                                                                <name>getLength</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <for>for (
                                            <init>
                                                <expr>
                                                    <name>i</name>
                                                    = 0
                                                </expr>
                                                ;
                                            </init>
                                            <condition>
                                                <expr>
                                                    <name>i</name>
                                                    &lt;
                                                    <name>length</name>
                                                </expr>
                                                ;
                                            </condition>
                                            <incr>
                                                <expr>++
                                                    <name>i</name>
                                                </expr>
                                            </incr>
                                            )
                                            <block>{
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>short</name>
                                                        </type>
                                                        <name>type</name> =
                                                        <init>
                                                            <expr>
                                                                <call>
                                                                    <name><name>itemValueType</name>.
                                                                        <name>item</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>i</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>type</name>
                                                            !=
                                                            <call>
                                                                <name>convertToPrimitiveKind</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>type</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <break>break;</break>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                }
                                            </block>
                                        </for>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>i</name>
                                                    !=
                                                    <name>length</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <specifier>final</specifier>
                                                                <name>short</name>
                                                                <index>[]</index>
                                                            </type>
                                                            <name>arr</name> =
                                                            <init>
                                                                <expr>new
                                                                    <name>
                                                                        <name>short</name>
                                                                        <index>[
                                                                            <expr>
                                                                                <name>length</name>
                                                                            </expr>
                                                                            ]
                                                                        </index>
                                                                    </name>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <for>for (
                                                        <init>
                                                            <decl>
                                                                <type>
                                                                    <name>int</name>
                                                                </type>
                                                                <name>j</name> =
                                                                <init>
                                                                    <expr>0</expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </init>
                                                        <condition>
                                                            <expr>
                                                                <name>j</name>
                                                                &lt;
                                                                <name>i</name>
                                                            </expr>
                                                            ;
                                                        </condition>
                                                        <incr>
                                                            <expr>++
                                                                <name>j</name>
                                                            </expr>
                                                        </incr>
                                                        )
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>
                                                                        <name>arr</name>
                                                                        <index>[
                                                                            <expr>
                                                                                <name>j</name>
                                                                            </expr>
                                                                            ]
                                                                        </index>
                                                                    </name>
                                                                    =
                                                                    <call>
                                                                        <name><name>itemValueType</name>.
                                                                            <name>item</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>j</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </for>
                                                    <for>for(<init>;</init>
                                                        <condition>
                                                            <expr>
                                                                <name>i</name>
                                                                &lt;
                                                                <name>length</name>
                                                            </expr>
                                                            ;
                                                        </condition>
                                                        <incr>
                                                            <expr>++
                                                                <name>i</name>
                                                            </expr>
                                                        </incr>
                                                        )
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>
                                                                        <name>arr</name>
                                                                        <index>[
                                                                            <expr>
                                                                                <name>i</name>
                                                                            </expr>
                                                                            ]
                                                                        </index>
                                                                    </name>
                                                                    =
                                                                    <call>
                                                                        <name>convertToPrimitiveKind</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>itemValueType</name>
                                                                                            .
                                                                                            <name>item</name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>i</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </for>
                                                    <return>return
                                                        <expr>new
                                                            <call>
                                                                <name>ShortListImpl</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>arr</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>arr</name>.
                                                                                <name>length</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </return>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </then>
                            </if>
                            <return>return
                                <expr>
                                    <name>itemValueType</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>protected</specifier>
                            <name>void</name>
                        </type>
                        <name>handleContent</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>XSTypeDefinition</name>
                                    </type>
                                    <name>type</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>boolean</name>
                                    </type>
                                    <name>nillable</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>Object</name>
                                    </type>
                                    <name>actualValue</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>short</name>
                                    </type>
                                    <name>valueType</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>ShortList</name>
                                    </type>
                                    <name>itemValueType</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>type</name>
                                        == <name>null</name> ||
                                        <call>
                                            <name><name>type</name>.
                                                <name>getTypeCategory</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        ==
                                        <name><name>XSTypeDefinition</name>.
                                            <name>COMPLEX_TYPE</name>
                                        </name>
                                        &amp;&amp;
                                        ((<name>XSComplexTypeDefinition</name>) <name>type</name>).
                                        <call>
                                            <name>getContentType</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        !=
                                        <name><name>XSComplexTypeDefinition</name>.
                                            <name>CONTENTTYPE_SIMPLE</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{

                                        <comment type="line">// the content must be simpleType content</comment>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fStore</name>.
                                                        <name>reportError</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"cvc-id.3"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>new
                                                                <name>
                                                                    <name>Object</name>
                                                                    <index>[]</index>
                                                                </name>
                                                                <block>{
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>fIdentityConstraint</name>.
                                                                                <name>getName</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ,
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>fIdentityConstraint</name>.
                                                                                <name>getElementName</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    }
                                                                </block>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>

                                        }
                                    </block>
                                </then>
                            </if>
                            <expr_stmt>
                                <expr>
                                    <name>fMatchedString</name>
                                    =
                                    <name>actualValue</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>matched</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>fMatchedString</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>valueType</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>itemValueType</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>nillable</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>
                    <comment type="line">// handleContent(XSElementDecl, String)</comment>

                    }
                </block>
            </class>
            <comment type="line">// class Matcher</comment>

            }
        </block>
    </class>
    <comment type="line">// class Field</comment>
</unit>
