<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\impl\xs\identity\FieldActivator.java">
    <comment type="block">/*
        * Copyright 2001,2002,2004 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xs</name>.
            <name>identity</name>
        </name>
        ;
    </package>


    <comment type="javadoc">/**
        * Interface for a field activator. The field activator is responsible
        * for activating fields within a specific scope; the caller merely
        * requests the fields to be activated.
        *
        * @xerces.internal
        *
        * @author Andy Clark, IBM
        *
        * @version $Id: FieldActivator.java,v 1.7 2004/10/06 15:14:51 mrglavas Exp $
        */
    </comment>
    <class type="interface">
        <specifier>public</specifier>
        interface <name>FieldActivator</name>
        <block>{

            <comment type="line">//</comment>
            <comment type="line">// FieldActivator methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * Start the value scope for the specified identity constraint. This
                * method is called when the selector matches in order to initialize
                * the value store.
                *
                * @param identityConstraint The identity constraint.
                * @param initialDepth the depth at which the selector began matching
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>startValueScopeFor</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>IdentityConstraint</name>
                            </type>
                            <name>identityConstraint</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>initialDepth</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Request to activate the specified field. This method returns the
                * matcher for the field.
                * It's also important for the implementor to ensure that it marks whether a Field
                * is permitted to match a value--that is, to call the setMayMatch(Field, Boolean) method.
                *
                * @param field The field to activate.
                * @param initialDepth the 0-indexed depth in the instance document at which the Selector began to match.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>XPathMatcher</name>
                </type>
                <name>activateField</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Field</name>
                            </type>
                            <name>field</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>initialDepth</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets whether the given field is permitted to match a value.
                * This should be used to catch instance documents that try
                * and match a field several times in the same scope.
                *
                * @param field The field that may be permitted to be matched.
                * @param state Boolean indiciating whether the field may be matched.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setMayMatch</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Field</name>
                            </type>
                            <name>field</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Boolean</name>
                            </type>
                            <name>state</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns whether the given field is permitted to match a value.
                *
                * @param field The field that may be permitted to be matched.
                * @return Boolean indicating whether the field may be matched.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Boolean</name>
                </type>
                <name>mayMatch</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Field</name>
                            </type>
                            <name>field</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Ends the value scope for the specified identity constraint.
                *
                * @param identityConstraint The identity constraint.
                * @param initialDepth the 0-indexed depth where the Selector began to match.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>endValueScopeFor</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>IdentityConstraint</name>
                            </type>
                            <name>identityConstraint</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>initialDepth</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            }
        </block>
    </class>
    <comment type="line">// interface FieldActivator</comment>
</unit>
