<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\html\dom\HTMLDocumentImpl.java">
    <comment type="block">/*
        * Copyright 1999,2000,2004,2005 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>apache</name>.<name>html</name>.
            <name>dom</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>StringWriter</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>lang</name>.<name>reflect</name>.
            <name>Constructor</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Hashtable</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Locale</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>dom</name>.
            <name>DocumentImpl</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>dom</name>.
            <name>NodeImpl</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>Attr</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>DOMException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>Element</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>Node</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>NodeList</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.<name>html</name>.
            <name>HTMLBodyElement</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.<name>html</name>.
            <name>HTMLCollection</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.<name>html</name>.
            <name>HTMLDocument</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.<name>html</name>.
            <name>HTMLElement</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.<name>html</name>.
            <name>HTMLFrameSetElement</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.<name>html</name>.
            <name>HTMLHeadElement</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.<name>html</name>.
            <name>HTMLHtmlElement</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.<name>html</name>.
            <name>HTMLTitleElement</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * Implements an HTML document. Provides access to the top level element in the
        * document, its body and title.
        * &lt;P&gt;
        * Several methods create new nodes of all basic types (comment, text, element,
        * etc.). These methods create new nodes but do not place them in the document
        * tree. The nodes may be placed in the document tree using {@link
        * org.w3c.dom.Node#appendChild} or {@link org.w3c.dom.Node#insertBefore}, or
        * they may be placed in some other document tree.
        * &lt;P&gt;
        * Note: &amp;lt;FRAMESET&amp;gt; documents are not supported at the moment, neither
        * are direct document writing ({@link #open}, {@link #write}) and HTTP attribute
        * methods ({@link #getURL}, {@link #getCookie}).
        *
        * @xerces.internal
        *
        * @version $Revision: 1.21 $ $Date: 2005/04/18 00:41:07 $
        * @author &lt;a href="mailto:arkin@exoffice.com"&gt;Assaf Arkin&lt;/a&gt;
        * @see org.w3c.dom.html.HTMLDocument
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class
        <name>HTMLDocumentImpl</name>
        <super>
            <extends>extends
                <name>DocumentImpl</name>
            </extends>
            <implements>implements
                <name>HTMLDocument</name>
            </implements>
        </super>
        <block>{

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>long</name>
                    </type>
                    <name>serialVersionUID</name> =
                    <init>
                        <expr>3258132457579427892L</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Holds {@link HTMLCollectionImpl} object with live collection of all
                * anchors in document. This reference is on demand only once.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>HTMLCollectionImpl</name>
                    </type>
                    <name>_anchors</name>
                </decl>
                ;
            </decl_stmt>


            <comment type="javadoc">/**
                * Holds {@link HTMLCollectionImpl} object with live collection of all
                * forms in document. This reference is on demand only once.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>HTMLCollectionImpl</name>
                    </type>
                    <name>_forms</name>
                </decl>
                ;
            </decl_stmt>


            <comment type="javadoc">/**
                * Holds {@link HTMLCollectionImpl} object with live collection of all
                * images in document. This reference is on demand only once.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>HTMLCollectionImpl</name>
                    </type>
                    <name>_images</name>
                </decl>
                ;
            </decl_stmt>


            <comment type="javadoc">/**
                * Holds {@link HTMLCollectionImpl} object with live collection of all
                * links in document. This reference is on demand only once.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>HTMLCollectionImpl</name>
                    </type>
                    <name>_links</name>
                </decl>
                ;
            </decl_stmt>


            <comment type="javadoc">/**
                * Holds {@link HTMLCollectionImpl} object with live collection of all
                * applets in document. This reference is on demand only once.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>HTMLCollectionImpl</name>
                    </type>
                    <name>_applets</name>
                </decl>
                ;
            </decl_stmt>


            <comment type="javadoc">/**
                * Holds string writer used by direct manipulation operation ({@link #open}.
                * {@link #write}, etc) to write new contents into the document and parse
                * that text into a document tree.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>StringWriter</name>
                    </type>
                    <name>_writer</name>
                </decl>
                ;
            </decl_stmt>


            <comment type="javadoc">/**
                * Holds names and classes of HTML element types. When an element with a
                * particular tag name is created, the matching {@link java.lang.Class}
                * is used to create the element object. For example, &amp;lt;A&amp;gt; matches
                * {@link HTMLAnchorElementImpl}. This static table is shared across all
                * HTML documents.
                *
                * @see #createElement
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <name>Hashtable</name>
                    </type>
                    <name>_elementTypesHTML</name>
                </decl>
                ;
            </decl_stmt>


            <comment type="javadoc">/**
                * Signature used to locate constructor of HTML element classes. This
                * static array is shared across all HTML documents.
                *
                * @see #createElement
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>Class</name>
                        <index>[]</index>
                    </type>
                    <name>_elemClassSigHTML</name> =
                    <init>
                        <expr>new
                            <name>
                                <name>Class</name>
                                <index>[]</index>
                            </name>
                            <block>{
                                <expr>
                                    <name><name>HTMLDocumentImpl</name>.
                                        <name>
                                            <name/>
                                        </name>
                                    </name>
                                    class
                                </expr>
                                ,
                                <expr>
                                    <name><name>String</name>.
                                        <name>
                                            <name/>
                                        </name>
                                    </name>
                                    class
                                </expr>
                                }
                            </block>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>


            <comment type="javadoc">/**
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>HTMLDocumentImpl</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>super</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementTypes</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>


            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>synchronized</specifier>
                    <name>Element</name>
                </type>
                <name>getDocumentElement</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>html</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>child</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>next</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// The document element is the top-level HTML element of the HTML</comment>
                    <comment type="line">// document. Only this element should exist at the top level.</comment>
                    <comment type="line">// If the HTML element is found, all other elements that might</comment>
                    <comment type="line">// precede it are placed inside the HTML element.</comment>
                    <expr_stmt>
                        <expr>
                            <name>html</name>
                            =
                            <call>
                                <name>getFirstChild</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <while>while
                        <condition>(
                            <expr>
                                <name>html</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>html</name>
                                        <name>instanceof</name>
                                        <name>HTMLHtmlElement</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <comment type="line">// REVISIT: [Q] Why is this code even here? In fact, the
                                        </comment>
                                        <comment type="line">// original code is in error because it will</comment>
                                        <comment type="line">// try to move ALL nodes to be children of the</comment>
                                        <comment type="line">// HTML tag. This is not the intended behavior</comment>
                                        <comment type="line">// for comments and processing instructions</comment>
                                        <comment type="line">// outside the root element; it will throw a</comment>
                                        <comment type="line">// hierarchy request error exception for doctype</comment>
                                        <comment type="line">// nodes; *and* this code shouldn't even be</comment>
                                        <comment type="line">// needed because the parser should never build</comment>
                                        <comment type="line">// a document that contains more than a single</comment>
                                        <comment type="line">// root element, anyway! -Ac</comment>
                                        <comment type="javadoc">/***
                                            synchronized ( html )
                                            {
                                            child = getFirstChild();
                                            while ( child != null &amp;&amp; child != html )
                                            {
                                            next = child.getNextSibling();
                                            html.appendChild( child );
                                            child = next;
                                            }
                                            }
                                            /***/
                                        </comment>
                                        <return>return
                                            <expr>(<name>HTMLElement</name>)
                                                <name>html</name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <expr_stmt>
                                <expr>
                                    <name>html</name>
                                    =
                                    <call>
                                        <name><name>html</name>.
                                            <name>getNextSibling</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </while>

                    <comment type="line">// HTML element must exist. Create a new element and dump the</comment>
                    <comment type="line">// entire contents of the document into it in the same order as</comment>
                    <comment type="line">// they appear now.</comment>
                    <expr_stmt>
                        <expr>
                            <name>html</name>
                            = new
                            <call>
                                <name>HTMLHtmlElementImpl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>this</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTML"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>child</name>
                            =
                            <call>
                                <name>getFirstChild</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <while>while
                        <condition>(
                            <expr>
                                <name>child</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>next</name>
                                    =
                                    <call>
                                        <name><name>child</name>.
                                            <name>getNextSibling</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>html</name>.
                                            <name>appendChild</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>child</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>child</name>
                                    =
                                    <name>next</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </while>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>appendChild</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>html</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>(<name>HTMLElement</name>)
                            <name>html</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * Obtains the &amp;lt;HEAD&amp;gt; element in the document, creating one if does
                * not exist before. The &amp;lt;HEAD&amp;gt; element is the first element in the
                * &amp;lt;HTML&amp;gt; in the document. The &amp;lt;HTML&amp;gt; element is obtained by
                * calling {@link #getDocumentElement}. If the element does not exist, one
                * is created.
                * &lt;P&gt;
                * Called by {@link #getTitle}, {@link #setTitle}, {@link #getBody} and
                * {@link #setBody} to assure the document has the &amp;lt;HEAD&amp;gt; element
                * correctly placed.
                *
                * @return The &amp;lt;HEAD&amp;gt; element
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>synchronized</specifier>
                    <name>HTMLElement</name>
                </type>
                <name>getHead</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>head</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>html</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>child</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>next</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// Call getDocumentElement() to get the HTML element that is also the</comment>
                    <comment type="line">// top-level element in the document. Get the first element in the</comment>
                    <comment type="line">// document that is called HEAD. Work with that.</comment>
                    <expr_stmt>
                        <expr>
                            <name>html</name>
                            =
                            <call>
                                <name>getDocumentElement</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <synchronized>synchronized (
                        <expr>
                            <name>html</name>
                        </expr>
                        )
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>head</name>
                                    =
                                    <call>
                                        <name><name>html</name>.
                                            <name>getFirstChild</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <while>while
                                <condition>(
                                    <expr>
                                        <name>head</name>
                                        != <name>null</name> &amp;&amp; ! ( <name>head</name>
                                        <name>instanceof</name>
                                        <name>HTMLHeadElement</name> )
                                    </expr>
                                    )
                                </condition>
                                <expr_stmt>
                                    <expr>
                                        <name>head</name>
                                        =
                                        <call>
                                            <name><name>head</name>.
                                                <name>getNextSibling</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                            </while>
                            <comment type="line">// HEAD exists but might not be first element in HTML: make sure
                            </comment>
                            <comment type="line">// it is and return it.</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>head</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <synchronized>synchronized (
                                            <expr>
                                                <name>head</name>
                                            </expr>
                                            )
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>child</name>
                                                        =
                                                        <call>
                                                            <name><name>html</name>.
                                                                <name>getFirstChild</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <while>while
                                                    <condition>(
                                                        <expr>
                                                            <name>child</name>
                                                            != <name>null</name> &amp;&amp; <name>child</name> !=
                                                            <name>head</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>next</name>
                                                                =
                                                                <call>
                                                                    <name><name>child</name>.
                                                                        <name>getNextSibling</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>head</name>.
                                                                        <name>insertBefore</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>child</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>head</name>.
                                                                                        <name>getFirstChild</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>child</name>
                                                                =
                                                                <name>next</name>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </while>
                                                }
                                            </block>
                                        </synchronized>
                                        <return>return
                                            <expr>(<name>HTMLElement</name>)
                                                <name>head</name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>

                            <comment type="line">// Head does not exist, create a new one, place it at the top of the
                            </comment>
                            <comment type="line">// HTML element and return it.</comment>
                            <expr_stmt>
                                <expr>
                                    <name>head</name>
                                    = new
                                    <call>
                                        <name>HTMLHeadElementImpl</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>this</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"HEAD"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>html</name>.
                                            <name>insertBefore</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>head</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>html</name>.
                                                            <name>getFirstChild</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </synchronized>
                    <return>return
                        <expr>(<name>HTMLElement</name>)
                            <name>head</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>synchronized</specifier>
                    <name>String</name>
                </type>
                <name>getTitle</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>HTMLElement</name>
                            </type>
                            <name>head</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>NodeList</name>
                            </type>
                            <name>list</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>title</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// Get the HEAD element and look for the TITLE element within.</comment>
                    <comment type="line">// When found, make sure the TITLE is a direct child of HEAD,</comment>
                    <comment type="line">// and return the title's text (the Text node contained within).</comment>
                    <expr_stmt>
                        <expr>
                            <name>head</name>
                            =
                            <call>
                                <name>getHead</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>title</name>
                            =
                            <call>
                                <name><name>head</name>.
                                    <name>getElementsByTagName</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"TITLE"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            .
                            <call>
                                <name>item</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>list</name>
                            =
                            <call>
                                <name><name>head</name>.
                                    <name>getElementsByTagName</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"TITLE"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>list</name>.
                                        <name>getLength</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                &gt; 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>title</name>
                                        =
                                        <call>
                                            <name><name>list</name>.
                                                <name>item</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>0</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <return>return
                                    <expr>( (<name>HTMLTitleElement</name>) <name>title</name> ).
                                        <call>
                                            <name>getText</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">// No TITLE found, return an empty string.</comment>
                    <return>return <expr>""</expr>;
                    </return>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>synchronized</specifier>
                    <name>void</name>
                </type>
                <name>setTitle</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>newTitle</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>HTMLElement</name>
                            </type>
                            <name>head</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>NodeList</name>
                            </type>
                            <name>list</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>title</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// Get the HEAD element and look for the TITLE element within.</comment>
                    <comment type="line">// When found, make sure the TITLE is a direct child of HEAD,</comment>
                    <comment type="line">// and set the title's text (the Text node contained within).</comment>
                    <expr_stmt>
                        <expr>
                            <name>head</name>
                            =
                            <call>
                                <name>getHead</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>list</name>
                            =
                            <call>
                                <name><name>head</name>.
                                    <name>getElementsByTagName</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"TITLE"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>list</name>.
                                        <name>getLength</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                &gt; 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>title</name>
                                        =
                                        <call>
                                            <name><name>list</name>.
                                                <name>item</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>0</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>title</name>.
                                                    <name>getParentNode</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            !=
                                            <name>head</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>head</name>.
                                                        <name>appendChild</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>title</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                    </then>
                                </if>
                                <expr_stmt>
                                    <expr>( (<name>HTMLTitleElement</name>) <name>title</name> ).
                                        <call>
                                            <name>setText</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>newTitle</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <comment type="line">// No TITLE found, create a new element and place it at the end
                                </comment>
                                <comment type="line">// of the HEAD element.</comment>
                                <expr_stmt>
                                    <expr>
                                        <name>title</name>
                                        = new
                                        <call>
                                            <name>HTMLTitleElementImpl</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>this</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>"TITLE"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>( (<name>HTMLTitleElement</name>) <name>title</name> ).
                                        <call>
                                            <name>setText</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>newTitle</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>head</name>.
                                                <name>appendChild</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>title</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>synchronized</specifier>
                    <name>HTMLElement</name>
                </type>
                <name>getBody</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>html</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>head</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>body</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>child</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>next</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// Call getDocumentElement() to get the HTML element that is also the</comment>
                    <comment type="line">// top-level element in the document. Get the first element in the</comment>
                    <comment type="line">// document that is called BODY. Work with that.</comment>
                    <expr_stmt>
                        <expr>
                            <name>html</name>
                            =
                            <call>
                                <name>getDocumentElement</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>head</name>
                            =
                            <call>
                                <name>getHead</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <synchronized>synchronized (
                        <expr>
                            <name>html</name>
                        </expr>
                        )
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>body</name>
                                    =
                                    <call>
                                        <name><name>head</name>.
                                            <name>getNextSibling</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <while>while
                                <condition>(
                                    <expr>
                                        <name>body</name>
                                        != <name>null</name> &amp;&amp; ! ( <name>body</name>
                                        <name>instanceof</name>
                                        <name>HTMLBodyElement</name> )
                                        &amp;&amp; ! ( <name>body</name>
                                        <name>instanceof</name>
                                        <name>HTMLFrameSetElement</name> )
                                    </expr>
                                    )
                                </condition>
                                <expr_stmt>
                                    <expr>
                                        <name>body</name>
                                        =
                                        <call>
                                            <name><name>body</name>.
                                                <name>getNextSibling</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                            </while>

                            <comment type="line">// BODY/FRAMESET exists but might not be second element in HTML
                            </comment>
                            <comment type="line">// (after HEAD): make sure it is and return it.</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>body</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <synchronized>synchronized (
                                            <expr>
                                                <name>body</name>
                                            </expr>
                                            )
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>child</name>
                                                        =
                                                        <call>
                                                            <name><name>head</name>.
                                                                <name>getNextSibling</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <while>while
                                                    <condition>(
                                                        <expr>
                                                            <name>child</name>
                                                            != <name>null</name> &amp;&amp; <name>child</name> !=
                                                            <name>body</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>next</name>
                                                                =
                                                                <call>
                                                                    <name><name>child</name>.
                                                                        <name>getNextSibling</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>body</name>.
                                                                        <name>insertBefore</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>child</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>body</name>.
                                                                                        <name>getFirstChild</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>child</name>
                                                                =
                                                                <name>next</name>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </while>
                                                }
                                            </block>
                                        </synchronized>
                                        <return>return
                                            <expr>(<name>HTMLElement</name>)
                                                <name>body</name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>

                            <comment type="line">// BODY does not exist, create a new one, place it in the HTML
                                element
                            </comment>
                            <comment type="line">// right after the HEAD and return it.</comment>
                            <expr_stmt>
                                <expr>
                                    <name>body</name>
                                    = new
                                    <call>
                                        <name>HTMLBodyElementImpl</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>this</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"BODY"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>html</name>.
                                            <name>appendChild</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>body</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </synchronized>
                    <return>return
                        <expr>(<name>HTMLElement</name>)
                            <name>body</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>synchronized</specifier>
                    <name>void</name>
                </type>
                <name>setBody</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>HTMLElement</name>
                            </type>
                            <name>newBody</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>html</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>body</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>head</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>child</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>NodeList</name>
                            </type>
                            <name>list</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <synchronized>synchronized (
                        <expr>
                            <name>newBody</name>
                        </expr>
                        )
                        <block>{
                            <comment type="line">// Call getDocumentElement() to get the HTML element that is also the
                            </comment>
                            <comment type="line">// top-level element in the document. Get the first element in the
                            </comment>
                            <comment type="line">// document that is called BODY. Work with that.</comment>
                            <expr_stmt>
                                <expr>
                                    <name>html</name>
                                    =
                                    <call>
                                        <name>getDocumentElement</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>head</name>
                                    =
                                    <call>
                                        <name>getHead</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <synchronized>synchronized (
                                <expr>
                                    <name>html</name>
                                </expr>
                                )
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <name>list</name>
                                            =
                                            <call>
                                                <name><name>this</name>.
                                                    <name>getElementsByTagName</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>"BODY"</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <call>
                                                    <name><name>list</name>.
                                                        <name>getLength</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                &gt; 0
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <comment type="line">// BODY exists but might not follow HEAD in HTML.
                                                    If not,
                                                </comment>
                                                <comment type="line">// make it so and replce it. Start with the HEAD
                                                    and make
                                                </comment>
                                                <comment type="line">// sure the BODY is the first element after the
                                                    HEAD.
                                                </comment>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>body</name>
                                                        =
                                                        <call>
                                                            <name><name>list</name>.
                                                                <name>item</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>0</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <synchronized>synchronized (
                                                    <expr>
                                                        <name>body</name>
                                                    </expr>
                                                    )
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>child</name>
                                                                =
                                                                <name>head</name>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <while>while
                                                            <condition>(
                                                                <expr>
                                                                    <name>child</name>
                                                                    !=
                                                                    <name>null</name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <block>{
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>
                                                                            <name>child</name>
                                                                            <name>instanceof</name>
                                                                            <name>Element</name>
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{
                                                                            <if>if
                                                                                <condition>(
                                                                                    <expr>
                                                                                        <name>child</name>
                                                                                        !=
                                                                                        <name>body</name>
                                                                                    </expr>
                                                                                    )
                                                                                </condition>
                                                                                <then>
                                                                                    <expr_stmt>
                                                                                        <expr>
                                                                                            <call>
                                                                                                <name><name>html</name>.
                                                                                                    <name>insertBefore
                                                                                                    </name>
                                                                                                </name>
                                                                                                <argument_list>(
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <name>
                                                                                                                newBody
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    ,
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <name>
                                                                                                                child
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    )
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                        ;
                                                                                    </expr_stmt>
                                                                                </then>
                                                                                <else>else
                                                                                    <expr_stmt>
                                                                                        <expr>
                                                                                            <call>
                                                                                                <name><name>html</name>.
                                                                                                    <name>replaceChild
                                                                                                    </name>
                                                                                                </name>
                                                                                                <argument_list>(
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <name>
                                                                                                                newBody
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    ,
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <name>body
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    )
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                        ;
                                                                                    </expr_stmt>
                                                                                </else>
                                                                            </if>
                                                                            <return>return;</return>
                                                                            }
                                                                        </block>
                                                                    </then>
                                                                </if>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>child</name>
                                                                        =
                                                                        <call>
                                                                            <name><name>child</name>.
                                                                                <name>getNextSibling</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </while>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>html</name>.
                                                                        <name>appendChild</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>newBody</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </synchronized>
                                                <return>return;</return>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <comment type="line">// BODY does not exist, place it in the HTML element</comment>
                                    <comment type="line">// right after the HEAD.</comment>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>html</name>.
                                                    <name>appendChild</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>newBody</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                            </synchronized>
                            }
                        </block>
                    </synchronized>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>synchronized</specifier>
                    <name>Element</name>
                </type>
                <name>getElementById</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>elementId</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getElementById</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>elementId</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>this</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>NodeList</name>
                </type>
                <name>getElementsByName</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>elementName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>NameNodeListImpl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>this</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>elementName</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>final</specifier>
                    <name>NodeList</name>
                </type>
                <name>getElementsByTagName</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>tagName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>super</name>.
                                    <name>getElementsByTagName</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>tagName</name>.
                                                    <name>toUpperCase</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>Locale</name>.
                                                                <name>ENGLISH</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>final</specifier>
                    <name>NodeList</name>
                </type>
                <name>getElementsByTagNameNS</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>namespaceURI</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>localName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>namespaceURI</name>
                                != <name>null</name> &amp;&amp;
                                <call>
                                    <name><name>namespaceURI</name>.
                                        <name>length</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                &gt; 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>super</name>.
                                            <name>getElementsByTagNameNS</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>namespaceURI</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>localName</name>.
                                                            <name>toUpperCase</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Locale</name>.
                                                                        <name>ENGLISH</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                        </then>
                        <else>else
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>super</name>.
                                            <name>getElementsByTagName</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>localName</name>.
                                                            <name>toUpperCase</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Locale</name>.
                                                                        <name>ENGLISH</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                        </else>
                    </if>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * Xerces-specific constructor. "localName" is passed in, so we don't need
                * to create a new String for it.
                *
                * @param namespaceURI The namespace URI of the element to
                * create.
                * @param qualifiedName The qualified name of the element type to
                * instantiate.
                * @param localName The local name of the element to instantiate.
                * @return Element A new Element object with the following attributes:
                * @throws DOMException INVALID_CHARACTER_ERR: Raised if the specified
                * name contains an invalid character.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Element</name>
                </type>
                <name>createElementNS</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>namespaceURI</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>qualifiedName</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>localpart</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>DOMException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>createElementNS</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>namespaceURI</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>qualifiedName</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Element</name>
                </type>
                <name>createElementNS</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>namespaceURI</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>qualifiedName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>namespaceURI</name>
                                == <name>null</name> ||
                                <call>
                                    <name><name>namespaceURI</name>.
                                        <name>length</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                == 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <call>
                                        <name>createElement</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>qualifiedName</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                        </then>
                        <else>else
                            <block>{
                                <return>return
                                    <expr>
                                        <call>
                                            <name><name>super</name>.
                                                <name>createElementNS</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>namespaceURI</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>qualifiedName</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Element</name>
                </type>
                <name>createElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>tagName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>DOMException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Class</name>
                            </type>
                            <name>elemClass</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Constructor</name>
                            </type>
                            <name>cnst</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// First, make sure tag name is all upper case, next get the associated
                    </comment>
                    <comment type="line">// element class. If no class is found, generate a generic HTML element.
                    </comment>
                    <comment type="line">// Do so also if an unexpected exception occurs.</comment>
                    <expr_stmt>
                        <expr>
                            <name>tagName</name>
                            =
                            <call>
                                <name><name>tagName</name>.
                                    <name>toUpperCase</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>Locale</name>.
                                                <name>ENGLISH</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>elemClass</name>
                            = (<name>Class</name>)
                            <call>
                                <name><name>_elementTypesHTML</name>.
                                    <name>get</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>tagName</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>elemClass</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// Get the constructor for the element. The signature specifies
                                    an
                                </comment>
                                <comment type="line">// owner document and a tag name. Use the constructor to
                                    instantiate
                                </comment>
                                <comment type="line">// a new object and return it.</comment>
                                <try>try
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>cnst</name>
                                                =
                                                <call>
                                                    <name><name>elemClass</name>.
                                                        <name>getConstructor</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>_elemClassSigHTML</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <return>return
                                            <expr>(<name>Element</name>)
                                                <call>
                                                    <name><name>cnst</name>.
                                                        <name>newInstance</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>new
                                                                <name>
                                                                    <name>Object</name>
                                                                    <index>[]</index>
                                                                </name>
                                                                <block>{
                                                                    <expr>
                                                                        <name>this</name>
                                                                    </expr>
                                                                    ,
                                                                    <expr>
                                                                        <name>tagName</name>
                                                                    </expr>
                                                                    }
                                                                </block>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                    <catch>catch (
                                        <param>
                                            <decl>
                                                <type>
                                                    <name>Exception</name>
                                                </type>
                                                <name>except</name>
                                            </decl>
                                        </param>
                                        )
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>Throwable</name>
                                                    </type>
                                                    <name>thrw</name>
                                                </decl>
                                                ;
                                            </decl_stmt>

                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>except</name>
                                                        <name>instanceof</name>
                                                        <name><name>java</name>.<name>lang</name>.<name>reflect</name>.
                                                            <name>InvocationTargetException</name>
                                                        </name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>thrw</name>
                                                            = ( (
                                                            <name><name>java</name>.<name>lang</name>.<name>
                                                                reflect</name>.
                                                                <name>InvocationTargetException</name>
                                                            </name>
                                                            ) <name>except</name> ).
                                                            <call>
                                                                <name>getTargetException</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                </then>
                                                <else>else
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>thrw</name>
                                                            =
                                                            <name>except</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                </else>
                                            </if>
                                            <comment type="line">// System.out.println( "Exception " +
                                                thrw.getClass().getName() );
                                            </comment>
                                            <comment type="line">// System.out.println( thrw.getMessage() );</comment>

                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>IllegalStateException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"HTM15 Tag '" + <name>tagName</name> + "'
                                                                    associated with an Element class that failed to
                                                                    construct.\n" +
                                                                    <name>tagName</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </catch>
                                </try>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>new
                            <call>
                                <name>HTMLElementImpl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>this</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>tagName</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * Creates an Attribute having this Document as its OwnerDoc.
                * Overrides {@link DocumentImpl#createAttribute} and returns
                * and attribute whose name is lower case.
                *
                * @param name The name of the attribute
                * @return An attribute whose name is all lower case
                * @throws DOMException(INVALID_NAME_ERR) if the attribute name
                * is not acceptable
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Attr</name>
                </type>
                <name>createAttribute</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>DOMException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>super</name>.
                                    <name>createAttribute</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>name</name>.
                                                    <name>toLowerCase</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>Locale</name>.
                                                                <name>ENGLISH</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getReferrer</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <comment type="line">// Information not available on server side.</comment>
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getDomain</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <comment type="line">// Information not available on server side.</comment>
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getURL</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <comment type="line">// Information not available on server side.</comment>
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getCookie</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <comment type="line">// Information not available on server side.</comment>
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setCookie</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>cookie</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// Information not available on server side.</comment>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>HTMLCollection</name>
                </type>
                <name>getImages</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <comment type="line">// For more information see HTMLCollection#collectionMatch</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>_images</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <name>_images</name>
                                    = new
                                    <call>
                                        <name>HTMLCollectionImpl</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name>getBody</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>HTMLCollectionImpl</name>.
                                                        <name>IMAGE</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>_images</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>HTMLCollection</name>
                </type>
                <name>getApplets</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <comment type="line">// For more information see HTMLCollection#collectionMatch</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>_applets</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <name>_applets</name>
                                    = new
                                    <call>
                                        <name>HTMLCollectionImpl</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name>getBody</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>HTMLCollectionImpl</name>.
                                                        <name>APPLET</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>_applets</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>HTMLCollection</name>
                </type>
                <name>getLinks</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <comment type="line">// For more information see HTMLCollection#collectionMatch</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>_links</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <name>_links</name>
                                    = new
                                    <call>
                                        <name>HTMLCollectionImpl</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name>getBody</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>HTMLCollectionImpl</name>.
                                                        <name>LINK</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>_links</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>HTMLCollection</name>
                </type>
                <name>getForms</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <comment type="line">// For more information see HTMLCollection#collectionMatch</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>_forms</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <name>_forms</name>
                                    = new
                                    <call>
                                        <name>HTMLCollectionImpl</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name>getBody</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>HTMLCollectionImpl</name>.
                                                        <name>FORM</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>_forms</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>HTMLCollection</name>
                </type>
                <name>getAnchors</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <comment type="line">// For more information see HTMLCollection#collectionMatch</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>_anchors</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <name>_anchors</name>
                                    = new
                                    <call>
                                        <name>HTMLCollectionImpl</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name>getBody</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>HTMLCollectionImpl</name>.
                                                        <name>ANCHOR</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>_anchors</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>open</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <comment type="line">// When called an in-memory is prepared. The document tree is still</comment>
                    <comment type="line">// accessible the old way, until this writer is closed.</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>_writer</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <name>_writer</name>
                                    = new
                                    <call>
                                        <name>StringWriter</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>close</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <comment type="line">// ! NOT IMPLEMENTED, REQUIRES PARSER !</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>_writer</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>_writer</name>
                                        =
                                        <name>null</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>write</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>text</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// Write a string into the in-memory writer.</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>_writer</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>_writer</name>.
                                            <name>write</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>text</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>writeln</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>text</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// Write a line into the in-memory writer.</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>_writer</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>_writer</name>.
                                            <name>write</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>text</name>
                                                    + "\n"
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Node</name>
                </type>
                <name>cloneNode</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>deep</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>HTMLDocumentImpl</name>
                            </type>
                            <name>clone</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>NodeImpl</name>
                            </type>
                            <name>node</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <name>clone</name>
                            = new
                            <call>
                                <name>HTMLDocumentImpl</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>deep</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>node</name>
                                        = (<name>NodeImpl</name>)
                                        <call>
                                            <name>getFirstChild</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <while>while
                                    <condition>(
                                        <expr>
                                            <name>node</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>clone</name>.
                                                        <name>appendChild</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>clone</name>.
                                                                        <name>importNode</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>node</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>true</expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>node</name>
                                                = (<name>NodeImpl</name>)
                                                <call>
                                                    <name><name>node</name>.
                                                        <name>getNextSibling</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </while>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>clone</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * Recursive method retreives an element by its &lt;code&gt;id&lt;/code&gt; attribute.
                * Called by {@link #getElementById(String)}.
                *
                * @param elementId The &lt;code&gt;id&lt;/code&gt; value to look for
                * @return The node in which to look for
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>Element</name>
                </type>
                <name>getElementById</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>elementId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>node</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>child</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Element</name>
                            </type>
                            <name>result</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <name>child</name>
                            =
                            <call>
                                <name><name>node</name>.
                                    <name>getFirstChild</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <while>while
                        <condition>(
                            <expr>
                                <name>child</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>child</name>
                                        <name>instanceof</name>
                                        <name>Element</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>elementId</name>.
                                                            <name>equals</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>( (<name>Element</name>) <name>child</name> ).
                                                                    <call>
                                                                        <name>getAttribute</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>"id"</expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <return>return
                                                    <expr>(<name>Element</name>)
                                                        <name>child</name>
                                                    </expr>
                                                    ;
                                                </return>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name>result</name>
                                                =
                                                <call>
                                                    <name>getElementById</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>elementId</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>child</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>result</name>
                                                    !=
                                                    <name>null</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <return>return
                                                    <expr>
                                                        <name>result</name>
                                                    </expr>
                                                    ;
                                                </return>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </then>
                            </if>
                            <expr_stmt>
                                <expr>
                                    <name>child</name>
                                    =
                                    <call>
                                        <name><name>child</name>.
                                            <name>getNextSibling</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </while>
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * Called by the constructor to populate the element types list (see {@link
                * #_elementTypesHTML}). Will be called multiple times but populate the list
                * only the first time. Replacement for static constructor.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>synchronized</specifier>
                    <specifier>static</specifier>
                    <name>void</name>
                </type>
                <name>populateElementTypes</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <comment type="line">// This class looks like it is due to some strange</comment>
                    <comment type="line">// (read: inconsistent) JVM bugs.</comment>
                    <comment type="line">// Initially all this code was placed in the static constructor,</comment>
                    <comment type="line">// but that caused some early JVMs (1.1) to go mad, and if a</comment>
                    <comment type="line">// class could not be found (as happened during development),</comment>
                    <comment type="line">// the JVM would die.</comment>
                    <comment type="line">// Bertrand Delacretaz &lt;bdelacretaz@worldcom.ch&gt; pointed out</comment>
                    <comment type="line">// several configurations where HTMLAnchorElementImpl.class</comment>
                    <comment type="line">// failed, forcing me to revert back to Class.forName().</comment>

                    <if>if
                        <condition>(
                            <expr>
                                <name>_elementTypesHTML</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return;</return>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name>_elementTypesHTML</name>
                            = new
                            <call>
                                <name>Hashtable</name>
                                <argument_list>(
                                    <argument>
                                        <expr>63</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"A"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLAnchorElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"APPLET"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLAppletElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"AREA"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLAreaElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"BASE"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLBaseElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"BASEFONT"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLBaseFontElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"BLOCKQUOTE"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLQuoteElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"BODY"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLBodyElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"BR"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLBRElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"BUTTON"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLButtonElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"DEL"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLModElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"DIR"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLDirectoryElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"DIV"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLDivElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"DL"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLDListElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"FIELDSET"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLFieldSetElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"FONT"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLFontElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"FORM"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLFormElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"FRAME"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLFrameElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"FRAMESET"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLFrameSetElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"HEAD"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLHeadElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"H1"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLHeadingElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"H2"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLHeadingElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"H3"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLHeadingElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"H4"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLHeadingElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"H5"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLHeadingElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"H6"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLHeadingElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"HR"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLHRElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"HTML"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLHtmlElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"IFRAME"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLIFrameElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"IMG"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLImageElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"INPUT"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLInputElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"INS"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLModElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"ISINDEX"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLIsIndexElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"LABEL"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLLabelElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"LEGEND"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLLegendElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"LI"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLLIElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"LINK"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLLinkElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"MAP"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLMapElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"MENU"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLMenuElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"META"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLMetaElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"OBJECT"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLObjectElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"OL"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLOListElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"OPTGROUP"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLOptGroupElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"OPTION"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLOptionElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"P"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLParagraphElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"PARAM"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLParamElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"PRE"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLPreElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"Q"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLQuoteElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"SCRIPT"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLScriptElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"SELECT"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLSelectElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"STYLE"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLStyleElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"TABLE"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLTableElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"CAPTION"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLTableCaptionElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"TD"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLTableCellElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"TH"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLTableCellElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"COL"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLTableColElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"COLGROUP"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLTableColElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"TR"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLTableRowElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"TBODY"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLTableSectionElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"THEAD"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLTableSectionElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"TFOOT"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLTableSectionElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"TEXTAREA"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLTextAreaElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"TITLE"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLTitleElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>populateElementType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"UL"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"HTMLUListElementImpl"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>void</name>
                </type>
                <name>populateElementType</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>tagName</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>className</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>_elementTypesHTML</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>tagName</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>ObjectFactory</name>.
                                                            <name>findProviderClass</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"org.apache.html.dom." +
                                                                    <name>className</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name><name>HTMLDocumentImpl</name>.
                                                                        <name>
                                                                            <name/>
                                                                        </name>
                                                                    </name>
                                                                    class.
                                                                    <call>
                                                                        <name>getClassLoader</name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>true</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>Exception</name>
                                    </type>
                                    <name>except</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <expr_stmt>
                                    <expr>new
                                        <call>
                                            <name>RuntimeException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"HTM019 OpenXML Error: Could not find or execute class " + <name>
                                                        className
                                                    </name> + " implementing HTML element " +
                                                        <name>tagName</name>
                                                        + "\n" + <name>className</name> + "\t" +
                                                        <name>tagName</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </catch>
                    </try>
                    }
                </block>
            </function>


            }
        </block>
    </class>

</unit>
