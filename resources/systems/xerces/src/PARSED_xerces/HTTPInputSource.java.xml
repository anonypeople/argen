<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\util\HTTPInputSource.java">
    <comment type="block">/*
        * Copyright 2004,2005 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.
            <name>util</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>InputStream</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>Reader</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>HashMap</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Iterator</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Map</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XMLResourceIdentifier</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLInputSource</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * This class represents an input source for an XML resource
        * retrievable over HTTP. In addition to the properties
        * provided by an &lt;code&gt;XMLInputSource&lt;/code&gt; an HTTP input
        * source also has HTTP request properties and a preference
        * whether HTTP redirects will be followed. Note that these
        * properties will only be used if reading this input source
        * will induce an HTTP connection.
        *
        * @author Michael Glavassevich, IBM
        *
        * @version $Id: HTTPInputSource.java,v 1.2 2005/05/15 20:01:26 mrglavas Exp $
        */
    </comment>
    <class>
        <specifier>public</specifier>
        <specifier>final</specifier> class <name>HTTPInputSource</name>
        <super>
            <extends>extends
                <name>XMLInputSource</name>
            </extends>
        </super>
        <block>{

            <comment type="line">//</comment>
            <comment type="line">// Data</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/** Preference for whether HTTP redirects should be followed. **/</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fFollowRedirects</name> =
                    <init>
                        <expr>true</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** HTTP request properties. **/</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>Map</name>
                    </type>
                    <name>fHTTPRequestProperties</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>HashMap</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">//</comment>
            <comment type="line">// Constructors</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * Constructs an input source from just the public and system
                * identifiers, leaving resolution of the entity and opening of
                * the input stream up to the caller.
                *
                * @param publicId The public identifier, if known.
                * @param systemId The system identifier. This value should
                * always be set, if possible, and can be
                * relative or absolute. If the system identifier
                * is relative, then the base system identifier
                * should be set.
                * @param baseSystemId The base system identifier. This value should
                * always be set to the fully expanded URI of the
                * base system identifier, if possible.
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>HTTPInputSource</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>publicId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>systemId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>baseSystemId</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>super</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>publicId</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>systemId</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>baseSystemId</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>
            <comment type="line">// &lt;init&gt;(String,String,String)</comment>

            <comment type="javadoc">/**
                * Constructs an input source from a XMLResourceIdentifier
                * object, leaving resolution of the entity and opening of
                * the input stream up to the caller.
                *
                * @param resourceIdentifier the XMLResourceIdentifier containing the information
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>HTTPInputSource</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLResourceIdentifier</name>
                            </type>
                            <name>resourceIdentifier</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>super</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>resourceIdentifier</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>
            <comment type="line">// &lt;init&gt;(XMLResourceIdentifier)</comment>

            <comment type="javadoc">/**
                * Constructs an input source from a byte stream.
                *
                * @param publicId The public identifier, if known.
                * @param systemId The system identifier. This value should
                * always be set, if possible, and can be
                * relative or absolute. If the system identifier
                * is relative, then the base system identifier
                * should be set.
                * @param baseSystemId The base system identifier. This value should
                * always be set to the fully expanded URI of the
                * base system identifier, if possible.
                * @param byteStream The byte stream.
                * @param encoding The encoding of the byte stream, if known.
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>HTTPInputSource</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>publicId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>systemId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>baseSystemId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>InputStream</name>
                            </type>
                            <name>byteStream</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>encoding</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>super</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>publicId</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>systemId</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>baseSystemId</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>byteStream</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>encoding</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>
            <comment type="line">// &lt;init&gt;(String,String,String,InputStream,String)</comment>

            <comment type="javadoc">/**
                * Constructs an input source from a character stream.
                *
                * @param publicId The public identifier, if known.
                * @param systemId The system identifier. This value should
                * always be set, if possible, and can be
                * relative or absolute. If the system identifier
                * is relative, then the base system identifier
                * should be set.
                * @param baseSystemId The base system identifier. This value should
                * always be set to the fully expanded URI of the
                * base system identifier, if possible.
                * @param charStream The character stream.
                * @param encoding The original encoding of the byte stream
                * used by the reader, if known.
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>HTTPInputSource</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>publicId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>systemId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>baseSystemId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Reader</name>
                            </type>
                            <name>charStream</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>encoding</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>super</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>publicId</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>systemId</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>baseSystemId</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>charStream</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>encoding</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>
            <comment type="line">// &lt;init&gt;(String,String,String,Reader,String)</comment>

            <comment type="line">//</comment>
            <comment type="line">// Public methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * Returns the preference whether HTTP redirects should
                * be followed. By default HTTP redirects will be followed.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>getFollowHTTPRedirects</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fFollowRedirects</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getFollowHTTPRedirects():boolean</comment>


            <comment type="javadoc">/**
                * Sets the preference whether HTTP redirects should
                * be followed. By default HTTP redirects will be followed.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setFollowHTTPRedirects</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>followRedirects</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fFollowRedirects</name>
                            =
                            <name>followRedirects</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="line">// setFollowHTTPRedirects(boolean)</comment>

            <comment type="javadoc">/**
                * Returns the value of the request property
                * associated with the given property name.
                *
                * @param key the name of the request property
                * @return the value of the request property or
                * &lt;code&gt;null&lt;/code&gt; if this property has not
                * been set
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getHTTPRequestProperty</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>key</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>(<name>String</name>)
                            <call>
                                <name><name>fHTTPRequestProperties</name>.
                                    <name>get</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>key</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getHTTPRequestProperty(String):String</comment>

            <comment type="javadoc">/**
                * Returns an iterator for the request properties this
                * input source contains. Each object returned by the
                * iterator is an instance of &lt;code&gt;java.util.Map.Entry&lt;/code&gt;
                * where each key and value are a pair of strings corresponding
                * to the name and value of a request property.
                *
                * @return an iterator for the request properties this
                * input source contains
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Iterator</name>
                </type>
                <name>getHTTPRequestProperties</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>fHTTPRequestProperties</name>.
                                    <name>entrySet</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>iterator</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getHTTPRequestProperties():Iterator</comment>

            <comment type="javadoc">/**
                * Sets the value of the request property
                * associated with the given property name.
                *
                * @param key the name of the request property
                * @param value the value of the request property
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setHTTPRequestProperty</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>key</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>value</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fHTTPRequestProperties</name>.
                                                <name>put</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>key</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>value</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fHTTPRequestProperties</name>.
                                                <name>remove</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>key</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>
            <comment type="line">// setHTTPRequestProperty(String,String)</comment>

            }
        </block>
    </class>
    <comment type="line">// class HTTPInputSource</comment>
</unit>
