<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\impl\dv\dtd\IDDatatypeValidator.java">
    <comment type="block">/*
        * Copyright 1999-2002,2004 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>dv</name>.
            <name>dtd</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.
            <name>dv</name>
        </name>
        .*;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>XMLChar</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * &lt;P&gt;IDDatatypeValidator - ID represents the ID attribute
        * type from XML 1.0 Recommendation. The value space
        * od ID is the set of all strings that match the
        * NCName production and have been used in an XML
        * document. The lexical space of ID is the set of all
        * strings that match the NCName production.&lt;/P&gt;
        * &lt;P&gt;The value space of ID is scoped to a specific
        * instance document.&lt;/P&gt;
        * &lt;P&gt;The following constraint applies:
        * An ID must not appear more than once in an XML
        * document as a value of this type; i.e., ID values
        * must uniquely identify the elements which bear
        * them.&lt;/P&gt;
        *
        * @xerces.internal
        *
        * @author Jeffrey Rodriguez, IBM
        * @author Sandy Gao, IBM
        *
        * @version $Id: IDDatatypeValidator.java,v 1.9 2004/10/06 14:56:51 mrglavas Exp $
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>IDDatatypeValidator</name>
        <super>
            <implements>implements
                <name>DatatypeValidator</name>
            </implements>
        </super>
        <block>{

            <comment type="line">// construct an ID datatype validator</comment>
            <constructor>
                <specifier>public</specifier>
                <name>IDDatatypeValidator</name>
                <parameter_list>()</parameter_list>
                <block>{
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Checks that "content" string is valid ID value.
                * If invalid a Datatype validation exception is thrown.
                *
                * @param content the string value that needs to be validated
                * @param context the validation context
                * @throws InvalidDatatypeException if the content is
                * invalid according to the rules for the validators
                * @see InvalidDatatypeValueException
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>validate</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>content</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ValidationContext</name>
                            </type>
                            <name>context</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>InvalidDatatypeValueException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">//Check if is valid key-[81] EncName ::= [A-Za-z] ([A-Za-z0-9._] | '-')*
                    </comment>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>context</name>.
                                        <name>useNamespaces</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>!
                                            <call>
                                                <name><name>XMLChar</name>.
                                                    <name>isValidNCName</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>content</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>InvalidDatatypeValueException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"IDInvalidWithNamespaces"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>new
                                                                    <name>
                                                                        <name>Object</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    <block>{
                                                                        <expr>
                                                                            <name>content</name>
                                                                        </expr>
                                                                        }
                                                                    </block>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>!
                                            <call>
                                                <name><name>XMLChar</name>.
                                                    <name>isValidName</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>content</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>InvalidDatatypeValueException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"IDInvalid"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>new
                                                                    <name>
                                                                        <name>Object</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    <block>{
                                                                        <expr>
                                                                            <name>content</name>
                                                                        </expr>
                                                                        }
                                                                    </block>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </else>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>context</name>.
                                        <name>isIdDeclared</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>content</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>InvalidDatatypeValueException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"IDNotUnique"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>new
                                                        <name>
                                                            <name>Object</name>
                                                            <index>[]</index>
                                                        </name>
                                                        <block>{
                                                            <expr>
                                                                <name>content</name>
                                                            </expr>
                                                            }
                                                        </block>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>context</name>.
                                    <name>addId</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>content</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            }
        </block>
    </class>
</unit>
