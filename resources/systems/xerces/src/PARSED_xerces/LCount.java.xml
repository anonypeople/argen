<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\dom\LCount.java">
    <comment type="block">/*
        * Copyright 1999-2002,2004 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.
            <name>dom</name>
        </name>
        ;
    </package>


    <comment type="javadoc">/** Internal class LCount is used to track the number of
        listeners registered for a given event name, as an entry
        in a global hashtable. This should allow us to avoid generating,
        or discard, events for which no listeners are registered.

        ***** There should undoubtedly be methods here to manipulate
        this table. At the moment that code's residing in NodeImpl.
        Move it when we have a chance to do so. Sorry; we were
        rushed.

        ???? CONCERN: Hashtables are known to be "overserialized" in
        current versions of Java. That may impact performance.

        ???? CONCERN: The hashtable should probably be a per-document object.
        Finer granularity would be even better, but would cost more cycles to
        resolve and might not save enough event traffic to be worth the investment.
        */
    </comment>
    <comment type="javadoc">/**
        * @xerces.internal
        *
        * @version $Id: LCount.java,v 1.9 2004/10/21 21:51:05 nddelima Exp $
        */
    </comment>

    <class>class
        <name>LCount</name>
        <block>{
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <name><name>java</name>.<name>util</name>.
                            <name>Hashtable</name>
                        </name>
                    </type>
                    <name>lCounts</name>=
                    <init>
                        <expr>new
                            <call>
                                <name><name>java</name>.<name>util</name>.
                                    <name>Hashtable</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <name>int</name>
                    </type>
                    <name>captures</name>=
                    <init>
                        <expr>0</expr>
                    </init>
                    ,<name>bubbles</name>=
                    <init>
                        <expr>0</expr>
                    </init>
                    ,<name>defaults</name>, <name>total</name>=
                    <init>
                        <expr>0</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <function>
                <type>
                    <specifier>static</specifier>
                    <name>LCount</name>
                </type>
                <name>lookup</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>evtName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>LCount</name>
                            </type>
                            <name>lc</name>=
                            <init>
                                <expr>(<name>LCount</name>)
                                    <call>
                                        <name><name>lCounts</name>.
                                            <name>get</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>evtName</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr><name>lc</name>==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>lCounts</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>evtName</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>(<name>lc</name>=new
                                                    <call>
                                                        <name>LCount</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    )
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>lc</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            }
        </block>
    </class>
    <comment type="line">// class LCount</comment>
</unit>
