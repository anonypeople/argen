<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\impl\io\MalformedByteSequenceException.java">
    <comment type="block">/*
        * Copyright 2004 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.
            <name>io</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>CharConversionException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Locale</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>MessageFormatter</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * &lt;p&gt;Signals that a malformed byte sequence was detected
        * by a &lt;code&gt;java.io.Reader&lt;/code&gt; that decodes bytes
        * of a given encoding into characters.&lt;/p&gt;
        *
        * @xerces.internal
        *
        * @author Michael Glavassevich, IBM
        *
        * @version $Id: MalformedByteSequenceException.java,v 1.4 2004/10/04 22:07:41 mrglavas Exp $
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>MalformedByteSequenceException</name>
        <super>
            <extends>extends
                <name>CharConversionException</name>
            </extends>
        </super>
        <block>{

            <comment type="javadoc">/** Serialization version. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>long</name>
                    </type>
                    <name>serialVersionUID</name> =
                    <init>
                        <expr>8436382245048328739L</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">//</comment>
            <comment type="line">// Data</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/** message formatter **/</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>MessageFormatter</name>
                    </type>
                    <name>fFormatter</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** locale for error message **/</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Locale</name>
                    </type>
                    <name>fLocale</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** error domain **/</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>String</name>
                    </type>
                    <name>fDomain</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** key for the error message **/</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>String</name>
                    </type>
                    <name>fKey</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** replacement arguements for the error message **/</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Object</name>
                        <index>[]</index>
                    </type>
                    <name>fArguments</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** message text for this message, initially null **/</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>String</name>
                    </type>
                    <name>fMessage</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">//</comment>
            <comment type="line">// Constructors</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * Constructs a MalformedByteSequenceException with the given
                * parameters which may be passed to an error reporter to
                * generate a localized string for this exception.
                *
                * @param formatter The MessageFormatter used for building the
                * message text for this exception.
                * @param locale The Locale for which messages are to be reported.
                * @param domain The error domain.
                * @param key The key of the error message.
                * @param arguments The replacement arguments for the error message,
                * if needed.
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>MalformedByteSequenceException</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>MessageFormatter</name>
                            </type>
                            <name>formatter</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Locale</name>
                            </type>
                            <name>locale</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>domain</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>key</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Object</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>arguments</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fFormatter</name>
                            =
                            <name>formatter</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fLocale</name>
                            =
                            <name>locale</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fDomain</name>
                            =
                            <name>domain</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fKey</name>
                            =
                            <name>key</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fArguments</name>
                            =
                            <name>arguments</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>
            <comment type="line">// &lt;init&gt;(MessageFormatter, Locale, String, String, Object[])</comment>

            <comment type="line">//</comment>
            <comment type="line">// Public methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * &lt;p&gt;Returns the error domain of the error message.&lt;/p&gt;
                *
                * @return the error domain
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getDomain</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fDomain</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getDomain</comment>

            <comment type="javadoc">/**
                * &lt;p&gt;Returns the key of the error message.&lt;/p&gt;
                *
                * @return the error key of the error message
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getKey</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fKey</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getKey()</comment>

            <comment type="javadoc">/**
                * &lt;p&gt;Returns the replacement arguments for the error
                * message or &lt;code&gt;null&lt;/code&gt; if none exist.&lt;/p&gt;
                *
                * @return the replacement arguments for the error message
                * or &lt;code&gt;null&lt;/code&gt; if none exist
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Object</name>
                    <index>[]</index>
                </type>
                <name>getArguments</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fArguments</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getArguments();</comment>

            <comment type="javadoc">/**
                * &lt;p&gt;Returns the localized message for this exception.&lt;/p&gt;
                *
                * @return the localized message for this exception.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getMessage</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fMessage</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fMessage</name>
                                        =
                                        <call>
                                            <name><name>fFormatter</name>.
                                                <name>formatMessage</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fLocale</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>fKey</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>fArguments</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <comment type="line">// The references to the message formatter and locale</comment>
                                <comment type="line">// aren't needed anymore so null them.</comment>
                                <expr_stmt>
                                    <expr>
                                        <name>fFormatter</name>
                                        =
                                        <name>null</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fLocale</name>
                                        =
                                        <name>null</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>fMessage</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getMessage()</comment>

            }
        </block>
    </class>
    <comment type="line">// MalformedByteSequenceException</comment>
</unit>
