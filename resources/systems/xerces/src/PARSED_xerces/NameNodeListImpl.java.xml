<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\html\dom\NameNodeListImpl.java">
    <comment type="block">/*
        * Copyright 1999,2000,2004 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>html</name>.
            <name>dom</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>dom</name>.
            <name>DeepNodeListImpl</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>dom</name>.
            <name>ElementImpl</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>dom</name>.
            <name>NodeImpl</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>Node</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>NodeList</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * This class implements the DOM's NodeList behavior for
        * HTMLDocuemnt.getElementsByName().
        *
        * @xerces.internal
        *
        * @version $Id: NameNodeListImpl.java,v 1.8 2004/10/05 03:23:48 mrglavas Exp $
        * @since PR-DOM-Level-1-19980818.
        * @see DeepNodeListImpl
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class
        <name>NameNodeListImpl</name>
        <super>
            <extends>extends
                <name>DeepNodeListImpl</name>
            </extends>
            <implements>implements
                <name>NodeList</name>
            </implements>
        </super>
        <block>{


            <comment type="javadoc">/** Constructor. */</comment>
            <constructor>
                <specifier>public</specifier>
                <name>NameNodeListImpl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>NodeImpl</name>
                            </type>
                            <name>rootNode</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>tagName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>super</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>rootNode</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>tagName</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>


            <comment type="javadoc">/**
                * Iterative tree-walker. When you have a Parent link, there's often no
                * need to resort to recursion. NOTE THAT only Element nodes are matched
                * since we're specifically supporting getElementsByTagName().
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>Node</name>
                </type>
                <name>nextMatchingElementAfter</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>current</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Node</name>
                            </type>
                            <name>next</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <while>while
                        <condition>(
                            <expr>
                                <name>current</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <comment type="line">// Look down to first child.</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>current</name>.
                                                <name>hasChildNodes</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>current</name>
                                                = (
                                                <call>
                                                    <name><name>current</name>.
                                                        <name>getFirstChild</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                )
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>

                                <comment type="line">// Look right to sibling (but not from root!)</comment>
                                <else>else
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>current</name>
                                                != <name>rootNode</name> &amp;&amp; <name>null</name> != (<name>next
                                            </name> =
                                                <call>
                                                    <name><name>current</name>.
                                                        <name>getNextSibling</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                )
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>current</name>
                                                        =
                                                        <name>next</name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>

                                        <comment type="line">// Look up and right (but not past root!)</comment>
                                        <else>else
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>next</name>
                                                        =
                                                        <name>null</name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <for>for (<init>;</init>
                                                    <condition>
                                                        <expr>
                                                            <name>current</name>
                                                            !=
                                                            <name>rootNode</name>
                                                        </expr>
                                                        ;
                                                    </condition>
                                                    <comment type="line">// Stop when we return to starting point
                                                    </comment>
                                                    <incr>
                                                        <expr>
                                                            <name>current</name>
                                                            =
                                                            <call>
                                                                <name><name>current</name>.
                                                                    <name>getParentNode</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </incr>
                                                    )
                                                    <block>{

                                                        <expr_stmt>
                                                            <expr>
                                                                <name>next</name>
                                                                =
                                                                <call>
                                                                    <name><name>current</name>.
                                                                        <name>getNextSibling</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>next</name>
                                                                    !=
                                                                    <name>null</name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <break>break;</break>
                                                            </then>
                                                        </if>
                                                        }
                                                    </block>
                                                </for>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>current</name>
                                                        =
                                                        <name>next</name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </else>
                                    </if>
                                </else>
                            </if>

                            <comment type="line">// Have we found an Element with the right tagName?</comment>
                            <comment type="line">// ("*" matches anything.)</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>current</name>
                                        != <name>rootNode</name> &amp;&amp; <name>current</name> !=
                                        <name>null</name>
                                        &amp;&amp;
                                        <call>
                                            <name><name>current</name>.
                                                <name>getNodeType</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        ==
                                        <name><name>Node</name>.
                                            <name>ELEMENT_NODE</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>String</name>
                                                </type>
                                                <name>name</name> =
                                                <init>
                                                    <expr>((<name>ElementImpl</name>) <name>current</name>).
                                                        <call>
                                                            <name>getAttribute</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"name"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>name</name>.
                                                            <name>equals</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"*"</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    ||
                                                    <call>
                                                        <name><name>name</name>.
                                                            <name>equals</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>tagName</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <return>return
                                                    <expr>
                                                        <name>current</name>
                                                    </expr>
                                                    ;
                                                </return>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </then>
                            </if>

                            <comment type="line">// Otherwise continue walking the tree</comment>
                            }
                        </block>
                    </while>

                    <comment type="line">// Fell out of tree-walk; no more instances found</comment>
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// nextMatchingElementAfter(int):Node</comment>

            }
        </block>
    </class>
    <comment type="line">// class NameNodeListImpl</comment>
</unit>
