<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\impl\dv\xs\PrecisionDecimalDV.java">
    <comment type="block">/*
        * Copyright 2004 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>dv</name>.
            <name>xs</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>dv</name>.
            <name>InvalidDatatypeValueException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>dv</name>.
            <name>ValidationContext</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * Validator for &lt;precisionDecimal&gt; datatype (W3C Schema 1.1)
        *
        * @xerces.experimental
        *
        * @author Ankit Pasricha, IBM
        *
        * @version $Id: PrecisionDecimalDV.java,v 1.2 2004/10/06 14:56:46 mrglavas Exp $
        */
    </comment>
    <class>class <name>PrecisionDecimalDV</name>
        <super>
            <extends>extends
                <name>TypeValidator</name>
            </extends>
        </super>
        <block>{

            <class>
                <specifier>static</specifier>
                class <name>XPrecisionDecimal</name>
                <block>{

                    <comment type="line">// sign: 0 for absent; 1 for positive values; -1 for negative values (except in
                        case of INF, -INF)
                    </comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>sign</name> =
                            <init>
                                <expr>1</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// total digits. &gt;= 1</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>totalDigits</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// integer digits when sign != 0</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>intDigits</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// fraction digits when sign != 0</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>fracDigits</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">//precision</comment>
                    <comment type="line">//int precision = 0;</comment>
                    <comment type="line">// the string representing the integer part</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>ivalue</name> =
                            <init>
                                <expr>""</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// the string representing the fraction part</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>fvalue</name> =
                            <init>
                                <expr>""</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>pvalue</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>


                    <constructor>
                        <name>XPrecisionDecimal</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>content</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <throws>throws
                            <argument>
                                <expr>
                                    <name>NumberFormatException</name>
                                </expr>
                            </argument>
                        </throws>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>content</name>.
                                                <name>equals</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"NaN"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>ivalue</name>
                                                =
                                                <name>content</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>sign</name>
                                                = 0
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>content</name>.
                                                <name>equals</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"+INF"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        ||
                                        <call>
                                            <name><name>content</name>.
                                                <name>equals</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"INF"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        ||
                                        <call>
                                            <name><name>content</name>.
                                                <name>equals</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"-INF"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>ivalue</name>
                                                =
                                                <call>
                                                    <name><name>content</name>.
                                                        <name>charAt</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>0</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                == '+' ?
                                                <call>
                                                    <name><name>content</name>.
                                                        <name>substring</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>1</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                :
                                                <name>content</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <return>return;</return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>initD</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>content</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>

                    <function>
                        <type>
                            <name>void</name>
                        </type>
                        <name>initD</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>content</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <throws>throws
                            <argument>
                                <expr>
                                    <name>NumberFormatException</name>
                                </expr>
                            </argument>
                        </throws>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>len</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>content</name>.
                                                    <name>length</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>len</name>
                                        == 0
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <throw>throw
                                        <expr>new
                                            <call>
                                                <name>NumberFormatException</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </throw>
                                </then>
                            </if>

                            <comment type="line">// these 4 variables are used to indicate where the integre/fraction
                            </comment>
                            <comment type="line">// parts start/end.</comment>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>intStart</name> =
                                    <init>
                                        <expr>0</expr>
                                    </init>
                                    , <name>intEnd</name> =
                                    <init>
                                        <expr>0</expr>
                                    </init>
                                    , <name>fracStart</name> =
                                    <init>
                                        <expr>0</expr>
                                    </init>
                                    , <name>fracEnd</name> =
                                    <init>
                                        <expr>0</expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>

                            <comment type="line">// Deal with leading sign symbol if present</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>content</name>.
                                                <name>charAt</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>0</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        == '+'
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <comment type="line">// skip '+', so intStart should be 1</comment>
                                        <expr_stmt>
                                            <expr>
                                                <name>intStart</name>
                                                = 1
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <call>
                                                    <name><name>content</name>.
                                                        <name>charAt</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>0</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                == '-'
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>intStart</name>
                                                        = 1
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>sign</name>
                                                        = -1
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                </else>
                            </if>

                            <comment type="line">// skip leading zeroes in integer part</comment>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>actualIntStart</name> =
                                    <init>
                                        <expr>
                                            <name>intStart</name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <while>while
                                <condition>(
                                    <expr>
                                        <name>actualIntStart</name>
                                        &lt; <name>len</name> &amp;&amp;
                                        <call>
                                            <name><name>content</name>.
                                                <name>charAt</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>actualIntStart</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        == '0'
                                    </expr>
                                    )
                                </condition>
                                <block>{
                                    <expr_stmt>
                                        <expr><name>actualIntStart</name>++
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                            </while>

                            <comment type="line">// Find the ending position of the integer part</comment>
                            <for>for (
                                <init>
                                    <expr>
                                        <name>intEnd</name>
                                        =
                                        <name>actualIntStart</name>
                                    </expr>
                                    ;
                                </init>
                                <condition>
                                    <expr>
                                        <name>intEnd</name>
                                        &lt; <name>len</name> &amp;&amp;
                                        <call>
                                            <name><name>TypeValidator</name>.
                                                <name>isDigit</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>content</name>.
                                                                <name>charAt</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>intEnd</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </condition>
                                <incr>
                                    <expr><name>intEnd</name>++
                                    </expr>
                                </incr>
                                )
                                <empty_stmt>;</empty_stmt>
                            </for>

                            <comment type="line">// Not reached the end yet</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>intEnd</name>
                                        &lt;
                                        <name>len</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <comment type="line">// the remaining part is not ".DDD" or "EDDD" or "eDDD",
                                            error
                                        </comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>content</name>.
                                                            <name>charAt</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>intEnd</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    != '.' &amp;&amp;
                                                    <call>
                                                        <name><name>content</name>.
                                                            <name>charAt</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>intEnd</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    != 'E' &amp;&amp;
                                                    <call>
                                                        <name><name>content</name>.
                                                            <name>charAt</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>intEnd</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    != 'e'
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <throw>throw
                                                    <expr>new
                                                        <call>
                                                            <name>NumberFormatException</name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </throw>
                                            </then>
                                        </if>

                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>content</name>.
                                                            <name>charAt</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>intEnd</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    == '.'
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <comment type="line">// fraction part starts after '.', and ends at
                                                        the end of the input
                                                    </comment>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>fracStart</name>
                                                            = <name>intEnd</name> + 1
                                                        </expr>
                                                        ;
                                                    </expr_stmt>

                                                    <comment type="line">// find location of E or e (if present)
                                                    </comment>
                                                    <comment type="line">// Find the ending position of the fracion
                                                        part
                                                    </comment>
                                                    <for>for (
                                                        <init>
                                                            <expr>
                                                                <name>fracEnd</name>
                                                                =
                                                                <name>fracStart</name>
                                                            </expr>
                                                            ;
                                                        </init>
                                                        <condition>
                                                            <expr>
                                                                <name>fracEnd</name>
                                                                &lt; <name>len</name> &amp;&amp;
                                                                <call>
                                                                    <name><name>TypeValidator</name>.
                                                                        <name>isDigit</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>content</name>.
                                                                                        <name>charAt</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>fracEnd</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </condition>
                                                        <incr>
                                                            <expr><name>fracEnd</name>++
                                                            </expr>
                                                        </incr>
                                                        )
                                                        <empty_stmt>;</empty_stmt>
                                                    </for>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>pvalue</name>
                                                            =
                                                            <call>
                                                                <name><name>Integer</name>.
                                                                    <name>parseInt</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>content</name>.
                                                                                    <name>substring</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>intEnd</name>
                                                                                            + 1
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>len</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </else>
                                        </if>
                                        }
                                    </block>
                                </then>
                            </if>

                            <comment type="line">// no integer part, no fraction part, error.</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>intStart</name>
                                        == <name>intEnd</name> &amp;&amp; <name>fracStart</name> ==
                                        <name>fracEnd</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <throw>throw
                                        <expr>new
                                            <call>
                                                <name>NumberFormatException</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </throw>
                                </then>
                            </if>

                            <comment type="line">// ignore trailing zeroes in fraction part</comment>
                            <comment type="block">/*while (fracEnd &gt; fracStart &amp;&amp; content.charAt(fracEnd-1)
                                == '0') {
                                fracEnd--;
                                }*/
                            </comment>

                            <comment type="line">// check whether there is non-digit characters in the fraction part
                            </comment>
                            <for>for (
                                <init>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>fracPos</name> =
                                        <init>
                                            <expr>
                                                <name>fracStart</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </init>
                                <condition>
                                    <expr>
                                        <name>fracPos</name>
                                        &lt;
                                        <name>fracEnd</name>
                                    </expr>
                                    ;
                                </condition>
                                <incr>
                                    <expr><name>fracPos</name>++
                                    </expr>
                                </incr>
                                )
                                <block>{
                                    <if>if
                                        <condition>(
                                            <expr>!
                                                <call>
                                                    <name><name>TypeValidator</name>.
                                                        <name>isDigit</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>content</name>.
                                                                        <name>charAt</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>fracPos</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>NumberFormatException</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                        </then>
                                    </if>
                                    }
                                </block>
                            </for>

                            <expr_stmt>
                                <expr>
                                    <name>intDigits</name>
                                    = <name>intEnd</name> -
                                    <name>actualIntStart</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>fracDigits</name>
                                    = <name>fracEnd</name> -
                                    <name>fracStart</name>
                                </expr>
                                ;
                            </expr_stmt>

                            <if>if
                                <condition>(
                                    <expr>
                                        <name>intDigits</name>
                                        &gt; 0
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>ivalue</name>
                                                =
                                                <call>
                                                    <name><name>content</name>.
                                                        <name>substring</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>actualIntStart</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>intEnd</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>

                            <if>if
                                <condition>(
                                    <expr>
                                        <name>fracDigits</name>
                                        &gt; 0
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>fvalue</name>
                                                =
                                                <call>
                                                    <name><name>content</name>.
                                                        <name>substring</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>fracStart</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>fracEnd</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>fracEnd</name>
                                                    &lt;
                                                    <name>len</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>pvalue</name>
                                                            =
                                                            <call>
                                                                <name><name>Integer</name>.
                                                                    <name>parseInt</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>content</name>.
                                                                                    <name>substring</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>fracEnd</name>
                                                                                            + 1
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>len</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </then>
                            </if>
                            <expr_stmt>
                                <expr>
                                    <name>totalDigits</name>
                                    = <name>intDigits</name> +
                                    <name>fracDigits</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>


                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>boolean</name>
                        </type>
                        <name>equals</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Object</name>
                                    </type>
                                    <name>val</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>val</name>
                                        ==
                                        <name>this</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <return>return <expr>true</expr>;
                                    </return>
                                </then>
                            </if>

                            <if>if
                                <condition>(
                                    <expr>!(<name>val</name>
                                        <name>instanceof</name>
                                        <name>XPrecisionDecimal</name>)
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <return>return <expr>false</expr>;
                                    </return>
                                </then>
                            </if>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>XPrecisionDecimal</name>
                                    </type>
                                    <name>oval</name> =
                                    <init>
                                        <expr>(<name>XPrecisionDecimal</name>)
                                            <name>val</name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>

                            <return>return
                                <expr>
                                    <call>
                                        <name><name>this</name>.
                                            <name>compareTo</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>oval</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    ==
                                    <name>EQUAL</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * @return
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>int</name>
                        </type>
                        <name>compareFractionalPart</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>XPrecisionDecimal</name>
                                    </type>
                                    <name>oval</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>fvalue</name>.
                                                <name>equals</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>oval</name>.
                                                            <name>fvalue</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <return>return
                                        <expr>
                                            <name>EQUAL</name>
                                        </expr>
                                        ;
                                    </return>
                                </then>
                            </if>

                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>StringBuffer</name>
                                    </type>
                                    <name>temp1</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>StringBuffer</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>fvalue</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>StringBuffer</name>
                                    </type>
                                    <name>temp2</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>StringBuffer</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>oval</name>.
                                                                <name>fvalue</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>

                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>truncateTrailingZeros</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>temp1</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>temp2</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>temp1</name>.
                                            <name>toString</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>compareTo</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>temp2</name>.
                                                            <name>toString</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>void</name>
                        </type>
                        <name>truncateTrailingZeros</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>StringBuffer</name>
                                    </type>
                                    <name>fValue</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>StringBuffer</name>
                                    </type>
                                    <name>otherFValue</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <for>for(
                                <init>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>i</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>fValue</name>.
                                                        <name>length</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                - 1
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </init>
                                <condition>
                                    <expr>
                                        <name>i</name>
                                        &gt;= 0
                                    </expr>
                                    ;
                                </condition>
                                <incr>
                                    <expr><name>i</name>--
                                    </expr>
                                </incr>
                                )
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>fValue</name>.
                                                    <name>charAt</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            == '0'
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fValue</name>.
                                                        <name>deleteCharAt</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                    </then>
                                    <else>else
                                        <break>break;</break>
                                    </else>
                                </if>
                            </for>

                            <for>for(
                                <init>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>i</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>otherFValue</name>.
                                                        <name>length</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                - 1
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </init>
                                <condition>
                                    <expr>
                                        <name>i</name>
                                        &gt;= 0
                                    </expr>
                                    ;
                                </condition>
                                <incr>
                                    <expr><name>i</name>--
                                    </expr>
                                </incr>
                                )
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>otherFValue</name>.
                                                    <name>charAt</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            == '0'
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>otherFValue</name>.
                                                        <name>deleteCharAt</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                    </then>
                                    <else>else
                                        <break>break;</break>
                                    </else>
                                </if>
                            </for>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>int</name>
                        </type>
                        <name>compareTo</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>XPrecisionDecimal</name>
                                    </type>
                                    <name>val</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{

                            <comment type="line">// seen NaN</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>sign</name>
                                        == 0
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <return>return
                                        <expr>
                                            <name>INDETERMINATE</name>
                                        </expr>
                                        ;
                                    </return>
                                </then>
                            </if>

                            <comment type="line">//INF is greater than everything and equal to itself</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>ivalue</name>.
                                                <name>equals</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"INF"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        ||
                                        <call>
                                            <name><name>val</name>.<name>ivalue</name>.
                                                <name>equals</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"INF"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>ivalue</name>.
                                                            <name>equals</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>val</name>.
                                                                        <name>ivalue</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <return>return
                                                    <expr>
                                                        <name>EQUAL</name>
                                                    </expr>
                                                    ;
                                                </return>
                                            </then>
                                            <else>else
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <call>
                                                                <name><name>ivalue</name>.
                                                                    <name>equals</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"INF"</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <return>return
                                                            <expr>
                                                                <name>GREATER_THAN</name>
                                                            </expr>
                                                            ;
                                                        </return>
                                                    </then>
                                                </if>
                                            </else>
                                        </if>
                                        <return>return
                                            <expr>
                                                <name>LESS_THAN</name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>

                            <comment type="line">//-INF is smaller than everything and equal itself</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>ivalue</name>.
                                                <name>equals</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"-INF"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        ||
                                        <call>
                                            <name><name>val</name>.<name>ivalue</name>.
                                                <name>equals</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"-INF"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>ivalue</name>.
                                                            <name>equals</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>val</name>.
                                                                        <name>ivalue</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <return>return
                                                    <expr>
                                                        <name>EQUAL</name>
                                                    </expr>
                                                    ;
                                                </return>
                                            </then>
                                            <else>else
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <call>
                                                                <name><name>ivalue</name>.
                                                                    <name>equals</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"-INF"</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <return>return
                                                            <expr>
                                                                <name>LESS_THAN</name>
                                                            </expr>
                                                            ;
                                                        </return>
                                                    </then>
                                                </if>
                                            </else>
                                        </if>
                                        <return>return
                                            <expr>
                                                <name>GREATER_THAN</name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>

                            <if>if
                                <condition>(
                                    <expr>
                                        <name>sign</name>
                                        !=
                                        <name><name>val</name>.
                                            <name>sign</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <return>return
                                        <expr>
                                            <name>sign</name>
                                            &gt;
                                            <name><name>val</name>.
                                                <name>sign</name>
                                            </name>
                                            ? <name>GREATER_THAN</name> :
                                            <name>LESS_THAN</name>
                                        </expr>
                                        ;
                                    </return>
                                </then>
                            </if>

                            <return>return
                                <expr>
                                    <name>sign</name>
                                    *
                                    <call>
                                        <name>compare</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>val</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="line">// To enable comparison - the exponent part of the decimal will be limited
                    </comment>
                    <comment type="line">// to the max value of int.</comment>
                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>int</name>
                        </type>
                        <name>compare</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>XPrecisionDecimal</name>
                                    </type>
                                    <name>val</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{

                            <if>if
                                <condition>(
                                    <expr>
                                        <name>pvalue</name>
                                        != 0 ||
                                        <name><name>val</name>.
                                            <name>pvalue</name>
                                        </name>
                                        != 0
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>pvalue</name>
                                                    ==
                                                    <name><name>val</name>.
                                                        <name>pvalue</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <return>return
                                                    <expr>
                                                        <call>
                                                            <name>intComp</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>val</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </return>
                                            </then>
                                            <else>else
                                                <block>{

                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>intDigits</name>
                                                                + <name>pvalue</name> !=
                                                                <name><name>val</name>.
                                                                    <name>intDigits</name>
                                                                </name>
                                                                +
                                                                <name><name>val</name>.
                                                                    <name>pvalue</name>
                                                                </name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <return>return
                                                                <expr>
                                                                    <name>intDigits</name>
                                                                    + <name>pvalue</name> &gt;
                                                                    <name><name>val</name>.
                                                                        <name>intDigits</name>
                                                                    </name>
                                                                    +
                                                                    <name><name>val</name>.
                                                                        <name>pvalue</name>
                                                                    </name>
                                                                    ? <name>GREATER_THAN</name> :
                                                                    <name>LESS_THAN</name>
                                                                </expr>
                                                                ;
                                                            </return>
                                                        </then>
                                                    </if>

                                                    <comment type="line">//otherwise the 2 combined values are the
                                                        same
                                                    </comment>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>pvalue</name>
                                                                &gt;
                                                                <name><name>val</name>.
                                                                    <name>pvalue</name>
                                                                </name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <decl_stmt>
                                                                    <decl>
                                                                        <type>
                                                                            <name>int</name>
                                                                        </type>
                                                                        <name>expDiff</name> =
                                                                        <init>
                                                                            <expr>
                                                                                <name>pvalue</name>
                                                                                -
                                                                                <name><name>val</name>.
                                                                                    <name>pvalue</name>
                                                                                </name>
                                                                            </expr>
                                                                        </init>
                                                                    </decl>
                                                                    ;
                                                                </decl_stmt>
                                                                <decl_stmt>
                                                                    <decl>
                                                                        <type>
                                                                            <name>StringBuffer</name>
                                                                        </type>
                                                                        <name>buffer</name> =
                                                                        <init>
                                                                            <expr>new
                                                                                <call>
                                                                                    <name>StringBuffer</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>ivalue</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </init>
                                                                    </decl>
                                                                    ;
                                                                </decl_stmt>
                                                                <decl_stmt>
                                                                    <decl>
                                                                        <type>
                                                                            <name>StringBuffer</name>
                                                                        </type>
                                                                        <name>fbuffer</name> =
                                                                        <init>
                                                                            <expr>new
                                                                                <call>
                                                                                    <name>StringBuffer</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>fvalue</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </init>
                                                                    </decl>
                                                                    ;
                                                                </decl_stmt>
                                                                <for>for(
                                                                    <init>
                                                                        <decl>
                                                                            <type>
                                                                                <name>int</name>
                                                                            </type>
                                                                            <name>i</name> =
                                                                            <init>
                                                                                <expr>0</expr>
                                                                            </init>
                                                                        </decl>
                                                                        ;
                                                                    </init>
                                                                    <condition>
                                                                        <expr>
                                                                            <name>i</name>
                                                                            &lt;
                                                                            <name>expDiff</name>
                                                                        </expr>
                                                                        ;
                                                                    </condition>
                                                                    <incr>
                                                                        <expr><name>i</name>++
                                                                        </expr>
                                                                    </incr>
                                                                    )
                                                                    <block>{
                                                                        <if>if
                                                                            <condition>(
                                                                                <expr>
                                                                                    <name>i</name>
                                                                                    &lt;
                                                                                    <name>fracDigits</name>
                                                                                </expr>
                                                                                )
                                                                            </condition>
                                                                            <then>
                                                                                <block>{
                                                                                    <expr_stmt>
                                                                                        <expr>
                                                                                            <call>
                                                                                                <name><name>
                                                                                                    buffer</name>.
                                                                                                    <name>append</name>
                                                                                                </name>
                                                                                                <argument_list>(
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <call>
                                                                                                                <name>
                                                                                                                    <name>
                                                                                                                        fvalue</name>
                                                                                                                    .
                                                                                                                    <name>
                                                                                                                        charAt
                                                                                                                    </name>
                                                                                                                </name>
                                                                                                                <argument_list>
                                                                                                                    (
                                                                                                                    <argument>
                                                                                                                        <expr>
                                                                                                                            <name>
                                                                                                                                i
                                                                                                                            </name>
                                                                                                                        </expr>
                                                                                                                    </argument>
                                                                                                                    )
                                                                                                                </argument_list>
                                                                                                            </call>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    )
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                        ;
                                                                                    </expr_stmt>
                                                                                    <expr_stmt>
                                                                                        <expr>
                                                                                            <call>
                                                                                                <name><name>
                                                                                                    fbuffer</name>.
                                                                                                    <name>deleteCharAt
                                                                                                    </name>
                                                                                                </name>
                                                                                                <argument_list>(
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <name>i
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    )
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                        ;
                                                                                    </expr_stmt>
                                                                                    }
                                                                                </block>
                                                                            </then>
                                                                            <else>else
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>buffer</name>.
                                                                                                <name>append</name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>'0'</expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                            </else>
                                                                        </if>
                                                                        }
                                                                    </block>
                                                                </for>
                                                                <return>return
                                                                    <expr>
                                                                        <call>
                                                                            <name>compareDecimal</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>buffer</name>.
                                                                                                <name>toString</name>
                                                                                            </name>
                                                                                            <argument_list>()
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name><name>val</name>.
                                                                                            <name>ivalue</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>fbuffer</name>.
                                                                                                <name>toString</name>
                                                                                            </name>
                                                                                            <argument_list>()
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name><name>val</name>.
                                                                                            <name>fvalue</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </return>
                                                                }
                                                            </block>
                                                        </then>
                                                        <else>else
                                                            <block>{
                                                                <decl_stmt>
                                                                    <decl>
                                                                        <type>
                                                                            <name>int</name>
                                                                        </type>
                                                                        <name>expDiff</name> =
                                                                        <init>
                                                                            <expr>
                                                                                <name><name>val</name>.
                                                                                    <name>pvalue</name>
                                                                                </name>
                                                                                -
                                                                                <name>pvalue</name>
                                                                            </expr>
                                                                        </init>
                                                                    </decl>
                                                                    ;
                                                                </decl_stmt>
                                                                <decl_stmt>
                                                                    <decl>
                                                                        <type>
                                                                            <name>StringBuffer</name>
                                                                        </type>
                                                                        <name>buffer</name> =
                                                                        <init>
                                                                            <expr>new
                                                                                <call>
                                                                                    <name>StringBuffer</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name><name>val</name>.
                                                                                                    <name>ivalue</name>
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </init>
                                                                    </decl>
                                                                    ;
                                                                </decl_stmt>
                                                                <decl_stmt>
                                                                    <decl>
                                                                        <type>
                                                                            <name>StringBuffer</name>
                                                                        </type>
                                                                        <name>fbuffer</name> =
                                                                        <init>
                                                                            <expr>new
                                                                                <call>
                                                                                    <name>StringBuffer</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name><name>val</name>.
                                                                                                    <name>fvalue</name>
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </init>
                                                                    </decl>
                                                                    ;
                                                                </decl_stmt>
                                                                <for>for(
                                                                    <init>
                                                                        <decl>
                                                                            <type>
                                                                                <name>int</name>
                                                                            </type>
                                                                            <name>i</name> =
                                                                            <init>
                                                                                <expr>0</expr>
                                                                            </init>
                                                                        </decl>
                                                                        ;
                                                                    </init>
                                                                    <condition>
                                                                        <expr>
                                                                            <name>i</name>
                                                                            &lt;
                                                                            <name>expDiff</name>
                                                                        </expr>
                                                                        ;
                                                                    </condition>
                                                                    <incr>
                                                                        <expr><name>i</name>++
                                                                        </expr>
                                                                    </incr>
                                                                    )
                                                                    <block>{
                                                                        <if>if
                                                                            <condition>(
                                                                                <expr>
                                                                                    <name>i</name>
                                                                                    &lt;
                                                                                    <name><name>val</name>.
                                                                                        <name>fracDigits</name>
                                                                                    </name>
                                                                                </expr>
                                                                                )
                                                                            </condition>
                                                                            <then>
                                                                                <block>{
                                                                                    <expr_stmt>
                                                                                        <expr>
                                                                                            <call>
                                                                                                <name><name>
                                                                                                    buffer</name>.
                                                                                                    <name>append</name>
                                                                                                </name>
                                                                                                <argument_list>(
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <call>
                                                                                                                <name>
                                                                                                                    <name>
                                                                                                                        val</name>
                                                                                                                    .<name>
                                                                                                                    fvalue</name>.
                                                                                                                    <name>
                                                                                                                        charAt
                                                                                                                    </name>
                                                                                                                </name>
                                                                                                                <argument_list>
                                                                                                                    (
                                                                                                                    <argument>
                                                                                                                        <expr>
                                                                                                                            <name>
                                                                                                                                i
                                                                                                                            </name>
                                                                                                                        </expr>
                                                                                                                    </argument>
                                                                                                                    )
                                                                                                                </argument_list>
                                                                                                            </call>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    )
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                        ;
                                                                                    </expr_stmt>
                                                                                    <expr_stmt>
                                                                                        <expr>
                                                                                            <call>
                                                                                                <name><name>
                                                                                                    fbuffer</name>.
                                                                                                    <name>deleteCharAt
                                                                                                    </name>
                                                                                                </name>
                                                                                                <argument_list>(
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <name>i
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    )
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                        ;
                                                                                    </expr_stmt>
                                                                                    }
                                                                                </block>
                                                                            </then>
                                                                            <else>else
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>buffer</name>.
                                                                                                <name>append</name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>'0'</expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                            </else>
                                                                        </if>
                                                                        }
                                                                    </block>
                                                                </for>
                                                                <return>return
                                                                    <expr>
                                                                        <call>
                                                                            <name>compareDecimal</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>ivalue</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>buffer</name>.
                                                                                                <name>toString</name>
                                                                                            </name>
                                                                                            <argument_list>()
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>fvalue</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>fbuffer</name>.
                                                                                                <name>toString</name>
                                                                                            </name>
                                                                                            <argument_list>()
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </return>
                                                                }
                                                            </block>
                                                        </else>
                                                    </if>
                                                    }
                                                </block>
                                            </else>
                                        </if>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <return>return
                                            <expr>
                                                <call>
                                                    <name>intComp</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>val</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </else>
                            </if>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * @param val
                        * @return
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>int</name>
                        </type>
                        <name>intComp</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>XPrecisionDecimal</name>
                                    </type>
                                    <name>val</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>intDigits</name>
                                        !=
                                        <name><name>val</name>.
                                            <name>intDigits</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <return>return
                                        <expr>
                                            <name>intDigits</name>
                                            &gt;
                                            <name><name>val</name>.
                                                <name>intDigits</name>
                                            </name>
                                            ? <name>GREATER_THAN</name> :
                                            <name>LESS_THAN</name>
                                        </expr>
                                        ;
                                    </return>
                                </then>
                            </if>

                            <return>return
                                <expr>
                                    <call>
                                        <name>compareDecimal</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>ivalue</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>val</name>.
                                                        <name>ivalue</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>fvalue</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>val</name>.
                                                        <name>fvalue</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * @param val
                        * @return
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>int</name>
                        </type>
                        <name>compareDecimal</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>iValue</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>fValue</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>otherIValue</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>otherFValue</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>ret</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>iValue</name>.
                                                    <name>compareTo</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>otherIValue</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>ret</name>
                                        != 0
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <return>return
                                        <expr>
                                            <name>ret</name>
                                            &gt; 0 ? <name>GREATER_THAN</name> :
                                            <name>LESS_THAN</name>
                                        </expr>
                                        ;
                                    </return>
                                </then>
                            </if>

                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>fValue</name>.
                                                <name>equals</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>otherFValue</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <return>return
                                        <expr>
                                            <name>EQUAL</name>
                                        </expr>
                                        ;
                                    </return>
                                </then>
                            </if>

                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>StringBuffer</name>
                                    </type>
                                    <name>temp1</name>=
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>StringBuffer</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>fValue</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>StringBuffer</name>
                                    </type>
                                    <name>temp2</name>=
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>StringBuffer</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>otherFValue</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>

                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>truncateTrailingZeros</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>temp1</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>temp2</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>ret</name>
                                    =
                                    <call>
                                        <name><name>temp1</name>.
                                            <name>toString</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>compareTo</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>temp2</name>.
                                                            <name>toString</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <return>return
                                <expr>
                                    <name>ret</name>
                                    == 0 ? <name>EQUAL</name> : (<name>ret</name> &gt; 0 ? <name>GREATER_THAN
                                </name> : <name>LESS_THAN</name>)
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <name>String</name>
                            </type>
                            <name>canonical</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <specifier>synchronized</specifier>
                            <name>String</name>
                        </type>
                        <name>toString</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>canonical</name>
                                        ==
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>makeCanonical</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            <return>return
                                <expr>
                                    <name>canonical</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>void</name>
                        </type>
                        <name>makeCanonical</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <comment type="line">// REVISIT: to be determined by working group</comment>
                            <expr_stmt>
                                <expr>
                                    <name>canonical</name>
                                    = "TBD by Working Group"
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * @param decimal
                        * @return
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>boolean</name>
                        </type>
                        <name>isIdentical</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>XPrecisionDecimal</name>
                                    </type>
                                    <name>decimal</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>ivalue</name>.
                                                <name>equals</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>decimal</name>.
                                                            <name>ivalue</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        &amp;&amp; (
                                        <call>
                                            <name><name>ivalue</name>.
                                                <name>equals</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"INF"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        ||
                                        <call>
                                            <name><name>ivalue</name>.
                                                <name>equals</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"-INF"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        ||
                                        <call>
                                            <name><name>ivalue</name>.
                                                <name>equals</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"NaN"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        )
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <return>return <expr>true</expr>;
                                    </return>
                                </then>
                            </if>

                            <if>if
                                <condition>(
                                    <expr>
                                        <name>sign</name>
                                        ==
                                        <name><name>decimal</name>.
                                            <name>sign</name>
                                        </name>
                                        &amp;&amp; <name>intDigits</name> ==
                                        <name><name>decimal</name>.
                                            <name>intDigits</name>
                                        </name>
                                        &amp;&amp; <name>fracDigits</name> ==
                                        <name><name>decimal</name>.
                                            <name>fracDigits</name>
                                        </name>
                                        &amp;&amp; <name>pvalue</name> ==
                                        <name><name>decimal</name>.
                                            <name>pvalue</name>
                                        </name>
                                        &amp;&amp;
                                        <call>
                                            <name><name>ivalue</name>.
                                                <name>equals</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>decimal</name>.
                                                            <name>ivalue</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        &amp;&amp;
                                        <call>
                                            <name><name>fvalue</name>.
                                                <name>equals</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>decimal</name>.
                                                            <name>fvalue</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <return>return <expr>true</expr>;
                                    </return>
                                </then>
                            </if>
                            <return>return <expr>false</expr>;
                            </return>
                            }
                        </block>
                    </function>

                    }
                </block>
            </class>
            <comment type="block">/* (non-Javadoc)
                * @see org.apache.xerces.impl.dv.xs.TypeValidator#getAllowedFacets()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>short</name>
                </type>
                <name>getAllowedFacets</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>(
                            <name><name>XSSimpleTypeDecl</name>.
                                <name>FACET_PATTERN</name>
                            </name>
                            |
                            <name><name>XSSimpleTypeDecl</name>.
                                <name>FACET_WHITESPACE</name>
                            </name>
                            |
                            <name><name>XSSimpleTypeDecl</name>.
                                <name>FACET_ENUMERATION</name>
                            </name>
                            |
                            <name><name>XSSimpleTypeDecl</name>.
                                <name>FACET_MAXINCLUSIVE</name>
                            </name>
                            |
                            <name><name>XSSimpleTypeDecl</name>.
                                <name>FACET_MININCLUSIVE</name>
                            </name>
                            |
                            <name><name>XSSimpleTypeDecl</name>.
                                <name>FACET_MAXEXCLUSIVE</name>
                            </name>
                            |
                            <name><name>XSSimpleTypeDecl</name>.
                                <name>FACET_MINEXCLUSIVE</name>
                            </name>
                            |
                            <name><name>XSSimpleTypeDecl</name>.
                                <name>FACET_TOTALDIGITS</name>
                            </name>
                            |
                            <name><name>XSSimpleTypeDecl</name>.
                                <name>FACET_FRACTIONDIGITS</name>
                            </name>
                            )
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="block">/* (non-Javadoc)
                * @see org.apache.xerces.impl.dv.xs.TypeValidator#getActualValue(java.lang.String,
                org.apache.xerces.impl.dv.ValidationContext)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Object</name>
                </type>
                <name>getActualValue</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>content</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ValidationContext</name>
                            </type>
                            <name>context</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>InvalidDatatypeValueException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <try>try
                        <block>{
                            <return>return
                                <expr>new
                                    <call>
                                        <name>XPrecisionDecimal</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>content</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>NumberFormatException</name>
                                    </type>
                                    <name>nfe</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>InvalidDatatypeValueException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"cvc-datatype-valid.1.2.1"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>new
                                                        <name>
                                                            <name>Object</name>
                                                            <index>[]</index>
                                                        </name>
                                                        <block>{
                                                            <expr>
                                                                <name>content</name>
                                                            </expr>
                                                            , <expr>"precisionDecimal"</expr>}
                                                        </block>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>compare</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>value1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>value2</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>((<name>XPrecisionDecimal</name>)<name>value1</name>).
                            <call>
                                <name>compareTo</name>
                                <argument_list>(
                                    <argument>
                                        <expr>(<name>XPrecisionDecimal</name>)
                                            <name>value2</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getFractionDigits</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>((<name>XPrecisionDecimal</name>)<name>value</name>).
                            <name>fracDigits</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getTotalDigits</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>((<name>XPrecisionDecimal</name>)<name>value</name>).
                            <name>totalDigits</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isIdentical</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>value1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>value2</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>!(<name>value2</name>
                                <name>instanceof</name>
                                <name>XPrecisionDecimal</name>) || !(<name>value1</name>
                                <name>instanceof</name>
                                <name>XPrecisionDecimal</name>)
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return <expr>false</expr>;
                            </return>
                        </then>
                    </if>
                    <return>return
                        <expr>((<name>XPrecisionDecimal</name>)<name>value1</name>).
                            <call>
                                <name>isIdentical</name>
                                <argument_list>(
                                    <argument>
                                        <expr>(<name>XPrecisionDecimal</name>)
                                            <name>value2</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            }
        </block>
    </class>
</unit>
