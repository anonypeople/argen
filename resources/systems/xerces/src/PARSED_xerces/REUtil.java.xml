<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\impl\xpath\regex\REUtil.java">
    <comment type="block">/*
        * Copyright 1999-2002,2004 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xpath</name>.
            <name>regex</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>text</name>.
            <name>CharacterIterator</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * @xerces.internal
        *
        * @version $Id: REUtil.java,v 1.9 2004/10/04 22:07:40 mrglavas Exp $
        */
    </comment>
    <class>
        <specifier>public</specifier>
        <specifier>final</specifier> class <name>REUtil</name>
        <block>{
            <constructor>
                <specifier>private</specifier>
                <name>REUtil</name>
                <parameter_list>()</parameter_list>
                <block>{
                    }
                </block>
            </constructor>

            <function>
                <type>
                    <specifier>static</specifier>
                    <specifier>final</specifier>
                    <name>int</name>
                </type>
                <name>composeFromSurrogates</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>high</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>low</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>0x10000 + ((<name>high</name>-0xd800)&lt;&lt;10) + <name>low</name>-0xdc00
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>static</specifier>
                    <specifier>final</specifier>
                    <name>boolean</name>
                </type>
                <name>isLowSurrogate</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>ch</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>(<name>ch</name> &amp; 0xfc00) == 0xdc00
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>static</specifier>
                    <specifier>final</specifier>
                    <name>boolean</name>
                </type>
                <name>isHighSurrogate</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>ch</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>(<name>ch</name> &amp; 0xfc00) == 0xd800
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>static</specifier>
                    <specifier>final</specifier>
                    <name>String</name>
                </type>
                <name>decomposeToSurrogates</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>ch</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>char</name>
                                <index>[]</index>
                            </type>
                            <name>chs</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>char</name>
                                        <index>[<expr>2</expr>]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name>ch</name>
                            -= 0x10000
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>chs</name>
                                <index>[<expr>0</expr>]
                                </index>
                            </name>
                            =
                            <call>(<name>char</name>)
                                <argument_list>(
                                    <argument>
                                        <expr>(<name>ch</name>&gt;&gt;10)+0xd800
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>chs</name>
                                <index>[<expr>1</expr>]
                                </index>
                            </name>
                            =
                            <call>(<name>char</name>)
                                <argument_list>(
                                    <argument>
                                        <expr>(<name>ch</name>&amp;0x3ff)+0xdc00
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>new
                            <call>
                                <name>String</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>chs</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>static</specifier>
                    <specifier>final</specifier>
                    <name>String</name>
                </type>
                <name>substring</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>CharacterIterator</name>
                            </type>
                            <name>iterator</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>begin</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>end</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>char</name>
                                <index>[]</index>
                            </type>
                            <name>src</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>char</name>
                                        <index>[
                                            <expr><name>end</name>-
                                                <name>begin</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name><name>src</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr>
                                <name>i</name>
                                ++
                            </expr>
                        </incr>
                        )
                        <expr_stmt>
                            <expr>
                                <name>
                                    <name>src</name>
                                    <index>[
                                        <expr>
                                            <name>i</name>
                                        </expr>
                                        ]
                                    </index>
                                </name>
                                =
                                <call>
                                    <name><name>iterator</name>.
                                        <name>setIndex</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr><name>i</name>+
                                                <name>begin</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            ;
                        </expr_stmt>
                    </for>
                    <return>return
                        <expr>new
                            <call>
                                <name>String</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>src</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">// ================================================================</comment>

            <function>
                <type>
                    <specifier>static</specifier>
                    <specifier>final</specifier>
                    <name>int</name>
                </type>
                <name>getOptionValue</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>ch</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>ret</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <switch>switch
                        <condition>(
                            <expr>
                                <name>ch</name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <case>case <expr>'i'</expr>:
                                <expr_stmt>
                                    <expr>
                                        <name>ret</name>
                                        =
                                        <name><name>RegularExpression</name>.
                                            <name>IGNORE_CASE</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case <expr>'m'</expr>:
                                <expr_stmt>
                                    <expr>
                                        <name>ret</name>
                                        =
                                        <name><name>RegularExpression</name>.
                                            <name>MULTIPLE_LINES</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case <expr>'s'</expr>:
                                <expr_stmt>
                                    <expr>
                                        <name>ret</name>
                                        =
                                        <name><name>RegularExpression</name>.
                                            <name>SINGLE_LINE</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case <expr>'x'</expr>:
                                <expr_stmt>
                                    <expr>
                                        <name>ret</name>
                                        =
                                        <name><name>RegularExpression</name>.
                                            <name>EXTENDED_COMMENT</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case <expr>'u'</expr>:
                                <expr_stmt>
                                    <expr>
                                        <name>ret</name>
                                        =
                                        <name><name>RegularExpression</name>.
                                            <name>USE_UNICODE_CATEGORY</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case <expr>'w'</expr>:
                                <expr_stmt>
                                    <expr>
                                        <name>ret</name>
                                        =
                                        <name><name>RegularExpression</name>.
                                            <name>UNICODE_WORD_BOUNDARY</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case <expr>'F'</expr>:
                                <expr_stmt>
                                    <expr>
                                        <name>ret</name>
                                        =
                                        <name><name>RegularExpression</name>.
                                            <name>PROHIBIT_FIXED_STRING_OPTIMIZATION</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case <expr>'H'</expr>:
                                <expr_stmt>
                                    <expr>
                                        <name>ret</name>
                                        =
                                        <name><name>RegularExpression</name>.
                                            <name>PROHIBIT_HEAD_CHARACTER_OPTIMIZATION</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case <expr>'X'</expr>:
                                <expr_stmt>
                                    <expr>
                                        <name>ret</name>
                                        =
                                        <name><name>RegularExpression</name>.
                                            <name>XMLSCHEMA_MODE</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case <expr>','</expr>:
                                <expr_stmt>
                                    <expr>
                                        <name>ret</name>
                                        =
                                        <name><name>RegularExpression</name>.
                                            <name>SPECIAL_COMMA</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <default>default:
                            </default>}
                        </block>
                    </switch>
                    <return>return
                        <expr>
                            <name>ret</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>static</specifier>
                    <specifier>final</specifier>
                    <name>int</name>
                </type>
                <name>parseOptions</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>opts</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>ParseException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>opts</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return <expr>0</expr>;
                            </return>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>options</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <call>
                                    <name><name>opts</name>.
                                        <name>length</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr>
                                <name>i</name>
                                ++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>v</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name>getOptionValue</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>opts</name>.
                                                                    <name>charAt</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>i</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>v</name>
                                        == 0
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <throw>throw
                                        <expr>new
                                            <call>
                                                <name>ParseException</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>"Unknown Option: "+
                                                            <call>
                                                                <name><name>opts</name>.
                                                                    <name>substring</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>i</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>-1</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </throw>
                                </then>
                            </if>
                            <expr_stmt>
                                <expr>
                                    <name>options</name>
                                    |=
                                    <name>v</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </for>
                    <return>return
                        <expr>
                            <name>options</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>static</specifier>
                    <specifier>final</specifier>
                    <name>String</name>
                </type>
                <name>createOptionString</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>options</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>StringBuffer</name>
                            </type>
                            <name>sb</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>StringBuffer</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>9</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>(<name>options</name> &amp;
                                <name><name>RegularExpression</name>.
                                    <name>PROHIBIT_FIXED_STRING_OPTIMIZATION</name>
                                </name>
                                ) != 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>sb</name>.
                                            <name>append</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>(<name>char</name>)'F'
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>(<name>options</name> &amp;
                                <name><name>RegularExpression</name>.
                                    <name>PROHIBIT_HEAD_CHARACTER_OPTIMIZATION</name>
                                </name>
                                ) != 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>sb</name>.
                                            <name>append</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>(<name>char</name>)'H'
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>(<name>options</name> &amp;
                                <name><name>RegularExpression</name>.
                                    <name>XMLSCHEMA_MODE</name>
                                </name>
                                ) != 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>sb</name>.
                                            <name>append</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>(<name>char</name>)'X'
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>(<name>options</name> &amp;
                                <name><name>RegularExpression</name>.
                                    <name>IGNORE_CASE</name>
                                </name>
                                ) != 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>sb</name>.
                                            <name>append</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>(<name>char</name>)'i'
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>(<name>options</name> &amp;
                                <name><name>RegularExpression</name>.
                                    <name>MULTIPLE_LINES</name>
                                </name>
                                ) != 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>sb</name>.
                                            <name>append</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>(<name>char</name>)'m'
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>(<name>options</name> &amp;
                                <name><name>RegularExpression</name>.
                                    <name>SINGLE_LINE</name>
                                </name>
                                ) != 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>sb</name>.
                                            <name>append</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>(<name>char</name>)'s'
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>(<name>options</name> &amp;
                                <name><name>RegularExpression</name>.
                                    <name>USE_UNICODE_CATEGORY</name>
                                </name>
                                ) != 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>sb</name>.
                                            <name>append</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>(<name>char</name>)'u'
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>(<name>options</name> &amp;
                                <name><name>RegularExpression</name>.
                                    <name>UNICODE_WORD_BOUNDARY</name>
                                </name>
                                ) != 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>sb</name>.
                                            <name>append</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>(<name>char</name>)'w'
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>(<name>options</name> &amp;
                                <name><name>RegularExpression</name>.
                                    <name>EXTENDED_COMMENT</name>
                                </name>
                                ) != 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>sb</name>.
                                            <name>append</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>(<name>char</name>)'x'
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>(<name>options</name> &amp;
                                <name><name>RegularExpression</name>.
                                    <name>SPECIAL_COMMA</name>
                                </name>
                                ) != 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>sb</name>.
                                            <name>append</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>(<name>char</name>)','
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <call>
                                <name><name>sb</name>.
                                    <name>toString</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>intern</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">// ================================================================</comment>

            <function>
                <type>
                    <specifier>static</specifier>
                    <name>String</name>
                </type>
                <name>stripExtendedComment</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>regex</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>len</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>regex</name>.
                                            <name>length</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>StringBuffer</name>
                            </type>
                            <name>buffer</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>StringBuffer</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>len</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>offset</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <while>while
                        <condition>(
                            <expr>
                                <name>offset</name>
                                &lt;
                                <name>len</name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>ch</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>regex</name>.
                                                    <name>charAt</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr><name>offset</name>++
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <comment type="line">// Skips a white space.</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>ch</name>
                                        == '\t' || <name>ch</name> == '\n' || <name>ch</name> == '\f' || <name>ch</name> ==
                                        '\r' || <name>ch</name> == ' '
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <continue>continue;</continue>
                                </then>
                            </if>

                            <if>if
                                <condition>(
                                    <expr>
                                        <name>ch</name>
                                        == '#'
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <comment type="line">// Skips chracters between '#' and a line end.</comment>
                                        <while>while
                                            <condition>(
                                                <expr>
                                                    <name>offset</name>
                                                    &lt;
                                                    <name>len</name>
                                                </expr>
                                                )
                                            </condition>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>ch</name>
                                                        =
                                                        <call>
                                                            <name><name>regex</name>.
                                                                <name>charAt</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr><name>offset</name>++
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>ch</name>
                                                            == '\r' || <name>ch</name> == '\n'
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <break>break;</break>
                                                    </then>
                                                </if>
                                                }
                                            </block>
                                        </while>
                                        <continue>continue;</continue>
                                        }
                                    </block>
                                </then>
                            </if>

                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>next</name>
                                </decl>
                                ;
                            </decl_stmt>
                            <comment type="line">// Strips an escaped white space.</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>ch</name>
                                        == '\\' &amp;&amp; <name>offset</name> &lt;
                                        <name>len</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>(<name>next</name> =
                                                    <call>
                                                        <name><name>regex</name>.
                                                            <name>charAt</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>offset</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    ) == '#'
                                                    || <name>next</name> == '\t' || <name>next</name> == '\n' || <name>
                                                        next
                                                    </name> == '\f'
                                                    || <name>next</name> == '\r' || <name>next</name> == ' '
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>buffer</name>.
                                                                    <name>append</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>(<name>char</name>)
                                                                            <name>next</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>offset</name>
                                                            ++
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <block>{
                                                    <comment type="line">// Other escaped character.</comment>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>buffer</name>.
                                                                    <name>append</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>(<name>char</name>)'\\'
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>buffer</name>.
                                                                    <name>append</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>(<name>char</name>)
                                                                            <name>next</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>offset</name>
                                                            ++
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </else>
                                        </if>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <comment type="line">// As is.</comment>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>buffer</name>.
                                                    <name>append</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>(<name>char</name>)
                                                            <name>ch</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                </else>
                            </if>
                            }
                        </block>
                    </while>
                    <return>return
                        <expr>
                            <call>
                                <name><name>buffer</name>.
                                    <name>toString</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">// ================================================================</comment>

            <comment type="javadoc">/**
                * Sample entry.
                * &lt;div&gt;Usage: &lt;KBD&gt;org.apache.xerces.utils.regex.REUtil &amp;lt;regex&amp;gt; &amp;lt;string&amp;gt;&lt;/KBD&gt;&lt;/div&gt;
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>void</name>
                </type>
                <name>main</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>String</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>argv</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>pattern</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <try>try
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>options</name> =
                                    <init>
                                        <expr>""</expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>target</name> =
                                    <init>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name><name>argv</name>.
                                            <name>length</name>
                                        </name>
                                        == 0
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>System</name>.<name>out</name>.
                                                        <name>println</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"Error:Usage: java REUtil -i|-m|-s|-u|-w|-X
                                                                regularExpression String"
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>System</name>.
                                                        <name>exit</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>0</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            <for>for (
                                <init>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>i</name> =
                                        <init>
                                            <expr>0</expr>
                                        </init>
                                    </decl>
                                    ;
                                </init>
                                <condition>
                                    <expr>
                                        <name>i</name>
                                        &lt;
                                        <name><name>argv</name>.
                                            <name>length</name>
                                        </name>
                                    </expr>
                                    ;
                                </condition>
                                <incr>
                                    <expr>
                                        <name>i</name>
                                        ++
                                    </expr>
                                </incr>
                                )
                                <block>{
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>
                                                    <name>argv</name>
                                                    <index>[
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                .
                                                <call>
                                                    <name>length</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                == 0 ||
                                                <name>
                                                    <name>argv</name>
                                                    <index>[
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                .
                                                <call>
                                                    <name>charAt</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>0</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                != '-'
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>pattern</name>
                                                            ==
                                                            <name>null</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>pattern</name>
                                                                =
                                                                <name>
                                                                    <name>argv</name>
                                                                    <index>[
                                                                        <expr>
                                                                            <name>i</name>
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                    </then>
                                                    <else>else
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>target</name>
                                                                    ==
                                                                    <name>null</name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>target</name>
                                                                        =
                                                                        <name>
                                                                            <name>argv</name>
                                                                            <index>[
                                                                                <expr>
                                                                                    <name>i</name>
                                                                                </expr>
                                                                                ]
                                                                            </index>
                                                                        </name>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                            </then>
                                                            <else>else
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>System</name>.<name>err</name>.
                                                                                <name>println</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>"Unnecessary: "+
                                                                                        <name>
                                                                                            <name>argv</name>
                                                                                            <index>[
                                                                                                <expr>
                                                                                                    <name>i</name>
                                                                                                </expr>
                                                                                                ]
                                                                                            </index>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                            </else>
                                                        </if>
                                                    </else>
                                                </if>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>
                                                            <name>argv</name>
                                                            <index>[
                                                                <expr>
                                                                    <name>i</name>
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                        .
                                                        <call>
                                                            <name>equals</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"-i"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>options</name>
                                                                += "i"
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                                <else>else
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>
                                                                    <name>argv</name>
                                                                    <index>[
                                                                        <expr>
                                                                            <name>i</name>
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                                .
                                                                <call>
                                                                    <name>equals</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"-m"</expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>options</name>
                                                                        += "m"
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </then>
                                                        <else>else
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name>
                                                                            <name>argv</name>
                                                                            <index>[
                                                                                <expr>
                                                                                    <name>i</name>
                                                                                </expr>
                                                                                ]
                                                                            </index>
                                                                        </name>
                                                                        .
                                                                        <call>
                                                                            <name>equals</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>"-s"</expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>options</name>
                                                                                += "s"
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </then>
                                                                <else>else
                                                                    <if>if
                                                                        <condition>(
                                                                            <expr>
                                                                                <name>
                                                                                    <name>argv</name>
                                                                                    <index>[
                                                                                        <expr>
                                                                                            <name>i</name>
                                                                                        </expr>
                                                                                        ]
                                                                                    </index>
                                                                                </name>
                                                                                .
                                                                                <call>
                                                                                    <name>equals</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>"-u"</expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            )
                                                                        </condition>
                                                                        <then>
                                                                            <block>{
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <name>options</name>
                                                                                        += "u"
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                }
                                                                            </block>
                                                                        </then>
                                                                        <else>else
                                                                            <if>if
                                                                                <condition>(
                                                                                    <expr>
                                                                                        <name>
                                                                                            <name>argv</name>
                                                                                            <index>[
                                                                                                <expr>
                                                                                                    <name>i</name>
                                                                                                </expr>
                                                                                                ]
                                                                                            </index>
                                                                                        </name>
                                                                                        .
                                                                                        <call>
                                                                                            <name>equals</name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>"-w"</expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    )
                                                                                </condition>
                                                                                <then>
                                                                                    <block>{
                                                                                        <expr_stmt>
                                                                                            <expr>
                                                                                                <name>options</name>
                                                                                                += "w"
                                                                                            </expr>
                                                                                            ;
                                                                                        </expr_stmt>
                                                                                        }
                                                                                    </block>
                                                                                </then>
                                                                                <else>else
                                                                                    <if>if
                                                                                        <condition>(
                                                                                            <expr>
                                                                                                <name>
                                                                                                    <name>argv</name>
                                                                                                    <index>[
                                                                                                        <expr>
                                                                                                            <name>i
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                        ]
                                                                                                    </index>
                                                                                                </name>
                                                                                                .
                                                                                                <call>
                                                                                                    <name>equals</name>
                                                                                                    <argument_list>(
                                                                                                        <argument>
                                                                                                            <expr>"-X"
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        )
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                            )
                                                                                        </condition>
                                                                                        <then>
                                                                                            <block>{
                                                                                                <expr_stmt>
                                                                                                    <expr>
                                                                                                        <name>options
                                                                                                        </name>
                                                                                                        += "X"
                                                                                                    </expr>
                                                                                                    ;
                                                                                                </expr_stmt>
                                                                                                }
                                                                                            </block>
                                                                                        </then>
                                                                                        <else>else
                                                                                            <block>{
                                                                                                <expr_stmt>
                                                                                                    <expr>
                                                                                                        <call>
                                                                                                            <name><name>
                                                                                                                System</name>
                                                                                                                .<name>
                                                                                                                    err</name>.
                                                                                                                <name>
                                                                                                                    println
                                                                                                                </name>
                                                                                                            </name>
                                                                                                            <argument_list>
                                                                                                                (
                                                                                                                <argument>
                                                                                                                    <expr>
                                                                                                                        "Unknown
                                                                                                                        option:
                                                                                                                        "+
                                                                                                                        <name>
                                                                                                                            <name>
                                                                                                                                argv
                                                                                                                            </name>
                                                                                                                            <index>
                                                                                                                                [
                                                                                                                                <expr>
                                                                                                                                    <name>
                                                                                                                                        i
                                                                                                                                    </name>
                                                                                                                                </expr>
                                                                                                                                ]
                                                                                                                            </index>
                                                                                                                        </name>
                                                                                                                    </expr>
                                                                                                                </argument>
                                                                                                                )
                                                                                                            </argument_list>
                                                                                                        </call>
                                                                                                    </expr>
                                                                                                    ;
                                                                                                </expr_stmt>
                                                                                                }
                                                                                            </block>
                                                                                        </else>
                                                                                    </if>
                                                                                </else>
                                                                            </if>
                                                                        </else>
                                                                    </if>
                                                                </else>
                                                            </if>
                                                        </else>
                                                    </if>
                                                </else>
                                            </if>
                                        </else>
                                    </if>
                                    }
                                </block>
                            </for>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>RegularExpression</name>
                                    </type>
                                    <name>reg</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>RegularExpression</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>pattern</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>options</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>System</name>.<name>out</name>.
                                            <name>println</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"RegularExpression: "+
                                                    <name>reg</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Match</name>
                                    </type>
                                    <name>match</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>Match</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>reg</name>.
                                            <name>matches</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>target</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>match</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <for>for (
                                <init>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>i</name> =
                                        <init>
                                            <expr>0</expr>
                                        </init>
                                    </decl>
                                    ;
                                </init>
                                <condition>
                                    <expr>
                                        <name>i</name>
                                        &lt;
                                        <call>
                                            <name><name>match</name>.
                                                <name>getNumberOfGroups</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </condition>
                                <incr>
                                    <expr>
                                        <name>i</name>
                                        ++
                                    </expr>
                                </incr>
                                )
                                <block>{
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>i</name>
                                                == 0
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>System</name>.<name>out</name>.
                                                            <name>print</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"Matched range for the whole pattern: "</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                        </then>
                                        <else>else
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>System</name>.<name>out</name>.
                                                            <name>print</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"["+<name>i</name>+"]: "
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                        </else>
                                    </if>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <call>
                                                    <name><name>match</name>.
                                                        <name>getBeginning</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                &lt; 0
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>System</name>.<name>out</name>.
                                                            <name>println</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"-1"</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                        </then>
                                        <else>else
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>match</name>.
                                                                                <name>getBeginning</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>i</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                        +", "+
                                                                        <call>
                                                                            <name><name>match</name>.
                                                                                <name>getEnd</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>i</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                        +", "
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>println</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"\""+
                                                                        <call>
                                                                            <name><name>match</name>.
                                                                                <name>getCapturedText</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>i</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                        +"\""
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </else>
                                    </if>
                                    }
                                </block>
                            </for>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>ParseException</name>
                                    </type>
                                    <name>pe</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>pattern</name>
                                            ==
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>pe</name>.
                                                            <name>printStackTrace</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>System</name>.<name>err</name>.
                                                            <name>println</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"org.apache.xerces.utils.regex.ParseException: "+
                                                                    <call>
                                                                        <name><name>pe</name>.
                                                                            <name>getMessage</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>String</name>
                                                    </type>
                                                    <name>indent</name> =
                                                    <init>
                                                        <expr>" "</expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>System</name>.<name>err</name>.
                                                            <name>println</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr><name>indent</name>+
                                                                    <name>pattern</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>int</name>
                                                    </type>
                                                    <name>loc</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name><name>pe</name>.
                                                                    <name>getLocation</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>loc</name>
                                                        &gt;= 0
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>System</name>.<name>err</name>.
                                                                        <name>print</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>indent</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <for>for (
                                                            <init>
                                                                <decl>
                                                                    <type>
                                                                        <name>int</name>
                                                                    </type>
                                                                    <name>i</name> =
                                                                    <init>
                                                                        <expr>0</expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </init>
                                                            <condition>
                                                                <expr>
                                                                    <name>i</name>
                                                                    &lt;
                                                                    <name>loc</name>
                                                                </expr>
                                                                ;
                                                            </condition>
                                                            <incr>
                                                                <expr>
                                                                    <name>i</name>
                                                                    ++
                                                                </expr>
                                                            </incr>
                                                            )
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>System</name>.<name>err</name>.
                                                                            <name>print</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>"-"</expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                        </for>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>System</name>.<name>err</name>.
                                                                        <name>println</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"^"</expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </catch>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>Exception</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>e</name>.
                                                <name>printStackTrace</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </catch>
                    </try>
                    }
                </block>
            </function>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>CACHESIZE</name> =
                    <init>
                        <expr>20</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>RegularExpression</name>
                        <index>[]</index>
                    </type>
                    <name>regexCache</name> =
                    <init>
                        <expr>new
                            <name>
                                <name>RegularExpression</name>
                                <index>[
                                    <expr>
                                        <name>CACHESIZE</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * Creates a RegularExpression instance.
                * This method caches created instances.
                *
                * @see RegularExpression#RegularExpression(java.lang.String, java.lang.String)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>RegularExpression</name>
                </type>
                <name>createRegex</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>pattern</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>options</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>ParseException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>RegularExpression</name>
                            </type>
                            <name>re</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>intOptions</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>REUtil</name>.
                                            <name>parseOptions</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>options</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <synchronized>synchronized (
                        <expr>
                            <name><name>REUtil</name>.
                                <name>regexCache</name>
                            </name>
                        </expr>
                        )
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>i</name>
                                </decl>
                                ;
                            </decl_stmt>
                            <for>for (
                                <init>
                                    <expr>
                                        <name>i</name>
                                        = 0
                                    </expr>
                                    ;
                                </init>
                                <condition>
                                    <expr>
                                        <name>i</name>
                                        &lt;
                                        <name><name>REUtil</name>.
                                            <name>CACHESIZE</name>
                                        </name>
                                    </expr>
                                    ;
                                </condition>
                                <incr>
                                    <expr>
                                        <name>i</name>
                                        ++
                                    </expr>
                                </incr>
                                )
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>RegularExpression</name>
                                            </type>
                                            <name>cached</name> =
                                            <init>
                                                <expr>
                                                    <name><name>REUtil</name>.
                                                        <name>regexCache</name>
                                                        <index>[
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>cached</name>
                                                ==
                                                <name>null</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>i</name>
                                                        = -1
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <call>
                                                    <name><name>cached</name>.
                                                        <name>equals</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>pattern</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>intOptions</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>re</name>
                                                        =
                                                        <name>cached</name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    }
                                </block>
                            </for>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>re</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>i</name>
                                                    != 0
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>System</name>.
                                                                    <name>arraycopy</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>REUtil</name>.
                                                                                <name>regexCache</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>0</expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>REUtil</name>.
                                                                                <name>regexCache</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>1</expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>i</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name><name>REUtil</name>.
                                                                <name>regexCache</name>
                                                                <index>[<expr>0</expr>]
                                                                </index>
                                                            </name>
                                                            =
                                                            <name>re</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>re</name>
                                                = new
                                                <call>
                                                    <name>RegularExpression</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>pattern</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>options</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>System</name>.
                                                        <name>arraycopy</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>REUtil</name>.
                                                                    <name>regexCache</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>0</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>REUtil</name>.
                                                                    <name>regexCache</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>1</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>REUtil</name>.
                                                                    <name>CACHESIZE</name>
                                                                </name>
                                                                -1
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>REUtil</name>.
                                                    <name>regexCache</name>
                                                    <index>[<expr>0</expr>]
                                                    </index>
                                                </name>
                                                =
                                                <name>re</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </else>
                            </if>
                            }
                        </block>
                    </synchronized>
                    <return>return
                        <expr>
                            <name>re</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                *
                * @see RegularExpression#matches(java.lang.String)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>boolean</name>
                </type>
                <name>matches</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>regex</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>target</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>ParseException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>REUtil</name>.
                                    <name>createRegex</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>regex</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            .
                            <call>
                                <name>matches</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>target</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                *
                * @see RegularExpression#matches(java.lang.String)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>boolean</name>
                </type>
                <name>matches</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>regex</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>options</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>target</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>ParseException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>REUtil</name>.
                                    <name>createRegex</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>regex</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>options</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            .
                            <call>
                                <name>matches</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>target</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">// ================================================================</comment>

            <comment type="javadoc">/**
                *
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>String</name>
                </type>
                <name>quoteMeta</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>literal</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>len</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>literal</name>.
                                            <name>length</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>StringBuffer</name>
                            </type>
                            <name>buffer</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name>len</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr>
                                <name>i</name>
                                ++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>ch</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>literal</name>.
                                                    <name>charAt</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>".*+?{[()|\\^$".
                                        <call>
                                            <name>indexOf</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>ch</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        &gt;= 0
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>buffer</name>
                                                    ==
                                                    <name>null</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>buffer</name>
                                                            = new
                                                            <call>
                                                                <name>StringBuffer</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr><name>i</name>+(<name>len</name>-<name>
                                                                            i</name>)*2
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>i</name>
                                                                &gt; 0
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>buffer</name>.
                                                                            <name>append</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>literal</name>.
                                                                                            <name>substring</name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>0</expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>i</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                        </then>
                                                    </if>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>buffer</name>.
                                                        <name>append</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>(<name>char</name>)'\\'
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>buffer</name>.
                                                        <name>append</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>(<name>char</name>)
                                                                <name>ch</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>buffer</name>
                                                !=
                                                <name>null</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>buffer</name>.
                                                            <name>append</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>(<name>char</name>)
                                                                    <name>ch</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                        </then>
                                    </if>
                                </else>
                            </if>
                            }
                        </block>
                    </for>
                    <return>return
                        <expr>
                            <name>buffer</name>
                            != <name>null</name> ?
                            <call>
                                <name><name>buffer</name>.
                                    <name>toString</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            :
                            <name>literal</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">// ================================================================</comment>

            <function>
                <type>
                    <specifier>static</specifier>
                    <name>void</name>
                </type>
                <name>dumpString</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>v</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <call>
                                    <name><name>v</name>.
                                        <name>length</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr>
                                <name>i</name>
                                ++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>System</name>.<name>out</name>.
                                            <name>print</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>Integer</name>.
                                                            <name>toHexString</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>v</name>.
                                                                            <name>charAt</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>i</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>System</name>.<name>out</name>.
                                            <name>print</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>" "</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </for>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>System</name>.<name>out</name>.
                                    <name>println</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            }
        </block>
    </class>
</unit>
