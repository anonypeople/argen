<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\jaxp\SAXParserFactoryImpl.java">
    <comment type="block">/*
        * Copyright 2000-2002,2004,2005 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.
            <name>jaxp</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Hashtable</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>javax</name>.<name>xml</name>.
            <name>XMLConstants</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>javax</name>.<name>xml</name>.<name>parsers</name>.
            <name>ParserConfigurationException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>javax</name>.<name>xml</name>.<name>parsers</name>.
            <name>SAXParser</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>javax</name>.<name>xml</name>.<name>parsers</name>.
            <name>SAXParserFactory</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>javax</name>.<name>xml</name>.<name>validation</name>.
            <name>Schema</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>xml</name>.<name>sax</name>.
            <name>SAXException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>xml</name>.<name>sax</name>.
            <name>SAXNotRecognizedException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>xml</name>.<name>sax</name>.
            <name>SAXNotSupportedException</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * This is the implementation specific class for the
        * &lt;code&gt;javax.xml.parsers.SAXParserFactory&lt;/code&gt;. This is the platform
        * default implementation for the platform.
        *
        * @author Rajiv Mordani
        * @author Edwin Goei
        *
        * @version $Id: SAXParserFactoryImpl.java,v 1.12 2005/06/10 03:20:41 mrglavas Exp $
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>SAXParserFactoryImpl</name>
        <super>
            <extends>extends
                <name>SAXParserFactory</name>
            </extends>
        </super>
        <block>{
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Hashtable</name>
                    </type>
                    <name>features</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Schema</name>
                    </type>
                    <name>grammar</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>boolean</name>
                    </type>
                    <name>isXIncludeAware</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * State of the secure processing feature, initially &lt;code&gt;false&lt;/code&gt;
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fSecureProcess</name> =
                    <init>
                        <expr>false</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Creates a new instance of &lt;code&gt;SAXParser&lt;/code&gt; using the currently
                * configured factory parameters.
                * @return javax.xml.parsers.SAXParser
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>SAXParser</name>
                </type>
                <name>newSAXParser</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>ParserConfigurationException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>SAXParser</name>
                            </type>
                            <name>saxParserImpl</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>saxParserImpl</name>
                                    = new
                                    <call>
                                        <name>SAXParserImpl</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>this</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>features</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>fSecureProcess</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>SAXException</name>
                                    </type>
                                    <name>se</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <comment type="line">// Translate to ParserConfigurationException</comment>
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>ParserConfigurationException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>se</name>.
                                                                <name>getMessage</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>
                    <return>return
                        <expr>
                            <name>saxParserImpl</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Common code for translating exceptions
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>SAXParserImpl</name>
                </type>
                <name>newSAXParserImpl</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>ParserConfigurationException</name>
                        </expr>
                    </argument>
                    ,
                    <argument>
                        <expr>
                            <name>SAXNotRecognizedException</name>
                        </expr>
                    </argument>
                    ,
                    <argument>
                        <expr>
                            <name>SAXNotSupportedException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>SAXParserImpl</name>
                            </type>
                            <name>saxParserImpl</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>saxParserImpl</name>
                                    = new
                                    <call>
                                        <name>SAXParserImpl</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>this</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>features</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>SAXNotSupportedException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <throw>throw
                                    <expr>
                                        <name>e</name>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>SAXNotRecognizedException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <throw>throw
                                    <expr>
                                        <name>e</name>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>SAXException</name>
                                    </type>
                                    <name>se</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>ParserConfigurationException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>se</name>.
                                                                <name>getMessage</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>
                    <return>return
                        <expr>
                            <name>saxParserImpl</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the particular feature in the underlying implementation of
                * org.xml.sax.XMLReader.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setFeature</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>ParserConfigurationException</name>
                        </expr>
                    </argument>
                    ,
                    <argument>
                        <expr>
                            <name>SAXNotRecognizedException</name>
                        </expr>
                    </argument>
                    ,
                    <argument>
                        <expr>
                            <name>SAXNotSupportedException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>name</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>NullPointerException</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">// If this is the secure processing feature, save it then return.</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>name</name>.
                                        <name>equals</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>XMLConstants</name>.
                                                    <name>FEATURE_SECURE_PROCESSING</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fSecureProcess</name>
                                        =
                                        <name>value</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// XXX This is ugly. We have to collect the features and then</comment>
                    <comment type="line">// later create an XMLReader to verify the features.</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>features</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>features</name>
                                        = new
                                        <call>
                                            <name>Hashtable</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>features</name>.
                                    <name>put</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>name</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>value</name>
                                            ?
                                            <name><name>Boolean</name>.
                                                <name>TRUE</name>
                                            </name>
                                            :
                                            <name><name>Boolean</name>.
                                                <name>FALSE</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// Test the feature by possibly throwing SAX exceptions</comment>
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>newSAXParserImpl</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>SAXNotSupportedException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>features</name>.
                                                <name>remove</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>name</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <throw>throw
                                    <expr>
                                        <name>e</name>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>SAXNotRecognizedException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>features</name>.
                                                <name>remove</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>name</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <throw>throw
                                    <expr>
                                        <name>e</name>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * returns the particular property requested for in the underlying
                * implementation of org.xml.sax.XMLReader.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>getFeature</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>ParserConfigurationException</name>
                        </expr>
                    </argument>
                    ,
                    <argument>
                        <expr>
                            <name>SAXNotRecognizedException</name>
                        </expr>
                    </argument>
                    ,
                    <argument>
                        <expr>
                            <name>SAXNotSupportedException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>name</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>NullPointerException</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>name</name>.
                                        <name>equals</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>XMLConstants</name>.
                                                    <name>FEATURE_SECURE_PROCESSING</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>fSecureProcess</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">// Check for valid name by creating a dummy XMLReader to get</comment>
                    <comment type="line">// feature value</comment>
                    <return>return
                        <expr>
                            <call>
                                <name>newSAXParserImpl</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>getXMLReader</name>
                                <argument_list>()</argument_list>
                            </call>
                            .
                            <call>
                                <name>getFeature</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>name</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Schema</name>
                </type>
                <name>getSchema</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>grammar</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSchema</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Schema</name>
                            </type>
                            <name>grammar</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>grammar</name>
                            </name>
                            =
                            <name>grammar</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isXIncludeAware</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>isXIncludeAware</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setXIncludeAware</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>state</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>isXIncludeAware</name>
                            </name>
                            =
                            <name>state</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            }
        </block>
    </class>
</unit>
