<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\impl\xs\SchemaGrammar.java">
    <comment type="block">/*
        * Copyright 2001-2004 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.
            <name>xs</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Vector</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.
            <name>Constants</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>dv</name>.
            <name>SchemaDVFactory</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>dv</name>.
            <name>ValidatedInfo</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>dv</name>.
            <name>XSSimpleType</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xs</name>.<name>
            identity</name>.
            <name>IdentityConstraint</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xs</name>.<name>
            util</name>.
            <name>SimpleLocator</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xs</name>.<name>
            util</name>.
            <name>StringListImpl</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xs</name>.<name>
            util</name>.
            <name>XSNamedMap4Types</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xs</name>.<name>
            util</name>.
            <name>XSNamedMapImpl</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xs</name>.<name>
            util</name>.
            <name>XSObjectListImpl</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>parsers</name>.
            <name>DOMParser</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>parsers</name>.
            <name>IntegratedParserConfiguration</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>parsers</name>.
            <name>SAXParser</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>SymbolHash</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>SymbolTable</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>NamespaceContext</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>grammars</name>.
            <name>XMLGrammarDescription</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>grammars</name>.
            <name>XSGrammar</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.
            <name>StringList</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.
            <name>XSAnnotation</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.
            <name>XSAttributeDeclaration</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.
            <name>XSAttributeGroupDefinition</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.
            <name>XSConstants</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.
            <name>XSElementDeclaration</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.
            <name>XSModel</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.
            <name>XSModelGroupDefinition</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.
            <name>XSNamedMap</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.
            <name>XSNamespaceItem</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.
            <name>XSNotationDeclaration</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.
            <name>XSObjectList</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.
            <name>XSParticle</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.
            <name>XSTypeDefinition</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.
            <name>XSWildcard</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * This class is to hold all schema component declaration that are declared
        * within one namespace.
        *
        * The Grammar class this class extends contains what little
        * commonality there is between XML Schema and DTD grammars. It's
        * useful to distinguish grammar objects from other kinds of object
        * when they exist in pools or caches.
        *
        * @xerces.internal
        *
        * @author Sandy Gao, IBM
        * @author Elena Litani, IBM
        *
        * @version $Id: SchemaGrammar.java,v 1.42 2004/12/15 23:48:48 mrglavas Exp $
        */
    </comment>

    <class>
        <specifier>public</specifier>
        class <name>SchemaGrammar</name>
        <super>
            <implements>implements <name>XSGrammar</name>,
                <name>XSNamespaceItem</name>
            </implements>
        </super>
        <block>{

            <comment type="line">// the target namespace of grammar</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <name>String</name>
                    </type>
                    <name>fTargetNamespace</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// global decls: map from decl name to decl object</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <name>SymbolHash</name>
                    </type>
                    <name>fGlobalAttrDecls</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <name>SymbolHash</name>
                    </type>
                    <name>fGlobalAttrGrpDecls</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <name>SymbolHash</name>
                    </type>
                    <name>fGlobalElemDecls</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <name>SymbolHash</name>
                    </type>
                    <name>fGlobalGroupDecls</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <name>SymbolHash</name>
                    </type>
                    <name>fGlobalNotationDecls</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <name>SymbolHash</name>
                    </type>
                    <name>fGlobalIDConstraintDecls</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <name>SymbolHash</name>
                    </type>
                    <name>fGlobalTypeDecls</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// the XMLGrammarDescription member</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <name>XSDDescription</name>
                    </type>
                    <name>fGrammarDescription</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// annotations associated with the "root" schema of this targetNamespace</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <name>XSAnnotationImpl</name>
                        <index>[]</index>
                    </type>
                    <name>fAnnotations</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// number of annotations declared</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <name>int</name>
                    </type>
                    <name>fNumAnnotations</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// symbol table for constructing parsers (annotation support)</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>SymbolTable</name>
                    </type>
                    <name>fSymbolTable</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="line">// parsers for annotation support</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>SAXParser</name>
                    </type>
                    <name>fSAXParser</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>DOMParser</name>
                    </type>
                    <name>fDOMParser</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">//</comment>
            <comment type="line">// Constructors</comment>
            <comment type="line">//</comment>

            <comment type="line">// needed to make BuiltinSchemaGrammar work.</comment>
            <constructor>
                <specifier>protected</specifier>
                <name>SchemaGrammar</name>
                <parameter_list>()</parameter_list>
                <block>{}</block>
            </constructor>

            <comment type="javadoc">/**
                * Default constructor.
                *
                * @param targetNamespace
                * @param grammarDesc the XMLGrammarDescription corresponding to this objec
                * at the least a systemId should always be known.
                * @param symbolTable needed for annotation support
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>SchemaGrammar</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>targetNamespace</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XSDDescription</name>
                            </type>
                            <name>grammarDesc</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>SymbolTable</name>
                            </type>
                            <name>symbolTable</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fTargetNamespace</name>
                            =
                            <name>targetNamespace</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fGrammarDescription</name>
                            =
                            <name>grammarDesc</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fSymbolTable</name>
                            =
                            <name>symbolTable</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// REVISIT: do we know the numbers of the following global decls</comment>
                    <comment type="line">// when creating this grammar? If so, we can pass the numbers in,</comment>
                    <comment type="line">// and use that number to initialize the following hashtables.</comment>
                    <expr_stmt>
                        <expr>
                            <name>fGlobalAttrDecls</name>
                            = new
                            <call>
                                <name>SymbolHash</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fGlobalAttrGrpDecls</name>
                            = new
                            <call>
                                <name>SymbolHash</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fGlobalElemDecls</name>
                            = new
                            <call>
                                <name>SymbolHash</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fGlobalGroupDecls</name>
                            = new
                            <call>
                                <name>SymbolHash</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fGlobalNotationDecls</name>
                            = new
                            <call>
                                <name>SymbolHash</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fGlobalIDConstraintDecls</name>
                            = new
                            <call>
                                <name>SymbolHash</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// if we are parsing S4S, put built-in types in first</comment>
                    <comment type="line">// they might get overwritten by the types from S4S, but that's</comment>
                    <comment type="line">// considered what the application wants to do.</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fTargetNamespace</name>
                                ==
                                <name><name>SchemaSymbols</name>.
                                    <name>URI_SCHEMAFORSCHEMA</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <name>fGlobalTypeDecls</name>
                                    =
                                    <call>
                                        <name><name>SG_SchemaNS</name>.<name>fGlobalTypeDecls</name>.
                                            <name>makeClone</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                        <else>else
                            <expr_stmt>
                                <expr>
                                    <name>fGlobalTypeDecls</name>
                                    = new
                                    <call>
                                        <name>SymbolHash</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </else>
                    </if>
                    }
                </block>
            </constructor>
            <comment type="line">// &lt;init&gt;(String, XSDDescription)</comment>

            <comment type="line">// number of built-in XSTypes we need to create for base and full</comment>
            <comment type="line">// datatype set</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>BASICSET_COUNT</name> =
                    <init>
                        <expr>29</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>FULLSET_COUNT</name>  =
                    <init>
                        <expr>46</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>GRAMMAR_XS</name>  =
                    <init>
                        <expr>1</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>GRAMMAR_XSI</name> =
                    <init>
                        <expr>2</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// this class makes sure the static, built-in schema grammars</comment>
            <comment type="line">// are immutable.</comment>
            <class>
                <specifier>public</specifier>
                <specifier>static</specifier> class <name>BuiltinSchemaGrammar</name>
                <super>
                    <extends>extends
                        <name>SchemaGrammar</name>
                    </extends>
                </super>
                <block>{
                    <comment type="javadoc">/**
                        * Special constructor to create the grammars for the schema namespaces
                        *
                        * @param grammar
                        */
                    </comment>
                    <constructor>
                        <specifier>public</specifier>
                        <name>BuiltinSchemaGrammar</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>grammar</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>SchemaDVFactory</name>
                                    </type>
                                    <name>schemaFactory</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>SchemaDVFactory</name>.
                                                    <name>getInstance</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>

                            <if>if
                                <condition>(
                                    <expr>
                                        <name>grammar</name>
                                        ==
                                        <name>GRAMMAR_XS</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <comment type="line">// target namespace</comment>
                                        <expr_stmt>
                                            <expr>
                                                <name>fTargetNamespace</name>
                                                =
                                                <name><name>SchemaSymbols</name>.
                                                    <name>URI_SCHEMAFORSCHEMA</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>

                                        <comment type="line">// grammar description</comment>
                                        <expr_stmt>
                                            <expr>
                                                <name>fGrammarDescription</name>
                                                = new
                                                <call>
                                                    <name>XSDDescription</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>fGrammarDescription</name>.
                                                    <name>fContextType</name>
                                                </name>
                                                =
                                                <name><name>XSDDescription</name>.
                                                    <name>CONTEXT_PREPARSE</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fGrammarDescription</name>.
                                                        <name>setNamespace</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>SchemaSymbols</name>.
                                                                    <name>URI_SCHEMAFORSCHEMA</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>

                                        <comment type="line">// no global decls other than types</comment>
                                        <expr_stmt>
                                            <expr>
                                                <name>fGlobalAttrDecls</name>
                                                = new
                                                <call>
                                                    <name>SymbolHash</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>1</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>fGlobalAttrGrpDecls</name>
                                                = new
                                                <call>
                                                    <name>SymbolHash</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>1</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>fGlobalElemDecls</name>
                                                = new
                                                <call>
                                                    <name>SymbolHash</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>1</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>fGlobalGroupDecls</name>
                                                = new
                                                <call>
                                                    <name>SymbolHash</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>1</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>fGlobalNotationDecls</name>
                                                = new
                                                <call>
                                                    <name>SymbolHash</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>1</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>fGlobalIDConstraintDecls</name>
                                                = new
                                                <call>
                                                    <name>SymbolHash</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>1</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>

                                        <comment type="line">// get all built-in types</comment>
                                        <expr_stmt>
                                            <expr>
                                                <name>fGlobalTypeDecls</name>
                                                =
                                                <call>
                                                    <name><name>schemaFactory</name>.
                                                        <name>getBuiltInTypes</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <comment type="line">// add anyType</comment>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fGlobalTypeDecls</name>.
                                                        <name>put</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>fAnyType</name>.
                                                                        <name>getName</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>fAnyType</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>grammar</name>
                                                ==
                                                <name>GRAMMAR_XSI</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <comment type="line">// target namespace</comment>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>fTargetNamespace</name>
                                                        =
                                                        <name><name>SchemaSymbols</name>.
                                                            <name>URI_XSI</name>
                                                        </name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <comment type="line">// grammar description</comment>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>fGrammarDescription</name>
                                                        = new
                                                        <call>
                                                            <name>XSDDescription</name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name><name>fGrammarDescription</name>.
                                                            <name>fContextType</name>
                                                        </name>
                                                        =
                                                        <name><name>XSDDescription</name>.
                                                            <name>CONTEXT_PREPARSE</name>
                                                        </name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>fGrammarDescription</name>.
                                                                <name>setNamespace</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>SchemaSymbols</name>.
                                                                            <name>URI_XSI</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>

                                                <comment type="line">// no global decls other than attributes</comment>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>fGlobalAttrGrpDecls</name>
                                                        = new
                                                        <call>
                                                            <name>SymbolHash</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>1</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>fGlobalElemDecls</name>
                                                        = new
                                                        <call>
                                                            <name>SymbolHash</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>1</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>fGlobalGroupDecls</name>
                                                        = new
                                                        <call>
                                                            <name>SymbolHash</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>1</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>fGlobalNotationDecls</name>
                                                        = new
                                                        <call>
                                                            <name>SymbolHash</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>1</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>fGlobalIDConstraintDecls</name>
                                                        = new
                                                        <call>
                                                            <name>SymbolHash</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>1</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>fGlobalTypeDecls</name>
                                                        = new
                                                        <call>
                                                            <name>SymbolHash</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>1</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>

                                                <comment type="line">// 4 attributes, so initialize the size as 4*2 =
                                                    8
                                                </comment>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>fGlobalAttrDecls</name>
                                                        = new
                                                        <call>
                                                            <name>SymbolHash</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>8</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>String</name>
                                                        </type>
                                                        <name>name</name> =
                                                        <init>
                                                            <expr>
                                                                <name>null</name>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>String</name>
                                                        </type>
                                                        <name>tns</name> =
                                                        <init>
                                                            <expr>
                                                                <name>null</name>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>XSSimpleType</name>
                                                        </type>
                                                        <name>type</name> =
                                                        <init>
                                                            <expr>
                                                                <name>null</name>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>short</name>
                                                        </type>
                                                        <name>scope</name> =
                                                        <init>
                                                            <expr>
                                                                <name><name>XSConstants</name>.
                                                                    <name>SCOPE_GLOBAL</name>
                                                                </name>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>

                                                <comment type="line">// xsi:type</comment>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>name</name>
                                                        =
                                                        <name><name>SchemaSymbols</name>.
                                                            <name>XSI_TYPE</name>
                                                        </name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>tns</name>
                                                        =
                                                        <name><name>SchemaSymbols</name>.
                                                            <name>URI_XSI</name>
                                                        </name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>type</name>
                                                        =
                                                        <call>
                                                            <name><name>schemaFactory</name>.
                                                                <name>getBuiltInType</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>SchemaSymbols</name>.
                                                                            <name>ATTVAL_QNAME</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>fGlobalAttrDecls</name>.
                                                                <name>put</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>name</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>new
                                                                        <call>
                                                                            <name>BuiltinAttrDecl</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>name</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>tns</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>type</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>scope</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>

                                                <comment type="line">// xsi:nil</comment>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>name</name>
                                                        =
                                                        <name><name>SchemaSymbols</name>.
                                                            <name>XSI_NIL</name>
                                                        </name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>tns</name>
                                                        =
                                                        <name><name>SchemaSymbols</name>.
                                                            <name>URI_XSI</name>
                                                        </name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>type</name>
                                                        =
                                                        <call>
                                                            <name><name>schemaFactory</name>.
                                                                <name>getBuiltInType</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>SchemaSymbols</name>.
                                                                            <name>ATTVAL_BOOLEAN</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>fGlobalAttrDecls</name>.
                                                                <name>put</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>name</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>new
                                                                        <call>
                                                                            <name>BuiltinAttrDecl</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>name</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>tns</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>type</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>scope</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>

                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>XSSimpleType</name>
                                                        </type>
                                                        <name>anyURI</name> =
                                                        <init>
                                                            <expr>
                                                                <call>
                                                                    <name><name>schemaFactory</name>.
                                                                        <name>getBuiltInType</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>SchemaSymbols</name>.
                                                                                    <name>ATTVAL_ANYURI</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>

                                                <comment type="line">// xsi:schemaLocation</comment>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>name</name>
                                                        =
                                                        <name><name>SchemaSymbols</name>.
                                                            <name>XSI_SCHEMALOCATION</name>
                                                        </name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>tns</name>
                                                        =
                                                        <name><name>SchemaSymbols</name>.
                                                            <name>URI_XSI</name>
                                                        </name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>type</name>
                                                        =
                                                        <call>
                                                            <name><name>schemaFactory</name>.
                                                                <name>createTypeList</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>null</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>SchemaSymbols</name>.
                                                                            <name>URI_XSI</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>(<name>short</name>)0
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>anyURI</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>null</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>fGlobalAttrDecls</name>.
                                                                <name>put</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>name</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>new
                                                                        <call>
                                                                            <name>BuiltinAttrDecl</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>name</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>tns</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>type</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>scope</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>

                                                <comment type="line">// xsi:noNamespaceSchemaLocation</comment>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>name</name>
                                                        =
                                                        <name><name>SchemaSymbols</name>.
                                                            <name>XSI_NONAMESPACESCHEMALOCATION</name>
                                                        </name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>tns</name>
                                                        =
                                                        <name><name>SchemaSymbols</name>.
                                                            <name>URI_XSI</name>
                                                        </name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>type</name>
                                                        =
                                                        <name>anyURI</name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>fGlobalAttrDecls</name>.
                                                                <name>put</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>name</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>new
                                                                        <call>
                                                                            <name>BuiltinAttrDecl</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>name</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>tns</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>type</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>scope</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                </else>
                            </if>
                            }
                        </block>
                    </constructor>
                    <comment type="line">// &lt;init&gt;(int)</comment>

                    <comment type="line">// return the XMLGrammarDescription corresponding to this</comment>
                    <comment type="line">// object</comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>XMLGrammarDescription</name>
                        </type>
                        <name>getGrammarDescription</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>fGrammarDescription</name>.
                                            <name>makeClone</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    <comment type="line">// getGrammarDescription(): XMLGrammarDescription</comment>

                    <comment type="line">// override these methods solely so that these</comment>
                    <comment type="line">// objects cannot be modified once they're created.</comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>setImportedGrammars</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Vector</name>
                                    </type>
                                    <name>importedGrammars</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <comment type="line">// ignore</comment>
                            }
                        </block>
                    </function>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>addGlobalAttributeDecl</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>XSAttributeDecl</name>
                                    </type>
                                    <name>decl</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <comment type="line">// ignore</comment>
                            }
                        </block>
                    </function>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>addGlobalAttributeGroupDecl</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>XSAttributeGroupDecl</name>
                                    </type>
                                    <name>decl</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <comment type="line">// ignore</comment>
                            }
                        </block>
                    </function>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>addGlobalElementDecl</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>XSElementDecl</name>
                                    </type>
                                    <name>decl</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <comment type="line">// ignore</comment>
                            }
                        </block>
                    </function>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>addGlobalGroupDecl</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>XSGroupDecl</name>
                                    </type>
                                    <name>decl</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <comment type="line">// ignore</comment>
                            }
                        </block>
                    </function>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>addGlobalNotationDecl</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>XSNotationDecl</name>
                                    </type>
                                    <name>decl</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <comment type="line">// ignore</comment>
                            }
                        </block>
                    </function>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>addGlobalTypeDecl</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>XSTypeDefinition</name>
                                    </type>
                                    <name>decl</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <comment type="line">// ignore</comment>
                            }
                        </block>
                    </function>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>addComplexTypeDecl</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>XSComplexTypeDecl</name>
                                    </type>
                                    <name>decl</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>SimpleLocator</name>
                                    </type>
                                    <name>locator</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <comment type="line">// ignore</comment>
                            }
                        </block>
                    </function>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>addRedefinedGroupDecl</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>XSGroupDecl</name>
                                    </type>
                                    <name>derived</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>XSGroupDecl</name>
                                    </type>
                                    <name>base</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>SimpleLocator</name>
                                    </type>
                                    <name>locator</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <comment type="line">// ignore</comment>
                            }
                        </block>
                    </function>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <specifier>synchronized</specifier>
                            <name>void</name>
                        </type>
                        <name>addDocument</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Object</name>
                                    </type>
                                    <name>document</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>location</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <comment type="line">// ignore</comment>
                            }
                        </block>
                    </function>

                    <comment type="line">// annotation support</comment>
                    <function>
                        <type>
                            <specifier>synchronized</specifier>
                            <name>DOMParser</name>
                        </type>
                        <name>getDOMParser</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name>null</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    <function>
                        <type>
                            <specifier>synchronized</specifier>
                            <name>SAXParser</name>
                        </type>
                        <name>getSAXParser</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name>null</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>

            <comment type="javadoc">/**
                * &lt;p&gt;A partial schema for schemas for validating annotations.&lt;/p&gt;
                *
                * @xerces.internal
                *
                * @author Michael Glavassevich, IBM
                */
            </comment>
            <class>
                <specifier>public</specifier>
                <specifier>static</specifier>
                <specifier>final</specifier> class <name>Schema4Annotations</name>
                <super>
                    <extends>extends
                        <name>SchemaGrammar</name>
                    </extends>
                </super>
                <block>{

                    <comment type="javadoc">/**
                        * Special constructor to create a schema
                        * capable of validating annotations.
                        */
                    </comment>
                    <constructor>
                        <specifier>public</specifier>
                        <name>Schema4Annotations</name>
                        <parameter_list>()</parameter_list>
                        <block>{

                            <comment type="line">// target namespace</comment>
                            <expr_stmt>
                                <expr>
                                    <name>fTargetNamespace</name>
                                    =
                                    <name><name>SchemaSymbols</name>.
                                        <name>URI_SCHEMAFORSCHEMA</name>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>

                            <comment type="line">// grammar description</comment>
                            <expr_stmt>
                                <expr>
                                    <name>fGrammarDescription</name>
                                    = new
                                    <call>
                                        <name>XSDDescription</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>fGrammarDescription</name>.
                                        <name>fContextType</name>
                                    </name>
                                    =
                                    <name><name>XSDDescription</name>.
                                        <name>CONTEXT_PREPARSE</name>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fGrammarDescription</name>.
                                            <name>setNamespace</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>SchemaSymbols</name>.
                                                        <name>URI_SCHEMAFORSCHEMA</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>

                            <comment type="line">// no global decls other than types and</comment>
                            <comment type="line">// element declarations for &lt;annotation&gt;, &lt;documentation&gt;
                                and &lt;appinfo&gt;.
                            </comment>
                            <expr_stmt>
                                <expr>
                                    <name>fGlobalAttrDecls</name>
                                    = new
                                    <call>
                                        <name>SymbolHash</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>1</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>fGlobalAttrGrpDecls</name>
                                    = new
                                    <call>
                                        <name>SymbolHash</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>1</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>fGlobalElemDecls</name>
                                    = new
                                    <call>
                                        <name>SymbolHash</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>6</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>fGlobalGroupDecls</name>
                                    = new
                                    <call>
                                        <name>SymbolHash</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>1</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>fGlobalNotationDecls</name>
                                    = new
                                    <call>
                                        <name>SymbolHash</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>1</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>fGlobalIDConstraintDecls</name>
                                    = new
                                    <call>
                                        <name>SymbolHash</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>1</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>

                            <comment type="line">// get all built-in types</comment>
                            <expr_stmt>
                                <expr>
                                    <name>fGlobalTypeDecls</name>
                                    =
                                    <name><name>SG_SchemaNS</name>.
                                        <name>fGlobalTypeDecls</name>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>

                            <comment type="line">// create element declarations for &lt;annotation&gt;, &lt;documentation&gt;
                                and &lt;appinfo&gt;</comment>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>XSElementDecl</name>
                                    </type>
                                    <name>annotationDecl</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name>createAnnotationElementDecl</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>SchemaSymbols</name>.
                                                                <name>ELT_ANNOTATION</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>XSElementDecl</name>
                                    </type>
                                    <name>documentationDecl</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name>createAnnotationElementDecl</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>SchemaSymbols</name>.
                                                                <name>ELT_DOCUMENTATION</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>XSElementDecl</name>
                                    </type>
                                    <name>appinfoDecl</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name>createAnnotationElementDecl</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>SchemaSymbols</name>.
                                                                <name>ELT_APPINFO</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>

                            <comment type="line">// add global element declarations</comment>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fGlobalElemDecls</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>annotationDecl</name>.
                                                        <name>fName</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>annotationDecl</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fGlobalElemDecls</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>documentationDecl</name>.
                                                        <name>fName</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>documentationDecl</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fGlobalElemDecls</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>appinfoDecl</name>.
                                                        <name>fName</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>appinfoDecl</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>

                            <comment type="line">// create complex type declarations for &lt;annotation&gt;, &lt;documentation&gt;
                                and &lt;appinfo&gt;</comment>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>XSComplexTypeDecl</name>
                                    </type>
                                    <name>annotationType</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>XSComplexTypeDecl</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>XSComplexTypeDecl</name>
                                    </type>
                                    <name>documentationType</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>XSComplexTypeDecl</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>XSComplexTypeDecl</name>
                                    </type>
                                    <name>appinfoType</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>XSComplexTypeDecl</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>

                            <comment type="line">// set the types on their element declarations</comment>
                            <expr_stmt>
                                <expr>
                                    <name><name>annotationDecl</name>.
                                        <name>fType</name>
                                    </name>
                                    =
                                    <name>annotationType</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>documentationDecl</name>.
                                        <name>fType</name>
                                    </name>
                                    =
                                    <name>documentationType</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>appinfoDecl</name>.
                                        <name>fType</name>
                                    </name>
                                    =
                                    <name>appinfoType</name>
                                </expr>
                                ;
                            </expr_stmt>

                            <comment type="line">// create attribute groups for &lt;annotation&gt;, &lt;documentation&gt;
                                and &lt;appinfo&gt;</comment>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>XSAttributeGroupDecl</name>
                                    </type>
                                    <name>annotationAttrs</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>XSAttributeGroupDecl</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>XSAttributeGroupDecl</name>
                                    </type>
                                    <name>documentationAttrs</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>XSAttributeGroupDecl</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>XSAttributeGroupDecl</name>
                                    </type>
                                    <name>appinfoAttrs</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>XSAttributeGroupDecl</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>

                            <comment type="line">// fill in attribute groups</comment>
                            <block>{
                                <comment type="line">// create and fill attribute uses for &lt;annotation&gt;, &lt;documentation&gt;
                                    and &lt;appinfo&gt;</comment>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>XSAttributeUseImpl</name>
                                        </type>
                                        <name>annotationIDAttr</name> =
                                        <init>
                                            <expr>new
                                                <call>
                                                    <name>XSAttributeUseImpl</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>annotationIDAttr</name>.
                                            <name>fAttrDecl</name>
                                        </name>
                                        = new
                                        <call>
                                            <name>XSAttributeDecl</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>annotationIDAttr</name>.<name>fAttrDecl</name>.
                                                <name>setValues</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>SchemaSymbols</name>.
                                                            <name>ATT_ID</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>(<name>XSSimpleType</name>)
                                                        <call>
                                                            <name><name>fGlobalTypeDecls</name>.
                                                                <name>get</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>SchemaSymbols</name>.
                                                                            <name>ATTVAL_ID</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>XSConstants</name>.
                                                            <name>VC_NONE</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>XSConstants</name>.
                                                            <name>SCOPE_LOCAL</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>annotationType</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>annotationIDAttr</name>.
                                            <name>fUse</name>
                                        </name>
                                        =
                                        <name><name>SchemaSymbols</name>.
                                            <name>USE_OPTIONAL</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>annotationIDAttr</name>.
                                            <name>fConstraintType</name>
                                        </name>
                                        =
                                        <name><name>XSConstants</name>.
                                            <name>VC_NONE</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>

                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>XSAttributeUseImpl</name>
                                        </type>
                                        <name>documentationSourceAttr</name> =
                                        <init>
                                            <expr>new
                                                <call>
                                                    <name>XSAttributeUseImpl</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>documentationSourceAttr</name>.
                                            <name>fAttrDecl</name>
                                        </name>
                                        = new
                                        <call>
                                            <name>XSAttributeDecl</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>documentationSourceAttr</name>.<name>fAttrDecl</name>.
                                                <name>setValues</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>SchemaSymbols</name>.
                                                            <name>ATT_SOURCE</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>(<name>XSSimpleType</name>)
                                                        <call>
                                                            <name><name>fGlobalTypeDecls</name>.
                                                                <name>get</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>SchemaSymbols</name>.
                                                                            <name>ATTVAL_ANYURI</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>XSConstants</name>.
                                                            <name>VC_NONE</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>XSConstants</name>.
                                                            <name>SCOPE_LOCAL</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>documentationType</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>documentationSourceAttr</name>.
                                            <name>fUse</name>
                                        </name>
                                        =
                                        <name><name>SchemaSymbols</name>.
                                            <name>USE_OPTIONAL</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>documentationSourceAttr</name>.
                                            <name>fConstraintType</name>
                                        </name>
                                        =
                                        <name><name>XSConstants</name>.
                                            <name>VC_NONE</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>

                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>XSAttributeUseImpl</name>
                                        </type>
                                        <name>documentationLangAttr</name> =
                                        <init>
                                            <expr>new
                                                <call>
                                                    <name>XSAttributeUseImpl</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>documentationLangAttr</name>.
                                            <name>fAttrDecl</name>
                                        </name>
                                        = new
                                        <call>
                                            <name>XSAttributeDecl</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>documentationLangAttr</name>.<name>fAttrDecl</name>.
                                                <name>setValues</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"lang".
                                                        <call>
                                                            <name>intern</name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>NamespaceContext</name>.
                                                            <name>XML_URI</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>(<name>XSSimpleType</name>)
                                                        <call>
                                                            <name><name>fGlobalTypeDecls</name>.
                                                                <name>get</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>SchemaSymbols</name>.
                                                                            <name>ATTVAL_LANGUAGE</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>XSConstants</name>.
                                                            <name>VC_NONE</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>XSConstants</name>.
                                                            <name>SCOPE_LOCAL</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>documentationType</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>documentationLangAttr</name>.
                                            <name>fUse</name>
                                        </name>
                                        =
                                        <name><name>SchemaSymbols</name>.
                                            <name>USE_OPTIONAL</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>documentationLangAttr</name>.
                                            <name>fConstraintType</name>
                                        </name>
                                        =
                                        <name><name>XSConstants</name>.
                                            <name>VC_NONE</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>

                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>XSAttributeUseImpl</name>
                                        </type>
                                        <name>appinfoSourceAttr</name> =
                                        <init>
                                            <expr>new
                                                <call>
                                                    <name>XSAttributeUseImpl</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>appinfoSourceAttr</name>.
                                            <name>fAttrDecl</name>
                                        </name>
                                        = new
                                        <call>
                                            <name>XSAttributeDecl</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>appinfoSourceAttr</name>.<name>fAttrDecl</name>.
                                                <name>setValues</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>SchemaSymbols</name>.
                                                            <name>ATT_SOURCE</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>(<name>XSSimpleType</name>)
                                                        <call>
                                                            <name><name>fGlobalTypeDecls</name>.
                                                                <name>get</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>SchemaSymbols</name>.
                                                                            <name>ATTVAL_ANYURI</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>XSConstants</name>.
                                                            <name>VC_NONE</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>XSConstants</name>.
                                                            <name>SCOPE_LOCAL</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>appinfoType</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>appinfoSourceAttr</name>.
                                            <name>fUse</name>
                                        </name>
                                        =
                                        <name><name>SchemaSymbols</name>.
                                            <name>USE_OPTIONAL</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>appinfoSourceAttr</name>.
                                            <name>fConstraintType</name>
                                        </name>
                                        =
                                        <name><name>XSConstants</name>.
                                            <name>VC_NONE</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>

                                <comment type="line">// create lax attribute wildcard for &lt;annotation&gt;, &lt;documentation&gt;
                                    and &lt;appinfo&gt;</comment>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>XSWildcardDecl</name>
                                        </type>
                                        <name>otherAttrs</name> =
                                        <init>
                                            <expr>new
                                                <call>
                                                    <name>XSWildcardDecl</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>otherAttrs</name>.
                                            <name>fNamespaceList</name>
                                        </name>
                                        = new
                                        <name>
                                            <name>String</name>
                                            <index>[]</index>
                                        </name>
                                        <block>{
                                            <expr>
                                                <name>fTargetNamespace</name>
                                            </expr>
                                            ,
                                            <expr>
                                                <name>null</name>
                                            </expr>
                                            }
                                        </block>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>otherAttrs</name>.
                                            <name>fType</name>
                                        </name>
                                        =
                                        <name><name>XSWildcard</name>.
                                            <name>NSCONSTRAINT_NOT</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>otherAttrs</name>.
                                            <name>fProcessContents</name>
                                        </name>
                                        =
                                        <name><name>XSWildcard</name>.
                                            <name>PC_LAX</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>

                                <comment type="line">// add attribute uses and wildcards to attribute groups for &lt;annotation&gt;,
                                    &lt;documentation&gt; and &lt;appinfo&gt;</comment>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>annotationAttrs</name>.
                                                <name>addAttributeUse</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>annotationIDAttr</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>annotationAttrs</name>.
                                            <name>fAttributeWC</name>
                                        </name>
                                        =
                                        <name>otherAttrs</name>
                                    </expr>
                                    ;
                                </expr_stmt>

                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>documentationAttrs</name>.
                                                <name>addAttributeUse</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>documentationSourceAttr</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>documentationAttrs</name>.
                                                <name>addAttributeUse</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>documentationLangAttr</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>documentationAttrs</name>.
                                            <name>fAttributeWC</name>
                                        </name>
                                        =
                                        <name>otherAttrs</name>
                                    </expr>
                                    ;
                                </expr_stmt>

                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>appinfoAttrs</name>.
                                                <name>addAttributeUse</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>appinfoSourceAttr</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>appinfoAttrs</name>.
                                            <name>fAttributeWC</name>
                                        </name>
                                        =
                                        <name>otherAttrs</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>

                            <comment type="line">// create particles for &lt;annotation&gt;</comment>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>XSParticleDecl</name>
                                    </type>
                                    <name>annotationParticle</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name>createUnboundedModelGroupParticle</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>XSModelGroupImpl</name>
                                        </type>
                                        <name>annotationChoice</name> =
                                        <init>
                                            <expr>new
                                                <call>
                                                    <name>XSModelGroupImpl</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>annotationChoice</name>.
                                            <name>fCompositor</name>
                                        </name>
                                        =
                                        <name><name>XSModelGroupImpl</name>.
                                            <name>MODELGROUP_CHOICE</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>annotationChoice</name>.
                                            <name>fParticleCount</name>
                                        </name>
                                        = 2
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>annotationChoice</name>.
                                            <name>fParticles</name>
                                        </name>
                                        = new
                                        <name>
                                            <name>XSParticleDecl</name>
                                            <index>[<expr>2</expr>]
                                            </index>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>annotationChoice</name>.
                                            <name>fParticles</name>
                                            <index>[<expr>0</expr>]
                                            </index>
                                        </name>
                                        =
                                        <call>
                                            <name>createChoiceElementParticle</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>appinfoDecl</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>annotationChoice</name>.
                                            <name>fParticles</name>
                                            <index>[<expr>1</expr>]
                                            </index>
                                        </name>
                                        =
                                        <call>
                                            <name>createChoiceElementParticle</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>documentationDecl</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>annotationParticle</name>.
                                            <name>fValue</name>
                                        </name>
                                        =
                                        <name>annotationChoice</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>

                            <comment type="line">// create wildcard particle for &lt;documentation&gt; and &lt;appinfo&gt;</comment>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>XSParticleDecl</name>
                                    </type>
                                    <name>anyWCSequenceParticle</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name>createUnboundedAnyWildcardSequenceParticle</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>

                            <comment type="line">// fill complex types</comment>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>annotationType</name>.
                                            <name>setValues</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"#AnonType_" +
                                                    <name><name>SchemaSymbols</name>.
                                                        <name>ELT_ANNOTATION</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>fTargetNamespace</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>SchemaGrammar</name>.
                                                        <name>fAnyType</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>XSConstants</name>.
                                                        <name>DERIVATION_RESTRICTION</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>XSConstants</name>.
                                                        <name>DERIVATION_NONE</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <call>(<name>short</name>)
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>XSConstants</name>.
                                                                        <name>DERIVATION_EXTENSION</name>
                                                                    </name>
                                                                    |
                                                                    <name><name>XSConstants</name>.
                                                                        <name>DERIVATION_RESTRICTION</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>XSComplexTypeDecl</name>.
                                                        <name>CONTENTTYPE_ELEMENT</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>false</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>annotationAttrs</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>annotationParticle</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>XSObjectListImpl</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>null</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>0</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>annotationType</name>.
                                            <name>setName</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"#AnonType_" +
                                                    <name><name>SchemaSymbols</name>.
                                                        <name>ELT_ANNOTATION</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>annotationType</name>.
                                            <name>setIsAnonymous</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>

                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>documentationType</name>.
                                            <name>setValues</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"#AnonType_" +
                                                    <name><name>SchemaSymbols</name>.
                                                        <name>ELT_DOCUMENTATION</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>fTargetNamespace</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>SchemaGrammar</name>.
                                                        <name>fAnyType</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>XSConstants</name>.
                                                        <name>DERIVATION_RESTRICTION</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>XSConstants</name>.
                                                        <name>DERIVATION_NONE</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <call>(<name>short</name>)
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>XSConstants</name>.
                                                                        <name>DERIVATION_EXTENSION</name>
                                                                    </name>
                                                                    |
                                                                    <name><name>XSConstants</name>.
                                                                        <name>DERIVATION_RESTRICTION</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>XSComplexTypeDecl</name>.
                                                        <name>CONTENTTYPE_MIXED</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>false</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>documentationAttrs</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>anyWCSequenceParticle</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>XSObjectListImpl</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>null</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>0</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>documentationType</name>.
                                            <name>setName</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"#AnonType_" +
                                                    <name><name>SchemaSymbols</name>.
                                                        <name>ELT_DOCUMENTATION</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>documentationType</name>.
                                            <name>setIsAnonymous</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>

                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>appinfoType</name>.
                                            <name>setValues</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"#AnonType_" +
                                                    <name><name>SchemaSymbols</name>.
                                                        <name>ELT_APPINFO</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>fTargetNamespace</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>SchemaGrammar</name>.
                                                        <name>fAnyType</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>XSConstants</name>.
                                                        <name>DERIVATION_RESTRICTION</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>XSConstants</name>.
                                                        <name>DERIVATION_NONE</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <call>(<name>short</name>)
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>XSConstants</name>.
                                                                        <name>DERIVATION_EXTENSION</name>
                                                                    </name>
                                                                    |
                                                                    <name><name>XSConstants</name>.
                                                                        <name>DERIVATION_RESTRICTION</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>XSComplexTypeDecl</name>.
                                                        <name>CONTENTTYPE_MIXED</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>false</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>appinfoAttrs</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>anyWCSequenceParticle</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>XSObjectListImpl</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>null</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>0</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>appinfoType</name>.
                                            <name>setName</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"#AnonType_" +
                                                    <name><name>SchemaSymbols</name>.
                                                        <name>ELT_APPINFO</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>appinfoType</name>.
                                            <name>setIsAnonymous</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>

                            }
                        </block>
                    </constructor>
                    <comment type="line">// &lt;init&gt;(int)</comment>

                    <comment type="line">// return the XMLGrammarDescription corresponding to this</comment>
                    <comment type="line">// object</comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>XMLGrammarDescription</name>
                        </type>
                        <name>getGrammarDescription</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>fGrammarDescription</name>.
                                            <name>makeClone</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    <comment type="line">// getGrammarDescription(): XMLGrammarDescription</comment>

                    <comment type="line">// override these methods solely so that these</comment>
                    <comment type="line">// objects cannot be modified once they're created.</comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>setImportedGrammars</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Vector</name>
                                    </type>
                                    <name>importedGrammars</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <comment type="line">// ignore</comment>
                            }
                        </block>
                    </function>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>addGlobalAttributeDecl</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>XSAttributeDecl</name>
                                    </type>
                                    <name>decl</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <comment type="line">// ignore</comment>
                            }
                        </block>
                    </function>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>addGlobalAttributeGroupDecl</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>XSAttributeGroupDecl</name>
                                    </type>
                                    <name>decl</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <comment type="line">// ignore</comment>
                            }
                        </block>
                    </function>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>addGlobalElementDecl</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>XSElementDecl</name>
                                    </type>
                                    <name>decl</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <comment type="line">// ignore</comment>
                            }
                        </block>
                    </function>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>addGlobalGroupDecl</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>XSGroupDecl</name>
                                    </type>
                                    <name>decl</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <comment type="line">// ignore</comment>
                            }
                        </block>
                    </function>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>addGlobalNotationDecl</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>XSNotationDecl</name>
                                    </type>
                                    <name>decl</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <comment type="line">// ignore</comment>
                            }
                        </block>
                    </function>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>addGlobalTypeDecl</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>XSTypeDefinition</name>
                                    </type>
                                    <name>decl</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <comment type="line">// ignore</comment>
                            }
                        </block>
                    </function>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>addComplexTypeDecl</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>XSComplexTypeDecl</name>
                                    </type>
                                    <name>decl</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>SimpleLocator</name>
                                    </type>
                                    <name>locator</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <comment type="line">// ignore</comment>
                            }
                        </block>
                    </function>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>addRedefinedGroupDecl</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>XSGroupDecl</name>
                                    </type>
                                    <name>derived</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>XSGroupDecl</name>
                                    </type>
                                    <name>base</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>SimpleLocator</name>
                                    </type>
                                    <name>locator</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <comment type="line">// ignore</comment>
                            }
                        </block>
                    </function>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <specifier>synchronized</specifier>
                            <name>void</name>
                        </type>
                        <name>addDocument</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Object</name>
                                    </type>
                                    <name>document</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>location</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <comment type="line">// ignore</comment>
                            }
                        </block>
                    </function>

                    <comment type="line">// annotation support</comment>
                    <function>
                        <type>
                            <specifier>synchronized</specifier>
                            <name>DOMParser</name>
                        </type>
                        <name>getDOMParser</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name>null</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    <function>
                        <type>
                            <specifier>synchronized</specifier>
                            <name>SAXParser</name>
                        </type>
                        <name>getSAXParser</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name>null</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="line">//</comment>
                    <comment type="line">// private helper methods</comment>
                    <comment type="line">//</comment>

                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>XSElementDecl</name>
                        </type>
                        <name>createAnnotationElementDecl</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>localName</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>XSElementDecl</name>
                                    </type>
                                    <name>eDecl</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>XSElementDecl</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>eDecl</name>.
                                        <name>fName</name>
                                    </name>
                                    =
                                    <name>localName</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>eDecl</name>.
                                        <name>fTargetNamespace</name>
                                    </name>
                                    =
                                    <name>fTargetNamespace</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>eDecl</name>.
                                            <name>setIsGlobal</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>eDecl</name>.
                                        <name>fBlock</name>
                                    </name>
                                    = (
                                    <name><name>XSConstants</name>.
                                        <name>DERIVATION_EXTENSION</name>
                                    </name>
                                    |
                                    <name><name>XSConstants</name>.
                                        <name>DERIVATION_RESTRICTION</name>
                                    </name>
                                    |
                                    <name><name>XSConstants</name>.
                                        <name>DERIVATION_SUBSTITUTION</name>
                                    </name>
                                    )
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>eDecl</name>.
                                            <name>setConstraintType</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>XSConstants</name>.
                                                        <name>VC_NONE</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <return>return
                                <expr>
                                    <name>eDecl</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>XSParticleDecl</name>
                        </type>
                        <name>createUnboundedModelGroupParticle</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>XSParticleDecl</name>
                                    </type>
                                    <name>particle</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>XSParticleDecl</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>particle</name>.
                                        <name>fMinOccurs</name>
                                    </name>
                                    = 0
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>particle</name>.
                                        <name>fMaxOccurs</name>
                                    </name>
                                    =
                                    <name><name>SchemaSymbols</name>.
                                        <name>OCCURRENCE_UNBOUNDED</name>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>particle</name>.
                                        <name>fType</name>
                                    </name>
                                    =
                                    <name><name>XSParticleDecl</name>.
                                        <name>PARTICLE_MODELGROUP</name>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            <return>return
                                <expr>
                                    <name>particle</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>XSParticleDecl</name>
                        </type>
                        <name>createChoiceElementParticle</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>XSElementDecl</name>
                                    </type>
                                    <name>ref</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>XSParticleDecl</name>
                                    </type>
                                    <name>particle</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>XSParticleDecl</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>particle</name>.
                                        <name>fMinOccurs</name>
                                    </name>
                                    = 1
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>particle</name>.
                                        <name>fMaxOccurs</name>
                                    </name>
                                    = 1
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>particle</name>.
                                        <name>fType</name>
                                    </name>
                                    =
                                    <name><name>XSParticleDecl</name>.
                                        <name>PARTICLE_ELEMENT</name>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>particle</name>.
                                        <name>fValue</name>
                                    </name>
                                    =
                                    <name>ref</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <return>return
                                <expr>
                                    <name>particle</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>XSParticleDecl</name>
                        </type>
                        <name>createUnboundedAnyWildcardSequenceParticle</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>XSParticleDecl</name>
                                    </type>
                                    <name>particle</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name>createUnboundedModelGroupParticle</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>XSModelGroupImpl</name>
                                    </type>
                                    <name>sequence</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>XSModelGroupImpl</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>sequence</name>.
                                        <name>fCompositor</name>
                                    </name>
                                    =
                                    <name><name>XSModelGroupImpl</name>.
                                        <name>MODELGROUP_SEQUENCE</name>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>sequence</name>.
                                        <name>fParticleCount</name>
                                    </name>
                                    = 1
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>sequence</name>.
                                        <name>fParticles</name>
                                    </name>
                                    = new
                                    <name>
                                        <name>XSParticleDecl</name>
                                        <index>[<expr>1</expr>]
                                        </index>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>sequence</name>.
                                        <name>fParticles</name>
                                        <index>[<expr>0</expr>]
                                        </index>
                                    </name>
                                    =
                                    <call>
                                        <name>createAnyLaxWildcardParticle</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>particle</name>.
                                        <name>fValue</name>
                                    </name>
                                    =
                                    <name>sequence</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <return>return
                                <expr>
                                    <name>particle</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>XSParticleDecl</name>
                        </type>
                        <name>createAnyLaxWildcardParticle</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>XSParticleDecl</name>
                                    </type>
                                    <name>particle</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>XSParticleDecl</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>particle</name>.
                                        <name>fMinOccurs</name>
                                    </name>
                                    = 1
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>particle</name>.
                                        <name>fMaxOccurs</name>
                                    </name>
                                    = 1
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>particle</name>.
                                        <name>fType</name>
                                    </name>
                                    =
                                    <name><name>XSParticleDecl</name>.
                                        <name>PARTICLE_WILDCARD</name>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>

                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>XSWildcardDecl</name>
                                    </type>
                                    <name>anyWC</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>XSWildcardDecl</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>anyWC</name>.
                                        <name>fNamespaceList</name>
                                    </name>
                                    =
                                    <name>null</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>anyWC</name>.
                                        <name>fType</name>
                                    </name>
                                    =
                                    <name><name>XSWildcard</name>.
                                        <name>NSCONSTRAINT_ANY</name>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>anyWC</name>.
                                        <name>fProcessContents</name>
                                    </name>
                                    =
                                    <name><name>XSWildcard</name>.
                                        <name>PC_LAX</name>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>

                            <expr_stmt>
                                <expr>
                                    <name><name>particle</name>.
                                        <name>fValue</name>
                                    </name>
                                    =
                                    <name>anyWC</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <return>return
                                <expr>
                                    <name>particle</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>

            <comment type="line">// Grammar methods</comment>

            <comment type="line">// return the XMLGrammarDescription corresponding to this</comment>
            <comment type="line">// object</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>XMLGrammarDescription</name>
                </type>
                <name>getGrammarDescription</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fGrammarDescription</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getGrammarDescription(): XMLGrammarDescription</comment>

            <comment type="line">// DTDGrammar methods</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isNamespaceAware</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return <expr>true</expr>;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// isNamespaceAware():boolean</comment>

            <decl_stmt>
                <decl>
                    <type>
                        <name>Vector</name>
                    </type>
                    <name>fImported</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setImportedGrammars</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Vector</name>
                            </type>
                            <name>importedGrammars</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fImported</name>
                            =
                            <name>importedGrammars</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Vector</name>
                </type>
                <name>getImportedGrammars</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fImported</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns this grammar's target namespace.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>final</specifier>
                    <name>String</name>
                </type>
                <name>getTargetNamespace</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fTargetNamespace</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getTargetNamespace():String</comment>

            <comment type="javadoc">/**
                * register one global attribute
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>addGlobalAttributeDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSAttributeDecl</name>
                            </type>
                            <name>decl</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fGlobalAttrDecls</name>.
                                    <name>put</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>decl</name>.
                                                <name>fName</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>decl</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * register one global attribute group
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>addGlobalAttributeGroupDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSAttributeGroupDecl</name>
                            </type>
                            <name>decl</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fGlobalAttrGrpDecls</name>.
                                    <name>put</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>decl</name>.
                                                <name>fName</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>decl</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * register one global element
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>addGlobalElementDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSElementDecl</name>
                            </type>
                            <name>decl</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fGlobalElemDecls</name>.
                                    <name>put</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>decl</name>.
                                                <name>fName</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>decl</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// if there is a substitution group affiliation, store in an array,</comment>
                    <comment type="line">// for further constraint checking: UPA, PD, EDC</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>decl</name>.
                                    <name>fSubGroup</name>
                                </name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fSubGroupCount</name>
                                            ==
                                            <name><name>fSubGroups</name>.
                                                <name>length</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <expr_stmt>
                                            <expr>
                                                <name>fSubGroups</name>
                                                =
                                                <call>
                                                    <name>resize</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>fSubGroups</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr><name>fSubGroupCount</name>+
                                                                <name>INC_SIZE</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                    </then>
                                </if>
                                <expr_stmt>
                                    <expr>
                                        <name>
                                            <name>fSubGroups</name>
                                            <index>[
                                                <expr><name>fSubGroupCount</name>++
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        =
                                        <name>decl</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * register one global group
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>addGlobalGroupDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSGroupDecl</name>
                            </type>
                            <name>decl</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fGlobalGroupDecls</name>.
                                    <name>put</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>decl</name>.
                                                <name>fName</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>decl</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * register one global notation
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>addGlobalNotationDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSNotationDecl</name>
                            </type>
                            <name>decl</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fGlobalNotationDecls</name>.
                                    <name>put</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>decl</name>.
                                                <name>fName</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>decl</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * register one global type
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>addGlobalTypeDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSTypeDefinition</name>
                            </type>
                            <name>decl</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fGlobalTypeDecls</name>.
                                    <name>put</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>decl</name>.
                                                    <name>getName</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>decl</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * register one identity constraint
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>final</specifier>
                    <name>void</name>
                </type>
                <name>addIDConstraintDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSElementDecl</name>
                            </type>
                            <name>elmDecl</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>IdentityConstraint</name>
                            </type>
                            <name>decl</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>elmDecl</name>.
                                    <name>addIDConstraint</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>decl</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fGlobalIDConstraintDecls</name>.
                                    <name>put</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>decl</name>.
                                                    <name>getIdentityConstraintName</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>decl</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * get one global attribute
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>final</specifier>
                    <name>XSAttributeDecl</name>
                </type>
                <name>getGlobalAttributeDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>declName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>(<name>XSAttributeDecl</name>)
                            <call>
                                <name><name>fGlobalAttrDecls</name>.
                                    <name>get</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>declName</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * get one global attribute group
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>final</specifier>
                    <name>XSAttributeGroupDecl</name>
                </type>
                <name>getGlobalAttributeGroupDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>declName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>(<name>XSAttributeGroupDecl</name>)
                            <call>
                                <name><name>fGlobalAttrGrpDecls</name>.
                                    <name>get</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>declName</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * get one global element
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>final</specifier>
                    <name>XSElementDecl</name>
                </type>
                <name>getGlobalElementDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>declName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>(<name>XSElementDecl</name>)
                            <call>
                                <name><name>fGlobalElemDecls</name>.
                                    <name>get</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>declName</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * get one global group
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>final</specifier>
                    <name>XSGroupDecl</name>
                </type>
                <name>getGlobalGroupDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>declName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>(<name>XSGroupDecl</name>)
                            <call>
                                <name><name>fGlobalGroupDecls</name>.
                                    <name>get</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>declName</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * get one global notation
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>final</specifier>
                    <name>XSNotationDecl</name>
                </type>
                <name>getGlobalNotationDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>declName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>(<name>XSNotationDecl</name>)
                            <call>
                                <name><name>fGlobalNotationDecls</name>.
                                    <name>get</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>declName</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * get one global type
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>final</specifier>
                    <name>XSTypeDefinition</name>
                </type>
                <name>getGlobalTypeDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>declName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>(<name>XSTypeDefinition</name>)
                            <call>
                                <name><name>fGlobalTypeDecls</name>.
                                    <name>get</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>declName</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * get one identity constraint
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>final</specifier>
                    <name>IdentityConstraint</name>
                </type>
                <name>getIDConstraintDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>declName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>(<name>IdentityConstraint</name>)
                            <call>
                                <name><name>fGlobalIDConstraintDecls</name>.
                                    <name>get</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>declName</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * get one identity constraint
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>final</specifier>
                    <name>boolean</name>
                </type>
                <name>hasIDConstraints</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>fGlobalIDConstraintDecls</name>.
                                    <name>getLength</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            &gt; 0
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">// array to store complex type decls</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>INITIAL_SIZE</name> =
                    <init>
                        <expr>16</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>INC_SIZE</name>     =
                    <init>
                        <expr>16</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>fCTCount</name> =
                    <init>
                        <expr>0</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>XSComplexTypeDecl</name>
                        <index>[]</index>
                    </type>
                    <name>fComplexTypeDecls</name> =
                    <init>
                        <expr>new
                            <name>
                                <name>XSComplexTypeDecl</name>
                                <index>[
                                    <expr>
                                        <name>INITIAL_SIZE</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>SimpleLocator</name>
                        <index>[]</index>
                    </type>
                    <name>fCTLocators</name> =
                    <init>
                        <expr>new
                            <name>
                                <name>SimpleLocator</name>
                                <index>[
                                    <expr>
                                        <name>INITIAL_SIZE</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// an array to store groups being redefined by restriction</comment>
            <comment type="line">// even-numbered elements are the derived groups, odd-numbered ones their bases
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>REDEFINED_GROUP_INIT_SIZE</name> =
                    <init>
                        <expr>2</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>fRGCount</name> =
                    <init>
                        <expr>0</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>XSGroupDecl</name>
                        <index>[]</index>
                    </type>
                    <name>fRedefinedGroupDecls</name> =
                    <init>
                        <expr>new
                            <name>
                                <name>XSGroupDecl</name>
                                <index>[
                                    <expr>
                                        <name>REDEFINED_GROUP_INIT_SIZE</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>SimpleLocator</name>
                        <index>[]</index>
                    </type>
                    <name>fRGLocators</name> =
                    <init>
                        <expr>new
                            <name>
                                <name>SimpleLocator</name>
                                <index>[
                                    <expr><name>REDEFINED_GROUP_INIT_SIZE</name>/2
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// a flag to indicate whether we have checked the 3 constraints on this</comment>
            <comment type="line">// grammar.</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <name>boolean</name>
                    </type>
                    <name>fFullChecked</name> =
                    <init>
                        <expr>false</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * add one complex type decl: for later constraint checking
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>addComplexTypeDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSComplexTypeDecl</name>
                            </type>
                            <name>decl</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>SimpleLocator</name>
                            </type>
                            <name>locator</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fCTCount</name>
                                ==
                                <name><name>fComplexTypeDecls</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fComplexTypeDecls</name>
                                        =
                                        <call>
                                            <name>resize</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fComplexTypeDecls</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr><name>fCTCount</name>+
                                                        <name>INC_SIZE</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fCTLocators</name>
                                        =
                                        <call>
                                            <name>resize</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fCTLocators</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr><name>fCTCount</name>+
                                                        <name>INC_SIZE</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fCTLocators</name>
                                <index>[
                                    <expr>
                                        <name>fCTCount</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <name>locator</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fComplexTypeDecls</name>
                                <index>[
                                    <expr><name>fCTCount</name>++
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <name>decl</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * add a group redefined by restriction: for later constraint checking
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>addRedefinedGroupDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSGroupDecl</name>
                            </type>
                            <name>derived</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XSGroupDecl</name>
                            </type>
                            <name>base</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>SimpleLocator</name>
                            </type>
                            <name>locator</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fRGCount</name>
                                ==
                                <name><name>fRedefinedGroupDecls</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// double array size each time.</comment>
                                <expr_stmt>
                                    <expr>
                                        <name>fRedefinedGroupDecls</name>
                                        =
                                        <call>
                                            <name>resize</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fRedefinedGroupDecls</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>fRGCount</name>
                                                        &lt;&lt; 1
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fRGLocators</name>
                                        =
                                        <call>
                                            <name>resize</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fRGLocators</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>fRGCount</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fRGLocators</name>
                                <index>[
                                    <expr><name>fRGCount</name>/2
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <name>locator</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fRedefinedGroupDecls</name>
                                <index>[
                                    <expr><name>fRGCount</name>++
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <name>derived</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fRedefinedGroupDecls</name>
                                <index>[
                                    <expr><name>fRGCount</name>++
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <name>base</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * get all complex type decls: for later constraint checking
                */
            </comment>
            <function>
                <type>
                    <specifier>final</specifier>
                    <name>XSComplexTypeDecl</name>
                    <index>[]</index>
                </type>
                <name>getUncheckedComplexTypeDecls</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fCTCount</name>
                                &lt;
                                <name><name>fComplexTypeDecls</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fComplexTypeDecls</name>
                                        =
                                        <call>
                                            <name>resize</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fComplexTypeDecls</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>fCTCount</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fCTLocators</name>
                                        =
                                        <call>
                                            <name>resize</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fCTLocators</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>fCTCount</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>fComplexTypeDecls</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * get the error locator of all complex type decls
                */
            </comment>
            <function>
                <type>
                    <specifier>final</specifier>
                    <name>SimpleLocator</name>
                    <index>[]</index>
                </type>
                <name>getUncheckedCTLocators</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fCTCount</name>
                                &lt;
                                <name><name>fCTLocators</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fComplexTypeDecls</name>
                                        =
                                        <call>
                                            <name>resize</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fComplexTypeDecls</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>fCTCount</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fCTLocators</name>
                                        =
                                        <call>
                                            <name>resize</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fCTLocators</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>fCTCount</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>fCTLocators</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * get all redefined groups: for later constraint checking
                */
            </comment>
            <function>
                <type>
                    <specifier>final</specifier>
                    <name>XSGroupDecl</name>
                    <index>[]</index>
                </type>
                <name>getRedefinedGroupDecls</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fRGCount</name>
                                &lt;
                                <name><name>fRedefinedGroupDecls</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fRedefinedGroupDecls</name>
                                        =
                                        <call>
                                            <name>resize</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fRedefinedGroupDecls</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>fRGCount</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fRGLocators</name>
                                        =
                                        <call>
                                            <name>resize</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fRGLocators</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr><name>fRGCount</name>/2
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>fRedefinedGroupDecls</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * get the error locator of all redefined groups
                */
            </comment>
            <function>
                <type>
                    <specifier>final</specifier>
                    <name>SimpleLocator</name>
                    <index>[]</index>
                </type>
                <name>getRGLocators</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fRGCount</name>
                                &lt;
                                <name><name>fRedefinedGroupDecls</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fRedefinedGroupDecls</name>
                                        =
                                        <call>
                                            <name>resize</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fRedefinedGroupDecls</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>fRGCount</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fRGLocators</name>
                                        =
                                        <call>
                                            <name>resize</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fRGLocators</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr><name>fRGCount</name>/2
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>fRGLocators</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * after the first-round checking, some types don't need to be checked
                * against UPA again. here we trim the array to the proper size.
                */
            </comment>
            <function>
                <type>
                    <specifier>final</specifier>
                    <name>void</name>
                </type>
                <name>setUncheckedTypeNum</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>newSize</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fCTCount</name>
                            =
                            <name>newSize</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fComplexTypeDecls</name>
                            =
                            <call>
                                <name>resize</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>fComplexTypeDecls</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fCTCount</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fCTLocators</name>
                            =
                            <call>
                                <name>resize</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>fCTLocators</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fCTCount</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="line">// used to store all substitution group information declared in</comment>
            <comment type="line">// this namespace</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>fSubGroupCount</name> =
                    <init>
                        <expr>0</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>XSElementDecl</name>
                        <index>[]</index>
                    </type>
                    <name>fSubGroups</name> =
                    <init>
                        <expr>new
                            <name>
                                <name>XSElementDecl</name>
                                <index>[
                                    <expr>
                                        <name>INITIAL_SIZE</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * get all substitution group information: for the 3 constraint checking
                */
            </comment>
            <function>
                <type>
                    <specifier>final</specifier>
                    <name>XSElementDecl</name>
                    <index>[]</index>
                </type>
                <name>getSubstitutionGroups</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fSubGroupCount</name>
                                &lt;
                                <name><name>fSubGroups</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <name>fSubGroups</name>
                                    =
                                    <call>
                                        <name>resize</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>fSubGroups</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>fSubGroupCount</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>fSubGroups</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">// anyType and anySimpleType: because there are so many places where</comment>
            <comment type="line">// we need direct access to these two types</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>XSComplexTypeDecl</name>
                    </type>
                    <name>fAnyType</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>XSAnyType</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <class>
                <specifier>private</specifier>
                <specifier>static</specifier> class <name>XSAnyType</name>
                <super>
                    <extends>extends
                        <name>XSComplexTypeDecl</name>
                    </extends>
                </super>
                <block>{
                    <constructor>
                        <specifier>public</specifier>
                        <name>XSAnyType</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>fName</name>
                                    =
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATTVAL_ANYTYPE</name>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>super</name>.
                                        <name>fTargetNamespace</name>
                                    </name>
                                    =
                                    <name><name>SchemaSymbols</name>.
                                        <name>URI_SCHEMAFORSCHEMA</name>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>fBaseType</name>
                                    =
                                    <name>this</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>fDerivedBy</name>
                                    =
                                    <name><name>XSConstants</name>.
                                        <name>DERIVATION_RESTRICTION</name>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>fContentType</name>
                                    =
                                    <name><name>XSComplexTypeDecl</name>.
                                        <name>CONTENTTYPE_MIXED</name>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>

                            <expr_stmt>
                                <expr>
                                    <name>fParticle</name>
                                    =
                                    <name>null</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>fAttrGrp</name>
                                    =
                                    <name>null</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>

                    <comment type="line">// overridden methods</comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>setValues</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>name</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>targetNamespace</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>XSTypeDefinition</name>
                                    </type>
                                    <name>baseType</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>short</name>
                                    </type>
                                    <name>derivedBy</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>short</name>
                                    </type>
                                    <name>schemaFinal</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>short</name>
                                    </type>
                                    <name>block</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>short</name>
                                    </type>
                                    <name>contentType</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>boolean</name>
                                    </type>
                                    <name>isAbstract</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>XSAttributeGroupDecl</name>
                                    </type>
                                    <name>attrGrp</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>XSSimpleType</name>
                                    </type>
                                    <name>simpleType</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>XSParticleDecl</name>
                                    </type>
                                    <name>particle</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <comment type="line">// don't allow this.</comment>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>setName</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>name</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <comment type="line">// don't allow this.</comment>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>setIsAbstractType</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <comment type="line">// null implementation</comment>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>setContainsTypeID</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <comment type="line">// null implementation</comment>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>setIsAnonymous</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <comment type="line">// null implementation</comment>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>reset</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <comment type="line">// null implementation</comment>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>XSObjectList</name>
                        </type>
                        <name>getAttributeUses</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>new
                                    <call>
                                        <name>XSObjectListImpl</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>0</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>XSAttributeGroupDecl</name>
                        </type>
                        <name>getAttrGrp</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>XSWildcardDecl</name>
                                    </type>
                                    <name>wildcard</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>XSWildcardDecl</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>wildcard</name>.
                                        <name>fProcessContents</name>
                                    </name>
                                    =
                                    <name><name>XSWildcardDecl</name>.
                                        <name>PC_LAX</name>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>XSAttributeGroupDecl</name>
                                    </type>
                                    <name>attrGrp</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>XSAttributeGroupDecl</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>attrGrp</name>.
                                        <name>fAttributeWC</name>
                                    </name>
                                    =
                                    <name>wildcard</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <return>return
                                <expr>
                                    <name>attrGrp</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>XSWildcard</name>
                        </type>
                        <name>getAttributeWildcard</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>XSWildcardDecl</name>
                                    </type>
                                    <name>wildcard</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>XSWildcardDecl</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>wildcard</name>.
                                        <name>fProcessContents</name>
                                    </name>
                                    =
                                    <name><name>XSWildcardDecl</name>.
                                        <name>PC_LAX</name>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            <return>return
                                <expr>
                                    <name>wildcard</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>XSParticle</name>
                        </type>
                        <name>getParticle</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <comment type="line">// the wildcard used in anyType (content and attribute)</comment>
                            <comment type="line">// the spec will change strict to skip for anyType</comment>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>XSWildcardDecl</name>
                                    </type>
                                    <name>wildcard</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>XSWildcardDecl</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>wildcard</name>.
                                        <name>fProcessContents</name>
                                    </name>
                                    =
                                    <name><name>XSWildcardDecl</name>.
                                        <name>PC_LAX</name>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            <comment type="line">// the particle for the content wildcard</comment>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>XSParticleDecl</name>
                                    </type>
                                    <name>particleW</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>XSParticleDecl</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>particleW</name>.
                                        <name>fMinOccurs</name>
                                    </name>
                                    = 0
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>particleW</name>.
                                        <name>fMaxOccurs</name>
                                    </name>
                                    =
                                    <name><name>SchemaSymbols</name>.
                                        <name>OCCURRENCE_UNBOUNDED</name>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>particleW</name>.
                                        <name>fType</name>
                                    </name>
                                    =
                                    <name><name>XSParticleDecl</name>.
                                        <name>PARTICLE_WILDCARD</name>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>particleW</name>.
                                        <name>fValue</name>
                                    </name>
                                    =
                                    <name>wildcard</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <comment type="line">// the model group of a sequence of the above particle</comment>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>XSModelGroupImpl</name>
                                    </type>
                                    <name>group</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>XSModelGroupImpl</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>group</name>.
                                        <name>fCompositor</name>
                                    </name>
                                    =
                                    <name><name>XSModelGroupImpl</name>.
                                        <name>MODELGROUP_SEQUENCE</name>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>group</name>.
                                        <name>fParticleCount</name>
                                    </name>
                                    = 1
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>group</name>.
                                        <name>fParticles</name>
                                    </name>
                                    = new
                                    <name>
                                        <name>XSParticleDecl</name>
                                        <index>[<expr>1</expr>]
                                        </index>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>group</name>.
                                        <name>fParticles</name>
                                        <index>[<expr>0</expr>]
                                        </index>
                                    </name>
                                    =
                                    <name>particleW</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <comment type="line">// the content of anyType: particle of the above model group</comment>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>XSParticleDecl</name>
                                    </type>
                                    <name>particleG</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>XSParticleDecl</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>particleG</name>.
                                        <name>fType</name>
                                    </name>
                                    =
                                    <name><name>XSParticleDecl</name>.
                                        <name>PARTICLE_MODELGROUP</name>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>particleG</name>.
                                        <name>fValue</name>
                                    </name>
                                    =
                                    <name>group</name>
                                </expr>
                                ;
                            </expr_stmt>

                            <return>return
                                <expr>
                                    <name>particleG</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>XSObjectList</name>
                        </type>
                        <name>getAnnotations</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name>null</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>
            <class>
                <specifier>private</specifier>
                <specifier>static</specifier> class <name>BuiltinAttrDecl</name>
                <super>
                    <extends>extends
                        <name>XSAttributeDecl</name>
                    </extends>
                </super>
                <block>{
                    <constructor>
                        <specifier>public</specifier>
                        <name>BuiltinAttrDecl</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>name</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>tns</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>XSSimpleType</name>
                                    </type>
                                    <name>type</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>short</name>
                                    </type>
                                    <name>scope</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>fName</name>
                                    =
                                    <name>name</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>super</name>.
                                        <name>fTargetNamespace</name>
                                    </name>
                                    =
                                    <name>tns</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>fType</name>
                                    =
                                    <name>type</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>fScope</name>
                                    =
                                    <name>scope</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>setValues</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>name</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>targetNamespace</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>XSSimpleType</name>
                                    </type>
                                    <name>simpleType</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>short</name>
                                    </type>
                                    <name>constraintType</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>short</name>
                                    </type>
                                    <name>scope</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>ValidatedInfo</name>
                                    </type>
                                    <name>valInfo</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>XSComplexTypeDecl</name>
                                    </type>
                                    <name>enclosingCT</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <comment type="line">// ignore this call.</comment>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>reset</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <comment type="line">// also ignore this call.</comment>
                            }
                        </block>
                    </function>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>XSAnnotation</name>
                        </type>
                        <name>getAnnotation</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name>null</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>
            <comment type="line">// class BuiltinAttrDecl</comment>

            <comment type="line">// the grammars to hold components of the schema namespace</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>BuiltinSchemaGrammar</name>
                    </type>
                    <name>SG_SchemaNS</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>BuiltinSchemaGrammar</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>GRAMMAR_XS</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>Schema4Annotations</name>
                    </type>
                    <name>SG_Schema4Annotations</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>Schema4Annotations</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>XSSimpleType</name>
                    </type>
                    <name>fAnySimpleType</name> =
                    <init>
                        <expr>(<name>XSSimpleType</name>)
                            <call>
                                <name><name>SG_SchemaNS</name>.
                                    <name>getGlobalTypeDecl</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>SchemaSymbols</name>.
                                                <name>ATTVAL_ANYSIMPLETYPE</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// the grammars to hold components of the schema-instance namespace</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>BuiltinSchemaGrammar</name>
                    </type>
                    <name>SG_XSI</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>BuiltinSchemaGrammar</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>GRAMMAR_XSI</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <function>
                <type>
                    <specifier>static</specifier>
                    <specifier>final</specifier>
                    <name>XSComplexTypeDecl</name>
                    <index>[]</index>
                </type>
                <name>resize</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>XSComplexTypeDecl</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>oldArray</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>newSize</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XSComplexTypeDecl</name>
                                <index>[]</index>
                            </type>
                            <name>newArray</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>XSComplexTypeDecl</name>
                                        <index>[
                                            <expr>
                                                <name>newSize</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>System</name>.
                                    <name>arraycopy</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>oldArray</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>newArray</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>Math</name>.
                                                    <name>min</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>oldArray</name>.
                                                                <name>length</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>newSize</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>newArray</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>static</specifier>
                    <specifier>final</specifier>
                    <name>XSGroupDecl</name>
                    <index>[]</index>
                </type>
                <name>resize</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>XSGroupDecl</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>oldArray</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>newSize</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XSGroupDecl</name>
                                <index>[]</index>
                            </type>
                            <name>newArray</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>XSGroupDecl</name>
                                        <index>[
                                            <expr>
                                                <name>newSize</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>System</name>.
                                    <name>arraycopy</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>oldArray</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>newArray</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>Math</name>.
                                                    <name>min</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>oldArray</name>.
                                                                <name>length</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>newSize</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>newArray</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>static</specifier>
                    <specifier>final</specifier>
                    <name>XSElementDecl</name>
                    <index>[]</index>
                </type>
                <name>resize</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>XSElementDecl</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>oldArray</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>newSize</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XSElementDecl</name>
                                <index>[]</index>
                            </type>
                            <name>newArray</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>XSElementDecl</name>
                                        <index>[
                                            <expr>
                                                <name>newSize</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>System</name>.
                                    <name>arraycopy</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>oldArray</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>newArray</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>Math</name>.
                                                    <name>min</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>oldArray</name>.
                                                                <name>length</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>newSize</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>newArray</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>static</specifier>
                    <specifier>final</specifier>
                    <name>SimpleLocator</name>
                    <index>[]</index>
                </type>
                <name>resize</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>SimpleLocator</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>oldArray</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>newSize</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>SimpleLocator</name>
                                <index>[]</index>
                            </type>
                            <name>newArray</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>SimpleLocator</name>
                                        <index>[
                                            <expr>
                                                <name>newSize</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>System</name>.
                                    <name>arraycopy</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>oldArray</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>newArray</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>Math</name>.
                                                    <name>min</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>oldArray</name>.
                                                                <name>length</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>newSize</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>newArray</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">// XSNamespaceItem methods</comment>

            <comment type="line">// the max index / the max value of XSObject type</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>MAX_COMP_IDX</name> =
                    <init>
                        <expr>
                            <name><name>XSTypeDefinition</name>.
                                <name>SIMPLE_TYPE</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>boolean</name>
                        <index>[]</index>
                    </type>
                    <name>GLOBAL_COMP</name> =
                    <init>
                        <expr>
                            <block>{<expr>false</expr>,
                                <comment type="line">// null</comment>
                                <expr>true</expr>,
                                <comment type="line">// attribute</comment>
                                <expr>true</expr>,
                                <comment type="line">// element</comment>
                                <expr>true</expr>,
                                <comment type="line">// type</comment>
                                <expr>false</expr>,
                                <comment type="line">// attribute use</comment>
                                <expr>true</expr>,
                                <comment type="line">// attribute group</comment>
                                <expr>true</expr>,
                                <comment type="line">// group</comment>
                                <expr>false</expr>,
                                <comment type="line">// model group</comment>
                                <expr>false</expr>,
                                <comment type="line">// particle</comment>
                                <expr>false</expr>,
                                <comment type="line">// wildcard</comment>
                                <expr>false</expr>,
                                <comment type="line">// idc</comment>
                                <expr>true</expr>,
                                <comment type="line">// notation</comment>
                                <expr>false</expr>,
                                <comment type="line">// annotation</comment>
                                <expr>false</expr>,
                                <comment type="line">// facet</comment>
                                <expr>false</expr>,
                                <comment type="line">// multi value facet</comment>
                                <expr>true</expr>,
                                <comment type="line">// complex type</comment>
                                <expr>true</expr>
                                <comment type="line">// simple type</comment>
                                }
                            </block>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// store a certain kind of components from all namespaces</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>XSNamedMap</name>
                        <index>[]</index>
                    </type>
                    <name>fComponents</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// store the documents and their locations contributing to this namespace</comment>
            <comment type="line">// REVISIT: use StringList and XSObjectList for there fields.</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Vector</name>
                    </type>
                    <name>fDocuments</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Vector</name>
                    </type>
                    <name>fLocations</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>synchronized</specifier>
                    <name>void</name>
                </type>
                <name>addDocument</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>document</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>location</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDocuments</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fDocuments</name>
                                        = new
                                        <call>
                                            <name>Vector</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fLocations</name>
                                        = new
                                        <call>
                                            <name>Vector</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fDocuments</name>.
                                    <name>addElement</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>document</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fLocations</name>.
                                    <name>addElement</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>location</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * [schema namespace]
                * @see &lt;a href="http://www.w3.org/TR/xmlschema-1/#nsi-schema_namespace"&gt;[schema namespace]&lt;/a&gt;
                * @return The target namespace of this item.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getSchemaNamespace</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fTargetNamespace</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">// annotation support</comment>
            <function>
                <type>
                    <specifier>synchronized</specifier>
                    <name>DOMParser</name>
                </type>
                <name>getDOMParser</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDOMParser</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <name>fDOMParser</name>
                                </expr>
                                ;
                            </return>
                        </then>
                    </if>
                    <comment type="line">// REVISIT: when schema handles XML 1.1, will need to</comment>
                    <comment type="line">// revisit this (and the practice of not prepending an XML decl to the
                        annotation string
                    </comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>IntegratedParserConfiguration</name>
                            </type>
                            <name>config</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>IntegratedParserConfiguration</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>fSymbolTable</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// note that this should never produce errors or require</comment>
                    <comment type="line">// entity resolution, so just a barebones configuration with</comment>
                    <comment type="line">// a couple of feature set will do fine</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>config</name>.
                                    <name>setFeature</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>Constants</name>.
                                                <name>SAX_FEATURE_PREFIX</name>
                                            </name>
                                            +
                                            <name><name>Constants</name>.
                                                <name>NAMESPACES_FEATURE</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>config</name>.
                                    <name>setFeature</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>Constants</name>.
                                                <name>SAX_FEATURE_PREFIX</name>
                                            </name>
                                            +
                                            <name><name>Constants</name>.
                                                <name>VALIDATION_FEATURE</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fDOMParser</name>
                            = new
                            <call>
                                <name>DOMParser</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>config</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>fDOMParser</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>synchronized</specifier>
                    <name>SAXParser</name>
                </type>
                <name>getSAXParser</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fSAXParser</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <name>fSAXParser</name>
                                </expr>
                                ;
                            </return>
                        </then>
                    </if>
                    <comment type="line">// REVISIT: when schema handles XML 1.1, will need to</comment>
                    <comment type="line">// revisit this (and the practice of not prepending an XML decl to the
                        annotation string
                    </comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>IntegratedParserConfiguration</name>
                            </type>
                            <name>config</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>IntegratedParserConfiguration</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>fSymbolTable</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// note that this should never produce errors or require</comment>
                    <comment type="line">// entity resolution, so just a barebones configuration with</comment>
                    <comment type="line">// a couple of feature set will do fine</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>config</name>.
                                    <name>setFeature</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>Constants</name>.
                                                <name>SAX_FEATURE_PREFIX</name>
                                            </name>
                                            +
                                            <name><name>Constants</name>.
                                                <name>NAMESPACES_FEATURE</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>config</name>.
                                    <name>setFeature</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>Constants</name>.
                                                <name>SAX_FEATURE_PREFIX</name>
                                            </name>
                                            +
                                            <name><name>Constants</name>.
                                                <name>VALIDATION_FEATURE</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fSAXParser</name>
                            = new
                            <call>
                                <name>SAXParser</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>config</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>fSAXParser</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * [schema components]: a list of top-level components, i.e. element
                * declarations, attribute declarations, etc.
                * @param objectType The type of the declaration, i.e.
                * &lt;code&gt;ELEMENT_DECLARATION&lt;/code&gt;. Note that
                * &lt;code&gt;XSTypeDefinition.SIMPLE_TYPE&lt;/code&gt; and
                * &lt;code&gt;XSTypeDefinition.COMPLEX_TYPE&lt;/code&gt; can also be used as the
                * &lt;code&gt;objectType&lt;/code&gt; to retrieve only complex types or simple
                * types, instead of all types.
                * @return A list of top-level definition of the specified type in
                * &lt;code&gt;objectType&lt;/code&gt; or an empty &lt;code&gt;XSNamedMap&lt;/code&gt; if no
                * such definitions exist.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>synchronized</specifier>
                    <name>XSNamedMap</name>
                </type>
                <name>getComponents</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>objectType</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>objectType</name>
                                &lt;= 0 || <name>objectType</name> &gt; <name>MAX_COMP_IDX</name> ||
                                !
                                <name>
                                    <name>GLOBAL_COMP</name>
                                    <index>[
                                        <expr>
                                            <name>objectType</name>
                                        </expr>
                                        ]
                                    </index>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name><name>XSNamedMapImpl</name>.
                                            <name>EMPTY_MAP</name>
                                        </name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>fComponents</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <name>fComponents</name>
                                    = new
                                    <name>
                                        <name>XSNamedMap</name>
                                        <index>[
                                            <expr><name>MAX_COMP_IDX</name>+1
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>

                    <comment type="line">// get the hashtable for this type of components</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>
                                    <name>fComponents</name>
                                    <index>[
                                        <expr>
                                            <name>objectType</name>
                                        </expr>
                                        ]
                                    </index>
                                </name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>SymbolHash</name>
                                        </type>
                                        <name>table</name> =
                                        <init>
                                            <expr>
                                                <name>null</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <switch>switch
                                    <condition>(
                                        <expr>
                                            <name>objectType</name>
                                        </expr>
                                        )
                                    </condition>
                                    <block>{
                                        <case>case
                                            <expr>
                                                <name><name>XSConstants</name>.
                                                    <name>TYPE_DEFINITION</name>
                                                </name>
                                            </expr>
                                            :
                                        </case>
                                        <case>case
                                            <expr>
                                                <name><name>XSTypeDefinition</name>.
                                                    <name>COMPLEX_TYPE</name>
                                                </name>
                                            </expr>
                                            :
                                        </case>
                                        <case>case
                                            <expr>
                                                <name><name>XSTypeDefinition</name>.
                                                    <name>SIMPLE_TYPE</name>
                                                </name>
                                            </expr>
                                            :
                                            <expr_stmt>
                                                <expr>
                                                    <name>table</name>
                                                    =
                                                    <name>fGlobalTypeDecls</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <break>break;</break>
                                        </case>
                                        <case>case
                                            <expr>
                                                <name><name>XSConstants</name>.
                                                    <name>ATTRIBUTE_DECLARATION</name>
                                                </name>
                                            </expr>
                                            :
                                            <expr_stmt>
                                                <expr>
                                                    <name>table</name>
                                                    =
                                                    <name>fGlobalAttrDecls</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <break>break;</break>
                                        </case>
                                        <case>case
                                            <expr>
                                                <name><name>XSConstants</name>.
                                                    <name>ELEMENT_DECLARATION</name>
                                                </name>
                                            </expr>
                                            :
                                            <expr_stmt>
                                                <expr>
                                                    <name>table</name>
                                                    =
                                                    <name>fGlobalElemDecls</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <break>break;</break>
                                        </case>
                                        <case>case
                                            <expr>
                                                <name><name>XSConstants</name>.
                                                    <name>ATTRIBUTE_GROUP</name>
                                                </name>
                                            </expr>
                                            :
                                            <expr_stmt>
                                                <expr>
                                                    <name>table</name>
                                                    =
                                                    <name>fGlobalAttrGrpDecls</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <break>break;</break>
                                        </case>
                                        <case>case
                                            <expr>
                                                <name><name>XSConstants</name>.
                                                    <name>MODEL_GROUP_DEFINITION</name>
                                                </name>
                                            </expr>
                                            :
                                            <expr_stmt>
                                                <expr>
                                                    <name>table</name>
                                                    =
                                                    <name>fGlobalGroupDecls</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <break>break;</break>
                                        </case>
                                        <case>case
                                            <expr>
                                                <name><name>XSConstants</name>.
                                                    <name>NOTATION_DECLARATION</name>
                                                </name>
                                            </expr>
                                            :
                                            <expr_stmt>
                                                <expr>
                                                    <name>table</name>
                                                    =
                                                    <name>fGlobalNotationDecls</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <break>break;</break>
                                        </case>
                                        }
                                    </block>
                                </switch>

                                <comment type="line">// for complex/simple types, create a special implementation,
                                </comment>
                                <comment type="line">// which take specific types out of the hash table</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>objectType</name>
                                            ==
                                            <name><name>XSTypeDefinition</name>.
                                                <name>COMPLEX_TYPE</name>
                                            </name>
                                            ||
                                            <name>objectType</name>
                                            ==
                                            <name><name>XSTypeDefinition</name>.
                                                <name>SIMPLE_TYPE</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>
                                                        <name>fComponents</name>
                                                        <index>[
                                                            <expr>
                                                                <name>objectType</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    = new
                                                    <call>
                                                        <name>XSNamedMap4Types</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>fTargetNamespace</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>table</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>objectType</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>
                                                        <name>fComponents</name>
                                                        <index>[
                                                            <expr>
                                                                <name>objectType</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    = new
                                                    <call>
                                                        <name>XSNamedMapImpl</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>fTargetNamespace</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>table</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <return>return
                        <expr>
                            <name>
                                <name>fComponents</name>
                                <index>[
                                    <expr>
                                        <name>objectType</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Convenience method. Returns a top-level simple or complex type
                * definition.
                * @param name The name of the definition.
                * @return An &lt;code&gt;XSTypeDefinition&lt;/code&gt; or null if such definition
                * does not exist.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>XSTypeDefinition</name>
                </type>
                <name>getTypeDefinition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getGlobalTypeDecl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>name</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Convenience method. Returns a top-level attribute declaration.
                * @param name The name of the declaration.
                * @return A top-level attribute declaration or null if such declaration
                * does not exist.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>XSAttributeDeclaration</name>
                </type>
                <name>getAttributeDeclaration</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getGlobalAttributeDecl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>name</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Convenience method. Returns a top-level element declaration.
                * @param name The name of the declaration.
                * @return A top-level element declaration or null if such declaration
                * does not exist.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>XSElementDeclaration</name>
                </type>
                <name>getElementDeclaration</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getGlobalElementDecl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>name</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Convenience method. Returns a top-level attribute group definition.
                * @param name The name of the definition.
                * @return A top-level attribute group definition or null if such
                * definition does not exist.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>XSAttributeGroupDefinition</name>
                </type>
                <name>getAttributeGroup</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getGlobalAttributeGroupDecl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>name</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Convenience method. Returns a top-level model group definition.
                *
                * @param name The name of the definition.
                * @return A top-level model group definition definition or null if such
                * definition does not exist.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>XSModelGroupDefinition</name>
                </type>
                <name>getModelGroupDefinition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getGlobalGroupDecl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>name</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Convenience method. Returns a top-level notation declaration.
                *
                * @param name The name of the declaration.
                * @return A top-level notation declaration or null if such declaration
                * does not exist.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>XSNotationDeclaration</name>
                </type>
                <name>getNotationDeclaration</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getGlobalNotationDecl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>name</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * [document location]
                * @see &lt;a href="http://www.w3.org/TR/xmlschema-1/#sd-document_location"&gt;[document location]&lt;/a&gt;
                * @return a list of document information item
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>StringList</name>
                </type>
                <name>getDocumentLocations</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>StringListImpl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>fLocations</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Return an &lt;code&gt;XSModel&lt;/code&gt; that represents components in this schema
                * grammar.
                *
                * @return an &lt;code&gt;XSModel&lt;/code&gt; representing this schema grammar
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>XSModel</name>
                </type>
                <name>toXSModel</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>XSModelImpl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>new
                                            <name>
                                                <name>SchemaGrammar</name>
                                                <index>[]</index>
                                            </name>
                                            <block>{
                                                <expr>
                                                    <name>this</name>
                                                </expr>
                                                }
                                            </block>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>XSModel</name>
                </type>
                <name>toXSModel</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>XSGrammar</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>grammars</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>grammars</name>
                                == <name>null</name> ||
                                <name><name>grammars</name>.
                                    <name>length</name>
                                </name>
                                == 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <call>
                                        <name>toXSModel</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                        </then>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>len</name> =
                            <init>
                                <expr>
                                    <name><name>grammars</name>.
                                        <name>length</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>hasSelf</name> =
                            <init>
                                <expr>false</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name>len</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>
                                            <name>grammars</name>
                                            <index>[
                                                <expr>
                                                    <name>i</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        ==
                                        <name>this</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>hasSelf</name>
                                                = true
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <break>break;</break>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>SchemaGrammar</name>
                                <index>[]</index>
                            </type>
                            <name>gs</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>SchemaGrammar</name>
                                        <index>[
                                            <expr>
                                                <name>hasSelf</name>
                                                ? <name>len</name> : <name>len</name>+1
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name>len</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <expr_stmt>
                            <expr>
                                <name>
                                    <name>gs</name>
                                    <index>[
                                        <expr>
                                            <name>i</name>
                                        </expr>
                                        ]
                                    </index>
                                </name>
                                = (<name>SchemaGrammar</name>)
                                <name>
                                    <name>grammars</name>
                                    <index>[
                                        <expr>
                                            <name>i</name>
                                        </expr>
                                        ]
                                    </index>
                                </name>
                            </expr>
                            ;
                        </expr_stmt>
                    </for>
                    <if>if
                        <condition>(
                            <expr>!
                                <name>hasSelf</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>gs</name>
                                        <index>[
                                            <expr>
                                                <name>len</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    =
                                    <name>this</name>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <return>return
                        <expr>new
                            <call>
                                <name>XSModelImpl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>gs</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * @see org.apache.xerces.xs.XSNamespaceItem#getAnnotations()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>XSObjectList</name>
                </type>
                <name>getAnnotations</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>XSObjectListImpl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>fAnnotations</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fNumAnnotations</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>addAnnotation</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSAnnotationImpl</name>
                            </type>
                            <name>annotation</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>annotation</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return;</return>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fAnnotations</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fAnnotations</name>
                                        = new
                                        <name>
                                            <name>XSAnnotationImpl</name>
                                            <index>[<expr>2</expr>]
                                            </index>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>fNumAnnotations</name>
                                        ==
                                        <name><name>fAnnotations</name>.
                                            <name>length</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>XSAnnotationImpl</name>
                                                    <index>[]</index>
                                                </type>
                                                <name>newArray</name> =
                                                <init>
                                                    <expr>new
                                                        <name>
                                                            <name>XSAnnotationImpl</name>
                                                            <index>[
                                                                <expr>
                                                                    <name>fNumAnnotations</name>
                                                                    &lt;&lt; 1
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>System</name>.
                                                        <name>arraycopy</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>fAnnotations</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>0</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>newArray</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>0</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>fNumAnnotations</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>fAnnotations</name>
                                                =
                                                <name>newArray</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                        </else>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fAnnotations</name>
                                <index>[
                                    <expr><name>fNumAnnotations</name>++
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <name>annotation</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            }
        </block>
    </class>
    <comment type="line">// class SchemaGrammar</comment>
</unit>
