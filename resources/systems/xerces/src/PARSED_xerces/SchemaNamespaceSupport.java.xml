<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\impl\xs\SchemaNamespaceSupport.java">
    <comment type="block">/*
        * Copyright 2000-2002,2004 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.
            <name>xs</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>NamespaceSupport</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * This class customizes the behaviour of the util.NamespaceSupport
        * class in order to easily implement some features that we need for
        * efficient schema handling. It will not be generally useful.
        *
        * @xerces.internal
        *
        * @author Neil Graham, IBM
        *
        * @version $Id: SchemaNamespaceSupport.java,v 1.6 2004/10/06 15:14:55 mrglavas Exp $
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class
        <name>SchemaNamespaceSupport</name>
        <super>
            <extends>extends
                <name>NamespaceSupport</name>
            </extends>
        </super>
        <block>{

            <constructor>
                <specifier>public</specifier>
                <name>SchemaNamespaceSupport</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>super</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>
            <comment type="line">// constructor</comment>

            <comment type="line">// more effecient than NamespaceSupport(NamespaceContext)</comment>
            <constructor>
                <specifier>public</specifier>
                <name>SchemaNamespaceSupport</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>SchemaNamespaceSupport</name>
                            </type>
                            <name>nSupport</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fNamespaceSize</name>
                            =
                            <name><name>nSupport</name>.
                                <name>fNamespaceSize</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>fNamespace</name>.
                                    <name>length</name>
                                </name>
                                &lt;
                                <name>fNamespaceSize</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <name>fNamespace</name>
                                    = new
                                    <name>
                                        <name>String</name>
                                        <index>[
                                            <expr>
                                                <name>fNamespaceSize</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>System</name>.
                                    <name>arraycopy</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>nSupport</name>.
                                                <name>fNamespace</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fNamespace</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fNamespaceSize</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fCurrentContext</name>
                            =
                            <name><name>nSupport</name>.
                                <name>fCurrentContext</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>fContext</name>.
                                    <name>length</name>
                                </name>
                                &lt;=
                                <name>fCurrentContext</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <name>fContext</name>
                                    = new
                                    <name>
                                        <name>int</name>
                                        <index>[
                                            <expr><name>fCurrentContext</name>+1
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>System</name>.
                                    <name>arraycopy</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>nSupport</name>.
                                                <name>fContext</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fContext</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr><name>fCurrentContext</name>+1
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>
            <comment type="line">// end constructor</comment>

            <comment type="javadoc">/**
                * This method takes a set of Strings, as stored in a
                * NamespaceSupport object, and "fools" the object into thinking
                * that this is one unified context. This is meant to be used in
                * conjunction with things like local elements, whose declarations
                * may be deeply nested but which for all practical purposes may
                * be regarded as being one level below the global &lt;schema&gt;
                * element--at least with regard to namespace declarations.
                * It's worth noting that the context from which the strings are
                * being imported had better be using the same SymbolTable.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setEffectiveContext</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>String</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>namespaceDecls</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>namespaceDecls</name>
                                == <name>null</name> ||
                                <name><name>namespaceDecls</name>.
                                    <name>length</name>
                                </name>
                                == 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return;</return>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>pushContext</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>newSize</name> =
                            <init>
                                <expr>
                                    <name>fNamespaceSize</name>
                                    +
                                    <name><name>namespaceDecls</name>.
                                        <name>length</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>fNamespace</name>.
                                    <name>length</name>
                                </name>
                                &lt;
                                <name>newSize</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// expand namespace's size...</comment>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                            <index>[]</index>
                                        </type>
                                        <name>tempNSArray</name> =
                                        <init>
                                            <expr>new
                                                <name>
                                                    <name>String</name>
                                                    <index>[
                                                        <expr>
                                                            <name>newSize</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.
                                                <name>arraycopy</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fNamespace</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>0</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>tempNSArray</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>0</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>fNamespace</name>.
                                                            <name>length</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fNamespace</name>
                                        =
                                        <name>tempNSArray</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>System</name>.
                                    <name>arraycopy</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>namespaceDecls</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fNamespace</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fNamespaceSize</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>namespaceDecls</name>.
                                                <name>length</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fNamespaceSize</name>
                            =
                            <name>newSize</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="line">// setEffectiveContext(String):void</comment>

            <comment type="javadoc">/**
                * This method returns an array of Strings, as would be stored in
                * a NamespaceSupport object. This array contains all
                * declarations except those at the global level.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                    <index>[]</index>
                </type>
                <name>getEffectiveLocalContext</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <comment type="line">// the trick here is to recognize that all local contexts</comment>
                    <comment type="line">// happen to start at fContext[3].</comment>
                    <comment type="line">// context 1: empty</comment>
                    <comment type="line">// context 2: decls for xml and xmlns;</comment>
                    <comment type="line">// context 3: decls on &lt;xs:schema&gt;: the global ones</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                                <index>[]</index>
                            </type>
                            <name>returnVal</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fCurrentContext</name>
                                &gt;= 3
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>bottomLocalContext</name> =
                                        <init>
                                            <expr>
                                                <name>
                                                    <name>fContext</name>
                                                    <index>[<expr>3</expr>]
                                                    </index>
                                                </name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>copyCount</name> =
                                        <init>
                                            <expr>
                                                <name>fNamespaceSize</name>
                                                -
                                                <name>bottomLocalContext</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>copyCount</name>
                                            &gt; 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>returnVal</name>
                                                    = new
                                                    <name>
                                                        <name>String</name>
                                                        <index>[
                                                            <expr>
                                                                <name>copyCount</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>System</name>.
                                                            <name>arraycopy</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>fNamespace</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>bottomLocalContext</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>returnVal</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>0</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>copyCount</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>returnVal</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getEffectiveLocalContext():String</comment>

            <comment type="line">// This method removes from this object all the namespaces</comment>
            <comment type="line">// returned by getEffectiveLocalContext.</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>makeGlobal</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fCurrentContext</name>
                                &gt;= 3
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fCurrentContext</name>
                                        = 3
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fNamespaceSize</name>
                                        =
                                        <name>
                                            <name>fContext</name>
                                            <index>[<expr>3</expr>]
                                            </index>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>
            <comment type="line">// makeGlobal</comment>
            }
        </block>
    </class>
    <comment type="line">// class NamespaceSupport</comment>
</unit>
