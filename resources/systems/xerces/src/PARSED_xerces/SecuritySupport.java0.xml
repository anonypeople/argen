<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\dom\SecuritySupport.java">
    <comment type="block">/*
        * Copyright 2002,2004 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.
            <name>dom</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>File</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>FileInputStream</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>FileNotFoundException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>InputStream</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>java</name>.<name>security</name>.
            <name>AccessController</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>security</name>.
            <name>PrivilegedAction</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>security</name>.
            <name>PrivilegedActionException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>security</name>.
            <name>PrivilegedExceptionAction</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * This class is duplicated for each subpackage so keep it in sync.
        * It is package private and therefore is not exposed as part of any API.
        *
        * @xerces.internal
        */
    </comment>
    <class>
        <specifier>final</specifier>
        class <name>SecuritySupport</name>
        <block>{

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>SecuritySupport</name>
                    </type>
                    <name>securitySupport</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>SecuritySupport</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Return an instance of this class.
                */
            </comment>
            <function>
                <type>
                    <specifier>static</specifier>
                    <name>SecuritySupport</name>
                </type>
                <name>getInstance</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>securitySupport</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <name>ClassLoader</name>
                </type>
                <name>getContextClassLoader</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>(<name>ClassLoader</name>)
                            <call>
                                <name><name>AccessController</name>.
                                    <name>doPrivileged</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>new
                                            <class>
                                                <super>
                                                    <name>PrivilegedAction</name>
                                                </super>
                                                <argument_list>()</argument_list>
                                                <block>{
                                                    <function>
                                                        <type>
                                                            <specifier>public</specifier>
                                                            <name>Object</name>
                                                        </type>
                                                        <name>run</name>
                                                        <parameter_list>()</parameter_list>
                                                        <block>{
                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <name>ClassLoader</name>
                                                                    </type>
                                                                    <name>cl</name> =
                                                                    <init>
                                                                        <expr>
                                                                            <name>null</name>
                                                                        </expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>
                                                            <try>try
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>cl</name>
                                                                            =
                                                                            <call>
                                                                                <name><name>Thread</name>.
                                                                                    <name>currentThread</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            .
                                                                            <call>
                                                                                <name>getContextClassLoader</name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                                <catch>catch (
                                                                    <param>
                                                                        <decl>
                                                                            <type>
                                                                                <name>SecurityException</name>
                                                                            </type>
                                                                            <name>ex</name>
                                                                        </decl>
                                                                    </param>
                                                                    )
                                                                    <block>{ }</block>
                                                                </catch>
                                                            </try>
                                                            <return>return
                                                                <expr>
                                                                    <name>cl</name>
                                                                </expr>
                                                                ;
                                                            </return>
                                                            }
                                                        </block>
                                                    </function>
                                                    }
                                                </block>
                                            </class>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <name>ClassLoader</name>
                </type>
                <name>getSystemClassLoader</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>(<name>ClassLoader</name>)
                            <call>
                                <name><name>AccessController</name>.
                                    <name>doPrivileged</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>new
                                            <class>
                                                <super>
                                                    <name>PrivilegedAction</name>
                                                </super>
                                                <argument_list>()</argument_list>
                                                <block>{
                                                    <function>
                                                        <type>
                                                            <specifier>public</specifier>
                                                            <name>Object</name>
                                                        </type>
                                                        <name>run</name>
                                                        <parameter_list>()</parameter_list>
                                                        <block>{
                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <name>ClassLoader</name>
                                                                    </type>
                                                                    <name>cl</name> =
                                                                    <init>
                                                                        <expr>
                                                                            <name>null</name>
                                                                        </expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>
                                                            <try>try
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>cl</name>
                                                                            =
                                                                            <call>
                                                                                <name><name>ClassLoader</name>.
                                                                                    <name>getSystemClassLoader</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                                <catch>catch (
                                                                    <param>
                                                                        <decl>
                                                                            <type>
                                                                                <name>SecurityException</name>
                                                                            </type>
                                                                            <name>ex</name>
                                                                        </decl>
                                                                    </param>
                                                                    )
                                                                    <block>{}</block>
                                                                </catch>
                                                            </try>
                                                            <return>return
                                                                <expr>
                                                                    <name>cl</name>
                                                                </expr>
                                                                ;
                                                            </return>
                                                            }
                                                        </block>
                                                    </function>
                                                    }
                                                </block>
                                            </class>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <name>ClassLoader</name>
                </type>
                <name>getParentClassLoader</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>ClassLoader</name>
                            </type>
                            <name>cl</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>(<name>ClassLoader</name>)
                            <call>
                                <name><name>AccessController</name>.
                                    <name>doPrivileged</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>new
                                            <class>
                                                <super>
                                                    <name>PrivilegedAction</name>
                                                </super>
                                                <argument_list>()</argument_list>
                                                <block>{
                                                    <function>
                                                        <type>
                                                            <specifier>public</specifier>
                                                            <name>Object</name>
                                                        </type>
                                                        <name>run</name>
                                                        <parameter_list>()</parameter_list>
                                                        <block>{
                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <name>ClassLoader</name>
                                                                    </type>
                                                                    <name>parent</name> =
                                                                    <init>
                                                                        <expr>
                                                                            <name>null</name>
                                                                        </expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>
                                                            <try>try
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>parent</name>
                                                                            =
                                                                            <call>
                                                                                <name><name>cl</name>.
                                                                                    <name>getParent</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                                <catch>catch (
                                                                    <param>
                                                                        <decl>
                                                                            <type>
                                                                                <name>SecurityException</name>
                                                                            </type>
                                                                            <name>ex</name>
                                                                        </decl>
                                                                    </param>
                                                                    )
                                                                    <block>{}</block>
                                                                </catch>
                                                            </try>

                                                            <comment type="line">// eliminate loops in case of the
                                                                boot
                                                            </comment>
                                                            <comment type="line">// ClassLoader returning itself as a
                                                                parent
                                                            </comment>
                                                            <return>return
                                                                <expr>(<name>parent</name> == <name>cl</name>) ? <name>
                                                                    null
                                                                </name> :
                                                                    <name>parent</name>
                                                                </expr>
                                                                ;
                                                            </return>
                                                            }
                                                        </block>
                                                    </function>
                                                    }
                                                </block>
                                            </class>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <name>String</name>
                </type>
                <name>getSystemProperty</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>String</name>
                            </type>
                            <name>propName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>(<name>String</name>)
                            <call>
                                <name><name>AccessController</name>.
                                    <name>doPrivileged</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>new
                                            <class>
                                                <super>
                                                    <name>PrivilegedAction</name>
                                                </super>
                                                <argument_list>()</argument_list>
                                                <block>{
                                                    <function>
                                                        <type>
                                                            <specifier>public</specifier>
                                                            <name>Object</name>
                                                        </type>
                                                        <name>run</name>
                                                        <parameter_list>()</parameter_list>
                                                        <block>{
                                                            <return>return
                                                                <expr>
                                                                    <call>
                                                                        <name><name>System</name>.
                                                                            <name>getProperty</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>propName</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </return>
                                                            }
                                                        </block>
                                                    </function>
                                                    }
                                                </block>
                                            </class>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <name>FileInputStream</name>
                </type>
                <name>getFileInputStream</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>File</name>
                            </type>
                            <name>file</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>FileNotFoundException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <try>try
                        <block>{
                            <return>return
                                <expr>(<name>FileInputStream</name>)
                                    <call>
                                        <name><name>AccessController</name>.
                                            <name>doPrivileged</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <class>
                                                        <super>
                                                            <name>PrivilegedExceptionAction</name>
                                                        </super>
                                                        <argument_list>()</argument_list>
                                                        <block>{
                                                            <function>
                                                                <type>
                                                                    <specifier>public</specifier>
                                                                    <name>Object</name>
                                                                </type>
                                                                <name>run</name>
                                                                <parameter_list>()</parameter_list>
                                                                <throws>throws
                                                                    <argument>
                                                                        <expr>
                                                                            <name>FileNotFoundException</name>
                                                                        </expr>
                                                                    </argument>
                                                                </throws>
                                                                <block>{
                                                                    <return>return
                                                                        <expr>new
                                                                            <call>
                                                                                <name>FileInputStream</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>file</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </return>
                                                                    }
                                                                </block>
                                                            </function>
                                                            }
                                                        </block>
                                                    </class>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>PrivilegedActionException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <throw>throw
                                    <expr>(<name>FileNotFoundException</name>)
                                        <call>
                                            <name><name>e</name>.
                                                <name>getException</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>
                    }
                </block>
            </function>

            <function>
                <type>
                    <name>InputStream</name>
                </type>
                <name>getResourceAsStream</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>ClassLoader</name>
                            </type>
                            <name>cl</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>(<name>InputStream</name>)
                            <call>
                                <name><name>AccessController</name>.
                                    <name>doPrivileged</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>new
                                            <class>
                                                <super>
                                                    <name>PrivilegedAction</name>
                                                </super>
                                                <argument_list>()</argument_list>
                                                <block>{
                                                    <function>
                                                        <type>
                                                            <specifier>public</specifier>
                                                            <name>Object</name>
                                                        </type>
                                                        <name>run</name>
                                                        <parameter_list>()</parameter_list>
                                                        <block>{
                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <name>InputStream</name>
                                                                    </type>
                                                                    <name>ris</name>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name>cl</name>
                                                                        ==
                                                                        <name>null</name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>ris</name>
                                                                                =
                                                                                <call>
                                                                                    <name><name>ClassLoader</name>.
                                                                                        <name>
                                                                                            getSystemResourceAsStream
                                                                                        </name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>name</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </then>
                                                                <else>else
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>ris</name>
                                                                                =
                                                                                <call>
                                                                                    <name><name>cl</name>.
                                                                                        <name>getResourceAsStream</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>name</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </else>
                                                            </if>
                                                            <return>return
                                                                <expr>
                                                                    <name>ris</name>
                                                                </expr>
                                                                ;
                                                            </return>
                                                            }
                                                        </block>
                                                    </function>
                                                    }
                                                </block>
                                            </class>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <name>boolean</name>
                </type>
                <name>getFileExists</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>File</name>
                            </type>
                            <name>f</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>((<name>Boolean</name>)
                            <call>
                                <name><name>AccessController</name>.
                                    <name>doPrivileged</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>new
                                            <class>
                                                <super>
                                                    <name>PrivilegedAction</name>
                                                </super>
                                                <argument_list>()</argument_list>
                                                <block>{
                                                    <function>
                                                        <type>
                                                            <specifier>public</specifier>
                                                            <name>Object</name>
                                                        </type>
                                                        <name>run</name>
                                                        <parameter_list>()</parameter_list>
                                                        <block>{
                                                            <return>return
                                                                <expr>new
                                                                    <call>
                                                                        <name>Boolean</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>f</name>.
                                                                                            <name>exists</name>
                                                                                        </name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </return>
                                                            }
                                                        </block>
                                                    </function>
                                                    }
                                                </block>
                                            </class>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            ).
                            <call>
                                <name>booleanValue</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <name>long</name>
                </type>
                <name>getLastModified</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>File</name>
                            </type>
                            <name>f</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>((<name>Long</name>)
                            <call>
                                <name><name>AccessController</name>.
                                    <name>doPrivileged</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>new
                                            <class>
                                                <super>
                                                    <name>PrivilegedAction</name>
                                                </super>
                                                <argument_list>()</argument_list>
                                                <block>{
                                                    <function>
                                                        <type>
                                                            <specifier>public</specifier>
                                                            <name>Object</name>
                                                        </type>
                                                        <name>run</name>
                                                        <parameter_list>()</parameter_list>
                                                        <block>{
                                                            <return>return
                                                                <expr>new
                                                                    <call>
                                                                        <name>Long</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>f</name>.
                                                                                            <name>lastModified</name>
                                                                                        </name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </return>
                                                            }
                                                        </block>
                                                    </function>
                                                    }
                                                </block>
                                            </class>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            ).
                            <call>
                                <name>longValue</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <constructor>
                <specifier>private</specifier>
                <name>SecuritySupport</name>
                <parameter_list>()</parameter_list>
                <block>{}</block>
            </constructor>
            }
        </block>
    </class>
</unit>
