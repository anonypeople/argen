<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xml\serialize\SerializerFactory.java">
    <comment type="block">/*
        * Copyright 1999-2002,2004 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>


    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xml</name>.
            <name>serialize</name>
        </name>
        ;
    </package>


    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>OutputStream</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>Writer</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>UnsupportedEncodingException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Hashtable</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>StringTokenizer</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        *
        *
        * @version $Revision: 1.10 $ $Date: 2004/02/24 23:34:03 $
        * @author &lt;a href="mailto:Scott_Boag/CAM/Lotus@lotus.com"&gt;Scott Boag&lt;/a&gt;
        * @author &lt;a href="mailto:arkin@intalio.com"&gt;Assaf Arkin&lt;/a&gt;
        */
    </comment>
    <class>
        <specifier>public</specifier>
        <specifier>abstract</specifier> class
        <name>SerializerFactory</name>
        <block>{


            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>FactoriesProperty</name> =
                    <init>
                        <expr>"org.apache.xml.serialize.factories"</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>


            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <name>Hashtable</name>
                    </type>
                    <name>_factories</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>Hashtable</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>


            static
            <block>{
                <decl_stmt>
                    <decl>
                        <type>
                            <name>SerializerFactory</name>
                        </type>
                        <name>factory</name>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>String</name>
                        </type>
                        <name>list</name>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>StringTokenizer</name>
                        </type>
                        <name>token</name>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>String</name>
                        </type>
                        <name>className</name>
                    </decl>
                    ;
                </decl_stmt>

                <comment type="line">// The default factories are always registered first,</comment>
                <comment type="line">// any factory specified in the properties file and supporting</comment>
                <comment type="line">// the same method will override the default factory.</comment>
                <expr_stmt>
                    <expr>
                        <name>factory</name>
                        = new
                        <call>
                            <name>SerializerFactoryImpl</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>Method</name>.
                                            <name>XML</name>
                                        </name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <constructor_decl>
                    <name>registerSerializerFactory</name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name>factory</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <expr_stmt>
                    <expr>
                        <name>factory</name>
                        = new
                        <call>
                            <name>SerializerFactoryImpl</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>Method</name>.
                                            <name>HTML</name>
                                        </name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <constructor_decl>
                    <name>registerSerializerFactory</name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name>factory</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <expr_stmt>
                    <expr>
                        <name>factory</name>
                        = new
                        <call>
                            <name>SerializerFactoryImpl</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>Method</name>.
                                            <name>XHTML</name>
                                        </name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <constructor_decl>
                    <name>registerSerializerFactory</name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name>factory</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <expr_stmt>
                    <expr>
                        <name>factory</name>
                        = new
                        <call>
                            <name>SerializerFactoryImpl</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>Method</name>.
                                            <name>TEXT</name>
                                        </name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <constructor_decl>
                    <name>registerSerializerFactory</name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name>factory</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>

                <expr_stmt>
                    <expr>
                        <name>list</name>
                        =
                        <call>
                            <name><name>System</name>.
                                <name>getProperty</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>FactoriesProperty</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <if>if
                    <condition>(
                        <expr>
                            <name>list</name>
                            !=
                            <name>null</name>
                        </expr>
                        )
                    </condition>
                    <then>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>token</name>
                                    = new
                                    <call>
                                        <name>StringTokenizer</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>list</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>" ;,:"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <while>while
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>token</name>.
                                                <name>hasMoreTokens</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <name>className</name>
                                            =
                                            <call>
                                                <name><name>token</name>.
                                                    <name>nextToken</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <try>try
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>factory</name>
                                                    = (<name>SerializerFactory</name>)
                                                    <call>
                                                        <name><name>ObjectFactory</name>.
                                                            <name>newInstance</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>className</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name><name>SerializerFactory</name>.
                                                                        <name>
                                                                            <name/>
                                                                        </name>
                                                                    </name>
                                                                    class.
                                                                    <call>
                                                                        <name>getClassLoader</name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>true</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name><name>_factories</name>.
                                                                <name>containsKey</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>factory</name>.
                                                                                <name>getSupportedMethod</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>_factories</name>.
                                                                    <name>put</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>factory</name>.
                                                                                    <name>getSupportedMethod</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>factory</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                        <catch>catch (
                                            <param>
                                                <decl>
                                                    <type>
                                                        <name>Exception</name>
                                                    </type>
                                                    <name>except</name>
                                                </decl>
                                            </param>
                                            )
                                            <block>{ }</block>
                                        </catch>
                                    </try>
                                    }
                                </block>
                            </while>
                            }
                        </block>
                    </then>
                </if>
                }
            </block>


            <comment type="javadoc">/**
                * Register a serializer factory, keyed by the given
                * method string.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>void</name>
                </type>
                <name>registerSerializerFactory</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>SerializerFactory</name>
                            </type>
                            <name>factory</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>method</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <synchronized>synchronized (
                        <expr>
                            <name>_factories</name>
                        </expr>
                        )
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>method</name>
                                    =
                                    <call>
                                        <name><name>factory</name>.
                                            <name>getSupportedMethod</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>_factories</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>method</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>factory</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </synchronized>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * Register a serializer factory, keyed by the given
                * method string.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>SerializerFactory</name>
                </type>
                <name>getSerializerFactory</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>method</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>(<name>SerializerFactory</name>)
                            <call>
                                <name><name>_factories</name>.
                                    <name>get</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>method</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * Returns the method supported by this factory and used to register
                * the factory. This call is required so factories can be added from
                * a properties file by knowing only the class name. This method is
                * protected, it is only required by this class but must be implemented
                * in derived classes.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>protected</specifier>
                    <specifier>abstract</specifier>
                    <name>String</name>
                </type>
                <name>getSupportedMethod</name>
                <parameter_list>()</parameter_list>;
            </function_decl>


            <comment type="javadoc">/**
                * Create a new serializer based on the {@link OutputFormat}.
                * If this method is used to create the serializer, the {@link
                * Serializer#setOutputByteStream} or {@link Serializer#setOutputCharStream}
                * methods must be called before serializing a document.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <specifier>abstract</specifier>
                    <name>Serializer</name>
                </type>
                <name>makeSerializer</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>OutputFormat</name>
                            </type>
                            <name>format</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>


            <comment type="javadoc">/**
                * Create a new serializer, based on the {@link OutputFormat} and
                * using the writer as the output character stream. If this
                * method is used, the encoding property will be ignored.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <specifier>abstract</specifier>
                    <name>Serializer</name>
                </type>
                <name>makeSerializer</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Writer</name>
                            </type>
                            <name>writer</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>OutputFormat</name>
                            </type>
                            <name>format</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>


            <comment type="javadoc">/**
                * Create a new serializer, based on the {@link OutputFormat} and
                * using the output byte stream and the encoding specified in the
                * output format.
                *
                * @throws UnsupportedEncodingException The specified encoding is
                * not supported
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <specifier>abstract</specifier>
                    <name>Serializer</name>
                </type>
                <name>makeSerializer</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>OutputStream</name>
                            </type>
                            <name>output</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>OutputFormat</name>
                            </type>
                            <name>format</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>UnsupportedEncodingException</name>
                        </expr>
                    </argument>
                </throws>
                ;
            </function_decl>


            }
        </block>
    </class>


</unit>
