<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\xpointer\ShortHandPointer.java">
    <comment type="block">/*
        * Copyright 2005 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.
            <name>xpointer</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.
            <name>Constants</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>dv</name>.
            <name>XSSimpleType</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>SymbolTable</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>Augmentations</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>QName</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XMLAttributes</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XNIException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.
            <name>AttributePSVI</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.
            <name>XSTypeDefinition</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * &lt;p&gt;
        * Implements the XPointerPart interface and handles processing of
        * ShortHand Pointers. It identifies at most one element in the
        * resource's information set; specifically, the first one (if any)
        * in document order that has a matching NCName as an identifier.
        * &lt;/p&gt;
        *
        * @version $Id: ShortHandPointer.java,v 1.1 2005/06/17 22:00:20 nddelima Exp $
        *
        */
    </comment>
    <class>class <name>ShortHandPointer</name>
        <super>
            <implements>implements
                <name>XPointerPart</name>
            </implements>
        </super>
        <block>{

            <comment type="line">// The name of the ShortHand pointer</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>String</name>
                    </type>
                    <name>fShortHandPointer</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// The name of the ShortHand pointer</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fIsFragmentResolved</name> =
                    <init>
                        <expr>false</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// SymbolTable</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>SymbolTable</name>
                    </type>
                    <name>fSymbolTable</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">//</comment>
            <comment type="line">// Constructors</comment>
            <comment type="line">//</comment>
            <constructor>
                <specifier>public</specifier>
                <name>ShortHandPointer</name>
                <parameter_list>()</parameter_list>
                <block>{
                    }
                </block>
            </constructor>

            <constructor>
                <specifier>public</specifier>
                <name>ShortHandPointer</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>SymbolTable</name>
                            </type>
                            <name>symbolTable</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fSymbolTable</name>
                            =
                            <name>symbolTable</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * The XPointerProcessor takes care of this. Simply set the ShortHand Pointer here.
                *
                * @see org.apache.xerces.xpointer.XPointerPart#parseXPointer(java.lang.String)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>parseXPointer</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>part</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fShortHandPointer</name>
                            =
                            <name>part</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// reset fIsFragmentResolved</comment>
                    <expr_stmt>
                        <expr>
                            <name>fIsFragmentResolved</name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Resolves the XPointer ShortHand pointer based on the rules defined in
                * Section 3.2 of the XPointer Framework Recommendation.
                * Note that in the current implementation only supports DTD determined ID's.
                *
                * @see org.apache.xerces.xpointer.XPointerPart#resolveXPointer(org.apache.xerces.xni.QName,
                org.apache.xerces.xni.XMLAttributes, org.apache.xerces.xni.Augmentations, int event)
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <name>int</name>
                    </type>
                    <name>fMatchingChildCount</name> =
                    <init>
                        <expr>0</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>resolveXPointer</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>element</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLAttributes</name>
                            </type>
                            <name>attributes</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>event</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// reset fIsFragmentResolved</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fMatchingChildCount</name>
                                == 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fIsFragmentResolved</name>
                                        = false
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// On startElement or emptyElement, if no matching elements or parent</comment>
                    <comment type="line">// elements were found, check for a matching idenfitier.</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>event</name>
                                ==
                                <name><name>XPointerPart</name>.
                                    <name>EVENT_ELEMENT_START</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fMatchingChildCount</name>
                                            == 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>fIsFragmentResolved</name>
                                                    =
                                                    <call>
                                                        <name>hasMatchingIdentifier</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>element</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>attributes</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>augs</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>event</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fIsFragmentResolved</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr><name>fMatchingChildCount</name>++
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>event</name>
                                        ==
                                        <name><name>XPointerPart</name>.
                                            <name>EVENT_ELEMENT_EMPTY</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>fMatchingChildCount</name>
                                                    == 0
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>fIsFragmentResolved</name>
                                                            =
                                                            <call>
                                                                <name>hasMatchingIdentifier</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>element</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>attributes</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>augs</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>event</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <comment type="line">// On endElement, decrease the matching child count if the
                                            child or
                                        </comment>
                                        <comment type="line">// its parent was resolved.</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>fIsFragmentResolved</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr><name>fMatchingChildCount</name>--
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </else>
                            </if>
                        </else>
                    </if>

                    <return>return
                        <expr>
                            <name>fIsFragmentResolved</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                *
                * @param element
                * @param attributes
                * @param augs
                * @param event
                * @return
                * @throws XNIException
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>boolean</name>
                </type>
                <name>hasMatchingIdentifier</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>element</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLAttributes</name>
                            </type>
                            <name>attributes</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>event</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>normalizedValue</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// The identifiers of an element are determined by the</comment>
                    <comment type="line">// ShortHand Pointer as follows:</comment>

                    <if>if
                        <condition>(
                            <expr>
                                <name>attributes</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <for>for (
                                    <init>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>i</name> =
                                            <init>
                                                <expr>0</expr>
                                            </init>
                                        </decl>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            &lt;
                                            <call>
                                                <name><name>attributes</name>.
                                                    <name>getLength</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr><name>i</name>++
                                        </expr>
                                    </incr>
                                    )
                                    <block>{

                                        <comment type="line">// 1. If an element information item has an attribute
                                            information item
                                        </comment>
                                        <comment type="line">// among its [attributes] that is a schema-determined ID,
                                            then it is
                                        </comment>
                                        <comment type="line">// identified by the value of that attribute information
                                            item's
                                        </comment>
                                        <comment type="line">// [schema normalized value] property;</comment>
                                        <expr_stmt>
                                            <expr>
                                                <name>normalizedValue</name>
                                                =
                                                <call>
                                                    <name>getSchemaDeterminedID</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>attributes</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>normalizedValue</name>
                                                    !=
                                                    <name>null</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <break>break;</break>
                                                    }
                                                </block>
                                            </then>
                                        </if>

                                        <comment type="line">// 2. If an element information item has an element
                                            information item among
                                        </comment>
                                        <comment type="line">// its [children] that is a schema-determined ID, then it
                                            is identified by
                                        </comment>
                                        <comment type="line">// the value of that element information item's [schema
                                            normalized value] property;
                                        </comment>
                                        <comment type="line">// ???</comment>
                                        <expr_stmt>
                                            <expr>
                                                <name>normalizedValue</name>
                                                =
                                                <call>
                                                    <name>getChildrenSchemaDeterminedID</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>attributes</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>normalizedValue</name>
                                                    !=
                                                    <name>null</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <break>break;</break>
                                                    }
                                                </block>
                                            </then>
                                        </if>

                                        <comment type="line">// 3. If an element information item has an attribute
                                            information item among
                                        </comment>
                                        <comment type="line">// its [attributes] that is a DTD-determined ID, then it is
                                            identified by the
                                        </comment>
                                        <comment type="line">// value of that attribute information item's [normalized
                                            value] property.
                                        </comment>
                                        <comment type="line">// An attribute information item is a DTD-determined ID if
                                            and only if it has
                                        </comment>
                                        <comment type="line">// a [type definition] property whose value is equal to
                                            ID.
                                        </comment>
                                        <expr_stmt>
                                            <expr>
                                                <name>normalizedValue</name>
                                                =
                                                <call>
                                                    <name>getDTDDeterminedID</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>attributes</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>normalizedValue</name>
                                                    !=
                                                    <name>null</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <break>break;</break>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <comment type="line">// 4. No externally determined ID's</comment>
                                        }
                                    </block>
                                </for>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>normalizedValue</name>
                                !=
                                <name>null</name>
                                &amp;&amp;
                                <call>
                                    <name><name>normalizedValue</name>.
                                        <name>equals</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>fShortHandPointer</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>true</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <return>return <expr>false</expr>;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Rerturns the DTD determine-ID
                *
                * @param attributes
                * @param index
                * @return String
                * @throws XNIException
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getDTDDeterminedID</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLAttributes</name>
                            </type>
                            <name>attributes</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>attributes</name>.
                                        <name>getType</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>index</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                .
                                <call>
                                    <name>equals</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>"ID"</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <call>
                                            <name><name>attributes</name>.
                                                <name>getValue</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>index</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the schema-determined-ID.
                *
                *
                * @param attributes
                * @param index
                * @return A String containing the schema-determined ID.
                * @throws XNIException
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getSchemaDeterminedID</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLAttributes</name>
                            </type>
                            <name>attributes</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>attributes</name>.
                                            <name>getAugmentations</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>index</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>AttributePSVI</name>
                            </type>
                            <name>attrPSVI</name> =
                            <init>
                                <expr>(<name>AttributePSVI</name>)
                                    <call>
                                        <name>
                                            <name>augs</name>
                                            .
                                            <name>getItem</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>Constants</name>.
                                                        <name>ATTRIBUTE_PSVI</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <name>attrPSVI</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// An element or attribute information item is a
                                    schema-determined
                                </comment>
                                <comment type="line">// ID if and only if one of the following is true:]</comment>

                                <comment type="line">// 1. It has a [member type definition] or [type definition]
                                    property
                                </comment>
                                <comment type="line">// whose value in turn has [name] equal to ID and [target
                                    namespace]
                                </comment>
                                <comment type="line">// equal to http://www.w3.org/2001/XMLSchema;</comment>

                                <comment type="line">// 2. It has a [base type definition] whose value has that [name]
                                    and [target namespace];
                                </comment>

                                <comment type="line">// 3. It has a [base type definition] whose value has a [base type
                                    definition]
                                </comment>
                                <comment type="line">// whose value has that [name] and [target namespace], and so on
                                    following
                                </comment>
                                <comment type="line">// the [base type definition] property recursively;</comment>

                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>XSTypeDefinition</name>
                                        </type>
                                        <name>typeDef</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>attrPSVI</name>.
                                                        <name>getMemberTypeDefinition</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>typeDef</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>typeDef</name>
                                                    =
                                                    <call>
                                                        <name><name>attrPSVI</name>.
                                                            <name>getTypeDefinition</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>

                                <comment type="line">//</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>typeDef</name>
                                            != <name>null</name> &amp;&amp; ((<name>XSSimpleType</name>) <name>
                                            typeDef</name>).
                                            <call>
                                                <name>isIDType</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <return>return
                                                <expr>
                                                    <call>
                                                        <name><name>attrPSVI</name>.
                                                            <name>getSchemaNormalizedValue</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </then>
                                </if>

                                <comment type="line">// 4 &amp; 5 NA</comment>
                                }
                            </block>
                        </then>
                    </if>

                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Not quite sure how this can be correctly implemented.
                *
                * @param attributes
                * @param index
                * @return String - We return null since we currenly do not supprt this.
                * @throws XNIException
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getChildrenSchemaDeterminedID</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLAttributes</name>
                            </type>
                            <name>attributes</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                *
                * @see org.apache.xerces.xpointer.XPointerPart#isFragmentResolved()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isFragmentResolved</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fIsFragmentResolved</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                *
                * @see org.apache.xerces.xpointer.XPointerPart#isChildFragmentResolved()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isChildFragmentResolved</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fIsFragmentResolved</name>
                            &amp; ( <name>fMatchingChildCount</name> &gt; 0)
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the name of the ShortHand pointer
                *
                * @see org.apache.xerces.xpointer.XPointerPart#getSchemeName()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getSchemeName</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fShortHandPointer</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * @see org.apache.xerces.xpointer.XPointerPart#getSchemeData()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getSchemeData</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * @see org.apache.xerces.xpointer.XPointerPart#setSchemeName(java.lang.String)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSchemeName</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>schemeName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fShortHandPointer</name>
                            =
                            <name>schemeName</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * @see org.apache.xerces.xpointer.XPointerPart#setSchemeData(java.lang.String)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSchemeData</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>schemeData</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// NA</comment>
                    }
                </block>
            </function>
            }
        </block>
    </class>
</unit>
