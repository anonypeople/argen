<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\impl\dv\dtd\StringDatatypeValidator.java">
    <comment type="block">/*
        * Copyright 1999-2002,2004 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>dv</name>.
            <name>dtd</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.
            <name>dv</name>
        </name>
        .*;
    </import>

    <comment type="javadoc">/**
        * &lt;P&gt;StringValidator validates that XML content is a W3C string type.&lt;/P&gt;
        * &lt;P&gt;The string datatype represents character strings in XML. The
        * value space of string is the set of finite-length sequences
        * of characters (as defined in [XML 1.0 Recommendation
        * (Second Edition)]) that match the Char production
        * from [XML 1.0 Recommendation (Second Edition)].
        * A character is an atomic unit of communication; it
        * is not further specified except to note that every
        * character has a corresponding Universal Code Set
        * code point ([ISO 10646],[Unicode] and [Unicode3]),
        * which is an integer.&lt;/P&gt;
        *
        * @xerces.internal
        *
        * @version $Id: StringDatatypeValidator.java,v 1.6 2004/10/06 14:56:51 mrglavas Exp $
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>StringDatatypeValidator</name>
        <super>
            <implements>implements
                <name>DatatypeValidator</name>
            </implements>
        </super>
        <block>{

            <comment type="line">// construct a string datatype validator</comment>
            <constructor>
                <specifier>public</specifier>
                <name>StringDatatypeValidator</name>
                <parameter_list>()</parameter_list>
                <block>{
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Checks that "content" string is valid string value.
                * If invalid a Datatype validation exception is thrown.
                *
                * @param content the string value that needs to be validated
                * @param context the validation context
                * @throws InvalidDatatypeException if the content is
                * invalid according to the rules for the validators
                * @see InvalidDatatypeValueException
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>validate</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>content</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ValidationContext</name>
                            </type>
                            <name>context</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>InvalidDatatypeValueException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    }
                </block>
            </function>

            }
        </block>
    </class>
</unit>
