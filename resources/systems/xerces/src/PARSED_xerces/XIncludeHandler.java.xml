<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\xinclude\XIncludeHandler.java">
    <comment type="block">/*
        * Copyright 2003-2005 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.
            <name>xinclude</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>CharConversionException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>IOException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>ArrayList</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Enumeration</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Locale</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Stack</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>StringTokenizer</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.
            <name>Constants</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.
            <name>XMLEntityManager</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.
            <name>XMLErrorReporter</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>io</name>.
            <name>MalformedByteSequenceException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>msg</name>.
            <name>XMLMessageFormatter</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>AugmentationsImpl</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>HTTPInputSource</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>IntStack</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>ParserConfigurationSettings</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>SecurityManager</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>SymbolTable</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>URI</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>XMLAttributesImpl</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>XMLResourceIdentifierImpl</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>XMLChar</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>XMLSymbols</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.<name>URI</name>.
            <name>MalformedURIException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>Augmentations</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>NamespaceContext</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>QName</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XMLAttributes</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XMLDTDHandler</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XMLDocumentHandler</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XMLLocator</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XMLResourceIdentifier</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XMLString</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XNIException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLComponent</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLComponentManager</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLConfigurationException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLDTDFilter</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLDTDSource</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLDocumentFilter</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLDocumentSource</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLEntityResolver</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLInputSource</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLParserConfiguration</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xpointer</name>.
            <name>XPointerHandler</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xpointer</name>.
            <name>XPointerProcessor</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * &lt;p&gt;
        * This is a pipeline component which performs XInclude handling, according to the
        * W3C specification for XML Inclusions.
        * &lt;/p&gt;
        * &lt;p&gt;
        * This component analyzes each event in the pipeline, looking for &amp;lt;include&amp;gt;
        * elements. An &amp;lt;include&amp;gt; element is one which has a namespace of
        * &lt;code&gt;http://www.w3.org/2001/XInclude&lt;/code&gt; and a localname of &lt;code&gt;include&lt;/code&gt;.
        * When it finds an &amp;lt;include&amp;gt; element, it attempts to include the file specified
        * in the &lt;code&gt;href&lt;/code&gt; attribute of the element. If inclusion succeeds, all
        * children of the &amp;lt;include&amp;gt; element are ignored (with the exception of
        * checking for invalid children as outlined in the specification). If the inclusion
        * fails, the &amp;lt;fallback&amp;gt; child of the &amp;lt;include&amp;gt; element is processed.
        * &lt;/p&gt;
        * &lt;p&gt;
        * See the &lt;a href="http://www.w3.org/TR/xinclude/"&gt;XInclude specification&lt;/a&gt; for
        * more information on how XInclude is to be used.
        * &lt;/p&gt;
        * &lt;p&gt;
        * This component requires the following features and properties from the
        * component manager that uses it:
        * &lt;ul&gt;
        * &lt;li&gt;http://xml.org/sax/features/allow-dtd-events-after-endDTD&lt;/li&gt;
        * &lt;li&gt;http://apache.org/xml/properties/internal/error-reporter&lt;/li&gt;
        * &lt;li&gt;http://apache.org/xml/properties/internal/entity-resolver&lt;/li&gt;
        * &lt;/ul&gt;
        * Optional property:
        * &lt;ul&gt;
        * &lt;li&gt;http://apache.org/xml/properties/input-buffer-size&lt;/li&gt;
        * &lt;/ul&gt;
        *
        * Furthermore, the &lt;code&gt;NamespaceContext&lt;/code&gt; used in the pipeline is required
        * to be an instance of &lt;code&gt;XIncludeNamespaceSupport&lt;/code&gt;.
        * &lt;/p&gt;
        * &lt;p&gt;
        * Currently, this implementation has only partial support for the XInclude specification.
        * Specifically, it is missing support for XPointer document fragments. Thus, only whole
        * documents can be included using this component in the pipeline.
        * &lt;/p&gt;
        *
        * @author Peter McCracken, IBM
        * @author Michael Glavassevich, IBM
        *
        * @version $Id: XIncludeHandler.java,v 1.54 2005/06/24 01:06:07 mrglavas Exp $
        *
        * @see XIncludeNamespaceSupport
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class
        <name>XIncludeHandler</name>
        <super>
            <implements>implements <name>XMLComponent</name>, <name>XMLDocumentFilter</name>,
                <name>XMLDTDFilter</name>
            </implements>
        </super>
        <block>{

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>String</name>
                    </type>
                    <name>XINCLUDE_DEFAULT_CONFIGURATION</name> =
                    <init>
                        <expr>"org.apache.xerces.parsers.XIncludeParserConfiguration"</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>String</name>
                    </type>
                    <name>HTTP_ACCEPT</name> =
                    <init>
                        <expr>"Accept"</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>String</name>
                    </type>
                    <name>HTTP_ACCEPT_LANGUAGE</name> =
                    <init>
                        <expr>"Accept-Language"</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>String</name>
                    </type>
                    <name>XPOINTER</name> =
                    <init>
                        <expr>"xpointer"</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>String</name>
                    </type>
                    <name>XINCLUDE_NS_URI</name> =
                    <init>
                        <expr>"http://www.w3.org/2001/XInclude".
                            <call>
                                <name>intern</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>String</name>
                    </type>
                    <name>XINCLUDE_INCLUDE</name> =
                    <init>
                        <expr>"include".
                            <call>
                                <name>intern</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>String</name>
                    </type>
                    <name>XINCLUDE_FALLBACK</name> =
                    <init>
                        <expr>"fallback".
                            <call>
                                <name>intern</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>String</name>
                    </type>
                    <name>XINCLUDE_PARSE_XML</name> =
                    <init>
                        <expr>"xml".
                            <call>
                                <name>intern</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>String</name>
                    </type>
                    <name>XINCLUDE_PARSE_TEXT</name> =
                    <init>
                        <expr>"text".
                            <call>
                                <name>intern</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>String</name>
                    </type>
                    <name>XINCLUDE_ATTR_HREF</name> =
                    <init>
                        <expr>"href".
                            <call>
                                <name>intern</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>String</name>
                    </type>
                    <name>XINCLUDE_ATTR_PARSE</name> =
                    <init>
                        <expr>"parse".
                            <call>
                                <name>intern</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>String</name>
                    </type>
                    <name>XINCLUDE_ATTR_ENCODING</name> =
                    <init>
                        <expr>"encoding".
                            <call>
                                <name>intern</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>String</name>
                    </type>
                    <name>XINCLUDE_ATTR_ACCEPT</name> =
                    <init>
                        <expr>"accept".
                            <call>
                                <name>intern</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>String</name>
                    </type>
                    <name>XINCLUDE_ATTR_ACCEPT_LANGUAGE</name> =
                    <init>
                        <expr>"accept-language".
                            <call>
                                <name>intern</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// Top Level Information Items have [included] property in infoset</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>String</name>
                    </type>
                    <name>XINCLUDE_INCLUDED</name> =
                    <init>
                        <expr>"[included]".
                            <call>
                                <name>intern</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The identifier for the Augmentation that contains the current base URI */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>String</name>
                    </type>
                    <name>CURRENT_BASE_URI</name> =
                    <init>
                        <expr>"currentBaseURI"</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// used for adding [base URI] attributes</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>String</name>
                    </type>
                    <name>XINCLUDE_BASE</name> =
                    <init>
                        <expr>"base".
                            <call>
                                <name>intern</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>QName</name>
                    </type>
                    <name>XML_BASE_QNAME</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>QName</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>XMLSymbols</name>.
                                                <name>PREFIX_XML</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>XINCLUDE_BASE</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>(
                                            <name><name>XMLSymbols</name>.
                                                <name>PREFIX_XML</name>
                                            </name>
                                            + ":" + <name>XINCLUDE_BASE</name>).
                                            <call>
                                                <name>intern</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>NamespaceContext</name>.
                                                <name>XML_URI</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// used for adding [language] attributes</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>String</name>
                    </type>
                    <name>XINCLUDE_LANG</name> =
                    <init>
                        <expr>"lang".
                            <call>
                                <name>intern</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>QName</name>
                    </type>
                    <name>XML_LANG_QNAME</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>QName</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>XMLSymbols</name>.
                                                <name>PREFIX_XML</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>XINCLUDE_LANG</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>(
                                            <name><name>XMLSymbols</name>.
                                                <name>PREFIX_XML</name>
                                            </name>
                                            + ":" + <name>XINCLUDE_LANG</name>).
                                            <call>
                                                <name>intern</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>NamespaceContext</name>.
                                                <name>XML_URI</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>QName</name>
                    </type>
                    <name>NEW_NS_ATTR_QNAME</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>QName</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>XMLSymbols</name>.
                                                <name>PREFIX_XMLNS</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>""</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>XMLSymbols</name>.
                                                <name>PREFIX_XMLNS</name>
                                            </name>
                                            + ":"
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>NamespaceContext</name>.
                                                <name>XMLNS_URI</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// Processing States</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>int</name>
                    </type>
                    <name>STATE_NORMAL_PROCESSING</name> =
                    <init>
                        <expr>1</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="line">// we go into this state after a successful include (thus we ignore the children
            </comment>
            <comment type="line">// of the include) or after a fallback</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>int</name>
                    </type>
                    <name>STATE_IGNORE</name> =
                    <init>
                        <expr>2</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="line">// we go into this state after a failed include. If we don't encounter a fallback
            </comment>
            <comment type="line">// before we reach the end include tag, it's a fatal error</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>int</name>
                    </type>
                    <name>STATE_EXPECT_FALLBACK</name> =
                    <init>
                        <expr>3</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// recognized features and properties</comment>

            <comment type="javadoc">/** Feature identifier: validation. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>VALIDATION</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>SAX_FEATURE_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>VALIDATION_FEATURE</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Feature identifier: schema validation. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>SCHEMA_VALIDATION</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_FEATURE_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>SCHEMA_VALIDATION_FEATURE</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Feature identifier: dynamic validation. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>DYNAMIC_VALIDATION</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_FEATURE_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>DYNAMIC_VALIDATION_FEATURE</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Feature identifier: allow notation and unparsed entity events to be sent out of
                order. */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>ALLOW_UE_AND_NOTATION_EVENTS</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>SAX_FEATURE_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>ALLOW_DTD_EVENTS_AFTER_ENDDTD_FEATURE</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Feature identifier: fixup base URIs. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>XINCLUDE_FIXUP_BASE_URIS</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_FEATURE_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>XINCLUDE_FIXUP_BASE_URIS_FEATURE</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Feature identifier: fixup language. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>XINCLUDE_FIXUP_LANGUAGE</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_FEATURE_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>XINCLUDE_FIXUP_LANGUAGE_FEATURE</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Property identifier: symbol table. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>SYMBOL_TABLE</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_PROPERTY_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>SYMBOL_TABLE_PROPERTY</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Property identifier: error reporter. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>ERROR_REPORTER</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_PROPERTY_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>ERROR_REPORTER_PROPERTY</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Property identifier: entity resolver. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>ENTITY_RESOLVER</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_PROPERTY_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>ENTITY_RESOLVER_PROPERTY</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** property identifier: security manager. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>SECURITY_MANAGER</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_PROPERTY_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>SECURITY_MANAGER_PROPERTY</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** property identifier: buffer size. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>BUFFER_SIZE</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_PROPERTY_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>BUFFER_SIZE_PROPERTY</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>PARSER_SETTINGS</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_FEATURE_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>PARSER_SETTINGS</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Recognized features. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                        <index>[]</index>
                    </type>
                    <name>RECOGNIZED_FEATURES</name> =
                    <init>
                        <expr>
                            <block>{
                                <expr>
                                    <name>ALLOW_UE_AND_NOTATION_EVENTS</name>
                                </expr>
                                ,
                                <expr>
                                    <name>XINCLUDE_FIXUP_BASE_URIS</name>
                                </expr>
                                ,
                                <expr>
                                    <name>XINCLUDE_FIXUP_LANGUAGE</name>
                                </expr>
                                }
                            </block>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Feature defaults. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>Boolean</name>
                        <index>[]</index>
                    </type>
                    <name>FEATURE_DEFAULTS</name> =
                    <init>
                        <expr>
                            <block>{
                                <expr>
                                    <name><name>Boolean</name>.
                                        <name>TRUE</name>
                                    </name>
                                </expr>
                                ,
                                <expr>
                                    <name><name>Boolean</name>.
                                        <name>TRUE</name>
                                    </name>
                                </expr>
                                ,
                                <expr>
                                    <name><name>Boolean</name>.
                                        <name>TRUE</name>
                                    </name>
                                </expr>
                                }
                            </block>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Recognized properties. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                        <index>[]</index>
                    </type>
                    <name>RECOGNIZED_PROPERTIES</name> =
                    <init>
                        <expr>
                            <block>{
                                <expr>
                                    <name>ERROR_REPORTER</name>
                                </expr>
                                ,
                                <expr>
                                    <name>ENTITY_RESOLVER</name>
                                </expr>
                                ,
                                <expr>
                                    <name>SECURITY_MANAGER</name>
                                </expr>
                                ,
                                <expr>
                                    <name>BUFFER_SIZE</name>
                                </expr>
                                }
                            </block>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Property defaults. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>Object</name>
                        <index>[]</index>
                    </type>
                    <name>PROPERTY_DEFAULTS</name> =
                    <init>
                        <expr>
                            <block>{
                                <expr>
                                    <name>null</name>
                                </expr>
                                ,
                                <expr>
                                    <name>null</name>
                                </expr>
                                ,
                                <expr>
                                    <name>null</name>
                                </expr>
                                ,
                                <expr>new
                                    <call>
                                        <name>Integer</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>XMLEntityManager</name>.
                                                        <name>DEFAULT_BUFFER_SIZE</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                }
                            </block>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// instance variables</comment>

            <comment type="line">// for XMLDocumentFilter</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XMLDocumentHandler</name>
                    </type>
                    <name>fDocumentHandler</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XMLDocumentSource</name>
                    </type>
                    <name>fDocumentSource</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// for XMLDTDFilter</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XMLDTDHandler</name>
                    </type>
                    <name>fDTDHandler</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XMLDTDSource</name>
                    </type>
                    <name>fDTDSource</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// for XIncludeHandler</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XIncludeHandler</name>
                    </type>
                    <name>fParentXIncludeHandler</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// for buffer size in XIncludeTextReader</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>int</name>
                    </type>
                    <name>fBufferSize</name> =
                    <init>
                        <expr>
                            <name><name>XMLEntityManager</name>.
                                <name>DEFAULT_BUFFER_SIZE</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// It "feels wrong" to store this value here. However,</comment>
            <comment type="line">// calculating it can be time consuming, so we cache it.</comment>
            <comment type="line">// It's never going to change in the lifetime of this XIncludeHandler</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>String</name>
                    </type>
                    <name>fParentRelativeURI</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// we cache the child parser configuration, so we don't have to re-create</comment>
            <comment type="line">// the objects when the parser is re-used</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XMLParserConfiguration</name>
                    </type>
                    <name>fChildConfig</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// The cached child parser configuration, may contain a</comment>
            <comment type="line">// XInclude or XPointer Handler. Cache both these</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XMLParserConfiguration</name>
                    </type>
                    <name>fXIncludeChildConfig</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XMLParserConfiguration</name>
                    </type>
                    <name>fXPointerChildConfig</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// The XPointerProcessor</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XPointerProcessor</name>
                    </type>
                    <name>fXPtrProcessor</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XMLLocator</name>
                    </type>
                    <name>fDocLocation</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XIncludeMessageFormatter</name>
                    </type>
                    <name>fXIncludeMessageFormatter</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>XIncludeMessageFormatter</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XIncludeNamespaceSupport</name>
                    </type>
                    <name>fNamespaceContext</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>SymbolTable</name>
                    </type>
                    <name>fSymbolTable</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XMLErrorReporter</name>
                    </type>
                    <name>fErrorReporter</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XMLEntityResolver</name>
                    </type>
                    <name>fEntityResolver</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>SecurityManager</name>
                    </type>
                    <name>fSecurityManager</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// these are needed for text include processing</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XIncludeTextReader</name>
                    </type>
                    <name>fXInclude10TextReader</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XIncludeTextReader</name>
                    </type>
                    <name>fXInclude11TextReader</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// these are needed for XML Base processing</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XMLResourceIdentifier</name>
                    </type>
                    <name>fCurrentBaseURI</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>IntStack</name>
                    </type>
                    <name>fBaseURIScope</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>Stack</name>
                    </type>
                    <name>fBaseURI</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>Stack</name>
                    </type>
                    <name>fLiteralSystemID</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>Stack</name>
                    </type>
                    <name>fExpandedSystemID</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// these are needed for Language Fixup</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>IntStack</name>
                    </type>
                    <name>fLanguageScope</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>Stack</name>
                    </type>
                    <name>fLanguageStack</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>String</name>
                    </type>
                    <name>fCurrentLanguage</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// used for passing features on to child XIncludeHandler objects</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>ParserConfigurationSettings</name>
                    </type>
                    <name>fSettings</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// The current element depth. We start at depth 0 (before we've reached any
                elements).
            </comment>
            <comment type="line">// The first element is at depth 1.</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>fDepth</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// The current element depth of the result infoset.</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>fResultDepth</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// this value must be at least 1</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>INITIAL_SIZE</name> =
                    <init>
                        <expr>8</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// Used to ensure that fallbacks are always children of include elements,</comment>
            <comment type="line">// and that include elements are never children of other include elements.</comment>
            <comment type="line">// An index contains true if the ancestor of the current element which resides
            </comment>
            <comment type="line">// at that depth was an include element.</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>boolean</name>
                        <index>[]</index>
                    </type>
                    <name>fSawInclude</name> =
                    <init>
                        <expr>new
                            <name>
                                <name>boolean</name>
                                <index>[
                                    <expr>
                                        <name>INITIAL_SIZE</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// Ensures that only one fallback element can be at a single depth.</comment>
            <comment type="line">// An index contains true if we have seen any fallback elements at that depth,
            </comment>
            <comment type="line">// and it is only reset to false when the end tag of the parent is encountered.
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>boolean</name>
                        <index>[]</index>
                    </type>
                    <name>fSawFallback</name> =
                    <init>
                        <expr>new
                            <name>
                                <name>boolean</name>
                                <index>[
                                    <expr>
                                        <name>INITIAL_SIZE</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// The state of the processor at each given depth.</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                        <index>[]</index>
                    </type>
                    <name>fState</name> =
                    <init>
                        <expr>new
                            <name>
                                <name>int</name>
                                <index>[
                                    <expr>
                                        <name>INITIAL_SIZE</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// buffering the necessary DTD events</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>ArrayList</name>
                    </type>
                    <name>fNotations</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>ArrayList</name>
                    </type>
                    <name>fUnparsedEntities</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// flags which control whether base URI or language fixup is performed.</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fFixupBaseURIs</name> =
                    <init>
                        <expr>true</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fFixupLanguage</name> =
                    <init>
                        <expr>true</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// for SAX compatibility.</comment>
            <comment type="line">// Has the value of the ALLOW_UE_AND_NOTATION_EVENTS feature</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fSendUEAndNotationEvents</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// track the version of the document being parsed</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fIsXML11</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// track whether a DTD is being parsed</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fInDTD</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// track whether the root element of the result infoset has been processed</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fSeenRootElement</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// track whether the child config needs its features refreshed</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fNeedCopyFeatures</name> =
                    <init>
                        <expr>true</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// Constructors</comment>

            <constructor>
                <specifier>public</specifier>
                <name>XIncludeHandler</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fDepth</name>
                            = 0
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fSawFallback</name>
                                <index>[
                                    <expr>
                                        <name>fDepth</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fSawInclude</name>
                                <index>[
                                    <expr>
                                        <name>fDepth</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fState</name>
                                <index>[
                                    <expr>
                                        <name>fDepth</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <name>STATE_NORMAL_PROCESSING</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fNotations</name>
                            = new
                            <call>
                                <name>ArrayList</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fUnparsedEntities</name>
                            = new
                            <call>
                                <name>ArrayList</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name>fBaseURIScope</name>
                            = new
                            <call>
                                <name>IntStack</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fBaseURI</name>
                            = new
                            <call>
                                <name>Stack</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fLiteralSystemID</name>
                            = new
                            <call>
                                <name>Stack</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fExpandedSystemID</name>
                            = new
                            <call>
                                <name>Stack</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fCurrentBaseURI</name>
                            = new
                            <call>
                                <name>XMLResourceIdentifierImpl</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name>fLanguageScope</name>
                            = new
                            <call>
                                <name>IntStack</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fLanguageStack</name>
                            = new
                            <call>
                                <name>Stack</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fCurrentLanguage</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="line">// XMLComponent methods</comment>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>reset</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLComponentManager</name>
                            </type>
                            <name>componentManager</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fNamespaceContext</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fDepth</name>
                            = 0
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fResultDepth</name>
                            =
                            <call>
                                <name>isRootDocument</name>
                                <argument_list>()</argument_list>
                            </call>
                            ? 0 :
                            <call>
                                <name><name>fParentXIncludeHandler</name>.
                                    <name>getResultDepth</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fNotations</name>.
                                    <name>clear</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fUnparsedEntities</name>.
                                    <name>clear</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fParentRelativeURI</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fIsXML11</name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fInDTD</name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fSeenRootElement</name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fBaseURIScope</name>.
                                    <name>clear</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fBaseURI</name>.
                                    <name>clear</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fLiteralSystemID</name>.
                                    <name>clear</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fExpandedSystemID</name>.
                                    <name>clear</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fLanguageScope</name>.
                                    <name>clear</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fLanguageStack</name>.
                                    <name>clear</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// REVISIT: Find a better method for maintaining</comment>
                    <comment type="line">// the state of the XInclude processor. These arrays</comment>
                    <comment type="line">// can potentially grow quite large. Cleaning them</comment>
                    <comment type="line">// out on reset may be very time consuming. -- mrglavas</comment>
                    <comment type="line">//</comment>
                    <comment type="line">// clear the previous settings from the arrays</comment>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name><name>fState</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr>++
                                <name>i</name>
                            </expr>
                        </incr>
                        )
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>fState</name>
                                        <index>[
                                            <expr>
                                                <name>i</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    =
                                    <name>STATE_NORMAL_PROCESSING</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </for>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name><name>fSawFallback</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr>++
                                <name>i</name>
                            </expr>
                        </incr>
                        )
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>fSawFallback</name>
                                        <index>[
                                            <expr>
                                                <name>i</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    = false
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </for>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name><name>fSawInclude</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr>++
                                <name>i</name>
                            </expr>
                        </incr>
                        )
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>fSawInclude</name>
                                        <index>[
                                            <expr>
                                                <name>i</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    = false
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </for>

                    <try>try
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>!
                                        <call>
                                            <name><name>componentManager</name>.
                                                <name>getFeature</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>PARSER_SETTINGS</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <comment type="line">// if parser settings have not changed return.</comment>
                                        <return>return;</return>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLConfigurationException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{}</block>
                        </catch>
                    </try>

                    <comment type="line">// parser settings changed. Need to refresh features on child config.</comment>
                    <expr_stmt>
                        <expr>
                            <name>fNeedCopyFeatures</name>
                            = true
                        </expr>
                        ;
                    </expr_stmt>

                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>fSendUEAndNotationEvents</name>
                                    =
                                    <call>
                                        <name><name>componentManager</name>.
                                            <name>getFeature</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>ALLOW_UE_AND_NOTATION_EVENTS</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>fChildConfig</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fChildConfig</name>.
                                                        <name>setFeature</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>ALLOW_UE_AND_NOTATION_EVENTS</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>fSendUEAndNotationEvents</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLConfigurationException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                }
                            </block>
                        </catch>
                    </try>

                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>fFixupBaseURIs</name>
                                    =
                                    <call>
                                        <name><name>componentManager</name>.
                                            <name>getFeature</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>XINCLUDE_FIXUP_BASE_URIS</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>fChildConfig</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fChildConfig</name>.
                                                        <name>setFeature</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>XINCLUDE_FIXUP_BASE_URIS</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>fFixupBaseURIs</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLConfigurationException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fFixupBaseURIs</name>
                                        = true
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </catch>
                    </try>

                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>fFixupLanguage</name>
                                    =
                                    <call>
                                        <name><name>componentManager</name>.
                                            <name>getFeature</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>XINCLUDE_FIXUP_LANGUAGE</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>fChildConfig</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fChildConfig</name>.
                                                        <name>setFeature</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>XINCLUDE_FIXUP_LANGUAGE</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>fFixupLanguage</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLConfigurationException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fFixupLanguage</name>
                                        = true
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </catch>
                    </try>

                    <comment type="line">// Get symbol table.</comment>
                    <try>try
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>SymbolTable</name>
                                    </type>
                                    <name>value</name> =
                                    <init>
                                        <expr>(<name>SymbolTable</name>)
                                            <call>
                                                <name><name>componentManager</name>.
                                                    <name>getProperty</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>SYMBOL_TABLE</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>value</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>fSymbolTable</name>
                                                =
                                                <name>value</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>fChildConfig</name>
                                                    !=
                                                    <name>null</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fChildConfig</name>.
                                                                    <name>setProperty</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>SYMBOL_TABLE</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>value</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLConfigurationException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fSymbolTable</name>
                                        =
                                        <name>null</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </catch>
                    </try>

                    <comment type="line">// Get error reporter.</comment>
                    <try>try
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>XMLErrorReporter</name>
                                    </type>
                                    <name>value</name> =
                                    <init>
                                        <expr>(<name>XMLErrorReporter</name>)
                                            <call>
                                                <name><name>componentManager</name>.
                                                    <name>getProperty</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>ERROR_REPORTER</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>value</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>setErrorReporter</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>value</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>fChildConfig</name>
                                                    !=
                                                    <name>null</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fChildConfig</name>.
                                                                    <name>setProperty</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>ERROR_REPORTER</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>value</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLConfigurationException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fErrorReporter</name>
                                        =
                                        <name>null</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </catch>
                    </try>

                    <comment type="line">// Get entity resolver.</comment>
                    <try>try
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>XMLEntityResolver</name>
                                    </type>
                                    <name>value</name> =
                                    <init>
                                        <expr>(<name>XMLEntityResolver</name>)
                                            <call>
                                                <name><name>componentManager</name>.
                                                    <name>getProperty</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>ENTITY_RESOLVER</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>

                            <if>if
                                <condition>(
                                    <expr>
                                        <name>value</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>fEntityResolver</name>
                                                =
                                                <name>value</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>fChildConfig</name>
                                                    !=
                                                    <name>null</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fChildConfig</name>.
                                                                    <name>setProperty</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>ENTITY_RESOLVER</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>value</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLConfigurationException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fEntityResolver</name>
                                        =
                                        <name>null</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </catch>
                    </try>

                    <comment type="line">// Get security manager.</comment>
                    <try>try
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>SecurityManager</name>
                                    </type>
                                    <name>value</name> =
                                    <init>
                                        <expr>(<name>SecurityManager</name>)
                                            <call>
                                                <name><name>componentManager</name>.
                                                    <name>getProperty</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>SECURITY_MANAGER</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>

                            <if>if
                                <condition>(
                                    <expr>
                                        <name>value</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>fSecurityManager</name>
                                                =
                                                <name>value</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>fChildConfig</name>
                                                    !=
                                                    <name>null</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fChildConfig</name>.
                                                                    <name>setProperty</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>SECURITY_MANAGER</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>value</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLConfigurationException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fSecurityManager</name>
                                        =
                                        <name>null</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </catch>
                    </try>

                    <comment type="line">// Get buffer size.</comment>
                    <try>try
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Integer</name>
                                    </type>
                                    <name>value</name> =
                                    <init>
                                        <expr>(<name>Integer</name>)
                                            <call>
                                                <name><name>componentManager</name>.
                                                    <name>getProperty</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>BUFFER_SIZE</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>

                            <if>if
                                <condition>(
                                    <expr>
                                        <name>value</name>
                                        != <name>null</name> &amp;&amp;
                                        <call>
                                            <name><name>value</name>.
                                                <name>intValue</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        &gt; 0
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>fBufferSize</name>
                                                =
                                                <call>
                                                    <name><name>value</name>.
                                                        <name>intValue</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>fChildConfig</name>
                                                    !=
                                                    <name>null</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fChildConfig</name>.
                                                                    <name>setProperty</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>BUFFER_SIZE</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>value</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>fBufferSize</name>
                                                = ((<name>Integer</name>)
                                                <call>
                                                    <name>getPropertyDefault</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>BUFFER_SIZE</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                ).
                                                <call>
                                                    <name>intValue</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </else>
                            </if>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLConfigurationException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fBufferSize</name>
                                        = ((<name>Integer</name>)
                                        <call>
                                            <name>getPropertyDefault</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>BUFFER_SIZE</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        ).
                                        <call>
                                            <name>intValue</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </catch>
                    </try>

                    <comment type="line">// Reset XML 1.0 text reader.</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fXInclude10TextReader</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fXInclude10TextReader</name>.
                                                <name>setBufferSize</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fBufferSize</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">// Reset XML 1.1 text reader.</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fXInclude11TextReader</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fXInclude11TextReader</name>.
                                                <name>setBufferSize</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fBufferSize</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <expr_stmt>
                        <expr>
                            <name>fSettings</name>
                            = new
                            <call>
                                <name>ParserConfigurationSettings</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>copyFeatures</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>componentManager</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fSettings</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// we don't want a schema validator on the new pipeline,</comment>
                    <comment type="line">// so if it was enabled, we set the feature to false as</comment>
                    <comment type="line">// well as other validation features.</comment>
                    <try>try
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>componentManager</name>.
                                                <name>getFeature</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>SCHEMA_VALIDATION</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fSettings</name>.
                                                        <name>setFeature</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>SCHEMA_VALIDATION</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>false</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fSettings</name>.
                                                        <name>setFeature</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>DYNAMIC_VALIDATION</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>false</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fSettings</name>.
                                                        <name>setFeature</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>VALIDATION</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>false</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLConfigurationException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{}</block>
                        </catch>
                    </try>

                    <comment type="line">// Don't reset fChildConfig -- we don't want it to share the same components.
                    </comment>
                    <comment type="line">// It will be reset when it is actually used to parse something.</comment>
                    }
                </block>
            </function>
            <comment type="line">// reset(XMLComponentManager)</comment>

            <comment type="javadoc">/**
                * Returns a list of feature identifiers that are recognized by
                * this component. This method may return null if no features
                * are recognized by this component.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                    <index>[]</index>
                </type>
                <name>getRecognizedFeatures</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>RECOGNIZED_FEATURES</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getRecognizedFeatures():String[]</comment>

            <comment type="javadoc">/**
                * Sets the state of a feature. This method is called by the component
                * manager any time after reset when a feature changes state.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; Components should silently ignore features
                * that do not affect the operation of the component.
                *
                * @param featureId The feature identifier.
                * @param state The state of the feature.
                *
                * @throws SAXNotRecognizedException The component should not throw
                * this exception.
                * @throws SAXNotSupportedException The component should not throw
                * this exception.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setFeature</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>featureId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>state</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XMLConfigurationException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>featureId</name>.
                                        <name>equals</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>ALLOW_UE_AND_NOTATION_EVENTS</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fSendUEAndNotationEvents</name>
                                        =
                                        <name>state</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fSettings</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fNeedCopyFeatures</name>
                                        = true
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fSettings</name>.
                                                <name>setFeature</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>featureId</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>state</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>
            <comment type="line">// setFeature(String,boolean)</comment>

            <comment type="javadoc">/**
                * Returns a list of property identifiers that are recognized by
                * this component. This method may return null if no properties
                * are recognized by this component.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                    <index>[]</index>
                </type>
                <name>getRecognizedProperties</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>RECOGNIZED_PROPERTIES</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getRecognizedProperties():String[]</comment>

            <comment type="javadoc">/**
                * Sets the value of a property. This method is called by the component
                * manager any time after reset when a property changes value.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; Components should silently ignore properties
                * that do not affect the operation of the component.
                *
                * @param propertyId The property identifier.
                * @param value The value of the property.
                *
                * @throws SAXNotRecognizedException The component should not throw
                * this exception.
                * @throws SAXNotSupportedException The component should not throw
                * this exception.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setProperty</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>propertyId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XMLConfigurationException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>propertyId</name>.
                                        <name>equals</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>SYMBOL_TABLE</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fSymbolTable</name>
                                        = (<name>SymbolTable</name>)
                                        <name>value</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fChildConfig</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fChildConfig</name>.
                                                            <name>setProperty</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>propertyId</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>value</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>propertyId</name>.
                                        <name>equals</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>ERROR_REPORTER</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>setErrorReporter</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>(<name>XMLErrorReporter</name>)
                                                        <name>value</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fChildConfig</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fChildConfig</name>.
                                                            <name>setProperty</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>propertyId</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>value</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>propertyId</name>.
                                        <name>equals</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>ENTITY_RESOLVER</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fEntityResolver</name>
                                        = (<name>XMLEntityResolver</name>)
                                        <name>value</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fChildConfig</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fChildConfig</name>.
                                                            <name>setProperty</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>propertyId</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>value</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>propertyId</name>.
                                        <name>equals</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>SECURITY_MANAGER</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fSecurityManager</name>
                                        = (<name>SecurityManager</name>)
                                        <name>value</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fChildConfig</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fChildConfig</name>.
                                                            <name>setProperty</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>propertyId</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>value</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>propertyId</name>.
                                        <name>equals</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>BUFFER_SIZE</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Integer</name>
                                        </type>
                                        <name>bufferSize</name> =
                                        <init>
                                            <expr>(<name>Integer</name>)
                                                <name>value</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fChildConfig</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fChildConfig</name>.
                                                            <name>setProperty</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>propertyId</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>value</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>bufferSize</name>
                                            != <name>null</name> &amp;&amp;
                                            <call>
                                                <name><name>bufferSize</name>.
                                                    <name>intValue</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            &gt; 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>fBufferSize</name>
                                                    =
                                                    <call>
                                                        <name><name>bufferSize</name>.
                                                            <name>intValue</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <comment type="line">// Reset XML 1.0 text reader.</comment>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>fXInclude10TextReader</name>
                                                        !=
                                                        <name>null</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>fXInclude10TextReader</name>.
                                                                        <name>setBufferSize</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>fBufferSize</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <comment type="line">// Reset XML 1.1 text reader.</comment>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>fXInclude11TextReader</name>
                                                        !=
                                                        <name>null</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>fXInclude11TextReader</name>.
                                                                        <name>setBufferSize</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>fBufferSize</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// setProperty(String,Object)</comment>

            <comment type="javadoc">/**
                * Returns the default state for a feature, or null if this
                * component does not want to report a default value for this
                * feature.
                *
                * @param featureId The feature identifier.
                *
                * @since Xerces 2.2.0
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Boolean</name>
                </type>
                <name>getFeatureDefault</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>featureId</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name><name>RECOGNIZED_FEATURES</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>
                                            <name>RECOGNIZED_FEATURES</name>
                                            <index>[
                                                <expr>
                                                    <name>i</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        .
                                        <call>
                                            <name>equals</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>featureId</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>
                                                <name>
                                                    <name>FEATURE_DEFAULTS</name>
                                                    <index>[
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getFeatureDefault(String):Boolean</comment>

            <comment type="javadoc">/**
                * Returns the default state for a property, or null if this
                * component does not want to report a default value for this
                * property.
                *
                * @param propertyId The property identifier.
                *
                * @since Xerces 2.2.0
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Object</name>
                </type>
                <name>getPropertyDefault</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>propertyId</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name><name>RECOGNIZED_PROPERTIES</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>
                                            <name>RECOGNIZED_PROPERTIES</name>
                                            <index>[
                                                <expr>
                                                    <name>i</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        .
                                        <call>
                                            <name>equals</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>propertyId</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>
                                                <name>
                                                    <name>PROPERTY_DEFAULTS</name>
                                                    <index>[
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getPropertyDefault(String):Object</comment>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setDocumentHandler</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLDocumentHandler</name>
                            </type>
                            <name>handler</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fDocumentHandler</name>
                            =
                            <name>handler</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>XMLDocumentHandler</name>
                </type>
                <name>getDocumentHandler</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fDocumentHandler</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">// XMLDocumentHandler methods</comment>

            <comment type="javadoc">/**
                * Event sent at the start of the document.
                *
                * A fatal error will occur here, if it is detected that this document has been processed
                * before.
                *
                * This event is only passed on to the document handler if this is the root document.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>startDocument</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLLocator</name>
                            </type>
                            <name>locator</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>encoding</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>NamespaceContext</name>
                            </type>
                            <name>namespaceContext</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// we do this to ensure that the proper location is reported in errors
                    </comment>
                    <comment type="line">// otherwise, the locator from the root document would always be used</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fErrorReporter</name>.
                                    <name>setDocumentLocator</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>locator</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name>isRootDocument</name>
                                    <argument_list>()</argument_list>
                                </call>
                                &amp;&amp;
                                <call>
                                    <name><name>fParentXIncludeHandler</name>.
                                        <name>searchForRecursiveIncludes</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>locator</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>reportFatalError</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"RecursiveInclude"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>new
                                                        <name>
                                                            <name>Object</name>
                                                            <index>[]</index>
                                                        </name>
                                                        <block>{
                                                            <expr>
                                                                <call>
                                                                    <name><name>locator</name>.
                                                                        <name>getExpandedSystemId</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            }
                                                        </block>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>!(<name>namespaceContext</name>
                                <name>instanceof</name>
                                <name>XIncludeNamespaceSupport</name>)
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>reportFatalError</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"IncompatibleNamespaceContext"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name>fNamespaceContext</name>
                            = (<name>XIncludeNamespaceSupport</name>)
                            <name>namespaceContext</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fDocLocation</name>
                            =
                            <name>locator</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// initialize the current base URI</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fCurrentBaseURI</name>.
                                    <name>setBaseSystemId</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>locator</name>.
                                                    <name>getBaseSystemId</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fCurrentBaseURI</name>.
                                    <name>setExpandedSystemId</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>locator</name>.
                                                    <name>getExpandedSystemId</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fCurrentBaseURI</name>.
                                    <name>setLiteralSystemId</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>locator</name>.
                                                    <name>getLiteralSystemId</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>saveBaseURI</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>augs</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>augs</name>
                                        = new
                                        <call>
                                            <name>AugmentationsImpl</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>augs</name>.
                                    <name>putItem</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>CURRENT_BASE_URI</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fCurrentBaseURI</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// initialize the current language</comment>
                    <expr_stmt>
                        <expr>
                            <name>fCurrentLanguage</name>
                            =
                            <name><name>XMLSymbols</name>.
                                <name>EMPTY_STRING</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>saveLanguage</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>fCurrentLanguage</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>isRootDocument</name>
                                    <argument_list>()</argument_list>
                                </call>
                                &amp;&amp; <name>fDocumentHandler</name> !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDocumentHandler</name>.
                                                <name>startDocument</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>locator</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>encoding</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>namespaceContext</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>augs</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>xmlDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>version</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>encoding</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>standalone</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fIsXML11</name>
                            = "1.1".
                            <call>
                                <name>equals</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>version</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>isRootDocument</name>
                                    <argument_list>()</argument_list>
                                </call>
                                &amp;&amp; <name>fDocumentHandler</name> !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDocumentHandler</name>.
                                                <name>xmlDecl</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>version</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>encoding</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>standalone</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>augs</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>doctypeDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>rootElement</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>publicId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>systemId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>isRootDocument</name>
                                    <argument_list>()</argument_list>
                                </call>
                                &amp;&amp; <name>fDocumentHandler</name> !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDocumentHandler</name>.
                                                <name>doctypeDecl</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>rootElement</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>publicId</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>systemId</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>augs</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>comment</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLString</name>
                            </type>
                            <name>text</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>!
                                <name>fInDTD</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fDocumentHandler</name>
                                            !=
                                            <name>null</name>
                                            &amp;&amp;
                                            <call>
                                                <name>getState</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            ==
                                            <name>STATE_NORMAL_PROCESSING</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr><name>fDepth</name>++
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>augs</name>
                                                    =
                                                    <call>
                                                        <name>modifyAugmentations</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>augs</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fDocumentHandler</name>.
                                                            <name>comment</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>text</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>augs</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr><name>fDepth</name>--
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>fDTDHandler</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fDTDHandler</name>.
                                                        <name>comment</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>text</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>augs</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>processingInstruction</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>target</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLString</name>
                            </type>
                            <name>data</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>!
                                <name>fInDTD</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fDocumentHandler</name>
                                            !=
                                            <name>null</name>
                                            &amp;&amp;
                                            <call>
                                                <name>getState</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            ==
                                            <name>STATE_NORMAL_PROCESSING</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <comment type="line">// we need to change the depth like this so that
                                                modifyAugmentations() works
                                            </comment>
                                            <expr_stmt>
                                                <expr><name>fDepth</name>++
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>augs</name>
                                                    =
                                                    <call>
                                                        <name>modifyAugmentations</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>augs</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fDocumentHandler</name>.
                                                            <name>processingInstruction</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>target</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>data</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>augs</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr><name>fDepth</name>--
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>fDTDHandler</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fDTDHandler</name>.
                                                        <name>processingInstruction</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>target</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>data</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>augs</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>startElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>element</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLAttributes</name>
                            </type>
                            <name>attributes</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr><name>fDepth</name>++
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>lastState</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getState</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>fDepth</name>
                                                    - 1
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// If the last two states were fallback then this must be a descendant of an
                        include
                    </comment>
                    <comment type="line">// child which isn't a fallback. The specification says we should ignore such
                        elements
                    </comment>
                    <comment type="line">// and their children.</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>lastState</name>
                                == <name>STATE_EXPECT_FALLBACK</name> &amp;&amp;
                                <call>
                                    <name>getState</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>fDepth</name>
                                                - 2
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                ==
                                <name>STATE_EXPECT_FALLBACK</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>setState</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>STATE_IGNORE</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>setState</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>lastState</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>

                    <comment type="line">// we process the xml:base and xml:lang attributes regardless</comment>
                    <comment type="line">// of what type of element it is.</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>processXMLBaseAttributes</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>attributes</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fFixupLanguage</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>processXMLLangAttributes</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>attributes</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>isIncludeElement</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>element</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>boolean</name>
                                        </type>
                                        <name>success</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>this</name>.
                                                        <name>handleIncludeElement</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>attributes</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>success</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>setState</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>STATE_IGNORE</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>setState</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>STATE_EXPECT_FALLBACK</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name>isFallbackElement</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>element</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>this</name>.
                                                        <name>handleFallbackElement</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <call>
                                                    <name>hasXIncludeNamespace</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>element</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <call>
                                                                <name>getSawInclude</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>fDepth</name>
                                                                            - 1
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name>reportFatalError</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>"IncludeChild"</expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>new
                                                                                    <name>
                                                                                        <name>Object</name>
                                                                                        <index>[]</index>
                                                                                    </name>
                                                                                    <block>{
                                                                                        <expr>
                                                                                            <name><name>element</name>.
                                                                                                <name>rawname</name>
                                                                                            </name>
                                                                                        </expr>
                                                                                        }
                                                                                    </block>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <call>
                                                                <name>getSawFallback</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>fDepth</name>
                                                                            - 1
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name>reportFatalError</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>"FallbackChild"</expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>new
                                                                                    <name>
                                                                                        <name>Object</name>
                                                                                        <index>[]</index>
                                                                                    </name>
                                                                                    <block>{
                                                                                        <expr>
                                                                                            <name><name>element</name>.
                                                                                                <name>rawname</name>
                                                                                            </name>
                                                                                        </expr>
                                                                                        }
                                                                                    </block>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <call>
                                                                <name>getState</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                            ==
                                                            <name>STATE_NORMAL_PROCESSING</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <if>if
                                                                <condition>(
                                                                    <expr><name>fResultDepth</name>++ == 0
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <call>
                                                                                    <name>checkMultipleRootElements
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </then>
                                                            </if>
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name>fDocumentHandler</name>
                                                                        !=
                                                                        <name>null</name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>augs</name>
                                                                                =
                                                                                <call>
                                                                                    <name>modifyAugmentations</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>augs</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>attributes</name>
                                                                                =
                                                                                <call>
                                                                                    <name>processAttributes</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>attributes</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>fDocumentHandler</name>.
                                                                                        <name>startElement</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>element</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>attributes</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>augs</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </then>
                                                            </if>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name>getState</name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        ==
                                                        <name>STATE_NORMAL_PROCESSING</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <if>if
                                                            <condition>(
                                                                <expr><name>fResultDepth</name>++ == 0
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name>checkMultipleRootElements</name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>fDocumentHandler</name>
                                                                    !=
                                                                    <name>null</name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>augs</name>
                                                                            =
                                                                            <call>
                                                                                <name>modifyAugmentations</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>augs</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>attributes</name>
                                                                            =
                                                                            <call>
                                                                                <name>processAttributes</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>attributes</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>fDocumentHandler</name>.
                                                                                    <name>startElement</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>element</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>attributes</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>augs</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                        </else>
                                    </if>
                                </else>
                            </if>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>emptyElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>element</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLAttributes</name>
                            </type>
                            <name>attributes</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr><name>fDepth</name>++
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>lastState</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getState</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>fDepth</name>
                                                    - 1
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// If the last two states were fallback then this must be a descendant of an
                        include
                    </comment>
                    <comment type="line">// child which isn't a fallback. The specification says we should ignore such
                        elements
                    </comment>
                    <comment type="line">// and their children.</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>lastState</name>
                                == <name>STATE_EXPECT_FALLBACK</name> &amp;&amp;
                                <call>
                                    <name>getState</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>fDepth</name>
                                                - 2
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                ==
                                <name>STATE_EXPECT_FALLBACK</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>setState</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>STATE_IGNORE</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>setState</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>lastState</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>

                    <comment type="line">// we process the xml:base and xml:lang attributes regardless</comment>
                    <comment type="line">// of what type of element it is.</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>processXMLBaseAttributes</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>attributes</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fFixupLanguage</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>processXMLLangAttributes</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>attributes</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>isIncludeElement</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>element</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>boolean</name>
                                        </type>
                                        <name>success</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>this</name>.
                                                        <name>handleIncludeElement</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>attributes</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>success</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>setState</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>STATE_IGNORE</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>reportFatalError</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"NoFallback"</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name>isFallbackElement</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>element</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>this</name>.
                                                        <name>handleFallbackElement</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <call>
                                                    <name>hasXIncludeNamespace</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>element</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <call>
                                                                <name>getSawInclude</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>fDepth</name>
                                                                            - 1
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name>reportFatalError</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>"IncludeChild"</expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>new
                                                                                    <name>
                                                                                        <name>Object</name>
                                                                                        <index>[]</index>
                                                                                    </name>
                                                                                    <block>{
                                                                                        <expr>
                                                                                            <name><name>element</name>.
                                                                                                <name>rawname</name>
                                                                                            </name>
                                                                                        </expr>
                                                                                        }
                                                                                    </block>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <call>
                                                                <name>getSawFallback</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>fDepth</name>
                                                                            - 1
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name>reportFatalError</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>"FallbackChild"</expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>new
                                                                                    <name>
                                                                                        <name>Object</name>
                                                                                        <index>[]</index>
                                                                                    </name>
                                                                                    <block>{
                                                                                        <expr>
                                                                                            <name><name>element</name>.
                                                                                                <name>rawname</name>
                                                                                            </name>
                                                                                        </expr>
                                                                                        }
                                                                                    </block>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <call>
                                                                <name>getState</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                            ==
                                                            <name>STATE_NORMAL_PROCESSING</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name>fResultDepth</name>
                                                                        == 0
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <call>
                                                                                    <name>checkMultipleRootElements
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </then>
                                                            </if>
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name>fDocumentHandler</name>
                                                                        !=
                                                                        <name>null</name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>augs</name>
                                                                                =
                                                                                <call>
                                                                                    <name>modifyAugmentations</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>augs</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>attributes</name>
                                                                                =
                                                                                <call>
                                                                                    <name>processAttributes</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>attributes</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>fDocumentHandler</name>.
                                                                                        <name>emptyElement</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>element</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>attributes</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>augs</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </then>
                                                            </if>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name>getState</name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        ==
                                                        <name>STATE_NORMAL_PROCESSING</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>fResultDepth</name>
                                                                    == 0
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name>checkMultipleRootElements</name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>fDocumentHandler</name>
                                                                    !=
                                                                    <name>null</name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>augs</name>
                                                                            =
                                                                            <call>
                                                                                <name>modifyAugmentations</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>augs</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>attributes</name>
                                                                            =
                                                                            <call>
                                                                                <name>processAttributes</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>attributes</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>fDocumentHandler</name>.
                                                                                    <name>emptyElement</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>element</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>attributes</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>augs</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                        </else>
                                    </if>
                                </else>
                            </if>
                        </else>
                    </if>
                    <comment type="line">// reset the out of scope stack elements</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setSawFallback</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>fDepth</name>
                                            + 1
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setSawInclude</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>fDepth</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// check if an xml:base has gone out of scope</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>fBaseURIScope</name>.
                                        <name>size</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                &gt; 0 &amp;&amp; <name>fDepth</name> ==
                                <call>
                                    <name><name>fBaseURIScope</name>.
                                        <name>peek</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// pop the values from the stack</comment>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>restoreBaseURI</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr><name>fDepth</name>--
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>endElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>element</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>isIncludeElement</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>element</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// if we're ending an include element, and we were expecting a
                                    fallback
                                </comment>
                                <comment type="line">// we check to see if the children of this include element
                                    contained a fallback
                                </comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name>getState</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            ==
                                            <name>STATE_EXPECT_FALLBACK</name>
                                            &amp;&amp; !
                                            <call>
                                                <name>getSawFallback</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>fDepth</name>
                                                            + 1
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>reportFatalError</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"NoFallback"</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>isFallbackElement</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>element</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// the state would have been set to normal processing if we were
                                    expecting the fallback element
                                </comment>
                                <comment type="line">// now that we're done processing it, we should ignore all the
                                    other children of the include element
                                </comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name>getState</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            ==
                                            <name>STATE_NORMAL_PROCESSING</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>setState</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>STATE_IGNORE</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name>getState</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        ==
                                        <name>STATE_NORMAL_PROCESSING</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>--
                                                <name>fResultDepth</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>fDocumentHandler</name>
                                                    !=
                                                    <name>null</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fDocumentHandler</name>.
                                                                    <name>endElement</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>element</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>augs</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </then>
                            </if>
                        </else>
                    </if>

                    <comment type="line">// reset the out of scope stack elements</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setSawFallback</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>fDepth</name>
                                            + 1
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setSawInclude</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>fDepth</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// check if an xml:base has gone out of scope</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>fBaseURIScope</name>.
                                        <name>size</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                &gt; 0 &amp;&amp; <name>fDepth</name> ==
                                <call>
                                    <name><name>fBaseURIScope</name>.
                                        <name>peek</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// pop the values from the stack</comment>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>restoreBaseURI</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// check if an xml:lang has gone out of scope</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>fLanguageScope</name>.
                                        <name>size</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                &gt; 0 &amp;&amp; <name>fDepth</name> ==
                                <call>
                                    <name><name>fLanguageScope</name>.
                                        <name>peek</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// pop the language from the stack</comment>
                                <expr_stmt>
                                    <expr>
                                        <name>fCurrentLanguage</name>
                                        =
                                        <call>
                                            <name>restoreLanguage</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <expr_stmt>
                        <expr><name>fDepth</name>--
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>startGeneralEntity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLResourceIdentifier</name>
                            </type>
                            <name>resId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>encoding</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>getState</name>
                                    <argument_list>()</argument_list>
                                </call>
                                ==
                                <name>STATE_NORMAL_PROCESSING</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fResultDepth</name>
                                            == 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>augs</name>
                                                        != <name>null</name> &amp;&amp;
                                                        <call>
                                                            <name><name>Boolean</name>.<name>TRUE</name>.
                                                                <name>equals</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>augs</name>.
                                                                                <name>getItem</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name><name>Constants</name>.
                                                                                            <name>ENTITY_SKIPPED</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name>reportFatalError</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"UnexpandedEntityReferenceIllegal"
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>fDocumentHandler</name>
                                                    !=
                                                    <name>null</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fDocumentHandler</name>.
                                                                    <name>startGeneralEntity</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>name</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>resId</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>encoding</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>augs</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>textDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>version</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>encoding</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDocumentHandler</name>
                                !=
                                <name>null</name>
                                &amp;&amp;
                                <call>
                                    <name>getState</name>
                                    <argument_list>()</argument_list>
                                </call>
                                ==
                                <name>STATE_NORMAL_PROCESSING</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDocumentHandler</name>.
                                                <name>textDecl</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>version</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>encoding</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>augs</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>endGeneralEntity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDocumentHandler</name>
                                !=
                                <name>null</name>
                                &amp;&amp;
                                <call>
                                    <name>getState</name>
                                    <argument_list>()</argument_list>
                                </call>
                                ==
                                <name>STATE_NORMAL_PROCESSING</name>
                                &amp;&amp; <name>fResultDepth</name> != 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDocumentHandler</name>.
                                                <name>endGeneralEntity</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>name</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>augs</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>characters</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLString</name>
                            </type>
                            <name>text</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>getState</name>
                                    <argument_list>()</argument_list>
                                </call>
                                ==
                                <name>STATE_NORMAL_PROCESSING</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fResultDepth</name>
                                            == 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>checkWhitespace</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>text</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>fDocumentHandler</name>
                                                    !=
                                                    <name>null</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <comment type="line">// we need to change the depth like this so
                                                        that modifyAugmentations() works
                                                    </comment>
                                                    <expr_stmt>
                                                        <expr><name>fDepth</name>++
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>augs</name>
                                                            =
                                                            <call>
                                                                <name>modifyAugmentations</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>augs</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fDocumentHandler</name>.
                                                                    <name>characters</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>text</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>augs</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr><name>fDepth</name>--
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>ignorableWhitespace</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLString</name>
                            </type>
                            <name>text</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDocumentHandler</name>
                                !=
                                <name>null</name>
                                &amp;&amp;
                                <call>
                                    <name>getState</name>
                                    <argument_list>()</argument_list>
                                </call>
                                ==
                                <name>STATE_NORMAL_PROCESSING</name>
                                &amp;&amp; <name>fResultDepth</name> != 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDocumentHandler</name>.
                                                <name>ignorableWhitespace</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>text</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>augs</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>startCDATA</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDocumentHandler</name>
                                !=
                                <name>null</name>
                                &amp;&amp;
                                <call>
                                    <name>getState</name>
                                    <argument_list>()</argument_list>
                                </call>
                                ==
                                <name>STATE_NORMAL_PROCESSING</name>
                                &amp;&amp; <name>fResultDepth</name> != 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDocumentHandler</name>.
                                                <name>startCDATA</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>augs</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>endCDATA</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDocumentHandler</name>
                                !=
                                <name>null</name>
                                &amp;&amp;
                                <call>
                                    <name>getState</name>
                                    <argument_list>()</argument_list>
                                </call>
                                ==
                                <name>STATE_NORMAL_PROCESSING</name>
                                &amp;&amp; <name>fResultDepth</name> != 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDocumentHandler</name>.
                                                <name>endCDATA</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>augs</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>endDocument</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>isRootDocument</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>!
                                            <name>fSeenRootElement</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>reportFatalError</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"RootElementRequired"</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fDocumentHandler</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fDocumentHandler</name>.
                                                            <name>endDocument</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>augs</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setDocumentSource</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLDocumentSource</name>
                            </type>
                            <name>source</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fDocumentSource</name>
                            =
                            <name>source</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>XMLDocumentSource</name>
                </type>
                <name>getDocumentSource</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fDocumentSource</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">// DTDHandler methods</comment>
            <comment type="line">// We are only interested in the notation and unparsed entity declarations,</comment>
            <comment type="line">// the rest we just pass on</comment>

            <comment type="block">/* (non-Javadoc)
                * @see org.apache.xerces.xni.XMLDTDHandler#attributeDecl(java.lang.String, java.lang.String,
                java.lang.String, java.lang.String[], java.lang.String, org.apache.xerces.xni.XMLString,
                org.apache.xerces.xni.XMLString, org.apache.xerces.xni.Augmentations)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>attributeDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>elementName</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>attributeName</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>String</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>enumeration</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>defaultType</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLString</name>
                            </type>
                            <name>defaultValue</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLString</name>
                            </type>
                            <name>nonNormalizedDefaultValue</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augmentations</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDTDHandler</name>.
                                                <name>attributeDecl</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>elementName</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>attributeName</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>type</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>enumeration</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>defaultType</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>defaultValue</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>nonNormalizedDefaultValue</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>augmentations</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="block">/* (non-Javadoc)
                * @see org.apache.xerces.xni.XMLDTDHandler#elementDecl(java.lang.String, java.lang.String,
                org.apache.xerces.xni.Augmentations)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>elementDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>contentModel</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augmentations</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDTDHandler</name>.
                                                <name>elementDecl</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>name</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>contentModel</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>augmentations</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="block">/* (non-Javadoc)
                * @see org.apache.xerces.xni.XMLDTDHandler#endAttlist(org.apache.xerces.xni.Augmentations)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>endAttlist</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augmentations</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDTDHandler</name>.
                                                <name>endAttlist</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>augmentations</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="block">/* (non-Javadoc)
                * @see org.apache.xerces.xni.XMLDTDHandler#endConditional(org.apache.xerces.xni.Augmentations)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>endConditional</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augmentations</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDTDHandler</name>.
                                                <name>endConditional</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>augmentations</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="block">/* (non-Javadoc)
                * @see org.apache.xerces.xni.XMLDTDHandler#endDTD(org.apache.xerces.xni.Augmentations)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>endDTD</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augmentations</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDTDHandler</name>.
                                                <name>endDTD</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>augmentations</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name>fInDTD</name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="block">/* (non-Javadoc)
                * @see org.apache.xerces.xni.XMLDTDHandler#endExternalSubset(org.apache.xerces.xni.Augmentations)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>endExternalSubset</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augmentations</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDTDHandler</name>.
                                                <name>endExternalSubset</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>augmentations</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="block">/* (non-Javadoc)
                * @see org.apache.xerces.xni.XMLDTDHandler#endParameterEntity(java.lang.String,
                org.apache.xerces.xni.Augmentations)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>endParameterEntity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augmentations</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDTDHandler</name>.
                                                <name>endParameterEntity</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>name</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>augmentations</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="block">/* (non-Javadoc)
                * @see org.apache.xerces.xni.XMLDTDHandler#externalEntityDecl(java.lang.String,
                org.apache.xerces.xni.XMLResourceIdentifier, org.apache.xerces.xni.Augmentations)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>externalEntityDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLResourceIdentifier</name>
                            </type>
                            <name>identifier</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augmentations</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDTDHandler</name>.
                                                <name>externalEntityDecl</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>name</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>identifier</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>augmentations</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="block">/* (non-Javadoc)
                * @see org.apache.xerces.xni.XMLDTDHandler#getDTDSource()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>XMLDTDSource</name>
                </type>
                <name>getDTDSource</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fDTDSource</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="block">/* (non-Javadoc)
                * @see org.apache.xerces.xni.XMLDTDHandler#ignoredCharacters(org.apache.xerces.xni.XMLString,
                org.apache.xerces.xni.Augmentations)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>ignoredCharacters</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLString</name>
                            </type>
                            <name>text</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augmentations</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDTDHandler</name>.
                                                <name>ignoredCharacters</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>text</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>augmentations</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="block">/* (non-Javadoc)
                * @see org.apache.xerces.xni.XMLDTDHandler#internalEntityDecl(java.lang.String,
                org.apache.xerces.xni.XMLString, org.apache.xerces.xni.XMLString, org.apache.xerces.xni.Augmentations)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>internalEntityDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLString</name>
                            </type>
                            <name>text</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLString</name>
                            </type>
                            <name>nonNormalizedText</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augmentations</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDTDHandler</name>.
                                                <name>internalEntityDecl</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>name</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>text</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>nonNormalizedText</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>augmentations</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="block">/* (non-Javadoc)
                * @see org.apache.xerces.xni.XMLDTDHandler#notationDecl(java.lang.String,
                org.apache.xerces.xni.XMLResourceIdentifier, org.apache.xerces.xni.Augmentations)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>notationDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLResourceIdentifier</name>
                            </type>
                            <name>identifier</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augmentations</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>this</name>.
                                    <name>addNotation</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>name</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>identifier</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>augmentations</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDTDHandler</name>.
                                                <name>notationDecl</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>name</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>identifier</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>augmentations</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="block">/* (non-Javadoc)
                * @see org.apache.xerces.xni.XMLDTDHandler#setDTDSource(org.apache.xerces.xni.parser.XMLDTDSource)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setDTDSource</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLDTDSource</name>
                            </type>
                            <name>source</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fDTDSource</name>
                            =
                            <name>source</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="block">/* (non-Javadoc)
                * @see org.apache.xerces.xni.XMLDTDHandler#startAttlist(java.lang.String,
                org.apache.xerces.xni.Augmentations)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>startAttlist</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>elementName</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augmentations</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDTDHandler</name>.
                                                <name>startAttlist</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>elementName</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>augmentations</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="block">/* (non-Javadoc)
                * @see org.apache.xerces.xni.XMLDTDHandler#startConditional(short, org.apache.xerces.xni.Augmentations)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>startConditional</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augmentations</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDTDHandler</name>.
                                                <name>startConditional</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>type</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>augmentations</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="block">/* (non-Javadoc)
                * @see org.apache.xerces.xni.XMLDTDHandler#startDTD(org.apache.xerces.xni.XMLLocator,
                org.apache.xerces.xni.Augmentations)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>startDTD</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLLocator</name>
                            </type>
                            <name>locator</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augmentations</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fInDTD</name>
                            = true
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDTDHandler</name>.
                                                <name>startDTD</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>locator</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>augmentations</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="block">/* (non-Javadoc)
                * @see
                org.apache.xerces.xni.XMLDTDHandler#startExternalSubset(org.apache.xerces.xni.XMLResourceIdentifier,
                org.apache.xerces.xni.Augmentations)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>startExternalSubset</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLResourceIdentifier</name>
                            </type>
                            <name>identifier</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augmentations</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDTDHandler</name>.
                                                <name>startExternalSubset</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>identifier</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>augmentations</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="block">/* (non-Javadoc)
                * @see org.apache.xerces.xni.XMLDTDHandler#startParameterEntity(java.lang.String,
                org.apache.xerces.xni.XMLResourceIdentifier, java.lang.String, org.apache.xerces.xni.Augmentations)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>startParameterEntity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLResourceIdentifier</name>
                            </type>
                            <name>identifier</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>encoding</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augmentations</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDTDHandler</name>.
                                                <name>startParameterEntity</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>name</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>identifier</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>encoding</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>augmentations</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="block">/* (non-Javadoc)
                * @see org.apache.xerces.xni.XMLDTDHandler#unparsedEntityDecl(java.lang.String,
                org.apache.xerces.xni.XMLResourceIdentifier, java.lang.String, org.apache.xerces.xni.Augmentations)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>unparsedEntityDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLResourceIdentifier</name>
                            </type>
                            <name>identifier</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>notation</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augmentations</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>this</name>.
                                    <name>addUnparsedEntity</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>name</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>identifier</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>notation</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>augmentations</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDTDHandler</name>.
                                                <name>unparsedEntityDecl</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>name</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>identifier</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>notation</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>augmentations</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="block">/* (non-Javadoc)
                * @see org.apache.xerces.xni.parser.XMLDTDSource#getDTDHandler()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>XMLDTDHandler</name>
                </type>
                <name>getDTDHandler</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fDTDHandler</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="block">/* (non-Javadoc)
                * @see org.apache.xerces.xni.parser.XMLDTDSource#setDTDHandler(org.apache.xerces.xni.XMLDTDHandler)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setDTDHandler</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLDTDHandler</name>
                            </type>
                            <name>handler</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fDTDHandler</name>
                            =
                            <name>handler</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="line">// XIncludeHandler methods</comment>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name>void</name>
                </type>
                <name>setErrorReporter</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLErrorReporter</name>
                            </type>
                            <name>reporter</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fErrorReporter</name>
                            =
                            <name>reporter</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fErrorReporter</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fErrorReporter</name>.
                                                <name>putMessageFormatter</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>XIncludeMessageFormatter</name>.
                                                            <name>XINCLUDE_DOMAIN</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>fXIncludeMessageFormatter</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <comment type="line">// this ensures the proper location is displayed in error
                                    messages
                                </comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fDocLocation</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fErrorReporter</name>.
                                                            <name>setDocumentLocator</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>fDocLocation</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>handleFallbackElement</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name>getSawInclude</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>fDepth</name>
                                                - 1
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name>getState</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            ==
                                            <name>STATE_IGNORE</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <return>return;</return>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>reportFatalError</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"FallbackParent"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setSawInclude</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>fDepth</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fNamespaceContext</name>.
                                    <name>setContextInvalid</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>getSawFallback</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>fDepth</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>reportFatalError</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"MultipleFallbacks"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>setSawFallback</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fDepth</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>true</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>

                    <comment type="line">// Either the state is STATE_EXPECT_FALLBACK or it's STATE_IGNORE.</comment>
                    <comment type="line">// If we're ignoring, we want to stay ignoring. But if we're expecting this
                        fallback element,
                    </comment>
                    <comment type="line">// we want to signal that we should process the children.</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>getState</name>
                                    <argument_list>()</argument_list>
                                </call>
                                ==
                                <name>STATE_EXPECT_FALLBACK</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>setState</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>STATE_NORMAL_PROCESSING</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>boolean</name>
                </type>
                <name>handleIncludeElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLAttributes</name>
                            </type>
                            <name>attributes</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>getSawInclude</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>fDepth</name>
                                                - 1
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>reportFatalError</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"IncludeChild"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>new
                                                        <name>
                                                            <name>Object</name>
                                                            <index>[]</index>
                                                        </name>
                                                        <block>{
                                                            <expr>
                                                                <name>XINCLUDE_INCLUDE</name>
                                                            </expr>
                                                            }
                                                        </block>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>getState</name>
                                    <argument_list>()</argument_list>
                                </call>
                                ==
                                <name>STATE_IGNORE</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>true</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setSawInclude</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>fDepth</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fNamespaceContext</name>.
                                    <name>setContextInvalid</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// TODO: does Java use IURIs by default?</comment>
                    <comment type="line">// [Definition: An internationalized URI reference, or IURI, is a URI reference
                        that directly uses [Unicode] characters.]
                    </comment>
                    <comment type="line">// TODO: figure out what section 4.1.1 of the XInclude spec is talking about
                    </comment>
                    <comment type="line">// has to do with disallowed ASCII character escaping</comment>
                    <comment type="line">// this ties in with the above IURI section, but I suspect Java already does
                        it
                    </comment>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>href</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>attributes</name>.
                                            <name>getValue</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>XINCLUDE_ATTR_HREF</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>parse</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>attributes</name>.
                                            <name>getValue</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>XINCLUDE_ATTR_PARSE</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>xpointer</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>attributes</name>.
                                            <name>getValue</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>XPOINTER</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>accept</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>attributes</name>.
                                            <name>getValue</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>XINCLUDE_ATTR_ACCEPT</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>acceptLanguage</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>attributes</name>.
                                            <name>getValue</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>XINCLUDE_ATTR_ACCEPT_LANGUAGE</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <name>parse</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>parse</name>
                                        =
                                        <name>XINCLUDE_PARSE_XML</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>href</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>href</name>
                                        =
                                        <name><name>XMLSymbols</name>.
                                            <name>EMPTY_STRING</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>href</name>.
                                        <name>length</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                == 0 &amp;&amp;
                                <call>
                                    <name><name>XINCLUDE_PARSE_XML</name>.
                                        <name>equals</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>parse</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>xpointer</name>
                                            ==
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>reportFatalError</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"XpointerMissing"</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <comment type="line">// When parse="xml" and an xpointer is specified
                                                treat
                                            </comment>
                                            <comment type="line">// all absences of the href attribute as a resource
                                                error.
                                            </comment>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>Locale</name>
                                                    </type>
                                                    <name>locale</name> =
                                                    <init>
                                                        <expr>(<name>fErrorReporter</name> != <name>null</name>) ?
                                                            <call>
                                                                <name><name>fErrorReporter</name>.
                                                                    <name>getLocale</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                            :
                                                            <name>null</name>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>String</name>
                                                    </type>
                                                    <name>reason</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name><name>fXIncludeMessageFormatter</name>.
                                                                    <name>formatMessage</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>locale</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>"XPointerStreamability"</expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>null</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>reportResourceError</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"XMLResourceError"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>new
                                                                    <name>
                                                                        <name>Object</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    <block>{
                                                                        <expr>
                                                                            <name>href</name>
                                                                        </expr>
                                                                        ,
                                                                        <expr>
                                                                            <name>reason</name>
                                                                        </expr>
                                                                        }
                                                                    </block>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <return>return <expr>false</expr>;
                                            </return>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>URI</name>
                            </type>
                            <name>hrefURI</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// Check whether href is correct and perform escaping as per section 4.1.1 of
                        the XInclude spec.
                    </comment>
                    <comment type="line">// Report fatal error if the href value contains a fragment identifier or if
                        the value after
                    </comment>
                    <comment type="line">// escaping is a syntactically invalid URI or IRI.</comment>
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>hrefURI</name>
                                    = new
                                    <call>
                                        <name>URI</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>href</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>true</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>hrefURI</name>.
                                                <name>getFragment</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>reportFatalError</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"HrefFragmentIdentifierIllegal"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>new
                                                                <name>
                                                                    <name>Object</name>
                                                                    <index>[]</index>
                                                                </name>
                                                                <block>{
                                                                    <expr>
                                                                        <name>href</name>
                                                                    </expr>
                                                                    }
                                                                </block>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name><name>URI</name>.
                                            <name>MalformedURIException</name>
                                        </name>
                                    </type>
                                    <name>exc</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                        </type>
                                        <name>newHref</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name>escapeHref</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>href</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>href</name>
                                            !=
                                            <name>newHref</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>href</name>
                                                    =
                                                    <name>newHref</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <try>try
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>hrefURI</name>
                                                            = new
                                                            <call>
                                                                <name>URI</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>href</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>true</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <call>
                                                                    <name><name>hrefURI</name>.
                                                                        <name>getFragment</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                                !=
                                                                <name>null</name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name>reportFatalError</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        "HrefFragmentIdentifierIllegal"
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>new
                                                                                        <name>
                                                                                            <name>Object</name>
                                                                                            <index>[]</index>
                                                                                        </name>
                                                                                        <block>{
                                                                                            <expr>
                                                                                                <name>href</name>
                                                                                            </expr>
                                                                                            }
                                                                                        </block>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    }
                                                </block>
                                                <catch>catch (
                                                    <param>
                                                        <decl>
                                                            <type>
                                                                <name><name>URI</name>.
                                                                    <name>MalformedURIException</name>
                                                                </name>
                                                            </type>
                                                            <name>exc2</name>
                                                        </decl>
                                                    </param>
                                                    )
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name>reportFatalError</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"HrefSyntacticallyInvalid"</expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>new
                                                                                <name>
                                                                                    <name>Object</name>
                                                                                    <index>[]</index>
                                                                                </name>
                                                                                <block>{
                                                                                    <expr>
                                                                                        <name>href</name>
                                                                                    </expr>
                                                                                    }
                                                                                </block>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </catch>
                                            </try>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>reportFatalError</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"HrefSyntacticallyInvalid"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>new
                                                                    <name>
                                                                        <name>Object</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    <block>{
                                                                        <expr>
                                                                            <name>href</name>
                                                                        </expr>
                                                                        }
                                                                    </block>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </catch>
                    </try>

                    <comment type="line">// Verify that if an accept and/or an accept-language attribute exist</comment>
                    <comment type="line">// that the value(s) don't contain disallowed characters.</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>accept</name>
                                != <name>null</name> &amp;&amp; !
                                <call>
                                    <name>isValidInHTTPHeader</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>accept</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>reportFatalError</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"AcceptMalformed"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>accept</name>
                                        =
                                        <name>null</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>acceptLanguage</name>
                                != <name>null</name> &amp;&amp; !
                                <call>
                                    <name>isValidInHTTPHeader</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>acceptLanguage</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>reportFatalError</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"AcceptLanguageMalformed"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>acceptLanguage</name>
                                        =
                                        <name>null</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XMLInputSource</name>
                            </type>
                            <name>includedSource</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fEntityResolver</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <try>try
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>XMLResourceIdentifier</name>
                                                </type>
                                                <name>resourceIdentifier</name> =
                                                <init>
                                                    <expr>new
                                                        <call>
                                                            <name>XMLResourceIdentifierImpl</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>null</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>href</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>fCurrentBaseURI</name>.
                                                                                <name>getExpandedSystemId</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>XMLEntityManager</name>.
                                                                                <name>expandSystemId</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>href</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>
                                                                                                fCurrentBaseURI</name>.
                                                                                                <name>
                                                                                                    getExpandedSystemId
                                                                                                </name>
                                                                                            </name>
                                                                                            <argument_list>()
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>false</expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>

                                        <expr_stmt>
                                            <expr>
                                                <name>includedSource</name>
                                                =
                                                <call>
                                                    <name><name>fEntityResolver</name>.
                                                        <name>resolveEntity</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>resourceIdentifier</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>

                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>includedSource</name>
                                                    != <name>null</name> &amp;&amp;
                                                    !(<name>includedSource</name>
                                                    <name>instanceof</name>
                                                    <name>HTTPInputSource</name>) &amp;&amp;
                                                    (<name>accept</name> != <name>null</name> || <name>acceptLanguage
                                                </name> != <name>null</name>) &amp;&amp;
                                                    <call>
                                                        <name><name>includedSource</name>.
                                                            <name>getCharacterStream</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    == <name>null</name> &amp;&amp;
                                                    <call>
                                                        <name><name>includedSource</name>.
                                                            <name>getByteStream</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    ==
                                                    <name>null</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{

                                                    <expr_stmt>
                                                        <expr>
                                                            <name>includedSource</name>
                                                            =
                                                            <call>
                                                                <name>createInputSource</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>includedSource</name>.
                                                                                    <name>getPublicId</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>includedSource</name>.
                                                                                    <name>getSystemId</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>includedSource</name>.
                                                                                    <name>getBaseSystemId</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>accept</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>acceptLanguage</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                    <catch>catch (
                                        <param>
                                            <decl>
                                                <type>
                                                    <name>IOException</name>
                                                </type>
                                                <name>e</name>
                                            </decl>
                                        </param>
                                        )
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>reportResourceError</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"XMLResourceError"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>new
                                                                    <name>
                                                                        <name>Object</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    <block>{
                                                                        <expr>
                                                                            <name>href</name>
                                                                        </expr>
                                                                        ,
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>e</name>.
                                                                                    <name>getMessage</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        }
                                                                    </block>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <return>return <expr>false</expr>;
                                            </return>
                                            }
                                        </block>
                                    </catch>
                                </try>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>includedSource</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// setup an HTTPInputSource if either of the content negotation
                                    attributes were specified.
                                </comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>accept</name>
                                            != <name>null</name> || <name>acceptLanguage</name> !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>includedSource</name>
                                                    =
                                                    <call>
                                                        <name>createInputSource</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>null</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>href</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>fCurrentBaseURI</name>.
                                                                            <name>getExpandedSystemId</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>accept</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>acceptLanguage</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>includedSource</name>
                                                    = new
                                                    <call>
                                                        <name>XMLInputSource</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>null</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>href</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>fCurrentBaseURI</name>.
                                                                            <name>getExpandedSystemId</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>parse</name>.
                                        <name>equals</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>XINCLUDE_PARSE_XML</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// Instead of always creating a new configuration, the first one
                                    can be reused
                                </comment>
                                <if>if
                                    <condition>(
                                        <expr>(<name>xpointer</name> != <name>null</name> &amp;&amp; <name>
                                            fXPointerChildConfig
                                        </name> == <name>null</name>)
                                            || (<name>xpointer</name> == <name>null</name> &amp;&amp; <name>
                                                fXIncludeChildConfig
                                            </name> == <name>null</name>)
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{

                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>String</name>
                                                    </type>
                                                    <name>parserName</name> =
                                                    <init>
                                                        <expr>
                                                            <name>XINCLUDE_DEFAULT_CONFIGURATION</name>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>xpointer</name>
                                                        !=
                                                        <name>null</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>parserName</name>
                                                            = "org.apache.xerces.parsers.XPointerParserConfiguration"
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                </then>
                                            </if>

                                            <expr_stmt>
                                                <expr>
                                                    <name>fChildConfig</name>
                                                    =
                                                    (<name>XMLParserConfiguration</name>)
                                                    <call>
                                                        <name><name>ObjectFactory</name>.
                                                            <name>newInstance</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>parserName</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>ObjectFactory</name>.
                                                                            <name>findClassLoader</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>true</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>

                                            <comment type="line">// use the same symbol table, error reporter, entity
                                                resolver, security manager and buffer size.
                                            </comment>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>fSymbolTable</name>
                                                        !=
                                                        <name>null</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fChildConfig</name>.
                                                                    <name>setProperty</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>SYMBOL_TABLE</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>fSymbolTable</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                </then>
                                            </if>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>fErrorReporter</name>
                                                        !=
                                                        <name>null</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fChildConfig</name>.
                                                                    <name>setProperty</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>ERROR_REPORTER</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>fErrorReporter</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                </then>
                                            </if>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>fEntityResolver</name>
                                                        !=
                                                        <name>null</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fChildConfig</name>.
                                                                    <name>setProperty</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>ENTITY_RESOLVER</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>fEntityResolver</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                </then>
                                            </if>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fChildConfig</name>.
                                                            <name>setProperty</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>SECURITY_MANAGER</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>fSecurityManager</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fChildConfig</name>.
                                                            <name>setProperty</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>BUFFER_SIZE</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>new
                                                                    <call>
                                                                        <name>Integer</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>fBufferSize</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>

                                            <comment type="line">// features must be copied to child configuration
                                            </comment>
                                            <expr_stmt>
                                                <expr>
                                                    <name>fNeedCopyFeatures</name>
                                                    = true
                                                </expr>
                                                ;
                                            </expr_stmt>

                                            <comment type="line">// use the same namespace context</comment>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fChildConfig</name>.
                                                            <name>setProperty</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Constants</name>.
                                                                        <name>XERCES_PROPERTY_PREFIX</name>
                                                                    </name>
                                                                    +
                                                                    <name><name>Constants</name>.
                                                                        <name>NAMESPACE_CONTEXT_PROPERTY</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>fNamespaceContext</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>

                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fChildConfig</name>.
                                                            <name>setFeature</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>XINCLUDE_FIXUP_BASE_URIS</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>fFixupBaseURIs</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>

                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fChildConfig</name>.
                                                            <name>setFeature</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>XINCLUDE_FIXUP_LANGUAGE</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>fFixupLanguage</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>


                                            <comment type="line">// If the xpointer attribute is present</comment>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>xpointer</name>
                                                        !=
                                                        <name>null</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{

                                                        <decl_stmt>
                                                            <decl>
                                                                <type>
                                                                    <name>XPointerHandler</name>
                                                                </type>
                                                                <name>newHandler</name> =
                                                                <init>
                                                                    <expr>(<name>XPointerHandler</name>)
                                                                        <call>
                                                                            <name><name>fChildConfig</name>.
                                                                                <name>getProperty</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name><name>Constants</name>.
                                                                                            <name>
                                                                                                XERCES_PROPERTY_PREFIX
                                                                                            </name>
                                                                                        </name>
                                                                                        +
                                                                                        <name><name>Constants</name>.
                                                                                            <name>
                                                                                                XPOINTER_HANDLER_PROPERTY
                                                                                            </name>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </decl_stmt>

                                                        <expr_stmt>
                                                            <expr>
                                                                <name>fXPtrProcessor</name>
                                                                =
                                                                <name>newHandler</name>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>

                                                        <comment type="line">// ???</comment>
                                                        <expr_stmt>
                                                            <expr>((<name>XPointerHandler</name>)<name>
                                                                fXPtrProcessor</name>).
                                                                <call>
                                                                    <name>setProperty</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>Constants</name>.
                                                                                    <name>XERCES_PROPERTY_PREFIX</name>
                                                                                </name>
                                                                                +
                                                                                <name><name>Constants</name>.
                                                                                    <name>NAMESPACE_CONTEXT_PROPERTY
                                                                                    </name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>fNamespaceContext</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>

                                                        <expr_stmt>
                                                            <expr>((<name>XPointerHandler</name>)<name>
                                                                fXPtrProcessor</name>).
                                                                <call>
                                                                    <name>setProperty</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>XINCLUDE_FIXUP_BASE_URIS</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>new
                                                                                <call>
                                                                                    <name>Boolean</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>fFixupBaseURIs
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>

                                                        <expr_stmt>
                                                            <expr>((<name>XPointerHandler</name>)<name>
                                                                fXPtrProcessor</name>).
                                                                <call>
                                                                    <name>setProperty</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>XINCLUDE_FIXUP_LANGUAGE</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>new
                                                                                <call>
                                                                                    <name>Boolean</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>fFixupLanguage
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>

                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>fErrorReporter</name>
                                                                    !=
                                                                    <name>null</name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <expr_stmt>
                                                                    <expr>((<name>XPointerHandler</name>)<name>
                                                                        fXPtrProcessor</name>).
                                                                        <call>
                                                                            <name>setProperty</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>ERROR_REPORTER</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>fErrorReporter</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                            </then>
                                                        </if>
                                                        <comment type="line">// ???</comment>

                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>newHandler</name>.
                                                                        <name>setParent</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>this</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>newHandler</name>.
                                                                        <name>setDocumentHandler</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>this</name>.
                                                                                        <name>getDocumentHandler</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>fXPointerChildConfig</name>
                                                                =
                                                                <name>fChildConfig</name>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                                <else>else
                                                    <block>{
                                                        <decl_stmt>
                                                            <decl>
                                                                <type>
                                                                    <name>XIncludeHandler</name>
                                                                </type>
                                                                <name>newHandler</name> =
                                                                <init>
                                                                    <expr>(<name>XIncludeHandler</name>)
                                                                        <call>
                                                                            <name><name>fChildConfig</name>.
                                                                                <name>getProperty</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name><name>Constants</name>.
                                                                                            <name>
                                                                                                XERCES_PROPERTY_PREFIX
                                                                                            </name>
                                                                                        </name>
                                                                                        +
                                                                                        <name><name>Constants</name>.
                                                                                            <name>
                                                                                                XINCLUDE_HANDLER_PROPERTY
                                                                                            </name>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </decl_stmt>

                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>newHandler</name>.
                                                                        <name>setParent</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>this</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>newHandler</name>.
                                                                        <name>setDocumentHandler</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>this</name>.
                                                                                        <name>getDocumentHandler</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>fXIncludeChildConfig</name>
                                                                =
                                                                <name>fChildConfig</name>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </else>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>

                                <comment type="line">// If an xpointer attribute is present</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>xpointer</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>fChildConfig</name>
                                                    =
                                                    <name>fXPointerChildConfig</name>
                                                </expr>
                                                ;
                                            </expr_stmt>

                                            <comment type="line">// Parse the XPointer expression</comment>
                                            <try>try
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>((<name>XPointerProcessor</name>)<name>
                                                            fXPtrProcessor</name>).
                                                            <call>
                                                                <name>parseXPointer</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>xpointer</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>

                                                    }
                                                </block>
                                                <catch>catch (
                                                    <param>
                                                        <decl>
                                                            <type>
                                                                <name>XNIException</name>
                                                            </type>
                                                            <name>ex</name>
                                                        </decl>
                                                    </param>
                                                    )
                                                    <block>{
                                                        <comment type="line">// report the XPointer error as a resource
                                                            error
                                                        </comment>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name>reportResourceError</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"XMLResourceError"</expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>new
                                                                                <name>
                                                                                    <name>Object</name>
                                                                                    <index>[]</index>
                                                                                </name>
                                                                                <block>{
                                                                                    <expr>
                                                                                        <name>href</name>
                                                                                    </expr>
                                                                                    ,
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>ex</name>.
                                                                                                <name>getMessage</name>
                                                                                            </name>
                                                                                            <argument_list>()
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    }
                                                                                </block>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <return>return <expr>false</expr>;
                                                        </return>
                                                        }
                                                    </block>
                                                </catch>
                                            </try>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>fChildConfig</name>
                                                    =
                                                    <name>fXIncludeChildConfig</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </else>
                                </if>

                                <comment type="line">// set all features on parserConfig to match this parser
                                    configuration
                                </comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fNeedCopyFeatures</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>copyFeatures</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>fSettings</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>fChildConfig</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <expr_stmt>
                                    <expr>
                                        <name>fNeedCopyFeatures</name>
                                        = false
                                    </expr>
                                    ;
                                </expr_stmt>

                                <try>try
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fNamespaceContext</name>.
                                                        <name>pushScope</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>

                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fChildConfig</name>.
                                                        <name>parse</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>includedSource</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <comment type="line">// necessary to make sure proper location is reported in
                                            errors
                                        </comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>fErrorReporter</name>
                                                    !=
                                                    <name>null</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fErrorReporter</name>.
                                                                    <name>setDocumentLocator</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>fDocLocation</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>

                                        <comment type="line">// If the xpointer attribute is present</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>xpointer</name>
                                                    !=
                                                    <name>null</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <comment type="line">// and it was not resolved</comment>
                                                    <if>if
                                                        <condition>(
                                                            <expr>!((<name>XPointerProcessor</name>)<name>
                                                                fXPtrProcessor</name>).
                                                                <call>
                                                                    <name>isXPointerResolved</name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <decl_stmt>
                                                                    <decl>
                                                                        <type>
                                                                            <name>Locale</name>
                                                                        </type>
                                                                        <name>locale</name> =
                                                                        <init>
                                                                            <expr>(<name>fErrorReporter</name> != <name>
                                                                                null</name>) ?
                                                                                <call>
                                                                                    <name><name>fErrorReporter</name>.
                                                                                        <name>getLocale</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                :
                                                                                <name>null</name>
                                                                            </expr>
                                                                        </init>
                                                                    </decl>
                                                                    ;
                                                                </decl_stmt>
                                                                <decl_stmt>
                                                                    <decl>
                                                                        <type>
                                                                            <name>String</name>
                                                                        </type>
                                                                        <name>reason</name> =
                                                                        <init>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>
                                                                                        fXIncludeMessageFormatter</name>
                                                                                        .
                                                                                        <name>formatMessage</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>locale</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                "XPointerResolutionUnsuccessful"
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>null</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </init>
                                                                    </decl>
                                                                    ;
                                                                </decl_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name>reportResourceError</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>"XMLResourceError"</expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>new
                                                                                        <name>
                                                                                            <name>Object</name>
                                                                                            <index>[]</index>
                                                                                        </name>
                                                                                        <block>{
                                                                                            <expr>
                                                                                                <name>href</name>
                                                                                            </expr>
                                                                                            ,
                                                                                            <expr>
                                                                                                <name>reason</name>
                                                                                            </expr>
                                                                                            }
                                                                                        </block>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <comment type="line">// use the fallback</comment>
                                                                <return>return <expr>false</expr>;
                                                                </return>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                    <catch>catch (
                                        <param>
                                            <decl>
                                                <type>
                                                    <name>XNIException</name>
                                                </type>
                                                <name>e</name>
                                            </decl>
                                        </param>
                                        )
                                        <block>{
                                            <comment type="line">// necessary to make sure proper location is reported
                                                in errors
                                            </comment>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>fErrorReporter</name>
                                                        !=
                                                        <name>null</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>fErrorReporter</name>.
                                                                        <name>setDocumentLocator</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>fDocLocation</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>reportFatalError</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"XMLParseError"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>new
                                                                    <name>
                                                                        <name>Object</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    <block>{
                                                                        <expr>
                                                                            <name>href</name>
                                                                        </expr>
                                                                        }
                                                                    </block>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </catch>
                                    <catch>catch (
                                        <param>
                                            <decl>
                                                <type>
                                                    <name>IOException</name>
                                                </type>
                                                <name>e</name>
                                            </decl>
                                        </param>
                                        )
                                        <block>{
                                            <comment type="line">// necessary to make sure proper location is reported
                                                in errors
                                            </comment>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>fErrorReporter</name>
                                                        !=
                                                        <name>null</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>fErrorReporter</name>.
                                                                        <name>setDocumentLocator</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>fDocLocation</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <comment type="line">// An IOException indicates that we had trouble reading
                                                the file, not
                                            </comment>
                                            <comment type="line">// that it was an invalid XML file. So we send a
                                                resource error, not a
                                            </comment>
                                            <comment type="line">// fatal error.</comment>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>reportResourceError</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"XMLResourceError"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>new
                                                                    <name>
                                                                        <name>Object</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    <block>{
                                                                        <expr>
                                                                            <name>href</name>
                                                                        </expr>
                                                                        ,
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>e</name>.
                                                                                    <name>getMessage</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        }
                                                                    </block>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <return>return <expr>false</expr>;
                                            </return>
                                            }
                                        </block>
                                    </catch>
                                    <finally>finally
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fNamespaceContext</name>.
                                                            <name>popScope</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </finally>
                                </try>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>parse</name>.
                                                <name>equals</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>XINCLUDE_PARSE_TEXT</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <comment type="line">// we only care about encoding for parse="text"</comment>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>String</name>
                                                </type>
                                                <name>encoding</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>attributes</name>.
                                                                <name>getValue</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>XINCLUDE_ATTR_ENCODING</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>includedSource</name>.
                                                        <name>setEncoding</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>encoding</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>XIncludeTextReader</name>
                                                </type>
                                                <name>textReader</name> =
                                                <init>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>

                                        <try>try
                                            <block>{
                                                <comment type="line">// Setup the appropriate text reader.</comment>
                                                <if>if
                                                    <condition>(
                                                        <expr>!
                                                            <name>fIsXML11</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name>fXInclude10TextReader</name>
                                                                        ==
                                                                        <name>null</name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>fXInclude10TextReader</name>
                                                                                = new
                                                                                <call>
                                                                                    <name>XIncludeTextReader</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>includedSource
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>this</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>fBufferSize</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </then>
                                                                <else>else
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>
                                                                                        fXInclude10TextReader</name>.
                                                                                        <name>setInputSource</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>includedSource
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </else>
                                                            </if>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>textReader</name>
                                                                    =
                                                                    <name>fXInclude10TextReader</name>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                    <else>else
                                                        <block>{
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name>fXInclude11TextReader</name>
                                                                        ==
                                                                        <name>null</name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>fXInclude11TextReader</name>
                                                                                = new
                                                                                <call>
                                                                                    <name>XInclude11TextReader</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>includedSource
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>this</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>fBufferSize</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </then>
                                                                <else>else
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>
                                                                                        fXInclude11TextReader</name>.
                                                                                        <name>setInputSource</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>includedSource
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </else>
                                                            </if>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>textReader</name>
                                                                    =
                                                                    <name>fXInclude11TextReader</name>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </else>
                                                </if>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>textReader</name>.
                                                                <name>setErrorReporter</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>fErrorReporter</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>textReader</name>.
                                                                <name>parse</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                            <comment type="line">// encoding errors</comment>
                                            <catch>catch (
                                                <param>
                                                    <decl>
                                                        <type>
                                                            <name>MalformedByteSequenceException</name>
                                                        </type>
                                                        <name>ex</name>
                                                    </decl>
                                                </param>
                                                )
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fErrorReporter</name>.
                                                                    <name>reportError</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>ex</name>.
                                                                                    <name>getDomain</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>ex</name>.
                                                                                    <name>getKey</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>ex</name>.
                                                                                    <name>getArguments</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>XMLErrorReporter</name>.
                                                                                <name>SEVERITY_FATAL_ERROR</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </catch>
                                            <catch>catch (
                                                <param>
                                                    <decl>
                                                        <type>
                                                            <name>CharConversionException</name>
                                                        </type>
                                                        <name>e</name>
                                                    </decl>
                                                </param>
                                                )
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fErrorReporter</name>.
                                                                    <name>reportError</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>XMLMessageFormatter</name>.
                                                                                <name>XML_DOMAIN</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>"CharConversionFailure"</expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>null</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>XMLErrorReporter</name>.
                                                                                <name>SEVERITY_FATAL_ERROR</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </catch>
                                            <catch>catch (
                                                <param>
                                                    <decl>
                                                        <type>
                                                            <name>IOException</name>
                                                        </type>
                                                        <name>e</name>
                                                    </decl>
                                                </param>
                                                )
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name>reportResourceError</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"TextResourceError"</expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>new
                                                                            <name>
                                                                                <name>Object</name>
                                                                                <index>[]</index>
                                                                            </name>
                                                                            <block>{
                                                                                <expr>
                                                                                    <name>href</name>
                                                                                </expr>
                                                                                ,
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>e</name>.
                                                                                            <name>getMessage</name>
                                                                                        </name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                }
                                                                            </block>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <return>return <expr>false</expr>;
                                                    </return>
                                                    }
                                                </block>
                                            </catch>
                                            <finally>finally
                                                <block>{
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>textReader</name>
                                                                !=
                                                                <name>null</name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <try>try
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>textReader</name>.
                                                                                        <name>close</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                    <catch>catch (
                                                                        <param>
                                                                            <decl>
                                                                                <type>
                                                                                    <name>IOException</name>
                                                                                </type>
                                                                                <name>e</name>
                                                                            </decl>
                                                                        </param>
                                                                        )
                                                                        <block>{
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name>reportResourceError</name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    "TextResourceError"
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>new
                                                                                                    <name>
                                                                                                        <name>Object
                                                                                                        </name>
                                                                                                        <index>[]
                                                                                                        </index>
                                                                                                    </name>
                                                                                                    <block>{
                                                                                                        <expr>
                                                                                                            <name>href
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                        ,
                                                                                                        <expr>
                                                                                                            <call>
                                                                                                                <name>
                                                                                                                    <name>
                                                                                                                        e</name>
                                                                                                                    .
                                                                                                                    <name>
                                                                                                                        getMessage
                                                                                                                    </name>
                                                                                                                </name>
                                                                                                                <argument_list>
                                                                                                                    ()
                                                                                                                </argument_list>
                                                                                                            </call>
                                                                                                        </expr>
                                                                                                        }
                                                                                                    </block>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            <return>return <expr>false</expr>;
                                                                            </return>
                                                                            }
                                                                        </block>
                                                                    </catch>
                                                                </try>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    }
                                                </block>
                                            </finally>
                                        </try>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>reportFatalError</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"InvalidParseValue"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>new
                                                                <name>
                                                                    <name>Object</name>
                                                                    <index>[]</index>
                                                                </name>
                                                                <block>{
                                                                    <expr>
                                                                        <name>parse</name>
                                                                    </expr>
                                                                    }
                                                                </block>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </else>
                            </if>
                        </else>
                    </if>
                    <return>return <expr>true</expr>;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns true if the element has the namespace "http://www.w3.org/2001/XInclude"
                * @param element the element to check
                * @return true if the element has the namespace "http://www.w3.org/2001/XInclude"
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>boolean</name>
                </type>
                <name>hasXIncludeNamespace</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>element</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// REVISIT: The namespace of this element should be bound</comment>
                    <comment type="line">// already. Why are we looking it up from the namespace</comment>
                    <comment type="line">// context? -- mrglavas</comment>
                    <return>return
                        <expr>
                            <name><name>element</name>.
                                <name>uri</name>
                            </name>
                            ==
                            <name>XINCLUDE_NS_URI</name>
                            ||
                            <call>
                                <name><name>fNamespaceContext</name>.
                                    <name>getURI</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>element</name>.
                                                <name>prefix</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            ==
                            <name>XINCLUDE_NS_URI</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Checks if the element is an &amp;lt;include&amp;gt; element. The element must have
                * the XInclude namespace, and a local name of "include".
                *
                * @param element the element to check
                * @return true if the element is an &amp;lt;include&amp;gt; element
                * @see #hasXIncludeNamespace(QName)
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>boolean</name>
                </type>
                <name>isIncludeElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>element</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>element</name>.<name>localpart</name>.
                                    <name>equals</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>XINCLUDE_INCLUDE</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            &amp;&amp;
                            <call>
                                <name>hasXIncludeNamespace</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>element</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Checks if the element is an &amp;lt;fallback&amp;gt; element. The element must have
                * the XInclude namespace, and a local name of "fallback".
                *
                * @param element the element to check
                * @return true if the element is an &amp;lt;fallback; element
                * @see #hasXIncludeNamespace(QName)
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>boolean</name>
                </type>
                <name>isFallbackElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>element</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>element</name>.<name>localpart</name>.
                                    <name>equals</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>XINCLUDE_FALLBACK</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            &amp;&amp;
                            <call>
                                <name>hasXIncludeNamespace</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>element</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns true if the current [base URI] is the same as the [base URI] that
                * was in effect on the include parent. This method should &lt;em&gt;only&lt;/em&gt; be called
                * when the current element is a top level included element, i.e. the direct child
                * of a fallback element, or the root elements in an included document.
                * The "include parent" is the element which, in the result infoset, will be the
                * direct parent of the current element.
                * @return true if the [base URIs] are the same string
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>boolean</name>
                </type>
                <name>sameBaseURIAsIncludeParent</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>parentBaseURI</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getIncludeParentBaseURI</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>baseURI</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>fCurrentBaseURI</name>.
                                            <name>getExpandedSystemId</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// REVISIT: should we use File#sameFile() ?</comment>
                    <comment type="line">// I think the benefit of using it is that it resolves host names</comment>
                    <comment type="line">// instead of just doing a string comparison.</comment>
                    <comment type="line">// TODO: [base URI] is still an open issue with the working group.</comment>
                    <comment type="line">// They're deciding if xml:base should be added if the [base URI] is different
                        in terms
                    </comment>
                    <comment type="line">// of resolving relative references, or if it should be added if they are
                        different at all.
                    </comment>
                    <comment type="line">// Revisit this after a final decision has been made.</comment>
                    <comment type="line">// The decision also affects whether we output the file name of the URI, or
                        just the path.
                    </comment>
                    <return>return
                        <expr>
                            <name>parentBaseURI</name>
                            != <name>null</name> &amp;&amp;
                            <call>
                                <name><name>parentBaseURI</name>.
                                    <name>equals</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>baseURI</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns true if the current [language] is equivalent to the [language] that
                * was in effect on the include parent, taking case-insensitivity into account
                * as per [RFC 3066]. This method should &lt;em&gt;only&lt;/em&gt; be called when the
                * current element is a top level included element, i.e. the direct child
                * of a fallback element, or the root elements in an included document.
                * The "include parent" is the element which, in the result infoset, will be the
                * direct parent of the current element.
                *
                * @return true if the [language] properties have the same value
                * taking case-insensitivity into account as per [RFC 3066].
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>boolean</name>
                </type>
                <name>sameLanguageAsIncludeParent</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>parentLanguage</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getIncludeParentLanguage</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>
                            <name>parentLanguage</name>
                            != <name>null</name> &amp;&amp;
                            <call>
                                <name><name>parentLanguage</name>.
                                    <name>equalsIgnoreCase</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>fCurrentLanguage</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Checks if the file indicated by the given XMLLocator has already been included
                * in the current stack.
                * @param includedSource the source to check for inclusion
                * @return true if the source has already been included
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>boolean</name>
                </type>
                <name>searchForRecursiveIncludes</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLLocator</name>
                            </type>
                            <name>includedSource</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>includedSystemId</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>includedSource</name>.
                                            <name>getExpandedSystemId</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <name>includedSystemId</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <try>try
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>includedSystemId</name>
                                                =
                                                <call>
                                                    <name><name>XMLEntityManager</name>.
                                                        <name>expandSystemId</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>includedSource</name>.
                                                                        <name>getLiteralSystemId</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>includedSource</name>.
                                                                        <name>getBaseSystemId</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>false</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                    <catch>catch (
                                        <param>
                                            <decl>
                                                <type>
                                                    <name>MalformedURIException</name>
                                                </type>
                                                <name>e</name>
                                            </decl>
                                        </param>
                                        )
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>reportFatalError</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"ExpandedSystemId"</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </catch>
                                </try>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>includedSystemId</name>.
                                        <name>equals</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <call>
                                                    <name><name>fCurrentBaseURI</name>.
                                                        <name>getExpandedSystemId</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>true</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>fParentXIncludeHandler</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <call>
                                <name><name>fParentXIncludeHandler</name>.
                                    <name>searchForRecursiveIncludes</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>includedSource</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns true if the current element is a top level included item. This means
                * it's either the child of a fallback element, or the top level item in an
                * included document
                * @return true if the current element is a top level included item
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>boolean</name>
                </type>
                <name>isTopLevelIncludedItem</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>isTopLevelIncludedItemViaInclude</name>
                                <argument_list>()</argument_list>
                            </call>
                            ||
                            <call>
                                <name>isTopLevelIncludedItemViaFallback</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>boolean</name>
                </type>
                <name>isTopLevelIncludedItemViaInclude</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fDepth</name>
                            == 1 &amp;&amp; !
                            <call>
                                <name>isRootDocument</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>boolean</name>
                </type>
                <name>isTopLevelIncludedItemViaFallback</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <comment type="line">// Technically, this doesn't check if the parent was a fallback, it also
                    </comment>
                    <comment type="line">// would return true if any of the parent's sibling elements were fallbacks.
                    </comment>
                    <comment type="line">// However, this doesn't matter, since we will always be ignoring elements
                    </comment>
                    <comment type="line">// whose parent's siblings were fallbacks.</comment>
                    <return>return
                        <expr>
                            <call>
                                <name>getSawFallback</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>fDepth</name>
                                            - 1
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Processes the XMLAttributes object of startElement() calls. Performs the following tasks:
                * &lt;ul&gt;
                * &lt;li&gt; If the element is a top level included item whose [base URI] is different from the
                * [base URI] of the include parent, then an xml:base attribute is added to specify the
                * true [base URI]
                * &lt;li&gt; For all namespace prefixes which are in-scope in an included item, but not in scope
                * in the include parent, a xmlns:prefix attribute is added
                * &lt;li&gt; For all attributes with a type of ENTITY, ENTITIES or NOTATIONS, the notations and
                * unparsed entities are processed as described in the spec, sections 4.5.1 and 4.5.2
                * &lt;/ul&gt;
                * @param attributes
                * @return
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>XMLAttributes</name>
                </type>
                <name>processAttributes</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLAttributes</name>
                            </type>
                            <name>attributes</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>isTopLevelIncludedItem</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// Modify attributes to fix the base URI (spec 4.5.5).</comment>
                                <comment type="line">// We only do it to top level included elements, which have a
                                    different
                                </comment>
                                <comment type="line">// base URI than their include parent.</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fFixupBaseURIs</name>
                                            &amp;&amp; !
                                            <call>
                                                <name>sameBaseURIAsIncludeParent</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>attributes</name>
                                                        ==
                                                        <name>null</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>attributes</name>
                                                                = new
                                                                <call>
                                                                    <name>XMLAttributesImpl</name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>

                                            <comment type="line">// This causes errors with schema validation, if the
                                                schema doesn't
                                            </comment>
                                            <comment type="line">// specify that these elements can have an xml:base
                                                attribute
                                            </comment>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>String</name>
                                                    </type>
                                                    <name>uri</name> =
                                                    <init>
                                                        <expr>
                                                            <name>null</name>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <try>try
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>uri</name>
                                                            =
                                                            <call>
                                                                <name><name>this</name>.
                                                                    <name>getRelativeBaseURI</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                                <catch>catch (
                                                    <param>
                                                        <decl>
                                                            <type>
                                                                <name>MalformedURIException</name>
                                                            </type>
                                                            <name>e</name>
                                                        </decl>
                                                    </param>
                                                    )
                                                    <block>{
                                                        <comment type="line">// this shouldn't ever happen, since by
                                                            definition, we had to traverse
                                                        </comment>
                                                        <comment type="line">// the same URIs to even get to this
                                                            place
                                                        </comment>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>uri</name>
                                                                =
                                                                <call>
                                                                    <name><name>fCurrentBaseURI</name>.
                                                                        <name>getExpandedSystemId</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </catch>
                                            </try>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>int</name>
                                                    </type>
                                                    <name>index</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name><name>attributes</name>.
                                                                    <name>addAttribute</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>XML_BASE_QNAME</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>XMLSymbols</name>.
                                                                                <name>fCDATASymbol</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>uri</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>attributes</name>.
                                                            <name>setSpecified</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>index</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>true</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>

                                <comment type="line">// Modify attributes to perform language-fixup (spec 4.5.6).
                                </comment>
                                <comment type="line">// We only do it to top level included elements, which have a
                                    different
                                </comment>
                                <comment type="line">// [language] than their include parent.</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fFixupLanguage</name>
                                            &amp;&amp; !
                                            <call>
                                                <name>sameLanguageAsIncludeParent</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>attributes</name>
                                                        ==
                                                        <name>null</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>attributes</name>
                                                                = new
                                                                <call>
                                                                    <name>XMLAttributesImpl</name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>int</name>
                                                    </type>
                                                    <name>index</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name><name>attributes</name>.
                                                                    <name>addAttribute</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>XML_LANG_QNAME</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>XMLSymbols</name>.
                                                                                <name>fCDATASymbol</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>fCurrentLanguage</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>attributes</name>.
                                                            <name>setSpecified</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>index</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>true</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>

                                <comment type="line">// Modify attributes of included items to do namespace-fixup. (spec
                                    4.5.4)
                                </comment>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Enumeration</name>
                                        </type>
                                        <name>inscopeNS</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>fNamespaceContext</name>.
                                                        <name>getAllPrefixes</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <while>while
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>inscopeNS</name>.
                                                    <name>hasMoreElements</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>String</name>
                                                </type>
                                                <name>prefix</name> =
                                                <init>
                                                    <expr>(<name>String</name>)
                                                        <call>
                                                            <name><name>inscopeNS</name>.
                                                                <name>nextElement</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>String</name>
                                                </type>
                                                <name>parentURI</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>fNamespaceContext</name>.
                                                                <name>getURIFromIncludeParent</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>prefix</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>String</name>
                                                </type>
                                                <name>uri</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>fNamespaceContext</name>.
                                                                <name>getURI</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>prefix</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>parentURI</name>
                                                    != <name>uri</name> &amp;&amp; <name>attributes</name> !=
                                                    <name>null</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>prefix</name>
                                                                ==
                                                                <name><name>XMLSymbols</name>.
                                                                    <name>EMPTY_STRING</name>
                                                                </name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>
                                                                            <call>
                                                                                <name>
                                                                                    <name>attributes</name>
                                                                                    .
                                                                                    <name>getValue</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name><name>
                                                                                                NamespaceContext</name>.
                                                                                                <name>XMLNS_URI</name>
                                                                                            </name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name><name>
                                                                                                XMLSymbols</name>.
                                                                                                <name>PREFIX_XMLNS
                                                                                                </name>
                                                                                            </name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                            ==
                                                                            <name>null</name>
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{
                                                                            <if>if
                                                                                <condition>(
                                                                                    <expr>
                                                                                        <name>attributes</name>
                                                                                        ==
                                                                                        <name>null</name>
                                                                                    </expr>
                                                                                    )
                                                                                </condition>
                                                                                <then>
                                                                                    <block>{
                                                                                        <expr_stmt>
                                                                                            <expr>
                                                                                                <name>attributes</name>
                                                                                                = new
                                                                                                <call>
                                                                                                    <name>
                                                                                                        XMLAttributesImpl
                                                                                                    </name>
                                                                                                    <argument_list>()
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                            ;
                                                                                        </expr_stmt>
                                                                                        }
                                                                                    </block>
                                                                                </then>
                                                                            </if>

                                                                            <decl_stmt>
                                                                                <decl>
                                                                                    <type>
                                                                                        <name>QName</name>
                                                                                    </type>
                                                                                    <name>ns</name> =
                                                                                    <init>
                                                                                        <expr>(<name>QName</name>)
                                                                                            <call>
                                                                                                <name><name>
                                                                                                    NEW_NS_ATTR_QNAME</name>
                                                                                                    .
                                                                                                    <name>clone</name>
                                                                                                </name>
                                                                                                <argument_list>()
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                    </init>
                                                                                </decl>
                                                                                ;
                                                                            </decl_stmt>
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <name><name>ns</name>.
                                                                                        <name>prefix</name>
                                                                                    </name>
                                                                                    =
                                                                                    <name>null</name>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <name><name>ns</name>.
                                                                                        <name>localpart</name>
                                                                                    </name>
                                                                                    =
                                                                                    <name><name>XMLSymbols</name>.
                                                                                        <name>PREFIX_XMLNS</name>
                                                                                    </name>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <name><name>ns</name>.
                                                                                        <name>rawname</name>
                                                                                    </name>
                                                                                    =
                                                                                    <name><name>XMLSymbols</name>.
                                                                                        <name>PREFIX_XMLNS</name>
                                                                                    </name>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            <decl_stmt>
                                                                                <decl>
                                                                                    <type>
                                                                                        <name>int</name>
                                                                                    </type>
                                                                                    <name>index</name> =
                                                                                    <init>
                                                                                        <expr>
                                                                                            <call>
                                                                                                <name><name>
                                                                                                    attributes</name>.
                                                                                                    <name>addAttribute
                                                                                                    </name>
                                                                                                </name>
                                                                                                <argument_list>(
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <name>ns
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    ,
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <name><name>
                                                                                                                XMLSymbols</name>
                                                                                                                .
                                                                                                                <name>
                                                                                                                    fCDATASymbol
                                                                                                                </name>
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    ,
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <name>uri
                                                                                                            </name>
                                                                                                            != <name>
                                                                                                            null
                                                                                                        </name> ? <name>
                                                                                                            uri
                                                                                                        </name> :
                                                                                                            <name><name>
                                                                                                                XMLSymbols</name>
                                                                                                                .
                                                                                                                <name>
                                                                                                                    EMPTY_STRING
                                                                                                                </name>
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    )
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                    </init>
                                                                                </decl>
                                                                                ;
                                                                            </decl_stmt>
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>attributes</name>.
                                                                                            <name>setSpecified</name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>index</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>true</expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            <comment type="line">// Need to re-declare
                                                                                this prefix in the current context
                                                                            </comment>
                                                                            <comment type="line">// in order for the SAX
                                                                                parser to report the appropriate
                                                                            </comment>
                                                                            <comment type="line">// start and end prefix
                                                                                mapping events. -- mrglavas
                                                                            </comment>
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>
                                                                                            fNamespaceContext</name>.
                                                                                            <name>declarePrefix</name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>prefix</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>uri</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            }
                                                                        </block>
                                                                    </then>
                                                                </if>
                                                                }
                                                            </block>
                                                        </then>
                                                        <else>else
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>attributes</name>.
                                                                                <name>getValue</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name><name>
                                                                                            NamespaceContext</name>.
                                                                                            <name>XMLNS_URI</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>prefix</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                        ==
                                                                        <name>null</name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <if>if
                                                                            <condition>(
                                                                                <expr>
                                                                                    <name>attributes</name>
                                                                                    ==
                                                                                    <name>null</name>
                                                                                </expr>
                                                                                )
                                                                            </condition>
                                                                            <then>
                                                                                <block>{
                                                                                    <expr_stmt>
                                                                                        <expr>
                                                                                            <name>attributes</name>
                                                                                            = new
                                                                                            <call>
                                                                                                <name>
                                                                                                    XMLAttributesImpl
                                                                                                </name>
                                                                                                <argument_list>()
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                        ;
                                                                                    </expr_stmt>
                                                                                    }
                                                                                </block>
                                                                            </then>
                                                                        </if>

                                                                        <decl_stmt>
                                                                            <decl>
                                                                                <type>
                                                                                    <name>QName</name>
                                                                                </type>
                                                                                <name>ns</name> =
                                                                                <init>
                                                                                    <expr>(<name>QName</name>)
                                                                                        <call>
                                                                                            <name><name>
                                                                                                NEW_NS_ATTR_QNAME</name>
                                                                                                .
                                                                                                <name>clone</name>
                                                                                            </name>
                                                                                            <argument_list>()
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                </init>
                                                                            </decl>
                                                                            ;
                                                                        </decl_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name><name>ns</name>.
                                                                                    <name>localpart</name>
                                                                                </name>
                                                                                =
                                                                                <name>prefix</name>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name><name>ns</name>.
                                                                                    <name>rawname</name>
                                                                                </name>
                                                                                +=
                                                                                <name>prefix</name>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name><name>ns</name>.
                                                                                    <name>rawname</name>
                                                                                </name>
                                                                                = (<name>fSymbolTable</name> != <name>
                                                                                null</name>) ?
                                                                                <call>
                                                                                    <name><name>fSymbolTable</name>.
                                                                                        <name>addSymbol</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name><name>ns</name>.
                                                                                                    <name>rawname</name>
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                                :
                                                                                <call>
                                                                                    <name><name>ns</name>.<name>
                                                                                        rawname</name>.
                                                                                        <name>intern</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <decl_stmt>
                                                                            <decl>
                                                                                <type>
                                                                                    <name>int</name>
                                                                                </type>
                                                                                <name>index</name> =
                                                                                <init>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>
                                                                                                attributes</name>.
                                                                                                <name>addAttribute
                                                                                                </name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>ns</name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                ,
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name><name>
                                                                                                            XMLSymbols</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                fCDATASymbol
                                                                                                            </name>
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                ,
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>uri</name>
                                                                                                        != <name>null
                                                                                                    </name> ? <name>
                                                                                                        uri
                                                                                                    </name> :
                                                                                                        <name><name>
                                                                                                            XMLSymbols</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                EMPTY_STRING
                                                                                                            </name>
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                </init>
                                                                            </decl>
                                                                            ;
                                                                        </decl_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>attributes</name>.
                                                                                        <name>setSpecified</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>index</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>true</expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <comment type="line">// Need to re-declare this
                                                                            prefix in the current context
                                                                        </comment>
                                                                        <comment type="line">// in order for the SAX
                                                                            parser to report the appropriate
                                                                        </comment>
                                                                        <comment type="line">// start and end prefix
                                                                            mapping events. -- mrglavas
                                                                        </comment>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>fNamespaceContext</name>
                                                                                        .
                                                                                        <name>declarePrefix</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>prefix</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>uri</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </then>
                                                            </if>
                                                        </else>
                                                    </if>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </while>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>attributes</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>length</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>attributes</name>.
                                                        <name>getLength</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <for>for (
                                    <init>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>i</name> =
                                            <init>
                                                <expr>0</expr>
                                            </init>
                                        </decl>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            &lt;
                                            <name>length</name>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr><name>i</name>++
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>String</name>
                                                </type>
                                                <name>type</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>attributes</name>.
                                                                <name>getType</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>i</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>String</name>
                                                </type>
                                                <name>value</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>attributes</name>.
                                                                <name>getValue</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>i</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>type</name>
                                                    ==
                                                    <name><name>XMLSymbols</name>.
                                                        <name>fENTITYSymbol</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>this</name>.
                                                                    <name>checkUnparsedEntity</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>value</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>type</name>
                                                    ==
                                                    <name><name>XMLSymbols</name>.
                                                        <name>fENTITIESSymbol</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <comment type="line">// 4.5.1 - Unparsed Entities</comment>
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>StringTokenizer</name>
                                                            </type>
                                                            <name>st</name> =
                                                            <init>
                                                                <expr>new
                                                                    <call>
                                                                        <name>StringTokenizer</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>value</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <while>while
                                                        <condition>(
                                                            <expr>
                                                                <call>
                                                                    <name><name>st</name>.
                                                                        <name>hasMoreTokens</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <block>{
                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <name>String</name>
                                                                    </type>
                                                                    <name>entName</name> =
                                                                    <init>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>st</name>.
                                                                                    <name>nextToken</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>this</name>.
                                                                            <name>checkUnparsedEntity</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>entName</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </while>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>type</name>
                                                            ==
                                                            <name><name>XMLSymbols</name>.
                                                                <name>fNOTATIONSymbol</name>
                                                            </name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <comment type="line">// 4.5.2 - Notations</comment>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>this</name>.
                                                                            <name>checkNotation</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>value</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                            </else>
                                        </if>
                                        <comment type="block">/* We actually don't need to do anything for 4.5.3,
                                            because at this stage the
                                            * value of the attribute is just a string. It will be taken care of later
                                            * in the pipeline, when the IDREFs are actually resolved against IDs.
                                            *
                                            * if (type == XMLSymbols.fIDREFSymbol || type == XMLSymbols.fIDREFSSymbol) {
                                            }
                                            */
                                        </comment>
                                        }
                                    </block>
                                </for>
                                }
                            </block>
                        </then>
                    </if>

                    <return>return
                        <expr>
                            <name>attributes</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns a URI, relative to the include parent's base URI, of the current
                * [base URI]. For instance, if the current [base URI] was "dir1/dir2/file.xml"
                * and the include parent's [base URI] was "dir/", this would return "dir2/file.xml".
                * @return the relative URI
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>String</name>
                </type>
                <name>getRelativeBaseURI</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>MalformedURIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>includeParentDepth</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getIncludeParentDepth</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>relativeURI</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>this</name>.
                                            <name>getRelativeURI</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>includeParentDepth</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>isRootDocument</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>relativeURI</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>relativeURI</name>.
                                                    <name>equals</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>""</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>relativeURI</name>
                                                    =
                                                    <call>
                                                        <name><name>fCurrentBaseURI</name>.
                                                            <name>getLiteralSystemId</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>

                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>includeParentDepth</name>
                                            == 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>fParentRelativeURI</name>
                                                        ==
                                                        <name>null</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>fParentRelativeURI</name>
                                                                =
                                                                <call>
                                                                    <name><name>fParentXIncludeHandler</name>.
                                                                        <name>getRelativeBaseURI</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name><name>fParentRelativeURI</name>.
                                                                <name>equals</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>""</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <return>return
                                                            <expr>
                                                                <name>relativeURI</name>
                                                            </expr>
                                                            ;
                                                        </return>
                                                        }
                                                    </block>
                                                </then>
                                            </if>

                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>URI</name>
                                                    </type>
                                                    <name>base</name> =
                                                    <init>
                                                        <expr>new
                                                            <call>
                                                                <name>URI</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>fParentRelativeURI</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>true</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>URI</name>
                                                    </type>
                                                    <name>uri</name> =
                                                    <init>
                                                        <expr>new
                                                            <call>
                                                                <name>URI</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>base</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>relativeURI</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>

                                            <comment type="javadoc">/** Check whether the scheme components are equal.
                                                */
                                            </comment>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <specifier>final</specifier>
                                                        <name>String</name>
                                                    </type>
                                                    <name>baseScheme</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name><name>base</name>.
                                                                    <name>getScheme</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <specifier>final</specifier>
                                                        <name>String</name>
                                                    </type>
                                                    <name>literalScheme</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name><name>uri</name>.
                                                                    <name>getScheme</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>!
                                                        <call>
                                                            <name>isEqual</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>baseScheme</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>literalScheme</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <return>return
                                                            <expr>
                                                                <name>relativeURI</name>
                                                            </expr>
                                                            ;
                                                        </return>
                                                        }
                                                    </block>
                                                </then>
                                            </if>

                                            <comment type="javadoc">/** Check whether the authority components are
                                                equal. */
                                            </comment>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <specifier>final</specifier>
                                                        <name>String</name>
                                                    </type>
                                                    <name>baseAuthority</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name><name>base</name>.
                                                                    <name>getAuthority</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <specifier>final</specifier>
                                                        <name>String</name>
                                                    </type>
                                                    <name>literalAuthority</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name><name>uri</name>.
                                                                    <name>getAuthority</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>!
                                                        <call>
                                                            <name>isEqual</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>baseAuthority</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>literalAuthority</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <return>return
                                                            <expr>
                                                                <call>
                                                                    <name><name>uri</name>.
                                                                        <name>getSchemeSpecificPart</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </return>
                                                        }
                                                    </block>
                                                </then>
                                            </if>

                                            <comment type="javadoc">/**
                                                * The scheme and authority components are equal,
                                                * return the path and the possible query and/or
                                                * fragment which follow.
                                                */
                                            </comment>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <specifier>final</specifier>
                                                        <name>String</name>
                                                    </type>
                                                    <name>literalPath</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name><name>uri</name>.
                                                                    <name>getPath</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <specifier>final</specifier>
                                                        <name>String</name>
                                                    </type>
                                                    <name>literalQuery</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name><name>uri</name>.
                                                                    <name>getQueryString</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <specifier>final</specifier>
                                                        <name>String</name>
                                                    </type>
                                                    <name>literalFragment</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name><name>uri</name>.
                                                                    <name>getFragment</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>literalQuery</name>
                                                        != <name>null</name> || <name>literalFragment</name> !=
                                                        <name>null</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <decl_stmt>
                                                            <decl>
                                                                <type>
                                                                    <name>StringBuffer</name>
                                                                </type>
                                                                <name>buffer</name> =
                                                                <init>
                                                                    <expr>new
                                                                        <call>
                                                                            <name>StringBuffer</name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </decl_stmt>
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>literalPath</name>
                                                                    !=
                                                                    <name>null</name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>buffer</name>.
                                                                                    <name>append</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>literalPath</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>literalQuery</name>
                                                                    !=
                                                                    <name>null</name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>buffer</name>.
                                                                                    <name>append</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>'?'</expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>buffer</name>.
                                                                                    <name>append</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>literalQuery</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>literalFragment</name>
                                                                    !=
                                                                    <name>null</name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>buffer</name>.
                                                                                    <name>append</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>'#'</expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>buffer</name>.
                                                                                    <name>append</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>literalFragment</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        <return>return
                                                            <expr>
                                                                <call>
                                                                    <name><name>buffer</name>.
                                                                        <name>toString</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </return>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <return>return
                                                <expr>
                                                    <name>literalPath</name>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <return>return
                                                <expr>
                                                    <name>relativeURI</name>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the [base URI] of the include parent.
                * @return the base URI of the include parent.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>String</name>
                </type>
                <name>getIncludeParentBaseURI</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>depth</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getIncludeParentDepth</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name>isRootDocument</name>
                                    <argument_list>()</argument_list>
                                </call>
                                &amp;&amp; <name>depth</name> == 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <call>
                                            <name><name>fParentXIncludeHandler</name>.
                                                <name>getIncludeParentBaseURI</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <return>return
                                    <expr>
                                        <call>
                                            <name><name>this</name>.
                                                <name>getBaseURI</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>depth</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the [language] of the include parent.
                *
                * @return the language property of the include parent.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>String</name>
                </type>
                <name>getIncludeParentLanguage</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>depth</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getIncludeParentDepth</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name>isRootDocument</name>
                                    <argument_list>()</argument_list>
                                </call>
                                &amp;&amp; <name>depth</name> == 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <call>
                                            <name><name>fParentXIncludeHandler</name>.
                                                <name>getIncludeParentLanguage</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <return>return
                                    <expr>
                                        <call>
                                            <name>getLanguage</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>depth</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the depth of the include parent. Here, the include parent is
                * calculated as the last non-include or non-fallback element. It is assumed
                * this method is called when the current element is a top level included item.
                * Returning 0 indicates that the top level element in this document
                * was an include element.
                * @return the depth of the top level include element
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>int</name>
                </type>
                <name>getIncludeParentDepth</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <comment type="line">// We don't start at fDepth, since it is either the top level included item,
                    </comment>
                    <comment type="line">// or an include element, when this method is called.</comment>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>
                                        <name>fDepth</name>
                                        - 1
                                    </expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &gt;= 0
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>--
                            </expr>
                        </incr>
                        )
                        <block>{
                            <comment type="line">// This technically might not always return the first
                                non-include/fallback
                            </comment>
                            <comment type="line">// element that it comes to, since sawFallback() returns true if a
                                fallback
                            </comment>
                            <comment type="line">// was ever encountered at that depth. However, if a fallback was
                                encountered
                            </comment>
                            <comment type="line">// at that depth, and it wasn't the direct descendant of the current
                                element
                            </comment>
                            <comment type="line">// then we can't be in a situation where we're calling this method
                                (because
                            </comment>
                            <comment type="line">// we'll always be in STATE_IGNORE)</comment>
                            <if>if
                                <condition>(
                                    <expr>!
                                        <call>
                                            <name>getSawInclude</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>i</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        &amp;&amp; !
                                        <call>
                                            <name>getSawFallback</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>i</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>
                                                <name>i</name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    <comment type="line">// shouldn't get here, since depth 0 should never have an include element or
                    </comment>
                    <comment type="line">// a fallback element</comment>
                    <return>return <expr>0</expr>;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the current element depth of the result infoset.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>int</name>
                </type>
                <name>getResultDepth</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fResultDepth</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Modify the augmentations. Add an [included] infoset item, if the current
                * element is a top level included item.
                * @param augs the Augmentations to modify.
                * @return the modified Augmentations
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>Augmentations</name>
                </type>
                <name>modifyAugmentations</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>modifyAugmentations</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>augs</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Modify the augmentations. Add an [included] infoset item, if &lt;code&gt;force&lt;/code&gt;
                * is true, or if the current element is a top level included item.
                * @param augs the Augmentations to modify.
                * @param force whether to force modification
                * @return the modified Augmentations
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>Augmentations</name>
                </type>
                <name>modifyAugmentations</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>force</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>force</name>
                                ||
                                <call>
                                    <name>isTopLevelIncludedItem</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>augs</name>
                                            ==
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>augs</name>
                                                    = new
                                                    <call>
                                                        <name>AugmentationsImpl</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>augs</name>.
                                                <name>putItem</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>XINCLUDE_INCLUDED</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>Boolean</name>.
                                                            <name>TRUE</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>augs</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>int</name>
                </type>
                <name>getState</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>depth</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>
                                <name>fState</name>
                                <index>[
                                    <expr>
                                        <name>depth</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>int</name>
                </type>
                <name>getState</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>
                                <name>fState</name>
                                <index>[
                                    <expr>
                                        <name>fDepth</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>setState</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>state</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDepth</name>
                                &gt;=
                                <name><name>fState</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                            <index>[]</index>
                                        </type>
                                        <name>newarray</name> =
                                        <init>
                                            <expr>new
                                                <name>
                                                    <name>int</name>
                                                    <index>[
                                                        <expr>
                                                            <name>fDepth</name>
                                                            * 2
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.
                                                <name>arraycopy</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fState</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>0</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>newarray</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>0</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>fState</name>.
                                                            <name>length</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fState</name>
                                        =
                                        <name>newarray</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fState</name>
                                <index>[
                                    <expr>
                                        <name>fDepth</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <name>state</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Records that an &amp;lt;fallback&amp;gt; was encountered at the specified depth,
                * as an ancestor of the current element, or as a sibling of an ancestor of the
                * current element.
                *
                * @param depth
                * @param val
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>setSawFallback</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>depth</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>val</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>depth</name>
                                &gt;=
                                <name><name>fSawFallback</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>boolean</name>
                                            <index>[]</index>
                                        </type>
                                        <name>newarray</name> =
                                        <init>
                                            <expr>new
                                                <name>
                                                    <name>boolean</name>
                                                    <index>[
                                                        <expr>
                                                            <name>depth</name>
                                                            * 2
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.
                                                <name>arraycopy</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fSawFallback</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>0</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>newarray</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>0</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>fSawFallback</name>.
                                                            <name>length</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fSawFallback</name>
                                        =
                                        <name>newarray</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fSawFallback</name>
                                <index>[
                                    <expr>
                                        <name>depth</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <name>val</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns whether an &amp;lt;fallback&amp;gt; was encountered at the specified depth,
                * as an ancestor of the current element, or as a sibling of an ancestor of the
                * current element.
                *
                * @param depth
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>boolean</name>
                </type>
                <name>getSawFallback</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>depth</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>depth</name>
                                &gt;=
                                <name><name>fSawFallback</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>
                                <name>fSawFallback</name>
                                <index>[
                                    <expr>
                                        <name>depth</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Records that an &amp;lt;include&amp;gt; was encountered at the specified depth,
                * as an ancestor of the current item.
                *
                * @param depth
                * @param val
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>setSawInclude</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>depth</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>val</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>depth</name>
                                &gt;=
                                <name><name>fSawInclude</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>boolean</name>
                                            <index>[]</index>
                                        </type>
                                        <name>newarray</name> =
                                        <init>
                                            <expr>new
                                                <name>
                                                    <name>boolean</name>
                                                    <index>[
                                                        <expr>
                                                            <name>depth</name>
                                                            * 2
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.
                                                <name>arraycopy</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fSawInclude</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>0</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>newarray</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>0</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>fSawInclude</name>.
                                                            <name>length</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fSawInclude</name>
                                        =
                                        <name>newarray</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fSawInclude</name>
                                <index>[
                                    <expr>
                                        <name>depth</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <name>val</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Return whether an &amp;lt;include&amp;gt; was encountered at the specified depth,
                * as an ancestor of the current item.
                *
                * @param depth
                * @return
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>boolean</name>
                </type>
                <name>getSawInclude</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>depth</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>depth</name>
                                &gt;=
                                <name><name>fSawInclude</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>
                                <name>fSawInclude</name>
                                <index>[
                                    <expr>
                                        <name>depth</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>reportResourceError</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>key</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>this</name>.
                                    <name>reportFatalError</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>key</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>reportResourceError</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>key</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Object</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>args</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>this</name>.
                                    <name>reportError</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>key</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>args</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>XMLErrorReporter</name>.
                                                <name>SEVERITY_WARNING</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>reportFatalError</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>key</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>this</name>.
                                    <name>reportFatalError</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>key</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>reportFatalError</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>key</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Object</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>args</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>this</name>.
                                    <name>reportError</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>key</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>args</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>XMLErrorReporter</name>.
                                                <name>SEVERITY_FATAL_ERROR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name>void</name>
                </type>
                <name>reportError</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>key</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Object</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>args</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>severity</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fErrorReporter</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fErrorReporter</name>.
                                                <name>reportError</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>XIncludeMessageFormatter</name>.
                                                            <name>XINCLUDE_DOMAIN</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>key</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>args</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>severity</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">// we won't worry about when error reporter is null, since there should always
                        be
                    </comment>
                    <comment type="line">// at least the default error reporter</comment>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Set the parent of this XIncludeHandler in the tree
                * @param parent
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>setParent</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XIncludeHandler</name>
                            </type>
                            <name>parent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fParentXIncludeHandler</name>
                            =
                            <name>parent</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="line">// used to know whether to pass declarations to the document handler</comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>boolean</name>
                </type>
                <name>isRootDocument</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fParentXIncludeHandler</name>
                            ==
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Caches an unparsed entity.
                * @param name the name of the unparsed entity
                * @param identifier the location of the unparsed entity
                * @param augmentations any Augmentations that were on the original unparsed entity declaration
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>addUnparsedEntity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLResourceIdentifier</name>
                            </type>
                            <name>identifier</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>notation</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augmentations</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>UnparsedEntity</name>
                            </type>
                            <name>ent</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>UnparsedEntity</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>ent</name>.
                                <name>name</name>
                            </name>
                            =
                            <name>name</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>ent</name>.
                                <name>systemId</name>
                            </name>
                            =
                            <call>
                                <name><name>identifier</name>.
                                    <name>getLiteralSystemId</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>ent</name>.
                                <name>publicId</name>
                            </name>
                            =
                            <call>
                                <name><name>identifier</name>.
                                    <name>getPublicId</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>ent</name>.
                                <name>baseURI</name>
                            </name>
                            =
                            <call>
                                <name><name>identifier</name>.
                                    <name>getBaseSystemId</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>ent</name>.
                                <name>expandedSystemId</name>
                            </name>
                            =
                            <call>
                                <name><name>identifier</name>.
                                    <name>getExpandedSystemId</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>ent</name>.
                                <name>notation</name>
                            </name>
                            =
                            <name>notation</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>ent</name>.
                                <name>augmentations</name>
                            </name>
                            =
                            <name>augmentations</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fUnparsedEntities</name>.
                                    <name>add</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>ent</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Caches a notation.
                * @param name the name of the notation
                * @param identifier the location of the notation
                * @param augmentations any Augmentations that were on the original notation declaration
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>addNotation</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLResourceIdentifier</name>
                            </type>
                            <name>identifier</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augmentations</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Notation</name>
                            </type>
                            <name>not</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>Notation</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>not</name>.
                                <name>name</name>
                            </name>
                            =
                            <name>name</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>not</name>.
                                <name>systemId</name>
                            </name>
                            =
                            <call>
                                <name><name>identifier</name>.
                                    <name>getLiteralSystemId</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>not</name>.
                                <name>publicId</name>
                            </name>
                            =
                            <call>
                                <name><name>identifier</name>.
                                    <name>getPublicId</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>not</name>.
                                <name>baseURI</name>
                            </name>
                            =
                            <call>
                                <name><name>identifier</name>.
                                    <name>getBaseSystemId</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>not</name>.
                                <name>expandedSystemId</name>
                            </name>
                            =
                            <call>
                                <name><name>identifier</name>.
                                    <name>getExpandedSystemId</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>not</name>.
                                <name>augmentations</name>
                            </name>
                            =
                            <name>augmentations</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fNotations</name>.
                                    <name>add</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>not</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Checks if an UnparsedEntity with the given name was declared in the DTD of the document
                * for the current pipeline. If so, then the notation for the UnparsedEntity is checked.
                * If that turns out okay, then the UnparsedEntity is passed to the root pipeline to
                * be checked for conflicts, and sent to the root DTDHandler.
                *
                * @param entName the name of the UnparsedEntity to check
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>checkUnparsedEntity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>entName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>UnparsedEntity</name>
                            </type>
                            <name>ent</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>UnparsedEntity</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>ent</name>.
                                <name>name</name>
                            </name>
                            =
                            <name>entName</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>fUnparsedEntities</name>.
                                            <name>indexOf</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>ent</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>index</name>
                                != -1
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>ent</name>
                                        = (<name>UnparsedEntity</name>)
                                        <call>
                                            <name><name>fUnparsedEntities</name>.
                                                <name>get</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>index</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <comment type="line">// first check the notation of the unparsed entity</comment>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>checkNotation</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>ent</name>.
                                                            <name>notation</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>checkAndSendUnparsedEntity</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>ent</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Checks if a Notation with the given name was declared in the DTD of the document
                * for the current pipeline. If so, that Notation is passed to the root pipeline to
                * be checked for conflicts, and sent to the root DTDHandler
                *
                * @param notName the name of the Notation to check
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>checkNotation</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>notName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Notation</name>
                            </type>
                            <name>not</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>Notation</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>not</name>.
                                <name>name</name>
                            </name>
                            =
                            <name>notName</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>fNotations</name>.
                                            <name>indexOf</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>not</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>index</name>
                                != -1
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>not</name>
                                        = (<name>Notation</name>)
                                        <call>
                                            <name><name>fNotations</name>.
                                                <name>get</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>index</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>checkAndSendNotation</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>not</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * The purpose of this method is to check if an UnparsedEntity conflicts with a previously
                * declared entity in the current pipeline stack. If there is no conflict, the
                * UnparsedEntity is sent by the root pipeline.
                *
                * @param ent the UnparsedEntity to check for conflicts
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>checkAndSendUnparsedEntity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>UnparsedEntity</name>
                            </type>
                            <name>ent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>isRootDocument</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>index</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>fUnparsedEntities</name>.
                                                        <name>indexOf</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>ent</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>index</name>
                                            == -1
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <comment type="line">// There is no unparsed entity with the same name that
                                                we have sent.
                                            </comment>
                                            <comment type="line">// Calling unparsedEntityDecl() will add the entity to
                                                our local store,
                                            </comment>
                                            <comment type="line">// and also send the unparsed entity to the
                                                DTDHandler
                                            </comment>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>XMLResourceIdentifier</name>
                                                    </type>
                                                    <name>id</name> =
                                                    <init>
                                                        <expr>new
                                                            <call>
                                                                <name>XMLResourceIdentifierImpl</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>ent</name>.
                                                                                <name>publicId</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>ent</name>.
                                                                                <name>systemId</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>ent</name>.
                                                                                <name>baseURI</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>ent</name>.
                                                                                <name>expandedSystemId</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>addUnparsedEntity</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>ent</name>.
                                                                        <name>name</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>id</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name><name>ent</name>.
                                                                        <name>notation</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name><name>ent</name>.
                                                                        <name>augmentations</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>fSendUEAndNotationEvents</name>
                                                        &amp;&amp; <name>fDTDHandler</name> !=
                                                        <name>null</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>fDTDHandler</name>.
                                                                        <name>unparsedEntityDecl</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>ent</name>.
                                                                                    <name>name</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>id</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>ent</name>.
                                                                                    <name>notation</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>ent</name>.
                                                                                    <name>augmentations</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>UnparsedEntity</name>
                                                    </type>
                                                    <name>localEntity</name> =
                                                    <init>
                                                        <expr>(<name>UnparsedEntity</name>)
                                                            <call>
                                                                <name><name>fUnparsedEntities</name>.
                                                                    <name>get</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>index</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>!
                                                        <call>
                                                            <name><name>ent</name>.
                                                                <name>isDuplicate</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>localEntity</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name>reportFatalError</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"NonDuplicateUnparsedEntity"</expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>new
                                                                                <name>
                                                                                    <name>Object</name>
                                                                                    <index>[]</index>
                                                                                </name>
                                                                                <block>{
                                                                                    <expr>
                                                                                        <name><name>ent</name>.
                                                                                            <name>name</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                    }
                                                                                </block>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fParentXIncludeHandler</name>.
                                                <name>checkAndSendUnparsedEntity</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>ent</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * The purpose of this method is to check if a Notation conflicts with a previously
                * declared notation in the current pipeline stack. If there is no conflict, the
                * Notation is sent by the root pipeline.
                *
                * @param not the Notation to check for conflicts
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>checkAndSendNotation</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Notation</name>
                            </type>
                            <name>not</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>isRootDocument</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>index</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>fNotations</name>.
                                                        <name>indexOf</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>not</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>index</name>
                                            == -1
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <comment type="line">// There is no notation with the same name that we have
                                                sent.
                                            </comment>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>XMLResourceIdentifier</name>
                                                    </type>
                                                    <name>id</name> =
                                                    <init>
                                                        <expr>new
                                                            <call>
                                                                <name>XMLResourceIdentifierImpl</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>not</name>.
                                                                                <name>publicId</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>not</name>.
                                                                                <name>systemId</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>not</name>.
                                                                                <name>baseURI</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>not</name>.
                                                                                <name>expandedSystemId</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>addNotation</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>not</name>.
                                                                        <name>name</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>id</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name><name>not</name>.
                                                                        <name>augmentations</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>fSendUEAndNotationEvents</name>
                                                        &amp;&amp; <name>fDTDHandler</name> !=
                                                        <name>null</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>fDTDHandler</name>.
                                                                        <name>notationDecl</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>not</name>.
                                                                                    <name>name</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>id</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>not</name>.
                                                                                    <name>augmentations</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>Notation</name>
                                                    </type>
                                                    <name>localNotation</name> =
                                                    <init>
                                                        <expr>(<name>Notation</name>)
                                                            <call>
                                                                <name><name>fNotations</name>.
                                                                    <name>get</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>index</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>!
                                                        <call>
                                                            <name><name>not</name>.
                                                                <name>isDuplicate</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>localNotation</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name>reportFatalError</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"NonDuplicateNotation"</expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>new
                                                                                <name>
                                                                                    <name>Object</name>
                                                                                    <index>[]</index>
                                                                                </name>
                                                                                <block>{
                                                                                    <expr>
                                                                                        <name><name>not</name>.
                                                                                            <name>name</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                    }
                                                                                </block>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fParentXIncludeHandler</name>.
                                                <name>checkAndSendNotation</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>not</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Checks whether the string only contains white space characters.
                *
                * @param value the text to check
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>void</name>
                </type>
                <name>checkWhitespace</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLString</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>end</name> =
                            <init>
                                <expr>
                                    <name><name>value</name>.
                                        <name>offset</name>
                                    </name>
                                    +
                                    <name><name>value</name>.
                                        <name>length</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>
                                        <name><name>value</name>.
                                            <name>offset</name>
                                        </name>
                                    </expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name>end</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr>++
                                <name>i</name>
                            </expr>
                        </incr>
                        )
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>!
                                        <call>
                                            <name><name>XMLChar</name>.
                                                <name>isSpace</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>value</name>.
                                                            <name>ch</name>
                                                            <index>[
                                                                <expr>
                                                                    <name>i</name>
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>reportFatalError</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"ContentIllegalAtTopLevel"</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <return>return;</return>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Checks whether the root element has already been processed.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>void</name>
                </type>
                <name>checkMultipleRootElements</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>getRootElementProcessed</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>reportFatalError</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"MultipleRootElements"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setRootElementProcessed</name>
                                <argument_list>(
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets whether the root element has been processed.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>void</name>
                </type>
                <name>setRootElementProcessed</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>seenRoot</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>isRootDocument</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fSeenRootElement</name>
                                        =
                                        <name>seenRoot</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fParentXIncludeHandler</name>.
                                    <name>setRootElementProcessed</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>seenRoot</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns whether the root element has been processed.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>boolean</name>
                </type>
                <name>getRootElementProcessed</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>isRootDocument</name>
                                <argument_list>()</argument_list>
                            </call>
                            ? <name>fSeenRootElement</name> :
                            <call>
                                <name><name>fParentXIncludeHandler</name>.
                                    <name>getRootElementProcessed</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">// It would be nice if we didn't have to repeat code like this, but there's no
                interface that has
            </comment>
            <comment type="line">// setFeature() and addRecognizedFeatures() that the objects have in common.</comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>copyFeatures</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLComponentManager</name>
                            </type>
                            <name>from</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ParserConfigurationSettings</name>
                            </type>
                            <name>to</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Enumeration</name>
                            </type>
                            <name>features</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>Constants</name>.
                                            <name>getXercesFeatures</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>copyFeatures1</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>features</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Constants</name>.
                                                <name>XERCES_FEATURE_PREFIX</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>from</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>to</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>features</name>
                            =
                            <call>
                                <name><name>Constants</name>.
                                    <name>getSAXFeatures</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>copyFeatures1</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>features</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Constants</name>.
                                                <name>SAX_FEATURE_PREFIX</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>from</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>to</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>copyFeatures</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLComponentManager</name>
                            </type>
                            <name>from</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLParserConfiguration</name>
                            </type>
                            <name>to</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Enumeration</name>
                            </type>
                            <name>features</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>Constants</name>.
                                            <name>getXercesFeatures</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>copyFeatures1</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>features</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Constants</name>.
                                                <name>XERCES_FEATURE_PREFIX</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>from</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>to</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>features</name>
                            =
                            <call>
                                <name><name>Constants</name>.
                                    <name>getSAXFeatures</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>copyFeatures1</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>features</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Constants</name>.
                                                <name>SAX_FEATURE_PREFIX</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>from</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>to</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name>void</name>
                </type>
                <name>copyFeatures1</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Enumeration</name>
                            </type>
                            <name>features</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>featurePrefix</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLComponentManager</name>
                            </type>
                            <name>from</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ParserConfigurationSettings</name>
                            </type>
                            <name>to</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <while>while
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>features</name>.
                                        <name>hasMoreElements</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>featureId</name> =
                                    <init>
                                        <expr>
                                            <name>featurePrefix</name>
                                            + (<name>String</name>)
                                            <call>
                                                <name><name>features</name>.
                                                    <name>nextElement</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>

                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>to</name>.
                                            <name>addRecognizedFeatures</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <name>
                                                        <name>String</name>
                                                        <index>[]</index>
                                                    </name>
                                                    <block>{
                                                        <expr>
                                                            <name>featureId</name>
                                                        </expr>
                                                        }
                                                    </block>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>

                            <try>try
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>to</name>.
                                                    <name>setFeature</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>featureId</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>from</name>.
                                                                    <name>getFeature</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>featureId</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                                <catch>catch (
                                    <param>
                                        <decl>
                                            <type>
                                                <name>XMLConfigurationException</name>
                                            </type>
                                            <name>e</name>
                                        </decl>
                                    </param>
                                    )
                                    <block>{
                                        <comment type="line">// componentManager doesn't support this feature,</comment>
                                        <comment type="line">// so we won't worry about it</comment>
                                        }
                                    </block>
                                </catch>
                            </try>
                            }
                        </block>
                    </while>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name>void</name>
                </type>
                <name>copyFeatures1</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Enumeration</name>
                            </type>
                            <name>features</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>featurePrefix</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLComponentManager</name>
                            </type>
                            <name>from</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLParserConfiguration</name>
                            </type>
                            <name>to</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <while>while
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>features</name>.
                                        <name>hasMoreElements</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>featureId</name> =
                                    <init>
                                        <expr>
                                            <name>featurePrefix</name>
                                            + (<name>String</name>)
                                            <call>
                                                <name><name>features</name>.
                                                    <name>nextElement</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>boolean</name>
                                    </type>
                                    <name>value</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>from</name>.
                                                    <name>getFeature</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>featureId</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>

                            <try>try
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>to</name>.
                                                    <name>setFeature</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>featureId</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>value</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                                <catch>catch (
                                    <param>
                                        <decl>
                                            <type>
                                                <name>XMLConfigurationException</name>
                                            </type>
                                            <name>e</name>
                                        </decl>
                                    </param>
                                    )
                                    <block>{
                                        <comment type="line">// componentManager doesn't support this feature,</comment>
                                        <comment type="line">// so we won't worry about it</comment>
                                        }
                                    </block>
                                </catch>
                            </try>
                            }
                        </block>
                    </while>
                    }
                </block>
            </function>

            <comment type="line">// This is a storage class to hold information about the notations.</comment>
            <comment type="line">// We're not using XMLNotationDecl because we don't want to lose the augmentations.
            </comment>
            <class>
                <specifier>protected</specifier>
                <specifier>static</specifier> class <name>Notation</name>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>String</name>
                            </type>
                            <name>systemId</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>String</name>
                            </type>
                            <name>baseURI</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>String</name>
                            </type>
                            <name>publicId</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>String</name>
                            </type>
                            <name>expandedSystemId</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>Augmentations</name>
                            </type>
                            <name>augmentations</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// equals() returns true if two Notations have the same name.</comment>
                    <comment type="line">// Useful for searching Vectors for notations with the same name</comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>boolean</name>
                        </type>
                        <name>equals</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Object</name>
                                    </type>
                                    <name>obj</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>obj</name>
                                        ==
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return <expr>false</expr>;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>obj</name>
                                        <name>instanceof</name>
                                        <name>Notation</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>Notation</name>
                                                </type>
                                                <name>other</name> =
                                                <init>
                                                    <expr>(<name>Notation</name>)
                                                        <name>obj</name>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <return>return
                                            <expr>
                                                <call>
                                                    <name><name>name</name>.
                                                        <name>equals</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>other</name>.
                                                                    <name>name</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <return>return <expr>false</expr>;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="line">// from 4.5.2</comment>
                    <comment type="line">// Notation items with the same [name], [system identifier],</comment>
                    <comment type="line">// [public identifier], and [declaration base URI] are considered</comment>
                    <comment type="line">// to be duplicate. An application may also be able to detect that</comment>
                    <comment type="line">// notations are duplicate through other means. For instance, the URI</comment>
                    <comment type="line">// resulting from combining the system identifier and the declaration</comment>
                    <comment type="line">// base URI is the same.</comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>boolean</name>
                        </type>
                        <name>isDuplicate</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Object</name>
                                    </type>
                                    <name>obj</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>obj</name>
                                        != <name>null</name> &amp;&amp; <name>obj</name>
                                        <name>instanceof</name>
                                        <name>Notation</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>Notation</name>
                                                </type>
                                                <name>other</name> =
                                                <init>
                                                    <expr>(<name>Notation</name>)
                                                        <name>obj</name>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <return>return
                                            <expr>
                                                <call>
                                                    <name><name>name</name>.
                                                        <name>equals</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>other</name>.
                                                                    <name>name</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                &amp;&amp;
                                                <call>
                                                    <name>isEqual</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>publicId</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>other</name>.
                                                                    <name>publicId</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                &amp;&amp;
                                                <call>
                                                    <name>isEqual</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>expandedSystemId</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>other</name>.
                                                                    <name>expandedSystemId</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <return>return <expr>false</expr>;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>boolean</name>
                        </type>
                        <name>isEqual</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>one</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>two</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>(<name>one</name> == <name>two</name> || (<name>one</name> != <name>null</name> &amp;&amp;
                                    <call>
                                        <name><name>one</name>.
                                            <name>equals</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>two</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    ))
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>

            <comment type="line">// This is a storage class to hold information about the unparsed entities.</comment>
            <comment type="line">// We're not using XMLEntityDecl because we don't want to lose the augmentations.
            </comment>
            <class>
                <specifier>protected</specifier>
                <specifier>static</specifier> class <name>UnparsedEntity</name>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>String</name>
                            </type>
                            <name>systemId</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>String</name>
                            </type>
                            <name>baseURI</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>String</name>
                            </type>
                            <name>publicId</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>String</name>
                            </type>
                            <name>expandedSystemId</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>String</name>
                            </type>
                            <name>notation</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>Augmentations</name>
                            </type>
                            <name>augmentations</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// equals() returns true if two UnparsedEntities have the same name.</comment>
                    <comment type="line">// Useful for searching Vectors for entities with the same name</comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>boolean</name>
                        </type>
                        <name>equals</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Object</name>
                                    </type>
                                    <name>obj</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>obj</name>
                                        ==
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return <expr>false</expr>;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>obj</name>
                                        <name>instanceof</name>
                                        <name>UnparsedEntity</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>UnparsedEntity</name>
                                                </type>
                                                <name>other</name> =
                                                <init>
                                                    <expr>(<name>UnparsedEntity</name>)
                                                        <name>obj</name>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <return>return
                                            <expr>
                                                <call>
                                                    <name><name>name</name>.
                                                        <name>equals</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>other</name>.
                                                                    <name>name</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <return>return <expr>false</expr>;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="line">// from 4.5.1:</comment>
                    <comment type="line">// Unparsed entity items with the same [name], [system identifier],</comment>
                    <comment type="line">// [public identifier], [declaration base URI], [notation name], and</comment>
                    <comment type="line">// [notation] are considered to be duplicate. An application may also</comment>
                    <comment type="line">// be able to detect that unparsed entities are duplicate through other
                    </comment>
                    <comment type="line">// means. For instance, the URI resulting from combining the system</comment>
                    <comment type="line">// identifier and the declaration base URI is the same.</comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>boolean</name>
                        </type>
                        <name>isDuplicate</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Object</name>
                                    </type>
                                    <name>obj</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>obj</name>
                                        != <name>null</name> &amp;&amp; <name>obj</name>
                                        <name>instanceof</name>
                                        <name>UnparsedEntity</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>UnparsedEntity</name>
                                                </type>
                                                <name>other</name> =
                                                <init>
                                                    <expr>(<name>UnparsedEntity</name>)
                                                        <name>obj</name>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <return>return
                                            <expr>
                                                <call>
                                                    <name><name>name</name>.
                                                        <name>equals</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>other</name>.
                                                                    <name>name</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                &amp;&amp;
                                                <call>
                                                    <name>isEqual</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>publicId</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>other</name>.
                                                                    <name>publicId</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                &amp;&amp;
                                                <call>
                                                    <name>isEqual</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>expandedSystemId</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>other</name>.
                                                                    <name>expandedSystemId</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                &amp;&amp;
                                                <call>
                                                    <name>isEqual</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>notation</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>other</name>.
                                                                    <name>notation</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <return>return <expr>false</expr>;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>boolean</name>
                        </type>
                        <name>isEqual</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>one</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>two</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>(<name>one</name> == <name>two</name> || (<name>one</name> != <name>null</name> &amp;&amp;
                                    <call>
                                        <name><name>one</name>.
                                            <name>equals</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>two</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    ))
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>

            <comment type="line">// The following methods are used for XML Base processing</comment>

            <comment type="javadoc">/**
                * Saves the current base URI to the top of the stack.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>saveBaseURI</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fBaseURIScope</name>.
                                    <name>push</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>fDepth</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fBaseURI</name>.
                                    <name>push</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>fCurrentBaseURI</name>.
                                                    <name>getBaseSystemId</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fLiteralSystemID</name>.
                                    <name>push</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>fCurrentBaseURI</name>.
                                                    <name>getLiteralSystemId</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fExpandedSystemID</name>.
                                    <name>push</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>fCurrentBaseURI</name>.
                                                    <name>getExpandedSystemId</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Discards the URIs at the top of the stack, and restores the ones beneath it.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>restoreBaseURI</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fBaseURI</name>.
                                    <name>pop</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fLiteralSystemID</name>.
                                    <name>pop</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fExpandedSystemID</name>.
                                    <name>pop</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fBaseURIScope</name>.
                                    <name>pop</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fCurrentBaseURI</name>.
                                    <name>setBaseSystemId</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>(<name>String</name>)
                                            <call>
                                                <name><name>fBaseURI</name>.
                                                    <name>peek</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fCurrentBaseURI</name>.
                                    <name>setLiteralSystemId</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>(<name>String</name>)
                                            <call>
                                                <name><name>fLiteralSystemID</name>.
                                                    <name>peek</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fCurrentBaseURI</name>.
                                    <name>setExpandedSystemId</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>(<name>String</name>)
                                            <call>
                                                <name><name>fExpandedSystemID</name>.
                                                    <name>peek</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="line">// The following methods are used for language processing</comment>

            <comment type="javadoc">/**
                * Saves the given language on the top of the stack.
                *
                * @param lanaguage the language to push onto the stack.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>saveLanguage</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>language</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fLanguageScope</name>.
                                    <name>push</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>fDepth</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fLanguageStack</name>.
                                    <name>push</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>language</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Discards the language at the top of the stack, and returns the one beneath it.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>restoreLanguage</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fLanguageStack</name>.
                                    <name>pop</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fLanguageScope</name>.
                                    <name>pop</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>(<name>String</name>)
                            <call>
                                <name><name>fLanguageStack</name>.
                                    <name>peek</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Gets the base URI that was in use at that depth
                * @param depth
                * @return the base URI
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getBaseURI</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>depth</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>scope</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>scopeOfBaseURI</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>depth</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>(<name>String</name>)
                            <call>
                                <name><name>fExpandedSystemID</name>.
                                    <name>elementAt</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>scope</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Gets the language that was in use at that depth.
                * @param depth
                * @return the language
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getLanguage</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>depth</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>scope</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>scopeOfLanguage</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>depth</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>(<name>String</name>)
                            <call>
                                <name><name>fLanguageStack</name>.
                                    <name>elementAt</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>scope</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns a relative URI, which when resolved against the base URI at the
                * specified depth, will create the current base URI.
                * This is accomplished by merged the literal system IDs.
                * @param depth the depth at which to start creating the relative URI
                * @return a relative URI to convert the base URI at the given depth to the current
                * base URI
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getRelativeURI</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>depth</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>MalformedURIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <comment type="line">// The literal system id at the location given by "start" is *in focus* at
                    </comment>
                    <comment type="line">// the given depth. So we need to adjust it to the next scope, so that we
                    </comment>
                    <comment type="line">// only process out of focus literal system ids</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>start</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>scopeOfBaseURI</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>depth</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    + 1
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>start</name>
                                ==
                                <call>
                                    <name><name>fBaseURIScope</name>.
                                        <name>size</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// If that is the last system id, then we don't need a relative
                                    URI
                                </comment>
                                <return>return <expr>""</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>URI</name>
                            </type>
                            <name>uri</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>URI</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"file"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>(<name>String</name>)
                                                    <call>
                                                        <name><name>fLiteralSystemID</name>.
                                                            <name>elementAt</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>start</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>
                                        <name>start</name>
                                        + 1
                                    </expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <call>
                                    <name><name>fBaseURIScope</name>.
                                        <name>size</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>uri</name>
                                    = new
                                    <call>
                                        <name>URI</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>uri</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>(<name>String</name>)
                                                    <call>
                                                        <name><name>fLiteralSystemID</name>.
                                                            <name>elementAt</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>i</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </for>
                    <return>return
                        <expr>
                            <call>
                                <name><name>uri</name>.
                                    <name>getPath</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">// We need to find two consecutive elements in the scope stack,</comment>
            <comment type="line">// such that the first is lower than 'depth' (or equal), and the</comment>
            <comment type="line">// second is higher.</comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>int</name>
                </type>
                <name>scopeOfBaseURI</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>depth</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>
                                        <call>
                                            <name><name>fBaseURIScope</name>.
                                                <name>size</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        - 1
                                    </expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &gt;= 0
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>--
                            </expr>
                        </incr>
                        )
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>fBaseURIScope</name>.
                                                <name>elementAt</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>i</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        &lt;=
                                        <name>depth</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <return>return
                                        <expr>
                                            <name>i</name>
                                        </expr>
                                        ;
                                    </return>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    <comment type="line">// we should never get here, because 0 was put on the stack in
                        startDocument()
                    </comment>
                    <return>return <expr>-1</expr>;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name>int</name>
                </type>
                <name>scopeOfLanguage</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>depth</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>
                                        <call>
                                            <name><name>fLanguageScope</name>.
                                                <name>size</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        - 1
                                    </expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &gt;= 0
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>--
                            </expr>
                        </incr>
                        )
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>fLanguageScope</name>.
                                                <name>elementAt</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>i</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        &lt;=
                                        <name>depth</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <return>return
                                        <expr>
                                            <name>i</name>
                                        </expr>
                                        ;
                                    </return>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    <comment type="line">// we should never get here, because 0 was put on the stack in
                        startDocument()
                    </comment>
                    <return>return <expr>-1</expr>;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Search for a xml:base attribute, and if one is found, put the new base URI into
                * effect.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>processXMLBaseAttributes</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLAttributes</name>
                            </type>
                            <name>attributes</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>baseURIValue</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>attributes</name>.
                                            <name>getValue</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>NamespaceContext</name>.
                                                        <name>XML_URI</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"base"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>baseURIValue</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <try>try
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>String</name>
                                                </type>
                                                <name>expandedValue</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>XMLEntityManager</name>.
                                                                <name>expandSystemId</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>baseURIValue</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>fCurrentBaseURI</name>.
                                                                                <name>getExpandedSystemId</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>false</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fCurrentBaseURI</name>.
                                                        <name>setLiteralSystemId</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>baseURIValue</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fCurrentBaseURI</name>.
                                                        <name>setBaseSystemId</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>fCurrentBaseURI</name>.
                                                                        <name>getExpandedSystemId</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fCurrentBaseURI</name>.
                                                        <name>setExpandedSystemId</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>expandedValue</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>

                                        <comment type="line">// push the new values on the stack</comment>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>saveBaseURI</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                    <catch>catch (
                                        <param>
                                            <decl>
                                                <type>
                                                    <name>MalformedURIException</name>
                                                </type>
                                                <name>e</name>
                                            </decl>
                                        </param>
                                        )
                                        <block>{
                                            <comment type="line">// REVISIT: throw error here</comment>
                                            }
                                        </block>
                                    </catch>
                                </try>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Search for a xml:lang attribute, and if one is found, put the new
                * [language] into effect.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>processXMLLangAttributes</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLAttributes</name>
                            </type>
                            <name>attributes</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>language</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>attributes</name>.
                                            <name>getValue</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>NamespaceContext</name>.
                                                        <name>XML_URI</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"lang"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>language</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fCurrentLanguage</name>
                                        =
                                        <name>language</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>saveLanguage</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fCurrentLanguage</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns &lt;code&gt;true&lt;/code&gt; if the given string
                * would be valid in an HTTP header.
                *
                * @param value string to check
                * @return &lt;code&gt;true&lt;/code&gt; if the given string
                * would be valid in an HTTP header
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>boolean</name>
                </type>
                <name>isValidInHTTPHeader</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>char</name>
                            </type>
                            <name>ch</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>
                                        <call>
                                            <name><name>value</name>.
                                                <name>length</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        - 1
                                    </expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &gt;= 0
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr>--
                                <name>i</name>
                            </expr>
                        </incr>
                        )
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>ch</name>
                                    =
                                    <call>
                                        <name><name>value</name>.
                                            <name>charAt</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>i</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>ch</name>
                                        &lt; 0x20 || <name>ch</name> &gt; 0x7E
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return <expr>false</expr>;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    <return>return <expr>true</expr>;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns a new &lt;code&gt;XMLInputSource&lt;/code&gt; from the given parameters.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>XMLInputSource</name>
                </type>
                <name>createInputSource</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>publicId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>systemId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>baseSystemId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>accept</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>acceptLanguage</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>HTTPInputSource</name>
                            </type>
                            <name>httpSource</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>HTTPInputSource</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>publicId</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>systemId</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>baseSystemId</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>accept</name>
                                != <name>null</name> &amp;&amp;
                                <call>
                                    <name><name>accept</name>.
                                        <name>length</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                &gt; 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>httpSource</name>.
                                                <name>setHTTPRequestProperty</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>XIncludeHandler</name>.
                                                            <name>HTTP_ACCEPT</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>accept</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>acceptLanguage</name>
                                != <name>null</name> &amp;&amp;
                                <call>
                                    <name><name>acceptLanguage</name>.
                                        <name>length</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                &gt; 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>httpSource</name>.
                                                <name>setHTTPRequestProperty</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>XIncludeHandler</name>.
                                                            <name>HTTP_ACCEPT_LANGUAGE</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>acceptLanguage</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>httpSource</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name>boolean</name>
                </type>
                <name>isEqual</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>one</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>two</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>(<name>one</name> == <name>two</name> || (<name>one</name> != <name>null</name> &amp;&amp;
                            <call>
                                <name><name>one</name>.
                                    <name>equals</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>two</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            ))
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">// which ASCII characters need to be escaped</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <name>boolean</name>
                    </type>
                    <name>
                        <name>gNeedEscaping</name>
                        <index>[]</index>
                    </name>
                    =
                    <init>
                        <expr>new
                            <name>
                                <name>boolean</name>
                                <index>[<expr>128</expr>]
                                </index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="line">// the first hex character if a character needs to be escaped</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <name>char</name>
                    </type>
                    <name>
                        <name>gAfterEscaping1</name>
                        <index>[]</index>
                    </name>
                    =
                    <init>
                        <expr>new
                            <name>
                                <name>char</name>
                                <index>[<expr>128</expr>]
                                </index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="line">// the second hex character if a character needs to be escaped</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <name>char</name>
                    </type>
                    <name>
                        <name>gAfterEscaping2</name>
                        <index>[]</index>
                    </name>
                    =
                    <init>
                        <expr>new
                            <name>
                                <name>char</name>
                                <index>[<expr>128</expr>]
                                </index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <name>char</name>
                        <index>[]</index>
                    </type>
                    <name>gHexChs</name> =
                    <init>
                        <expr>
                            <block>{<expr>'0'</expr>, <expr>'1'</expr>, <expr>'2'</expr>, <expr>'3'</expr>, <expr>
                                '4'</expr>, <expr>'5'</expr>, <expr>'6'</expr>, <expr>'7'</expr>,
                                <expr>'8'</expr>, <expr>'9'</expr>, <expr>'A'</expr>, <expr>'B'</expr>, <expr>'C'</expr>, <expr>
                                    'D'</expr>, <expr>'E'</expr>, <expr>'F'</expr>}
                            </block>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="line">// initialize the above 3 arrays</comment>
            static
            <block>{
                <decl_stmt>
                    <decl>
                        <type>
                            <name>char</name>
                            <index>[]</index>
                        </type>
                        <name>escChs</name> =
                        <init>
                            <expr>
                                <block>{<expr>' '</expr>, <expr>'&lt;'</expr>, <expr>'&gt;'</expr>, <expr>
                                    '"'</expr>, <expr>'{'</expr>, <expr>'}'</expr>, <expr>'|'</expr>, <expr>'\\'</expr>, <expr>
                                    '^'</expr>, <expr>'`'</expr>}
                                </block>
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>int</name>
                        </type>
                        <name>len</name> =
                        <init>
                            <expr>
                                <name><name>escChs</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>char</name>
                        </type>
                        <name>ch</name>
                    </decl>
                    ;
                </decl_stmt>
                <for>for (
                    <init>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>i</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </init>
                    <condition>
                        <expr>
                            <name>i</name>
                            &lt;
                            <name>len</name>
                        </expr>
                        ;
                    </condition>
                    <incr>
                        <expr><name>i</name>++
                        </expr>
                    </incr>
                    )
                    <block>{
                        <expr_stmt>
                            <expr>
                                <name>ch</name>
                                =
                                <name>
                                    <name>escChs</name>
                                    <index>[
                                        <expr>
                                            <name>i</name>
                                        </expr>
                                        ]
                                    </index>
                                </name>
                            </expr>
                            ;
                        </expr_stmt>
                        <expr_stmt>
                            <expr>
                                <name>
                                    <name>gNeedEscaping</name>
                                    <index>[
                                        <expr>
                                            <name>ch</name>
                                        </expr>
                                        ]
                                    </index>
                                </name>
                                = true
                            </expr>
                            ;
                        </expr_stmt>
                        <expr_stmt>
                            <expr>
                                <name>
                                    <name>gAfterEscaping1</name>
                                    <index>[
                                        <expr>
                                            <name>ch</name>
                                        </expr>
                                        ]
                                    </index>
                                </name>
                                =
                                <name>
                                    <name>gHexChs</name>
                                    <index>[
                                        <expr>
                                            <name>ch</name>
                                            &gt;&gt; 4
                                        </expr>
                                        ]
                                    </index>
                                </name>
                            </expr>
                            ;
                        </expr_stmt>
                        <expr_stmt>
                            <expr>
                                <name>
                                    <name>gAfterEscaping2</name>
                                    <index>[
                                        <expr>
                                            <name>ch</name>
                                        </expr>
                                        ]
                                    </index>
                                </name>
                                =
                                <name>
                                    <name>gHexChs</name>
                                    <index>[
                                        <expr>
                                            <name>ch</name>
                                            &amp; 0xf
                                        </expr>
                                        ]
                                    </index>
                                </name>
                            </expr>
                            ;
                        </expr_stmt>
                        }
                    </block>
                </for>
                }
            </block>

            <comment type="line">//</comment>
            <comment type="line">// Escape an href value according to (4.1.1):</comment>
            <comment type="line">//</comment>
            <comment type="line">// To convert the value of the href attribute to an IRI reference, the following
                characters must be escaped:
            </comment>
            <comment type="line">// space #x20</comment>
            <comment type="line">// the delimiters &lt; #x3C, &gt; #x3E and " #x22</comment>
            <comment type="line">// the unwise characters { #x7B, } #x7D, | #x7C, \ #x5C, ^ #x5E and ` #x60</comment>
            <comment type="line">//</comment>
            <comment type="line">// To convert an IRI reference to a URI reference, the following characters must also
                be escaped:
            </comment>
            <comment type="line">// the Unicode plane 0 characters #xA0 - #xD7FF, #xF900-#xFDCF, #xFDF0-#xFFEF</comment>
            <comment type="line">// the Unicode plane 1-14 characters #x10000-#x1FFFD ... #xE0000-#xEFFFD</comment>
            <comment type="line">//</comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>String</name>
                </type>
                <name>escapeHref</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>href</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>len</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>href</name>.
                                            <name>length</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>ch</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>StringBuffer</name>
                            </type>
                            <name>buffer</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>StringBuffer</name>
                                        <argument_list>(
                                            <argument>
                                                <expr><name>len</name>*3
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// for each character in the href</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>i</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (<init>;</init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name>len</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>ch</name>
                                    =
                                    <call>
                                        <name><name>href</name>.
                                            <name>charAt</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>i</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <comment type="line">// if it's not an ASCII character (excluding 0x7F), break here, and use
                                UTF-8 encoding
                            </comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>ch</name>
                                        &gt; 0x7E
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <break>break;</break>
                                        }
                                    </block>
                                </then>
                            </if>
                            <comment type="line">// abort: href does not allow this character</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>ch</name>
                                        &lt; 0x20
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>
                                                <name>href</name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>
                                            <name>gNeedEscaping</name>
                                            <index>[
                                                <expr>
                                                    <name>ch</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>buffer</name>.
                                                        <name>append</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>'%'</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>buffer</name>.
                                                        <name>append</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>
                                                                    <name>gAfterEscaping1</name>
                                                                    <index>[
                                                                        <expr>
                                                                            <name>ch</name>
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>buffer</name>.
                                                        <name>append</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>
                                                                    <name>gAfterEscaping2</name>
                                                                    <index>[
                                                                        <expr>
                                                                            <name>ch</name>
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>buffer</name>.
                                                        <name>append</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>(<name>char</name>)
                                                                <name>ch</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </else>
                            </if>
                            }
                        </block>
                    </for>

                    <comment type="line">// we saw some non-ascii character</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>i</name>
                                &lt;
                                <name>len</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// check if remainder of href contains any illegal characters
                                    before proceeding
                                </comment>
                                <for>for (
                                    <init>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>j</name> =
                                            <init>
                                                <expr>
                                                    <name>i</name>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>j</name>
                                            &lt;
                                            <name>len</name>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr>++
                                            <name>j</name>
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>ch</name>
                                                =
                                                <call>
                                                    <name><name>href</name>.
                                                        <name>charAt</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>j</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>(<name>ch</name> &gt;= 0x20 &amp;&amp; <name>ch</name> &lt;= 0x7E)
                                                    ||
                                                    (<name>ch</name> &gt;= 0xA0 &amp;&amp; <name>ch</name> &lt;= 0xD7FF)
                                                    ||
                                                    (<name>ch</name> &gt;= 0xF900 &amp;&amp; <name>ch</name> &lt;=
                                                    0xFDCF) ||
                                                    (<name>ch</name> &gt;= 0xFDF0 &amp;&amp; <name>ch</name> &lt;=
                                                    0xFFEF)
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <continue>continue;</continue>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>XMLChar</name>.
                                                            <name>isHighSurrogate</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>ch</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    &amp;&amp; ++<name>j</name> &lt;
                                                    <name>len</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>int</name>
                                                            </type>
                                                            <name>ch2</name> =
                                                            <init>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>href</name>.
                                                                            <name>charAt</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>j</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <call>
                                                                    <name><name>XMLChar</name>.
                                                                        <name>isLowSurrogate</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>ch2</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>ch2</name>
                                                                        =
                                                                        <call>
                                                                            <name><name>XMLChar</name>.
                                                                                <name>supplemental</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>(<name>char</name>)
                                                                                        <name>ch</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>(<name>char</name>)
                                                                                        <name>ch2</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>
                                                                            <name>ch2</name>
                                                                            &lt; 0xF0000 &amp;&amp; (<name>ch2</name> &amp;
                                                                            0xFFFF) &lt;= 0xFFFD
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{
                                                                            <continue>continue;</continue>
                                                                            }
                                                                        </block>
                                                                    </then>
                                                                </if>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <comment type="line">// abort: href does not allow this character</comment>
                                        <return>return
                                            <expr>
                                                <name>href</name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </for>

                                <comment type="line">// get UTF-8 bytes for the remaining sub-string</comment>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>byte</name>
                                            <index>[]</index>
                                        </type>
                                        <name>bytes</name> =
                                        <init>
                                            <expr>
                                                <name>null</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>byte</name>
                                        </type>
                                        <name>b</name>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <try>try
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>bytes</name>
                                                =
                                                <call>
                                                    <name><name>href</name>.
                                                        <name>substring</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                .
                                                <call>
                                                    <name>getBytes</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"UTF-8"</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                    <catch>catch (
                                        <param>
                                            <decl>
                                                <type>
                                                    <name><name>java</name>.<name>io</name>.
                                                        <name>UnsupportedEncodingException</name>
                                                    </name>
                                                </type>
                                                <name>e</name>
                                            </decl>
                                        </param>
                                        )
                                        <block>{
                                            <comment type="line">// should never happen</comment>
                                            <return>return
                                                <expr>
                                                    <name>href</name>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </catch>
                                </try>
                                <expr_stmt>
                                    <expr>
                                        <name>len</name>
                                        =
                                        <name><name>bytes</name>.
                                            <name>length</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>

                                <comment type="line">// for each byte</comment>
                                <for>for (
                                    <init>
                                        <expr>
                                            <name>i</name>
                                            = 0
                                        </expr>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            &lt;
                                            <name>len</name>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr><name>i</name>++
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>b</name>
                                                =
                                                <name>
                                                    <name>bytes</name>
                                                    <index>[
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <comment type="line">// for non-ascii character: make it positive, then escape
                                        </comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>b</name>
                                                    &lt; 0
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>ch</name>
                                                            = <name>b</name> + 256
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>buffer</name>.
                                                                    <name>append</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>'%'</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>buffer</name>.
                                                                    <name>append</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>
                                                                                <name>gHexChs</name>
                                                                                <index>[
                                                                                    <expr>
                                                                                        <name>ch</name>
                                                                                        &gt;&gt; 4
                                                                                    </expr>
                                                                                    ]
                                                                                </index>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>buffer</name>.
                                                                    <name>append</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>
                                                                                <name>gHexChs</name>
                                                                                <index>[
                                                                                    <expr>
                                                                                        <name>ch</name>
                                                                                        &amp; 0xf
                                                                                    </expr>
                                                                                    ]
                                                                                </index>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>
                                                                <name>gNeedEscaping</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>b</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>buffer</name>.
                                                                            <name>append</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>'%'</expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>buffer</name>.
                                                                            <name>append</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>
                                                                                        <name>gAfterEscaping1</name>
                                                                                        <index>[
                                                                                            <expr>
                                                                                                <name>b</name>
                                                                                            </expr>
                                                                                            ]
                                                                                        </index>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>buffer</name>.
                                                                            <name>append</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>
                                                                                        <name>gAfterEscaping2</name>
                                                                                        <index>[
                                                                                            <expr>
                                                                                                <name>b</name>
                                                                                            </expr>
                                                                                            ]
                                                                                        </index>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                    <else>else
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>buffer</name>.
                                                                            <name>append</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>(<name>char</name>)
                                                                                    <name>b</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </else>
                                                </if>
                                            </else>
                                        </if>
                                        }
                                    </block>
                                </for>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// If escaping happened, create a new string;</comment>
                    <comment type="line">// otherwise, return the orginal one.</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>buffer</name>.
                                        <name>length</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                !=
                                <name>len</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <call>
                                            <name><name>buffer</name>.
                                                <name>toString</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <return>return
                                    <expr>
                                        <name>href</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>
            }
        </block>
    </class>
</unit>
