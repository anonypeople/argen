<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\impl\xs\util\XIntPool.java">
    <comment type="block">/*
        * Copyright 2001, 2002,2004 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xs</name>.
            <name>util</name>
        </name>
        ;
    </package>

    <comment type="javadoc">/**
        * @xerces.internal
        *
        * @author Henry Zongaro, IBM
        * @version $Id: XIntPool.java,v 1.4 2004/10/06 15:14:50 mrglavas Exp $
        */
    </comment>
    <class>
        <specifier>public</specifier>
        <specifier>final</specifier> class <name>XIntPool</name>
        <block>{
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>POOL_SIZE</name> =
                    <init>
                        <expr>10</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>XInt</name>
                        <index>[]</index>
                    </type>
                    <name>fXIntPool</name> =
                    <init>
                        <expr>new
                            <name>
                                <name>XInt</name>
                                <index>[
                                    <expr>
                                        <name>POOL_SIZE</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            static
            <block>{
                <for>for (
                    <init>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>i</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </init>
                    <condition>
                        <expr>
                            <name>i</name>
                            &lt;
                            <name>POOL_SIZE</name>
                        </expr>
                        ;
                    </condition>
                    <incr>
                        <expr><name>i</name>++
                        </expr>
                    </incr>
                    )
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fXIntPool</name>
                                <index>[
                                    <expr>
                                        <name>i</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = new
                            <call>
                                <name>XInt</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>i</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                </for>
                }
            </block>

            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>final</specifier>
                    <name>XInt</name>
                </type>
                <name>getXInt</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>value</name>
                                &gt;= 0 &amp;&amp; <name>value</name> &lt;
                                <name><name>fXIntPool</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <name>
                                        <name>fXIntPool</name>
                                        <index>[
                                            <expr>
                                                <name>value</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                                ;
                            </return>
                        </then>
                        <else>else
                            <return>return
                                <expr>new
                                    <call>
                                        <name>XInt</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>value</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                        </else>
                    </if>
                    }
                </block>
            </function>
            }
        </block>
    </class>
</unit>
