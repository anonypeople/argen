<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\util\XML11Char.java">
    <comment type="block">/*
        * Copyright 1999-2004 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.
            <name>util</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Arrays</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * This class defines the basic properties of characters in XML 1.1. The data
        * in this class can be used to verify that a character is a valid
        * XML 1.1 character or if the character is a space, name start, or name
        * character.
        * &lt;p&gt;
        * A series of convenience methods are supplied to ease the burden
        * of the developer. Using the character as an index into the &lt;code&gt;XML11CHARS&lt;/code&gt;
        * array and applying the appropriate mask flag (e.g.
        * &lt;code&gt;MASK_VALID&lt;/code&gt;), yields the same results as calling the
        * convenience methods. There is one exception: check the comments
        * for the &lt;code&gt;isValid&lt;/code&gt; method for details.
        *
        * @author Glenn Marcy, IBM
        * @author Andy Clark, IBM
        * @author Arnaud Le Hors, IBM
        * @author Neil Graham, IBM
        * @author Michael Glavassevich, IBM
        *
        * @version $Id: XML11Char.java,v 1.8 2004/03/25 04:03:22 mrglavas Exp $
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>XML11Char</name>
        <block>{

            <comment type="line">//</comment>
            <comment type="line">// Constants</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/** Character flags for XML 1.1. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>byte</name>
                    </type>
                    <name>
                        <name>XML11CHARS</name>
                        <index>[]</index>
                    </name>
                    =
                    <init>
                        <expr>new
                            <name>
                                <name>byte</name>
                                <index>[<expr>1 &lt;&lt; 16</expr>]
                                </index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** XML 1.1 Valid character mask. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>MASK_XML11_VALID</name> =
                    <init>
                        <expr>0x01</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** XML 1.1 Space character mask. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>MASK_XML11_SPACE</name> =
                    <init>
                        <expr>0x02</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** XML 1.1 Name start character mask. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>MASK_XML11_NAME_START</name> =
                    <init>
                        <expr>0x04</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** XML 1.1 Name character mask. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>MASK_XML11_NAME</name> =
                    <init>
                        <expr>0x08</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** XML 1.1 control character mask */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>MASK_XML11_CONTROL</name> =
                    <init>
                        <expr>0x10</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** XML 1.1 content for external entities (valid - "special" chars - control chars)
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>MASK_XML11_CONTENT</name> =
                    <init>
                        <expr>0x20</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** XML namespaces 1.1 NCNameStart */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>MASK_XML11_NCNAME_START</name> =
                    <init>
                        <expr>0x40</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** XML namespaces 1.1 NCName */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>MASK_XML11_NCNAME</name> =
                    <init>
                        <expr>0x80</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** XML 1.1 content for internal entities (valid - "special" chars) */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>MASK_XML11_CONTENT_INTERNAL</name> =
                    <init>
                        <expr>
                            <name>MASK_XML11_CONTROL</name>
                            |
                            <name>MASK_XML11_CONTENT</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">//</comment>
            <comment type="line">// Static initialization</comment>
            <comment type="line">//</comment>

            static
            <block>{

                <comment type="line">// Initializing the Character Flag Array</comment>
                <comment type="line">// Code generated by: XML11CharGenerator.</comment>

                <expr_stmt>
                    <expr>
                        <call>
                            <name><name>Arrays</name>.
                                <name>fill</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>XML11CHARS</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>1</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>9</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>(<name>byte</name>) 17
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// Fill 8 of value (byte) 17</comment>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>XML11CHARS</name>
                            <index>[<expr>9</expr>]
                            </index>
                        </name>
                        = 35
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>XML11CHARS</name>
                            <index>[<expr>10</expr>]
                            </index>
                        </name>
                        = 3
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <call>
                            <name><name>Arrays</name>.
                                <name>fill</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>XML11CHARS</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>11</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>13</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>(<name>byte</name>) 17
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// Fill 2 of value (byte) 17</comment>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>XML11CHARS</name>
                            <index>[<expr>13</expr>]
                            </index>
                        </name>
                        = 3
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <call>
                            <name><name>Arrays</name>.
                                <name>fill</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>XML11CHARS</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>14</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>32</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>(<name>byte</name>) 17
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// Fill 18 of value (byte) 17</comment>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>XML11CHARS</name>
                            <index>[<expr>32</expr>]
                            </index>
                        </name>
                        = 35
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <call>
                            <name><name>Arrays</name>.
                                <name>fill</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>XML11CHARS</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>33</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>38</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>(<name>byte</name>) 33
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// Fill 5 of value (byte) 33</comment>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>XML11CHARS</name>
                            <index>[<expr>38</expr>]
                            </index>
                        </name>
                        = 1
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <call>
                            <name><name>Arrays</name>.
                                <name>fill</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>XML11CHARS</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>39</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>45</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>(<name>byte</name>) 33
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// Fill 6 of value (byte) 33</comment>
                <expr_stmt>
                    <expr>
                        <call>
                            <name><name>Arrays</name>.
                                <name>fill</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>XML11CHARS</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>45</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>47</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>(<name>byte</name>) -87
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// Fill 2 of value (byte) -87</comment>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>XML11CHARS</name>
                            <index>[<expr>47</expr>]
                            </index>
                        </name>
                        = 33
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <call>
                            <name><name>Arrays</name>.
                                <name>fill</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>XML11CHARS</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>48</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>58</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>(<name>byte</name>) -87
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// Fill 10 of value (byte) -87</comment>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>XML11CHARS</name>
                            <index>[<expr>58</expr>]
                            </index>
                        </name>
                        = 45
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>XML11CHARS</name>
                            <index>[<expr>59</expr>]
                            </index>
                        </name>
                        = 33
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>XML11CHARS</name>
                            <index>[<expr>60</expr>]
                            </index>
                        </name>
                        = 1
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <call>
                            <name><name>Arrays</name>.
                                <name>fill</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>XML11CHARS</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>61</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>65</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>(<name>byte</name>) 33
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// Fill 4 of value (byte) 33</comment>
                <expr_stmt>
                    <expr>
                        <call>
                            <name><name>Arrays</name>.
                                <name>fill</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>XML11CHARS</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>65</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>91</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>(<name>byte</name>) -19
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// Fill 26 of value (byte) -19</comment>
                <expr_stmt>
                    <expr>
                        <call>
                            <name><name>Arrays</name>.
                                <name>fill</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>XML11CHARS</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>91</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>93</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>(<name>byte</name>) 33
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// Fill 2 of value (byte) 33</comment>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>XML11CHARS</name>
                            <index>[<expr>93</expr>]
                            </index>
                        </name>
                        = 1
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>XML11CHARS</name>
                            <index>[<expr>94</expr>]
                            </index>
                        </name>
                        = 33
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>XML11CHARS</name>
                            <index>[<expr>95</expr>]
                            </index>
                        </name>
                        = -19
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>XML11CHARS</name>
                            <index>[<expr>96</expr>]
                            </index>
                        </name>
                        = 33
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <call>
                            <name><name>Arrays</name>.
                                <name>fill</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>XML11CHARS</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>97</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>123</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>(<name>byte</name>) -19
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// Fill 26 of value (byte) -19</comment>
                <expr_stmt>
                    <expr>
                        <call>
                            <name><name>Arrays</name>.
                                <name>fill</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>XML11CHARS</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>123</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>127</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>(<name>byte</name>) 33
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// Fill 4 of value (byte) 33</comment>
                <expr_stmt>
                    <expr>
                        <call>
                            <name><name>Arrays</name>.
                                <name>fill</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>XML11CHARS</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>127</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>133</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>(<name>byte</name>) 17
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// Fill 6 of value (byte) 17</comment>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>XML11CHARS</name>
                            <index>[<expr>133</expr>]
                            </index>
                        </name>
                        = 35
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <call>
                            <name><name>Arrays</name>.
                                <name>fill</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>XML11CHARS</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>134</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>160</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>(<name>byte</name>) 17
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// Fill 26 of value (byte) 17</comment>
                <expr_stmt>
                    <expr>
                        <call>
                            <name><name>Arrays</name>.
                                <name>fill</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>XML11CHARS</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>160</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>183</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>(<name>byte</name>) 33
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// Fill 23 of value (byte) 33</comment>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>XML11CHARS</name>
                            <index>[<expr>183</expr>]
                            </index>
                        </name>
                        = -87
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <call>
                            <name><name>Arrays</name>.
                                <name>fill</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>XML11CHARS</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>184</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>192</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>(<name>byte</name>) 33
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// Fill 8 of value (byte) 33</comment>
                <expr_stmt>
                    <expr>
                        <call>
                            <name><name>Arrays</name>.
                                <name>fill</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>XML11CHARS</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>192</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>215</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>(<name>byte</name>) -19
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// Fill 23 of value (byte) -19</comment>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>XML11CHARS</name>
                            <index>[<expr>215</expr>]
                            </index>
                        </name>
                        = 33
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <call>
                            <name><name>Arrays</name>.
                                <name>fill</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>XML11CHARS</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>216</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>247</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>(<name>byte</name>) -19
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// Fill 31 of value (byte) -19</comment>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>XML11CHARS</name>
                            <index>[<expr>247</expr>]
                            </index>
                        </name>
                        = 33
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <call>
                            <name><name>Arrays</name>.
                                <name>fill</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>XML11CHARS</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>248</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>768</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>(<name>byte</name>) -19
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// Fill 520 of value (byte) -19</comment>
                <expr_stmt>
                    <expr>
                        <call>
                            <name><name>Arrays</name>.
                                <name>fill</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>XML11CHARS</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>768</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>880</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>(<name>byte</name>) -87
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// Fill 112 of value (byte) -87</comment>
                <expr_stmt>
                    <expr>
                        <call>
                            <name><name>Arrays</name>.
                                <name>fill</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>XML11CHARS</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>880</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>894</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>(<name>byte</name>) -19
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// Fill 14 of value (byte) -19</comment>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>XML11CHARS</name>
                            <index>[<expr>894</expr>]
                            </index>
                        </name>
                        = 33
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <call>
                            <name><name>Arrays</name>.
                                <name>fill</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>XML11CHARS</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>895</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>8192</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>(<name>byte</name>) -19
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// Fill 7297 of value (byte) -19</comment>
                <expr_stmt>
                    <expr>
                        <call>
                            <name><name>Arrays</name>.
                                <name>fill</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>XML11CHARS</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>8192</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>8204</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>(<name>byte</name>) 33
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// Fill 12 of value (byte) 33</comment>
                <expr_stmt>
                    <expr>
                        <call>
                            <name><name>Arrays</name>.
                                <name>fill</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>XML11CHARS</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>8204</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>8206</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>(<name>byte</name>) -19
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// Fill 2 of value (byte) -19</comment>
                <expr_stmt>
                    <expr>
                        <call>
                            <name><name>Arrays</name>.
                                <name>fill</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>XML11CHARS</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>8206</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>8232</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>(<name>byte</name>) 33
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// Fill 26 of value (byte) 33</comment>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>XML11CHARS</name>
                            <index>[<expr>8232</expr>]
                            </index>
                        </name>
                        = 35
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <call>
                            <name><name>Arrays</name>.
                                <name>fill</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>XML11CHARS</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>8233</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>8255</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>(<name>byte</name>) 33
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// Fill 22 of value (byte) 33</comment>
                <expr_stmt>
                    <expr>
                        <call>
                            <name><name>Arrays</name>.
                                <name>fill</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>XML11CHARS</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>8255</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>8257</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>(<name>byte</name>) -87
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// Fill 2 of value (byte) -87</comment>
                <expr_stmt>
                    <expr>
                        <call>
                            <name><name>Arrays</name>.
                                <name>fill</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>XML11CHARS</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>8257</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>8304</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>(<name>byte</name>) 33
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// Fill 47 of value (byte) 33</comment>
                <expr_stmt>
                    <expr>
                        <call>
                            <name><name>Arrays</name>.
                                <name>fill</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>XML11CHARS</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>8304</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>8592</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>(<name>byte</name>) -19
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// Fill 288 of value (byte) -19</comment>
                <expr_stmt>
                    <expr>
                        <call>
                            <name><name>Arrays</name>.
                                <name>fill</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>XML11CHARS</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>8592</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>11264</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>(<name>byte</name>) 33
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// Fill 2672 of value (byte) 33</comment>
                <expr_stmt>
                    <expr>
                        <call>
                            <name><name>Arrays</name>.
                                <name>fill</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>XML11CHARS</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>11264</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>12272</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>(<name>byte</name>) -19
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// Fill 1008 of value (byte) -19</comment>
                <expr_stmt>
                    <expr>
                        <call>
                            <name><name>Arrays</name>.
                                <name>fill</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>XML11CHARS</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>12272</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>12289</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>(<name>byte</name>) 33
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// Fill 17 of value (byte) 33</comment>
                <expr_stmt>
                    <expr>
                        <call>
                            <name><name>Arrays</name>.
                                <name>fill</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>XML11CHARS</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>12289</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>55296</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>(<name>byte</name>) -19
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// Fill 43007 of value (byte) -19</comment>
                <expr_stmt>
                    <expr>
                        <call>
                            <name><name>Arrays</name>.
                                <name>fill</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>XML11CHARS</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>57344</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>63744</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>(<name>byte</name>) 33
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// Fill 6400 of value (byte) 33</comment>
                <expr_stmt>
                    <expr>
                        <call>
                            <name><name>Arrays</name>.
                                <name>fill</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>XML11CHARS</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>63744</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>64976</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>(<name>byte</name>) -19
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// Fill 1232 of value (byte) -19</comment>
                <expr_stmt>
                    <expr>
                        <call>
                            <name><name>Arrays</name>.
                                <name>fill</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>XML11CHARS</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>64976</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>65008</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>(<name>byte</name>) 33
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// Fill 32 of value (byte) 33</comment>
                <expr_stmt>
                    <expr>
                        <call>
                            <name><name>Arrays</name>.
                                <name>fill</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>XML11CHARS</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>65008</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>65534</expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>(<name>byte</name>) -19
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// Fill 526 of value (byte) -19</comment>

                }
            </block>
            <comment type="line">// &lt;clinit&gt;()</comment>

            <comment type="line">//</comment>
            <comment type="line">// Public static methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * Returns true if the specified character is a space character
                * as amdended in the XML 1.1 specification.
                *
                * @param c The character to check.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>boolean</name>
                </type>
                <name>isXML11Space</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>c</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>(<name>c</name> &lt; 0x10000 &amp;&amp; (
                            <name>
                                <name>XML11CHARS</name>
                                <index>[
                                    <expr>
                                        <name>c</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            &amp; <name>MASK_XML11_SPACE</name>) != 0)
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// isXML11Space(int):boolean</comment>

            <comment type="javadoc">/**
                * Returns true if the specified character is valid. This method
                * also checks the surrogate character range from 0x10000 to 0x10FFFF.
                * &lt;p&gt;
                * If the program chooses to apply the mask directly to the
                * &lt;code&gt;XML11CHARS&lt;/code&gt; array, then they are responsible for checking
                * the surrogate character range.
                *
                * @param c The character to check.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>boolean</name>
                </type>
                <name>isXML11Valid</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>c</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>(<name>c</name> &lt; 0x10000 &amp;&amp; (
                            <name>
                                <name>XML11CHARS</name>
                                <index>[
                                    <expr>
                                        <name>c</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            &amp; <name>MASK_XML11_VALID</name>) != 0)
                            || (0x10000 &lt;= <name>c</name> &amp;&amp; <name>c</name> &lt;= 0x10FFFF)
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// isXML11Valid(int):boolean</comment>

            <comment type="javadoc">/**
                * Returns true if the specified character is invalid.
                *
                * @param c The character to check.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>boolean</name>
                </type>
                <name>isXML11Invalid</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>c</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>!
                            <call>
                                <name>isXML11Valid</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>c</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// isXML11Invalid(int):boolean</comment>

            <comment type="javadoc">/**
                * Returns true if the specified character is valid and permitted outside
                * of a character reference.
                * That is, this method will return false for the same set as
                * isXML11Valid, except it also reports false for "control characters".
                *
                * @param c The character to check.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>boolean</name>
                </type>
                <name>isXML11ValidLiteral</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>c</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>((<name>c</name> &lt; 0x10000 &amp;&amp; ((
                            <name>
                                <name>XML11CHARS</name>
                                <index>[
                                    <expr>
                                        <name>c</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            &amp; <name>MASK_XML11_VALID</name>) != 0 &amp;&amp; (
                            <name>
                                <name>XML11CHARS</name>
                                <index>[
                                    <expr>
                                        <name>c</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            &amp; <name>MASK_XML11_CONTROL</name>) == 0))
                            || (0x10000 &lt;= <name>c</name> &amp;&amp; <name>c</name> &lt;= 0x10FFFF))
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// isXML11ValidLiteral(int):boolean</comment>

            <comment type="javadoc">/**
                * Returns true if the specified character can be considered
                * content in an external parsed entity.
                *
                * @param c The character to check.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>boolean</name>
                </type>
                <name>isXML11Content</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>c</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>(<name>c</name> &lt; 0x10000 &amp;&amp; (
                            <name>
                                <name>XML11CHARS</name>
                                <index>[
                                    <expr>
                                        <name>c</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            &amp; <name>MASK_XML11_CONTENT</name>) != 0) ||
                            (0x10000 &lt;= <name>c</name> &amp;&amp; <name>c</name> &lt;= 0x10FFFF)
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// isXML11Content(int):boolean</comment>

            <comment type="javadoc">/**
                * Returns true if the specified character can be considered
                * content in an internal parsed entity.
                *
                * @param c The character to check.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>boolean</name>
                </type>
                <name>isXML11InternalEntityContent</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>c</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>(<name>c</name> &lt; 0x10000 &amp;&amp; (
                            <name>
                                <name>XML11CHARS</name>
                                <index>[
                                    <expr>
                                        <name>c</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            &amp; <name>MASK_XML11_CONTENT_INTERNAL</name>) != 0) ||
                            (0x10000 &lt;= <name>c</name> &amp;&amp; <name>c</name> &lt;= 0x10FFFF)
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// isXML11InternalEntityContent(int):boolean</comment>

            <comment type="javadoc">/**
                * Returns true if the specified character is a valid name start
                * character as defined by production [4] in the XML 1.1
                * specification.
                *
                * @param c The character to check.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>boolean</name>
                </type>
                <name>isXML11NameStart</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>c</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>(<name>c</name> &lt; 0x10000 &amp;&amp; (
                            <name>
                                <name>XML11CHARS</name>
                                <index>[
                                    <expr>
                                        <name>c</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            &amp; <name>MASK_XML11_NAME_START</name>) != 0)
                            || (0x10000 &lt;= <name>c</name> &amp;&amp; <name>c</name> &lt; 0xF0000)
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// isXML11NameStart(int):boolean</comment>

            <comment type="javadoc">/**
                * Returns true if the specified character is a valid name
                * character as defined by production [4a] in the XML 1.1
                * specification.
                *
                * @param c The character to check.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>boolean</name>
                </type>
                <name>isXML11Name</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>c</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>(<name>c</name> &lt; 0x10000 &amp;&amp; (
                            <name>
                                <name>XML11CHARS</name>
                                <index>[
                                    <expr>
                                        <name>c</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            &amp; <name>MASK_XML11_NAME</name>) != 0)
                            || (<name>c</name> &gt;= 0x10000 &amp;&amp; <name>c</name> &lt; 0xF0000)
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// isXML11Name(int):boolean</comment>

            <comment type="javadoc">/**
                * Returns true if the specified character is a valid NCName start
                * character as defined by production [4] in Namespaces in XML
                * 1.1 recommendation.
                *
                * @param c The character to check.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>boolean</name>
                </type>
                <name>isXML11NCNameStart</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>c</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>(<name>c</name> &lt; 0x10000 &amp;&amp; (
                            <name>
                                <name>XML11CHARS</name>
                                <index>[
                                    <expr>
                                        <name>c</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            &amp; <name>MASK_XML11_NCNAME_START</name>) != 0)
                            || (0x10000 &lt;= <name>c</name> &amp;&amp; <name>c</name> &lt; 0xF0000)
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// isXML11NCNameStart(int):boolean</comment>

            <comment type="javadoc">/**
                * Returns true if the specified character is a valid NCName
                * character as defined by production [5] in Namespaces in XML
                * 1.1 recommendation.
                *
                * @param c The character to check.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>boolean</name>
                </type>
                <name>isXML11NCName</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>c</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>(<name>c</name> &lt; 0x10000 &amp;&amp; (
                            <name>
                                <name>XML11CHARS</name>
                                <index>[
                                    <expr>
                                        <name>c</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            &amp; <name>MASK_XML11_NCNAME</name>) != 0)
                            || (0x10000 &lt;= <name>c</name> &amp;&amp; <name>c</name> &lt; 0xF0000)
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// isXML11NCName(int):boolean</comment>

            <comment type="javadoc">/**
                * Returns whether the given character is a valid
                * high surrogate for a name character. This includes
                * all high surrogates for characters [0x10000-0xEFFFF].
                * In other words everything excluding planes 15 and 16.
                *
                * @param c The character to check.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>boolean</name>
                </type>
                <name>isXML11NameHighSurrogate</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>c</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>(0xD800 &lt;= <name>c</name> &amp;&amp; <name>c</name> &lt;= 0xDB7F)
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="block">/*
                * [5] Name ::= NameStartChar NameChar*
                */
            </comment>
            <comment type="javadoc">/**
                * Check to see if a string is a valid Name according to [5]
                * in the XML 1.1 Recommendation
                *
                * @param name string to check
                * @return true if name is a valid Name
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>boolean</name>
                </type>
                <name>isXML11ValidName</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>length</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>name</name>.
                                            <name>length</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>length</name>
                                == 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return <expr>false</expr>;
                            </return>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>i</name> =
                            <init>
                                <expr>1</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>char</name>
                            </type>
                            <name>ch</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>name</name>.
                                            <name>charAt</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>0</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name>isXML11NameStart</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>ch</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>length</name>
                                            &gt; 1 &amp;&amp;
                                            <call>
                                                <name>isXML11NameHighSurrogate</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>ch</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>char</name>
                                                    </type>
                                                    <name>ch2</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name><name>name</name>.
                                                                    <name>charAt</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>1</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>!
                                                        <call>
                                                            <name><name>XMLChar</name>.
                                                                <name>isLowSurrogate</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>ch2</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                        ||
                                                        !
                                                        <call>
                                                            <name>isXML11NameStart</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>XMLChar</name>.
                                                                                <name>supplemental</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>ch</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>ch2</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <return>return <expr>false</expr>;
                                                        </return>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <expr_stmt>
                                                <expr>
                                                    <name>i</name>
                                                    = 2
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <return>return <expr>false</expr>;
                                            </return>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <while>while
                        <condition>(
                            <expr>
                                <name>i</name>
                                &lt;
                                <name>length</name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>ch</name>
                                    =
                                    <call>
                                        <name><name>name</name>.
                                            <name>charAt</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>i</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>!
                                        <call>
                                            <name>isXML11Name</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>ch</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>++<name>i</name> &lt; <name>length</name> &amp;&amp;
                                                    <call>
                                                        <name>isXML11NameHighSurrogate</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>ch</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>char</name>
                                                            </type>
                                                            <name>ch2</name> =
                                                            <init>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>name</name>.
                                                                            <name>charAt</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>i</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <if>if
                                                        <condition>(
                                                            <expr>!
                                                                <call>
                                                                    <name><name>XMLChar</name>.
                                                                        <name>isLowSurrogate</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>ch2</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                                ||
                                                                !
                                                                <call>
                                                                    <name>isXML11Name</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>XMLChar</name>.
                                                                                        <name>supplemental</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>ch</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>ch2</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <return>return <expr>false</expr>;
                                                                </return>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <block>{
                                                    <return>return <expr>false</expr>;
                                                    </return>
                                                    }
                                                </block>
                                            </else>
                                        </if>
                                        }
                                    </block>
                                </then>
                            </if>
                            <expr_stmt>
                                <expr>++
                                    <name>i</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </while>
                    <return>return <expr>true</expr>;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// isXML11ValidName(String):boolean</comment>


            <comment type="block">/*
                * from the namespace 1.1 rec
                * [4] NCName ::= NCNameStartChar NCNameChar*
                */
            </comment>
            <comment type="javadoc">/**
                * Check to see if a string is a valid NCName according to [4]
                * from the XML Namespaces 1.1 Recommendation
                *
                * @param ncName string to check
                * @return true if name is a valid NCName
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>boolean</name>
                </type>
                <name>isXML11ValidNCName</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>ncName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>length</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>ncName</name>.
                                            <name>length</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>length</name>
                                == 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return <expr>false</expr>;
                            </return>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>i</name> =
                            <init>
                                <expr>1</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>char</name>
                            </type>
                            <name>ch</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>ncName</name>.
                                            <name>charAt</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>0</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name>isXML11NCNameStart</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>ch</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>length</name>
                                            &gt; 1 &amp;&amp;
                                            <call>
                                                <name>isXML11NameHighSurrogate</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>ch</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>char</name>
                                                    </type>
                                                    <name>ch2</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name><name>ncName</name>.
                                                                    <name>charAt</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>1</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>!
                                                        <call>
                                                            <name><name>XMLChar</name>.
                                                                <name>isLowSurrogate</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>ch2</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                        ||
                                                        !
                                                        <call>
                                                            <name>isXML11NCNameStart</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>XMLChar</name>.
                                                                                <name>supplemental</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>ch</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>ch2</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <return>return <expr>false</expr>;
                                                        </return>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <expr_stmt>
                                                <expr>
                                                    <name>i</name>
                                                    = 2
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <return>return <expr>false</expr>;
                                            </return>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <while>while
                        <condition>(
                            <expr>
                                <name>i</name>
                                &lt;
                                <name>length</name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>ch</name>
                                    =
                                    <call>
                                        <name><name>ncName</name>.
                                            <name>charAt</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>i</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>!
                                        <call>
                                            <name>isXML11NCName</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>ch</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>++<name>i</name> &lt; <name>length</name> &amp;&amp;
                                                    <call>
                                                        <name>isXML11NameHighSurrogate</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>ch</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>char</name>
                                                            </type>
                                                            <name>ch2</name> =
                                                            <init>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>ncName</name>.
                                                                            <name>charAt</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>i</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <if>if
                                                        <condition>(
                                                            <expr>!
                                                                <call>
                                                                    <name><name>XMLChar</name>.
                                                                        <name>isLowSurrogate</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>ch2</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                                ||
                                                                !
                                                                <call>
                                                                    <name>isXML11NCName</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>XMLChar</name>.
                                                                                        <name>supplemental</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>ch</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>ch2</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <return>return <expr>false</expr>;
                                                                </return>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <block>{
                                                    <return>return <expr>false</expr>;
                                                    </return>
                                                    }
                                                </block>
                                            </else>
                                        </if>
                                        }
                                    </block>
                                </then>
                            </if>
                            <expr_stmt>
                                <expr>++
                                    <name>i</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </while>
                    <return>return <expr>true</expr>;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// isXML11ValidNCName(String):boolean</comment>

            <comment type="block">/*
                * [7] Nmtoken ::= (NameChar)+
                */
            </comment>
            <comment type="javadoc">/**
                * Check to see if a string is a valid Nmtoken according to [7]
                * in the XML 1.1 Recommendation
                *
                * @param nmtoken string to check
                * @return true if nmtoken is a valid Nmtoken
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>boolean</name>
                </type>
                <name>isXML11ValidNmtoken</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>nmtoken</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>length</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>nmtoken</name>.
                                            <name>length</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>length</name>
                                == 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return <expr>false</expr>;
                            </return>
                        </then>
                    </if>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name>length</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr>++
                                <name>i</name>
                            </expr>
                        </incr>
                        )
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>char</name>
                                    </type>
                                    <name>ch</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>nmtoken</name>.
                                                    <name>charAt</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>!
                                        <call>
                                            <name>isXML11Name</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>ch</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>++<name>i</name> &lt; <name>length</name> &amp;&amp;
                                                    <call>
                                                        <name>isXML11NameHighSurrogate</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>ch</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>char</name>
                                                            </type>
                                                            <name>ch2</name> =
                                                            <init>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>nmtoken</name>.
                                                                            <name>charAt</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>i</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <if>if
                                                        <condition>(
                                                            <expr>!
                                                                <call>
                                                                    <name><name>XMLChar</name>.
                                                                        <name>isLowSurrogate</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>ch2</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                                ||
                                                                !
                                                                <call>
                                                                    <name>isXML11Name</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>XMLChar</name>.
                                                                                        <name>supplemental</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>ch</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>ch2</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <return>return <expr>false</expr>;
                                                                </return>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <block>{
                                                    <return>return <expr>false</expr>;
                                                    </return>
                                                    }
                                                </block>
                                            </else>
                                        </if>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    <return>return <expr>true</expr>;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// isXML11ValidName(String):boolean</comment>

            }
        </block>
    </class>
    <comment type="line">// class XML11Char</comment>

</unit>
